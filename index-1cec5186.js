var is = Object.defineProperty;
var os = (r, e, t) => e in r ? is(r, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : r[e] = t;
var Oe = (r, e, t) => (os(r, typeof e != "symbol" ? e + "" : e, t), t);
var vr, re, wn, Ot, jo, In, Ui, jn, Vt = {}, An = [], ns = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, ai = Array.isArray;
function mt(r, e) {
  for (var t in e)
    r[t] = e[t];
  return r;
}
function En(r) {
  var e = r.parentNode;
  e && e.removeChild(r);
}
function ne(r, e, t) {
  var i, n, a, l = {};
  for (a in e)
    a == "key" ? i = e[a] : a == "ref" ? n = e[a] : l[a] = e[a];
  if (arguments.length > 2 && (l.children = arguments.length > 3 ? vr.call(arguments, 2) : t), typeof r == "function" && r.defaultProps != null)
    for (a in r.defaultProps)
      l[a] === void 0 && (l[a] = r.defaultProps[a]);
  return mr(r, l, i, n, null);
}
function mr(r, e, t, i, n) {
  var a = { type: r, props: e, key: t, ref: i, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, __h: null, constructor: void 0, __v: n ?? ++wn };
  return n == null && re.vnode != null && re.vnode(a), a;
}
function as() {
  return { current: null };
}
function at(r) {
  return r.children;
}
function nt(r, e) {
  this.props = r, this.context = e;
}
function hr(r, e) {
  if (e == null)
    return r.__ ? hr(r.__, r.__.__k.indexOf(r) + 1) : null;
  for (var t; e < r.__k.length; e++)
    if ((t = r.__k[e]) != null && t.__e != null)
      return t.__d || t.__e;
  return typeof r.type == "function" ? hr(r) : null;
}
function xn(r) {
  var e, t;
  if ((r = r.__) != null && r.__c != null) {
    for (r.__e = r.__c.base = null, e = 0; e < r.__k.length; e++)
      if ((t = r.__k[e]) != null && t.__e != null) {
        r.__e = r.__c.base = t.__e;
        break;
      }
    return xn(r);
  }
}
function Wi(r) {
  (!r.__d && (r.__d = !0) && Ot.push(r) && !Hr.__r++ || jo !== re.debounceRendering) && ((jo = re.debounceRendering) || In)(Hr);
}
function Hr() {
  var r, e, t, i, n, a, l, o, s;
  for (Ot.sort(Ui); r = Ot.shift(); )
    r.__d && (e = Ot.length, i = void 0, n = void 0, a = void 0, o = (l = (t = r).__v).__e, (s = t.__P) && (i = [], n = [], (a = mt({}, l)).__v = l.__v + 1, io(s, l, a, t.__n, s.ownerSVGElement !== void 0, l.__h != null ? [o] : null, i, o ?? hr(l), l.__h, n), Dn(i, l, n), l.__e != o && xn(l)), Ot.length > e && Ot.sort(Ui));
  Hr.__r = 0;
}
function zn(r, e, t, i, n, a, l, o, s, d, h) {
  var u, p, b, k, g, m, c, _, f, v = 0, y = i && i.__k || An, j = y.length, A = j, C = e.length;
  for (t.__k = [], u = 0; u < C; u++)
    (k = t.__k[u] = (k = e[u]) == null || typeof k == "boolean" || typeof k == "function" ? null : typeof k == "string" || typeof k == "number" || typeof k == "bigint" ? mr(null, k, null, null, k) : ai(k) ? mr(at, { children: k }, null, null, null) : k.__b > 0 ? mr(k.type, k.props, k.key, k.ref ? k.ref : null, k.__v) : k) != null ? (k.__ = t, k.__b = t.__b + 1, (_ = ss(k, y, c = u + v, A)) === -1 ? b = Vt : (b = y[_] || Vt, y[_] = void 0, A--), io(r, k, b, n, a, l, o, s, d, h), g = k.__e, (p = k.ref) && b.ref != p && (b.ref && oo(b.ref, null, k), h.push(p, k.__c || g, k)), g != null && (m == null && (m = g), (f = b === Vt || b.__v === null) ? _ == -1 && v-- : _ !== c && (_ === c + 1 ? v++ : _ > c ? A > C - c ? v += _ - c : v-- : v = _ < c && _ == c - 1 ? _ - c : 0), c = u + v, typeof k.type != "function" || _ === c && b.__k !== k.__k ? typeof k.type == "function" || _ === c && !f ? k.__d !== void 0 ? (s = k.__d, k.__d = void 0) : s = g.nextSibling : s = On(r, g, s) : s = Ln(k, s, r), typeof t.type == "function" && (t.__d = s))) : (b = y[u]) && b.key == null && b.__e && (b.__e == s && (b.__ = i, s = hr(b)), qi(b, b, !1), y[u] = null);
  for (t.__e = m, u = j; u--; )
    y[u] != null && (typeof t.type == "function" && y[u].__e != null && y[u].__e == t.__d && (t.__d = y[u].__e.nextSibling), qi(y[u], y[u]));
}
function Ln(r, e, t) {
  for (var i, n = r.__k, a = 0; n && a < n.length; a++)
    (i = n[a]) && (i.__ = r, e = typeof i.type == "function" ? Ln(i, e, t) : On(t, i.__e, e));
  return e;
}
function _t(r, e) {
  return e = e || [], r == null || typeof r == "boolean" || (ai(r) ? r.some(function(t) {
    _t(t, e);
  }) : e.push(r)), e;
}
function On(r, e, t) {
  return t == null || t.parentNode !== r ? r.insertBefore(e, null) : e == t && e.parentNode != null || r.insertBefore(e, t), e.nextSibling;
}
function ss(r, e, t, i) {
  var n = r.key, a = r.type, l = t - 1, o = t + 1, s = e[t];
  if (s === null || s && n == s.key && a === s.type)
    return t;
  if (i > (s != null ? 1 : 0))
    for (; l >= 0 || o < e.length; ) {
      if (l >= 0) {
        if ((s = e[l]) && n == s.key && a === s.type)
          return l;
        l--;
      }
      if (o < e.length) {
        if ((s = e[o]) && n == s.key && a === s.type)
          return o;
        o++;
      }
    }
  return -1;
}
function ds(r, e, t, i, n) {
  var a;
  for (a in t)
    a === "children" || a === "key" || a in e || Vr(r, a, null, t[a], i);
  for (a in e)
    n && typeof e[a] != "function" || a === "children" || a === "key" || a === "value" || a === "checked" || t[a] === e[a] || Vr(r, a, e[a], t[a], i);
}
function Ao(r, e, t) {
  e[0] === "-" ? r.setProperty(e, t ?? "") : r[e] = t == null ? "" : typeof t != "number" || ns.test(e) ? t : t + "px";
}
function Vr(r, e, t, i, n) {
  var a;
  e:
    if (e === "style")
      if (typeof t == "string")
        r.style.cssText = t;
      else {
        if (typeof i == "string" && (r.style.cssText = i = ""), i)
          for (e in i)
            t && e in t || Ao(r.style, e, "");
        if (t)
          for (e in t)
            i && t[e] === i[e] || Ao(r.style, e, t[e]);
      }
    else if (e[0] === "o" && e[1] === "n")
      a = e !== (e = e.replace(/(PointerCapture)$|Capture$/, "$1")), e = e.toLowerCase() in r ? e.toLowerCase().slice(2) : e.slice(2), r.l || (r.l = {}), r.l[e + a] = t, t ? i ? t.u = i.u : (t.u = Date.now(), r.addEventListener(e, a ? xo : Eo, a)) : r.removeEventListener(e, a ? xo : Eo, a);
    else if (e !== "dangerouslySetInnerHTML") {
      if (n)
        e = e.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
      else if (e !== "width" && e !== "height" && e !== "href" && e !== "list" && e !== "form" && e !== "tabIndex" && e !== "download" && e !== "rowSpan" && e !== "colSpan" && e !== "role" && e in r)
        try {
          r[e] = t ?? "";
          break e;
        } catch {
        }
      typeof t == "function" || (t == null || t === !1 && e[4] !== "-" ? r.removeAttribute(e) : r.setAttribute(e, t));
    }
}
function Eo(r) {
  var e = this.l[r.type + !1];
  if (r.t) {
    if (r.t <= e.u)
      return;
  } else
    r.t = Date.now();
  return e(re.event ? re.event(r) : r);
}
function xo(r) {
  return this.l[r.type + !0](re.event ? re.event(r) : r);
}
function io(r, e, t, i, n, a, l, o, s, d) {
  var h, u, p, b, k, g, m, c, _, f, v, y, j, A, C, I = e.type;
  if (e.constructor !== void 0)
    return null;
  t.__h != null && (s = t.__h, o = e.__e = t.__e, e.__h = null, a = [o]), (h = re.__b) && h(e);
  e:
    if (typeof I == "function")
      try {
        if (c = e.props, _ = (h = I.contextType) && i[h.__c], f = h ? _ ? _.props.value : h.__ : i, t.__c ? m = (u = e.__c = t.__c).__ = u.__E : ("prototype" in I && I.prototype.render ? e.__c = u = new I(c, f) : (e.__c = u = new nt(c, f), u.constructor = I, u.render = ms), _ && _.sub(u), u.props = c, u.state || (u.state = {}), u.context = f, u.__n = i, p = u.__d = !0, u.__h = [], u._sb = []), u.__s == null && (u.__s = u.state), I.getDerivedStateFromProps != null && (u.__s == u.state && (u.__s = mt({}, u.__s)), mt(u.__s, I.getDerivedStateFromProps(c, u.__s))), b = u.props, k = u.state, u.__v = e, p)
          I.getDerivedStateFromProps == null && u.componentWillMount != null && u.componentWillMount(), u.componentDidMount != null && u.__h.push(u.componentDidMount);
        else {
          if (I.getDerivedStateFromProps == null && c !== b && u.componentWillReceiveProps != null && u.componentWillReceiveProps(c, f), !u.__e && (u.shouldComponentUpdate != null && u.shouldComponentUpdate(c, u.__s, f) === !1 || e.__v === t.__v)) {
            for (e.__v !== t.__v && (u.props = c, u.state = u.__s, u.__d = !1), e.__e = t.__e, e.__k = t.__k, e.__k.forEach(function(z) {
              z && (z.__ = e);
            }), v = 0; v < u._sb.length; v++)
              u.__h.push(u._sb[v]);
            u._sb = [], u.__h.length && l.push(u);
            break e;
          }
          u.componentWillUpdate != null && u.componentWillUpdate(c, u.__s, f), u.componentDidUpdate != null && u.__h.push(function() {
            u.componentDidUpdate(b, k, g);
          });
        }
        if (u.context = f, u.props = c, u.__P = r, u.__e = !1, y = re.__r, j = 0, "prototype" in I && I.prototype.render) {
          for (u.state = u.__s, u.__d = !1, y && y(e), h = u.render(u.props, u.state, u.context), A = 0; A < u._sb.length; A++)
            u.__h.push(u._sb[A]);
          u._sb = [];
        } else
          do
            u.__d = !1, y && y(e), h = u.render(u.props, u.state, u.context), u.state = u.__s;
          while (u.__d && ++j < 25);
        u.state = u.__s, u.getChildContext != null && (i = mt(mt({}, i), u.getChildContext())), p || u.getSnapshotBeforeUpdate == null || (g = u.getSnapshotBeforeUpdate(b, k)), zn(r, ai(C = h != null && h.type === at && h.key == null ? h.props.children : h) ? C : [C], e, t, i, n, a, l, o, s, d), u.base = e.__e, e.__h = null, u.__h.length && l.push(u), m && (u.__E = u.__ = null);
      } catch (z) {
        e.__v = null, (s || a != null) && (e.__e = o, e.__h = !!s, a[a.indexOf(o)] = null), re.__e(z, e, t);
      }
    else
      a == null && e.__v === t.__v ? (e.__k = t.__k, e.__e = t.__e) : e.__e = ls(t.__e, e, t, i, n, a, l, s, d);
  (h = re.diffed) && h(e);
}
function Dn(r, e, t) {
  for (var i = 0; i < t.length; i++)
    oo(t[i], t[++i], t[++i]);
  re.__c && re.__c(e, r), r.some(function(n) {
    try {
      r = n.__h, n.__h = [], r.some(function(a) {
        a.call(n);
      });
    } catch (a) {
      re.__e(a, n.__v);
    }
  });
}
function ls(r, e, t, i, n, a, l, o, s) {
  var d, h, u, p = t.props, b = e.props, k = e.type, g = 0;
  if (k === "svg" && (n = !0), a != null) {
    for (; g < a.length; g++)
      if ((d = a[g]) && "setAttribute" in d == !!k && (k ? d.localName === k : d.nodeType === 3)) {
        r = d, a[g] = null;
        break;
      }
  }
  if (r == null) {
    if (k === null)
      return document.createTextNode(b);
    r = n ? document.createElementNS("http://www.w3.org/2000/svg", k) : document.createElement(k, b.is && b), a = null, o = !1;
  }
  if (k === null)
    p === b || o && r.data === b || (r.data = b);
  else {
    if (a = a && vr.call(r.childNodes), h = (p = t.props || Vt).dangerouslySetInnerHTML, u = b.dangerouslySetInnerHTML, !o) {
      if (a != null)
        for (p = {}, g = 0; g < r.attributes.length; g++)
          p[r.attributes[g].name] = r.attributes[g].value;
      (u || h) && (u && (h && u.__html == h.__html || u.__html === r.innerHTML) || (r.innerHTML = u && u.__html || ""));
    }
    if (ds(r, b, p, n, o), u)
      e.__k = [];
    else if (zn(r, ai(g = e.props.children) ? g : [g], e, t, i, n && k !== "foreignObject", a, l, a ? a[0] : t.__k && hr(t, 0), o, s), a != null)
      for (g = a.length; g--; )
        a[g] != null && En(a[g]);
    o || ("value" in b && (g = b.value) !== void 0 && (g !== r.value || k === "progress" && !g || k === "option" && g !== p.value) && Vr(r, "value", g, p.value, !1), "checked" in b && (g = b.checked) !== void 0 && g !== r.checked && Vr(r, "checked", g, p.checked, !1));
  }
  return r;
}
function oo(r, e, t) {
  try {
    typeof r == "function" ? r(e) : r.current = e;
  } catch (i) {
    re.__e(i, t);
  }
}
function qi(r, e, t) {
  var i, n;
  if (re.unmount && re.unmount(r), (i = r.ref) && (i.current && i.current !== r.__e || oo(i, null, e)), (i = r.__c) != null) {
    if (i.componentWillUnmount)
      try {
        i.componentWillUnmount();
      } catch (a) {
        re.__e(a, e);
      }
    i.base = i.__P = null, r.__c = void 0;
  }
  if (i = r.__k)
    for (n = 0; n < i.length; n++)
      i[n] && qi(i[n], e, t || typeof r.type != "function");
  t || r.__e == null || En(r.__e), r.__ = r.__e = r.__d = void 0;
}
function ms(r, e, t) {
  return this.constructor(r, t);
}
function jt(r, e, t) {
  var i, n, a, l;
  re.__ && re.__(r, e), n = (i = typeof t == "function") ? null : t && t.__k || e.__k, a = [], l = [], io(e, r = (!i && t || e).__k = ne(at, null, [r]), n || Vt, Vt, e.ownerSVGElement !== void 0, !i && t ? [t] : n ? null : e.firstChild ? vr.call(e.childNodes) : null, a, !i && t ? t : n ? n.__e : e.firstChild, i, l), Dn(a, r, l);
}
function no(r, e) {
  jt(r, e, no);
}
function ao(r, e, t) {
  var i, n, a, l, o = mt({}, r.props);
  for (a in r.type && r.type.defaultProps && (l = r.type.defaultProps), e)
    a == "key" ? i = e[a] : a == "ref" ? n = e[a] : o[a] = e[a] === void 0 && l !== void 0 ? l[a] : e[a];
  return arguments.length > 2 && (o.children = arguments.length > 3 ? vr.call(arguments, 2) : t), mr(r.type, o, i || r.key, n || r.ref, null);
}
function Et(r, e) {
  var t = { __c: e = "__cC" + jn++, __: r, Consumer: function(i, n) {
    return i.children(n);
  }, Provider: function(i) {
    var n, a;
    return this.getChildContext || (n = [], (a = {})[e] = this, this.getChildContext = function() {
      return a;
    }, this.shouldComponentUpdate = function(l) {
      this.props.value !== l.value && n.some(function(o) {
        o.__e = !0, Wi(o);
      });
    }, this.sub = function(l) {
      n.push(l);
      var o = l.componentWillUnmount;
      l.componentWillUnmount = function() {
        n.splice(n.indexOf(l), 1), o && o.call(l);
      };
    }), i.children;
  } };
  return t.Provider.__ = t.Consumer.contextType = t;
}
vr = An.slice, re = { __e: function(r, e, t, i) {
  for (var n, a, l; e = e.__; )
    if ((n = e.__c) && !n.__)
      try {
        if ((a = n.constructor) && a.getDerivedStateFromError != null && (n.setState(a.getDerivedStateFromError(r)), l = n.__d), n.componentDidCatch != null && (n.componentDidCatch(r, i || {}), l = n.__d), l)
          return n.__E = n;
      } catch (o) {
        r = o;
      }
  throw r;
} }, wn = 0, nt.prototype.setState = function(r, e) {
  var t;
  t = this.__s != null && this.__s !== this.state ? this.__s : this.__s = mt({}, this.state), typeof r == "function" && (r = r(mt({}, t), this.props)), r && mt(t, r), r != null && this.__v && (e && this._sb.push(e), Wi(this));
}, nt.prototype.forceUpdate = function(r) {
  this.__v && (this.__e = !0, r && this.__h.push(r), Wi(this));
}, nt.prototype.render = at, Ot = [], In = typeof Promise == "function" ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, Ui = function(r, e) {
  return r.__v.__b - e.__v.__b;
}, Hr.__r = 0, jn = 0;
var us = 0;
function De(r, e, t, i, n, a) {
  var l, o, s = {};
  for (o in e)
    o == "ref" ? l = e[o] : s[o] = e[o];
  var d = { type: r, props: s, key: t, ref: l, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, __h: null, constructor: void 0, __v: --us, __source: n, __self: a };
  if (typeof r == "function" && (l = r.defaultProps))
    for (o in l)
      s[o] === void 0 && (s[o] = l[o]);
  return re.vnode && re.vnode(d), d;
}
const cs = [
  {
    id: "fi",
    src: [
      {
        path: "./file-icons.woff2",
        format: "woff2"
      }
    ],
    weight: "normal",
    style: "normal",
    size: "100%"
  },
  {
    id: "devicons",
    src: [
      {
        path: "./devopicons.woff2",
        format: "woff2"
      }
    ],
    weight: "normal",
    style: "normal",
    size: "100%"
  },
  {
    id: "fa",
    src: [
      {
        path: "./fontawesome.woff2",
        format: "woff2"
      }
    ],
    weight: "normal",
    style: "normal",
    size: "100%"
  },
  {
    id: "mf",
    src: [
      {
        path: "./mfixx.woff2",
        format: "woff2"
      }
    ],
    weight: "normal",
    style: "normal",
    size: "100%"
  },
  {
    id: "octicons",
    src: [
      {
        path: "./octicons.woff2",
        format: "woff2"
      }
    ],
    weight: "normal",
    style: "normal",
    size: "100%"
  }
], _s = "_file", fs = "_folder", hs = "_repo", ps = {
  _file: {
    fontId: "octicons",
    fontCharacter: "\\f011",
    fontSize: "114%"
  },
  _folder: {
    fontId: "octicons",
    fontCharacter: "\\f016",
    fontSize: "114%"
  },
  _repo: {
    fontId: "octicons",
    fontCharacter: "\\f001",
    fontSize: "114%"
  },
  "_1c-alt_dark-red": {
    fontCharacter: "\\ea28",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_1c-alt_medium-red": {
    fontCharacter: "\\ea28",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_1c_dark-orange": {
    fontCharacter: "\\a5ea",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_1c_dark-red": {
    fontCharacter: "\\a5ea",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_1c_medium-red": {
    fontCharacter: "\\a5ea",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_4d_dark-blue": {
    fontCharacter: "\\eb73",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_abap_medium-orange": {
    fontCharacter: "\\e92b",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_abif_medium-blue": {
    fontCharacter: "\\ea4e",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_abif_medium-green": {
    fontCharacter: "\\ea4e",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_abif_medium-red": {
    fontCharacter: "\\ea4e",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_access_dark-maroon": {
    fontCharacter: "\\e9ea",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_access_dark-purple": {
    fontCharacter: "\\e9ea",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_access_dark-red": {
    fontCharacter: "\\e9ea",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_access_light-maroon": {
    fontCharacter: "\\e9ea",
    fontColor: "#be7953",
    fontId: "fi",
    fontSize: "107%"
  },
  "_access_medium-green": {
    fontCharacter: "\\e9ea",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_access_medium-maroon": {
    fontCharacter: "\\e9ea",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_access_medium-red": {
    fontCharacter: "\\e9ea",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_acre_dark-blue": {
    fontCharacter: "\\237a",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_acre_medium-blue": {
    fontCharacter: "\\237a",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ada_medium-blue": {
    fontCharacter: "\\e90b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_ae_dark-pink": {
    fontCharacter: "\\e9f3",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ae_dark-purple": {
    fontCharacter: "\\e9f3",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_affectscript_medium-pink": {
    fontCharacter: "\\eb2c",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "114%"
  },
  "_affinity_medium-blue": {
    fontCharacter: "\\eabb",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_affinity_medium-pink": {
    fontCharacter: "\\eabb",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "107%"
  },
  "_affinity_medium-red": {
    fontCharacter: "\\eabb",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_agda_dark-cyan": {
    fontCharacter: "\\1315a",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_agda_medium-cyan": {
    fontCharacter: "\\1315a",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ahk_dark-blue": {
    fontCharacter: "\\e932",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ahk_dark-purple": {
    fontCharacter: "\\e932",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ai_dark-orange": {
    fontCharacter: "\\e6b4",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ai_medium-orange": {
    fontCharacter: "\\e6b4",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ai_medium-yellow": {
    fontCharacter: "\\e6b4",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_alacritty_medium-orange": {
    fontCharacter: "\\eb27",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_alex_dark-pink": {
    fontCharacter: "\\29cb",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "114%"
  },
  "_alex_dark-red": {
    fontCharacter: "\\29cb",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_alex_medium-pink": {
    fontCharacter: "\\29cb",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "114%"
  },
  "_alex_medium-red": {
    fontCharacter: "\\29cb",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_alloy_medium-red": {
    fontCharacter: "\\e935",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_alpine_dark-blue": {
    fontCharacter: "\\e9ff",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ampl_dark-maroon": {
    fontCharacter: "\\e94e",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "114%"
  },
  "_amusewiki_dark-red": {
    fontCharacter: "\\eb32",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_amx_dark-blue": {
    fontCharacter: "\\e99b",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_amx_medium-blue": {
    fontCharacter: "\\e99b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_analytica_medium-orange": {
    fontCharacter: "\\eb7d",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_anchor_dark-blue": {
    fontCharacter: "\\f13d",
    fontColor: "#46788d",
    fontId: "fa",
    fontSize: "114%"
  },
  "_android_dark-cyan": {
    fontCharacter: "\\f17b",
    fontColor: "#4d9085",
    fontId: "fa",
    fontSize: "114%"
  },
  "_android_dark-maroon": {
    fontCharacter: "\\f17b",
    fontColor: "#7c4426",
    fontId: "fa",
    fontSize: "114%"
  },
  "_android_medium-green": {
    fontCharacter: "\\f17b",
    fontColor: "#90a959",
    fontId: "fa",
    fontSize: "114%"
  },
  "_angelscript_dark-blue": {
    fontCharacter: "\\ea5b",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "129%"
  },
  "_angelscript_medium-blue": {
    fontCharacter: "\\ea5b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "129%"
  },
  "_angular_medium-red": {
    fontCharacter: "\\e653",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_animate_dark-orange": {
    fontCharacter: "\\eb41",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_animate_medium-red": {
    fontCharacter: "\\eb41",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_animestudio_medium-blue": {
    fontCharacter: "\\eaed",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_animestudio_medium-maroon": {
    fontCharacter: "\\eaed",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_animestudio_medium-orange": {
    fontCharacter: "\\eaed",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_animestudio_medium-purple": {
    fontCharacter: "\\eaed",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_animestudio_medium-yellow": {
    fontCharacter: "\\eaed",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ansible_dark-cyan": {
    fontCharacter: "\\24b6",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ant_dark-pink": {
    fontCharacter: "\\e93e",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "129%"
  },
  "_antlr_medium-orange": {
    fontCharacter: "\\e92c",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_antlr_medium-red": {
    fontCharacter: "\\e92c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_antwar_dark-purple": {
    fontCharacter: "\\2591",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_anyscript_dark-red": {
    fontCharacter: "\\eacf",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_apache_dark-green": {
    fontCharacter: "\\f102",
    fontColor: "#66783e",
    fontId: "mf",
    fontSize: "107%"
  },
  "_apache_dark-red": {
    fontCharacter: "\\f102",
    fontColor: "#be2f31",
    fontId: "mf",
    fontSize: "107%"
  },
  "_apache_medium-green": {
    fontCharacter: "\\f102",
    fontColor: "#90a959",
    fontId: "mf",
    fontSize: "107%"
  },
  "_apache_medium-red": {
    fontCharacter: "\\f102",
    fontColor: "#ac4142",
    fontId: "mf",
    fontSize: "107%"
  },
  "_apiextractor_light-blue": {
    fontCharacter: "\\eb99",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "114%"
  },
  "_apiextractor_medium-blue": {
    fontCharacter: "\\eb99",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_api_medium-blue": {
    fontCharacter: "\\e92d",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_apl_dark-cyan": {
    fontCharacter: "\\234b",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_apl_medium-maroon": {
    fontCharacter: "\\234b",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_a-plus_medium-blue": {
    fontCharacter: "\\eb79",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_apollo_dark-blue": {
    fontCharacter: "\\1f110",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_appcelerator_medium-red": {
    fontCharacter: "\\e6ab",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_apple_medium-purple": {
    fontCharacter: "\\e925",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_appstore_dark-blue": {
    fontCharacter: "\\e613",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appstore_dark-cyan": {
    fontCharacter: "\\e613",
    fontColor: "#4d9085",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appstore_dark-purple": {
    fontCharacter: "\\e613",
    fontColor: "#825078",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appstore_dark-red": {
    fontCharacter: "\\e613",
    fontColor: "#be2f31",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appstore_medium-blue": {
    fontCharacter: "\\e613",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appstore_medium-cyan": {
    fontCharacter: "\\e613",
    fontColor: "#75b5aa",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appstore_medium-green": {
    fontCharacter: "\\e613",
    fontColor: "#90a959",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appstore_medium-orange": {
    fontCharacter: "\\e613",
    fontColor: "#d28445",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appstore_medium-purple": {
    fontCharacter: "\\e613",
    fontColor: "#aa759f",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appstore_medium-red": {
    fontCharacter: "\\e613",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_appveyor_medium-blue": {
    fontCharacter: "\\e923",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_archlinux_dark-cyan": {
    fontCharacter: "A",
    fontColor: "#4d9085",
    fontId: "mf",
    fontSize: "107%"
  },
  "_archlinux_dark-maroon": {
    fontCharacter: "A",
    fontColor: "#7c4426",
    fontId: "mf",
    fontSize: "107%"
  },
  "_archlinux_dark-purple": {
    fontCharacter: "A",
    fontColor: "#825078",
    fontId: "mf",
    fontSize: "107%"
  },
  "_archlinux_dark-yellow": {
    fontCharacter: "A",
    fontColor: "#ee9e2e",
    fontId: "mf",
    fontSize: "107%"
  },
  "_archlinux_light-yellow": {
    fontCharacter: "A",
    fontColor: "#fae0bc",
    fontId: "mf",
    fontSize: "107%"
  },
  "_arc_medium-blue": {
    fontCharacter: "\\e92f",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_arduino_dark-cyan": {
    fontCharacter: "\\e930",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_asciidoctor_medium-blue": {
    fontCharacter: "\\eac7",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_as_dark-red": {
    fontCharacter: "\\e92e",
    fontColor: "#be2f31",
    fontId: "fi"
  },
  "_as_dark-yellow": {
    fontCharacter: "\\e92e",
    fontColor: "#ee9e2e",
    fontId: "fi"
  },
  "_asm-agc_dark-blue": {
    fontCharacter: "\\eb53",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm-arm_medium-blue": {
    fontCharacter: "\\eb51",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm-avr_dark-purple": {
    fontCharacter: "\\eb6c",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm_dark-green": {
    fontCharacter: "\\eb4f",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_as_medium-blue": {
    fontCharacter: "\\e92e",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_as_medium-red": {
    fontCharacter: "\\e92e",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_as_medium-yellow": {
    fontCharacter: "\\e92e",
    fontColor: "#f4bf75",
    fontId: "fi"
  },
  "_asm-intel_dark-blue": {
    fontCharacter: "\\eb4e",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm-m68k_dark-red": {
    fontCharacter: "\\eb4d",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm-m68k_medium-blue": {
    fontCharacter: "\\eb4d",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm_medium-cyan": {
    fontCharacter: "\\eb4f",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm_medium-green": {
    fontCharacter: "\\eb4f",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm_medium-orange": {
    fontCharacter: "\\eb4f",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm-vax_medium-maroon": {
    fontCharacter: "\\eb48",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm-zilog_medium-blue": {
    fontCharacter: "\\eb47",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asm-zilog_medium-yellow": {
    fontCharacter: "\\eb47",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "121%"
  },
  "_asp_dark-blue": {
    fontCharacter: "\\e67f",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_asp_dark-cyan": {
    fontCharacter: "\\e67f",
    fontColor: "#4d9085",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_asp_dark-green": {
    fontCharacter: "\\e67f",
    fontColor: "#66783e",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_asp_medium-cyan": {
    fontCharacter: "\\e67f",
    fontColor: "#75b5aa",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_asp_medium-green": {
    fontCharacter: "\\e67f",
    fontColor: "#90a959",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_asp_medium-maroon": {
    fontCharacter: "\\e67f",
    fontColor: "#8f5536",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_asp_medium-purple": {
    fontCharacter: "\\e67f",
    fontColor: "#aa759f",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_asymptote_medium-red": {
    fontCharacter: "\\eae5",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_at_dark-red": {
    fontCharacter: "\\f1fa",
    fontColor: "#be2f31",
    fontId: "fa",
    fontSize: "107%"
  },
  "_at_medium-red": {
    fontCharacter: "\\f1fa",
    fontColor: "#ac4142",
    fontId: "fa",
    fontSize: "107%"
  },
  "_atom_dark-green": {
    fontCharacter: "\\e664",
    fontColor: "#66783e",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_atom_medium-green": {
    fontCharacter: "\\e664",
    fontColor: "#90a959",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_ats_dark-yellow": {
    fontCharacter: "\\e934",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ats_medium-blue": {
    fontCharacter: "\\e934",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ats_medium-red": {
    fontCharacter: "\\e934",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_audacity_medium-yellow": {
    fontCharacter: "\\e9f9",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_audio_dark-blue": {
    fontCharacter: "\\f028",
    fontColor: "#46788d",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_dark-cyan": {
    fontCharacter: "\\f028",
    fontColor: "#4d9085",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_dark-green": {
    fontCharacter: "\\f028",
    fontColor: "#66783e",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_dark-maroon": {
    fontCharacter: "\\f028",
    fontColor: "#7c4426",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_dark-orange": {
    fontCharacter: "\\f028",
    fontColor: "#a35f27",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_dark-red": {
    fontCharacter: "\\f028",
    fontColor: "#be2f31",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_dark-yellow": {
    fontCharacter: "\\f028",
    fontColor: "#ee9e2e",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_medium-blue": {
    fontCharacter: "\\f028",
    fontColor: "#6a9fb5",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_medium-cyan": {
    fontCharacter: "\\f028",
    fontColor: "#75b5aa",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_medium-green": {
    fontCharacter: "\\f028",
    fontColor: "#90a959",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_medium-orange": {
    fontCharacter: "\\f028",
    fontColor: "#d28445",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_medium-purple": {
    fontCharacter: "\\f028",
    fontColor: "#aa759f",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_medium-red": {
    fontCharacter: "\\f028",
    fontColor: "#ac4142",
    fontId: "fa",
    fontSize: "107%"
  },
  "_audio_medium-yellow": {
    fontCharacter: "\\f028",
    fontColor: "#f4bf75",
    fontId: "fa",
    fontSize: "107%"
  },
  "_augeas_dark-orange": {
    fontCharacter: "\\e931",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_aurelia_dark-pink": {
    fontCharacter: "\\ea48",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_autoit_medium-purple": {
    fontCharacter: "\\e933",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_avro_medium-blue": {
    fontCharacter: "\\eaa3",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_awk_dark-blue": {
    fontCharacter: "\\1f427",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_awk_dark-cyan": {
    fontCharacter: "\\1f427",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "121%"
  },
  "_awk_dark-green": {
    fontCharacter: "\\1f427",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_awk_dark-maroon": {
    fontCharacter: "\\1f427",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "121%"
  },
  "_awk_dark-red": {
    fontCharacter: "\\1f427",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_awk_medium-blue": {
    fontCharacter: "\\1f427",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_awk_medium-cyan": {
    fontCharacter: "\\1f427",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "121%"
  },
  "_awk_medium-green": {
    fontCharacter: "\\1f427",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_awk_medium-maroon": {
    fontCharacter: "\\1f427",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_awk_medium-red": {
    fontCharacter: "\\1f427",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_azurepipelines_dark-blue": {
    fontCharacter: "\\1f680",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_babel_dark-yellow": {
    fontCharacter: "\\e91f",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_babel_medium-yellow": {
    fontCharacter: "\\e91f",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_backbone_dark-blue": {
    fontCharacter: "\\e652",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "114%"
  },
  _backup: {
    fontCharacter: "\\f1da",
    fontId: "fa",
    fontSize: "93%"
  },
  "_ballerina_dark-green": {
    fontCharacter: "\\eac8",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ballerina_medium-cyan": {
    fontCharacter: "\\eac8",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bazaar_dark-yellow": {
    fontCharacter: "\\eacd",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bazaar_medium-yellow": {
    fontCharacter: "\\eacd",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bazel_dark-blue": {
    fontCharacter: "\\ead2",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bazel_dark-green": {
    fontCharacter: "\\ead2",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bazel_medium-cyan": {
    fontCharacter: "\\ead2",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bazel_medium-green": {
    fontCharacter: "\\ead2",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_behat_medium-cyan": {
    fontCharacter: "\\ea89",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_bem_medium-maroon": {
    fontCharacter: "\\ea59",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_bibtex_dark-blue": {
    fontCharacter: "\\e601",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bibtex_dark-green": {
    fontCharacter: "\\e601",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bibtex_dark-orange": {
    fontCharacter: "\\e601",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bibtex_dark-red": {
    fontCharacter: "\\e601",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bibtex_dark-yellow": {
    fontCharacter: "\\e601",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bibtex_medium-blue": {
    fontCharacter: "\\e601",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bibtex_medium-green": {
    fontCharacter: "\\e601",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bibtex_medium-orange": {
    fontCharacter: "\\e601",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bibtex_medium-red": {
    fontCharacter: "\\e601",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bibtex_medium-yellow": {
    fontCharacter: "\\e601",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bikeshed_dark-blue": {
    fontCharacter: "\\1f6b2",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bikeshed_medium-red": {
    fontCharacter: "\\1f6b2",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_biml_medium-red": {
    fontCharacter: "\\eb29",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_binary_dark-blue": {
    fontCharacter: "\\f094",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binary_dark-green": {
    fontCharacter: "\\f094",
    fontColor: "#66783e",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binary_dark-orange": {
    fontCharacter: "\\f094",
    fontColor: "#a35f27",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binary_dark-purple": {
    fontCharacter: "\\f094",
    fontColor: "#825078",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binary_dark-red": {
    fontCharacter: "\\f094",
    fontColor: "#be2f31",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binary_medium-green": {
    fontCharacter: "\\f094",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binary_medium-grey": {
    fontCharacter: "\\f094",
    fontColor: "#7f7f7f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binary_medium-orange": {
    fontCharacter: "\\f094",
    fontColor: "#d28445",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binary_medium-purple": {
    fontCharacter: "\\f094",
    fontColor: "#aa759f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binary_medium-red": {
    fontCharacter: "\\f094",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_binder_medium-orange": {
    fontCharacter: "\\eba4",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bintray_medium-green": {
    fontCharacter: "\\ea6e",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_bison_dark-green": {
    fontCharacter: "\\1f402",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bison_medium-cyan": {
    fontCharacter: "\\1f402",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bison_medium-green": {
    fontCharacter: "\\1f402",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bison_medium-red": {
    fontCharacter: "\\1f402",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bitbucket_medium-blue": {
    fontCharacter: "\\e603",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_bitcoin_medium-orange": {
    fontCharacter: "\\f15a",
    fontColor: "#d28445",
    fontId: "fa",
    fontSize: "114%"
  },
  "_bithound_medium-red": {
    fontCharacter: "\\ea2a",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_blender_dark-blue": {
    fontCharacter: "\\e9fa",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_blender_dark-orange": {
    fontCharacter: "\\e9fa",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_blender_medium-orange": {
    fontCharacter: "\\e9fa",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_blitzbasic_medium-cyan": {
    fontCharacter: "\\eba5",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_blitzbasic_medium-green": {
    fontCharacter: "\\eba5",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bloc_medium-cyan": {
    fontCharacter: "\\eba3",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bluespec_dark-blue": {
    fontCharacter: "\\e93c",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "93%"
  },
  "_bnf_dark-red": {
    fontCharacter: "\\2a74",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bnf_dark-yellow": {
    fontCharacter: "\\2a74",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bnf_medium-cyan": {
    fontCharacter: "\\2a74",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bnf_medium-green": {
    fontCharacter: "\\2a74",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bnf_medium-grey": {
    fontCharacter: "\\2a74",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bnf_medium-maroon": {
    fontCharacter: "\\2a74",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bnf_medium-red": {
    fontCharacter: "\\2a74",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bnf_medium-yellow": {
    fontCharacter: "\\2a74",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_book-alt_medium-blue": {
    fontCharacter: "\\f02d",
    fontColor: "#6a9fb5",
    fontId: "fa",
    fontSize: "114%"
  },
  "_book_dark-blue": {
    fontCharacter: "\\f007",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_book_medium-blue": {
    fontCharacter: "\\f007",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_book_medium-green": {
    fontCharacter: "\\f007",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_book_medium-pink": {
    fontCharacter: "\\f007",
    fontColor: "#ff00cc",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_book_medium-red": {
    fontCharacter: "\\f007",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_boo_medium-green": {
    fontCharacter: "\\e939",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  _boot: {
    fontCharacter: "\\f103",
    fontId: "fi",
    fontSize: "114%"
  },
  "_boot_dark-green": {
    fontCharacter: "\\f103",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_boot_medium-green": {
    fontCharacter: "\\f103",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bootstrap_dark-blue": {
    fontCharacter: "\\e647",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_bootstrap_dark-green": {
    fontCharacter: "\\e647",
    fontColor: "#66783e",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_bootstrap_dark-yellow": {
    fontCharacter: "\\e647",
    fontColor: "#ee9e2e",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_bootstrap_light-pink": {
    fontCharacter: "\\e647",
    fontColor: "#ff4ddb",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_bootstrap_medium-blue": {
    fontCharacter: "\\e647",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_bootstrap_medium-green": {
    fontCharacter: "\\e647",
    fontColor: "#90a959",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_bootstrap_medium-orange": {
    fontCharacter: "\\e647",
    fontColor: "#d28445",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_bootstrap_medium-yellow": {
    fontCharacter: "\\e647",
    fontColor: "#f4bf75",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_bors_dark-purple": {
    fontCharacter: "\\1f441",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_bosque_medium-green": {
    fontCharacter: "\\eb96",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_bower_medium-orange": {
    fontCharacter: "\\e64d",
    fontColor: "#d28445",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_bower_medium-yellow": {
    fontCharacter: "\\e64d",
    fontColor: "#f4bf75",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_brain_dark-pink": {
    fontCharacter: "\\e93a",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_brakeman_dark-red": {
    fontCharacter: "\\e9d6",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_brakeman_medium-red": {
    fontCharacter: "\\e9d6",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_brew_dark-orange": {
    fontCharacter: "\\1f37a",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "121%"
  },
  "_brew_medium-orange": {
    fontCharacter: "\\1f37a",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_bro_dark-cyan": {
    fontCharacter: "\\e93b",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_brotli_medium-orange": {
    fontCharacter: "\\eaa2",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_browserslist_medium-orange": {
    fontCharacter: "\\ea80",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_browsersync_medium-red": {
    fontCharacter: "b",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_brunch_medium-green": {
    fontCharacter: "\\ea47",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_buck_dark-blue": {
    fontCharacter: "\\ea46",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_buck_medium-blue": {
    fontCharacter: "\\ea46",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_buildkite_light-green": {
    fontCharacter: "\\ebad",
    fontColor: "#b2c38b",
    fontId: "fi",
    fontSize: "121%"
  },
  "_buildkite_medium-green": {
    fontCharacter: "\\ebad",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_bullhorn_medium-orange": {
    fontCharacter: "\\f0a1",
    fontColor: "#d28445",
    fontId: "fa",
    fontSize: "114%"
  },
  "_bundler_dark-blue": {
    fontCharacter: "\\ea45",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bundler_dark-cyan": {
    fontCharacter: "\\ea45",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bundler_medium-blue": {
    fontCharacter: "\\ea45",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_bundler_medium-cyan": {
    fontCharacter: "\\ea45",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_byond_medium-blue": {
    fontCharacter: "\\e962",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cabal_dark-yellow": {
    fontCharacter: "\\e9c2",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cabal_medium-cyan": {
    fontCharacter: "\\e9c2",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cabal_medium-purple": {
    fontCharacter: "\\e9c2",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cabal_medium-yellow": {
    fontCharacter: "\\e9c2",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_caddy_dark-blue": {
    fontCharacter: "\\1f512",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_caffe2_dark-blue": {
    fontCharacter: "\\eab6",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_caffe2_medium-purple": {
    fontCharacter: "\\eab6",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_caffe_medium-green": {
    fontCharacter: "\\ea9a",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_caffe_medium-maroon": {
    fontCharacter: "\\ea9a",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_cakefile_medium-red": {
    fontCharacter: "\\e924",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cake_medium-yellow": {
    fontCharacter: "\\e9e3",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cakephp_medium-red": {
    fontCharacter: "\\ea43",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_calc_medium-blue": {
    fontCharacter: "\\f1ec",
    fontColor: "#6a9fb5",
    fontId: "fa"
  },
  "_calc_medium-maroon": {
    fontCharacter: "\\f1ec",
    fontColor: "#8f5536",
    fontId: "fa"
  },
  "_calc_medium-red": {
    fontCharacter: "\\f1ec",
    fontColor: "#ac4142",
    fontId: "fa"
  },
  "_calva_medium-maroon": {
    fontCharacter: "\\eba1",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_carthage_dark-pink": {
    fontCharacter: "\\ea98",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_casc_dark-orange": {
    fontCharacter: "\\ebb6",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "121%"
  },
  "_casc_medium-orange": {
    fontCharacter: "\\ebb6",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_cc_medium-green": {
    fontCharacter: "\\e9d5",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_c_dark-blue": {
    fontCharacter: "\\f106",
    fontColor: "#46788d",
    fontId: "mf",
    fontSize: "93%"
  },
  "_cdf_medium-red": {
    fontCharacter: "\\eb46",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ceylon_medium-orange": {
    fontCharacter: "\\e94f",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cf_light-cyan": {
    fontCharacter: "\\e929",
    fontColor: "#a7d0c9",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cf_medium-cyan": {
    fontCharacter: "\\e929",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_chai_dark-red": {
    fontCharacter: "c",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_chai_medium-red": {
    fontCharacter: "c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_chapel_medium-green": {
    fontCharacter: "\\e950",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_chartjs_dark-pink": {
    fontCharacter: "\\ea0b",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_checklist_dark-blue": {
    fontCharacter: "\\f076",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "121%"
  },
  "_checklist_dark-purple": {
    fontCharacter: "\\f076",
    fontColor: "#825078",
    fontId: "octicons",
    fontSize: "121%"
  },
  "_checklist_dark-red": {
    fontCharacter: "\\f076",
    fontColor: "#be2f31",
    fontId: "octicons",
    fontSize: "121%"
  },
  "_checklist_light-blue": {
    fontCharacter: "\\f076",
    fontColor: "#9dc0ce",
    fontId: "octicons",
    fontSize: "121%"
  },
  "_checklist_medium-blue": {
    fontCharacter: "\\f076",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "121%"
  },
  "_checklist_medium-cyan": {
    fontCharacter: "\\f076",
    fontColor: "#75b5aa",
    fontId: "octicons",
    fontSize: "121%"
  },
  "_checklist_medium-green": {
    fontCharacter: "\\f076",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "121%"
  },
  "_checklist_medium-red": {
    fontCharacter: "\\f076",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "121%"
  },
  "_checklist_medium-yellow": {
    fontCharacter: "\\f076",
    fontColor: "#f4bf75",
    fontId: "octicons",
    fontSize: "121%"
  },
  "_cheetah3d_dark-yellow": {
    fontCharacter: "\\1f406",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_cheetah3d_medium-yellow": {
    fontCharacter: "\\1f406",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_chef_dark-orange": {
    fontCharacter: "\\ea42",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_chef_medium-orange": {
    fontCharacter: "\\ea42",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_chocolatey_medium-blue": {
    fontCharacter: "\\1f36b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_chrome_medium-red": {
    fontCharacter: "\\e643",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_chuck_medium-green": {
    fontCharacter: "\\e943",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  _circleci: {
    fontCharacter: "\\ea12",
    fontId: "fi"
  },
  "_circleci_medium-green": {
    fontCharacter: "\\ea12",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_circuit-board_dark-blue": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#46788d"
  },
  "_circuit-board_dark-cyan": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#4d9085"
  },
  "_circuit-board_dark-green": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#66783e"
  },
  "_circuit-board_dark-maroon": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#7c4426"
  },
  "_circuit-board_dark-orange": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#a35f27"
  },
  "_circuit-board_dark-red": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#be2f31"
  },
  "_circuit-board_dark-yellow": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#ee9e2e"
  },
  "_circuit-board_medium-blue": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#6a9fb5"
  },
  "_circuit-board_medium-cyan": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#75b5aa"
  },
  "_circuit-board_medium-green": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#90a959"
  },
  "_circuit-board_medium-maroon": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#8f5536"
  },
  "_circuit-board_medium-orange": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#d28445"
  },
  "_circuit-board_medium-red": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#ac4142"
  },
  "_circuit-board_medium-yellow": {
    fontId: "octicons",
    fontCharacter: "\\f0d6",
    fontSize: "114%",
    fontColor: "#f4bf75"
  },
  "_cirru_dark-pink": {
    fontCharacter: "\\e951",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cirru_medium-pink": {
    fontCharacter: "\\e951",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "107%"
  },
  "_clarion_medium-orange": {
    fontCharacter: "\\e952",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_clean_dark-cyan": {
    fontCharacter: "\\e95b",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_clean_medium-blue": {
    fontCharacter: "\\e95b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_clean_medium-cyan": {
    fontCharacter: "\\e95b",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_click_medium-yellow": {
    fontCharacter: "\\e95c",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_clips_dark-green": {
    fontCharacter: "\\e940",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "129%"
  },
  "_cljs_dark-blue": {
    fontCharacter: "\\f104",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cljs_medium-blue": {
    fontCharacter: "\\f104",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cl_medium-orange": {
    fontCharacter: "\\e972",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_clojure_dark-blue": {
    fontCharacter: "\\e668",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_dark-green": {
    fontCharacter: "\\e668",
    fontColor: "#66783e",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_dark-maroon": {
    fontCharacter: "\\e668",
    fontColor: "#7c4426",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_dark-purple": {
    fontCharacter: "\\e668",
    fontColor: "#825078",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_dark-red": {
    fontCharacter: "\\e668",
    fontColor: "#be2f31",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_dark-yellow": {
    fontCharacter: "\\e668",
    fontColor: "#ee9e2e",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_medium-blue": {
    fontCharacter: "\\e668",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_medium-green": {
    fontCharacter: "\\e668",
    fontColor: "#90a959",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_medium-maroon": {
    fontCharacter: "\\e668",
    fontColor: "#8f5536",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_medium-purple": {
    fontCharacter: "\\e668",
    fontColor: "#aa759f",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_medium-red": {
    fontCharacter: "\\e668",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_clojure_medium-yellow": {
    fontCharacter: "\\e668",
    fontColor: "#f4bf75",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_closure-tpl_medium-blue": {
    fontCharacter: "\\ea82",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cloudfoundry_medium-blue": {
    fontCharacter: "\\ead0",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cmake_medium-green": {
    fontCharacter: "\\e93f",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_cmake_medium-red": {
    fontCharacter: "\\e93f",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_c_medium-blue": {
    fontCharacter: "\\f106",
    fontColor: "#6a9fb5",
    fontId: "mf",
    fontSize: "93%"
  },
  "_c_medium-cyan": {
    fontCharacter: "\\f106",
    fontColor: "#75b5aa",
    fontId: "mf",
    fontSize: "93%"
  },
  "_c_medium-green": {
    fontCharacter: "\\f106",
    fontColor: "#90a959",
    fontId: "mf",
    fontSize: "93%"
  },
  "_c_medium-maroon": {
    fontCharacter: "\\f106",
    fontColor: "#8f5536",
    fontId: "mf",
    fontSize: "93%"
  },
  "_c_medium-orange": {
    fontCharacter: "\\f106",
    fontColor: "#d28445",
    fontId: "mf",
    fontSize: "93%"
  },
  "_c_medium-purple": {
    fontCharacter: "\\f106",
    fontColor: "#aa759f",
    fontId: "mf",
    fontSize: "93%"
  },
  "_cnab_dark-blue": {
    fontCharacter: "\\ebb5",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_cobol_dark-blue": {
    fontCharacter: "\\ea44",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_cobol_medium-blue": {
    fontCharacter: "\\ea44",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_cocoapods_medium-red": {
    fontCharacter: "\\ea97",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_codacy_dark-blue": {
    fontCharacter: "\\ea8b",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_codecov_dark-pink": {
    fontCharacter: "\\2602",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_code_dark-blue": {
    fontCharacter: "\\f05f",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_dark-cyan": {
    fontCharacter: "\\f05f",
    fontColor: "#4d9085",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_dark-green": {
    fontCharacter: "\\f05f",
    fontColor: "#66783e",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_dark-maroon": {
    fontCharacter: "\\f05f",
    fontColor: "#7c4426",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_dark-orange": {
    fontCharacter: "\\f05f",
    fontColor: "#a35f27",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_dark-pink": {
    fontCharacter: "\\f05f",
    fontColor: "#cc00a3",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_dark-purple": {
    fontCharacter: "\\f05f",
    fontColor: "#825078",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_dark-red": {
    fontCharacter: "\\f05f",
    fontColor: "#be2f31",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_dark-yellow": {
    fontCharacter: "\\f05f",
    fontColor: "#ee9e2e",
    fontId: "octicons",
    fontSize: "114%"
  },
  _codekit: {
    fontCharacter: "\\ea41",
    fontId: "fi",
    fontSize: "107%"
  },
  "_code_light-blue": {
    fontCharacter: "\\f05f",
    fontColor: "#9dc0ce",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_light-cyan": {
    fontCharacter: "\\f05f",
    fontColor: "#a7d0c9",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_light-green": {
    fontCharacter: "\\f05f",
    fontColor: "#b2c38b",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_light-maroon": {
    fontCharacter: "\\f05f",
    fontColor: "#be7953",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_light-orange": {
    fontCharacter: "\\f05f",
    fontColor: "#e1ad83",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_light-purple": {
    fontCharacter: "\\f05f",
    fontColor: "#c7a4c0",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_medium-blue": {
    fontCharacter: "\\f05f",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_medium-cyan": {
    fontCharacter: "\\f05f",
    fontColor: "#75b5aa",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_medium-green": {
    fontCharacter: "\\f05f",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_medium-maroon": {
    fontCharacter: "\\f05f",
    fontColor: "#8f5536",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_medium-orange": {
    fontCharacter: "\\f05f",
    fontColor: "#d28445",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_medium-pink": {
    fontCharacter: "\\f05f",
    fontColor: "#ff00cc",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_medium-purple": {
    fontCharacter: "\\f05f",
    fontColor: "#aa759f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_medium-red": {
    fontCharacter: "\\f05f",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_code_medium-yellow": {
    fontCharacter: "\\f05f",
    fontColor: "#f4bf75",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_codemeta_dark-grey": {
    fontCharacter: "\\eb8f",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_codemeta_medium-grey": {
    fontCharacter: "\\eb8f",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_codeship_dark-blue": {
    fontCharacter: "\\ea6a",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_coffee_dark-maroon": {
    fontCharacter: "\\f0f4",
    fontColor: "#7c4426",
    fontId: "fa"
  },
  "_coffee_light-maroon": {
    fontCharacter: "\\f0f4",
    fontColor: "#be7953",
    fontId: "fa"
  },
  "_coffee_medium-blue": {
    fontCharacter: "\\f0f4",
    fontColor: "#6a9fb5",
    fontId: "fa"
  },
  "_coffee_medium-cyan": {
    fontCharacter: "\\f0f4",
    fontColor: "#75b5aa",
    fontId: "fa"
  },
  "_coffee_medium-maroon": {
    fontCharacter: "\\f0f4",
    fontColor: "#8f5536",
    fontId: "fa"
  },
  "_coffee_medium-orange": {
    fontCharacter: "\\f0f4",
    fontColor: "#d28445",
    fontId: "fa"
  },
  "_coffee_medium-red": {
    fontCharacter: "\\f0f4",
    fontColor: "#ac4142",
    fontId: "fa"
  },
  "_commitizen_dark-purple": {
    fontCharacter: "\\ebb3",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_commitlint_medium-blue": {
    fontCharacter: "\\1f191",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_compass_medium-red": {
    fontCharacter: "\\e661",
    fontColor: "#ac4142",
    fontId: "devicons"
  },
  "_composer_dark-blue": {
    fontCharacter: "\\e683",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_composer_medium-yellow": {
    fontCharacter: "\\e683",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "121%"
  },
  "_conan_dark-blue": {
    fontCharacter: "\\ead1",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_conan_medium-blue": {
    fontCharacter: "\\ead1",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_conda_medium-green": {
    fontCharacter: "\\eb3c",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_config-coffee_medium-maroon": {
    fontCharacter: "\\eb18",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-coffee_medium-red": {
    fontCharacter: "\\eb18",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config_dark-blue": {
    fontCharacter: "\\f07c",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_config_dark-green": {
    fontCharacter: "\\f07c",
    fontColor: "#66783e",
    fontId: "fi"
  },
  "_config_dark-red": {
    fontCharacter: "\\f07c",
    fontColor: "#be2f31",
    fontId: "fi"
  },
  "_config-go_dark-blue": {
    fontCharacter: "\\eb12",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "129%"
  },
  "_config-go_medium-green": {
    fontCharacter: "\\eb12",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "129%"
  },
  "_config-hs_dark-purple": {
    fontCharacter: "\\eb14",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-hs_medium-purple": {
    fontCharacter: "\\eb14",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-js_dark-yellow": {
    fontCharacter: "\\eb1a",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-js_medium-yellow": {
    fontCharacter: "\\eb1a",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config_medium-blue": {
    fontCharacter: "\\f07c",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_config_medium-cyan": {
    fontCharacter: "\\f07c",
    fontColor: "#75b5aa",
    fontId: "fi"
  },
  "_config_medium-green": {
    fontCharacter: "\\f07c",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_config_medium-orange": {
    fontCharacter: "\\f07c",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_config_medium-purple": {
    fontCharacter: "\\f07c",
    fontColor: "#aa759f",
    fontId: "fi"
  },
  "_config_medium-red": {
    fontCharacter: "\\f07c",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_config_medium-yellow": {
    fontCharacter: "\\f07c",
    fontColor: "#f4bf75",
    fontId: "fi"
  },
  "_config-perl_medium-blue": {
    fontCharacter: "\\eb19",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-python_dark-blue": {
    fontCharacter: "\\eb15",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-react_dark-blue": {
    fontCharacter: "\\eb16",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-react_medium-blue": {
    fontCharacter: "\\eb16",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-ruby_dark-red": {
    fontCharacter: "\\eb17",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-ruby_medium-red": {
    fontCharacter: "\\eb17",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-rust_dark-maroon": {
    fontCharacter: "\\eb13",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-rust_medium-maroon": {
    fontCharacter: "\\eb13",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-ts_dark-blue": {
    fontCharacter: "\\eb1b",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-ts_dark-purple": {
    fontCharacter: "\\eb1b",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-ts_medium-blue": {
    fontCharacter: "\\eb1b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_config-ts_medium-purple": {
    fontCharacter: "\\eb1b",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_conll_medium-blue": {
    fontCharacter: "\\eaa6",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_conll_medium-orange": {
    fontCharacter: "\\eaa6",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_coq_medium-maroon": {
    fontCharacter: "\\e95f",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_cordova_light-blue": {
    fontCharacter: "\\ea11",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "107%"
  },
  "_coreldraw_medium-green": {
    fontCharacter: "\\ea90",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_corel_medium-blue": {
    fontCharacter: "\\ea91",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_coveralls_medium-red": {
    fontCharacter: "\\272a",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cpan_dark-blue": {
    fontCharacter: "\\ea87",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cpan_dark-yellow": {
    fontCharacter: "\\ea87",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cpan_medium-blue": {
    fontCharacter: "\\ea87",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cpan_medium-maroon": {
    fontCharacter: "\\ea87",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cpan_medium-red": {
    fontCharacter: "\\ea87",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cpan_medium-yellow": {
    fontCharacter: "\\ea87",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cpcdosc_medium-blue": {
    fontCharacter: "\\eb8d",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_cp_dark-red": {
    fontCharacter: "\\e942",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_cp_medium-maroon": {
    fontCharacter: "\\e942",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_cpp_dark-blue": {
    fontCharacter: "\\f10b",
    fontColor: "#46788d",
    fontId: "mf"
  },
  "_cpp_dark-orange": {
    fontCharacter: "\\f10b",
    fontColor: "#a35f27",
    fontId: "mf"
  },
  "_cpp_dark-purple": {
    fontCharacter: "\\f10b",
    fontColor: "#825078",
    fontId: "mf"
  },
  "_cpp_dark-red": {
    fontCharacter: "\\f10b",
    fontColor: "#be2f31",
    fontId: "mf"
  },
  "_cpp_medium-blue": {
    fontCharacter: "\\f10b",
    fontColor: "#6a9fb5",
    fontId: "mf"
  },
  "_cpp_medium-orange": {
    fontCharacter: "\\f10b",
    fontColor: "#d28445",
    fontId: "mf"
  },
  "_cpp_medium-purple": {
    fontCharacter: "\\f10b",
    fontColor: "#aa759f",
    fontId: "mf"
  },
  "_cpp_medium-red": {
    fontCharacter: "\\f10b",
    fontColor: "#ac4142",
    fontId: "mf"
  },
  "_crafttweaker_dark-maroon": {
    fontCharacter: "\\eb89",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "121%"
  },
  "_crafttweaker_dark-orange": {
    fontCharacter: "\\eb89",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "121%"
  },
  "_crafttweaker_medium-maroon": {
    fontCharacter: "\\eb89",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_crafttweaker_medium-orange": {
    fontCharacter: "\\eb89",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_creole_medium-blue": {
    fontCharacter: "\\e95e",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_crowdin_medium-green": {
    fontCharacter: "\\ead3",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_crystal_medium-cyan": {
    fontCharacter: "\\e902",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_csharp_dark-blue": {
    fontCharacter: "\\f10c",
    fontColor: "#46788d",
    fontId: "mf"
  },
  "_csharp_medium-blue": {
    fontCharacter: "\\f10c",
    fontColor: "#6a9fb5",
    fontId: "mf"
  },
  "_csound_dark-blue": {
    fontCharacter: "\\e9f0",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_csound_dark-maroon": {
    fontCharacter: "\\e9f0",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_csound_dark-orange": {
    fontCharacter: "\\e9f0",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_csound_medium-maroon": {
    fontCharacter: "\\e9f0",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_css3_dark-blue": {
    fontCharacter: "\\f13c",
    fontColor: "#46788d",
    fontId: "fa",
    fontSize: "93%"
  },
  "_css3_dark-red": {
    fontCharacter: "\\f13c",
    fontColor: "#be2f31",
    fontId: "fa",
    fontSize: "93%"
  },
  "_css3_medium-blue": {
    fontCharacter: "\\f13c",
    fontColor: "#6a9fb5",
    fontId: "fa",
    fontSize: "93%"
  },
  "_csscript_dark-green": {
    fontCharacter: "\\e9e2",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cubit_medium-cyan": {
    fontCharacter: "\\eb92",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_cucumber_medium-green": {
    fontCharacter: "\\f02b",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cuneiform_dark-blue": {
    fontCharacter: "\\eb76",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_curl_dark-blue": {
    fontCharacter: "/",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_curry_medium-red": {
    fontCharacter: "\\eb78",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_cvs_medium-orange": {
    fontCharacter: "\\1f41f",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_cwl_dark-red": {
    fontCharacter: "\\29d9",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_cython_dark-blue": {
    fontCharacter: "\\e963",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cython_medium-blue": {
    fontCharacter: "\\e963",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_cython_medium-orange": {
    fontCharacter: "\\e963",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_d3_medium-orange": {
    fontCharacter: "\\ea10",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dafny_medium-orange": {
    fontCharacter: "\\eb8c",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_dafny_medium-yellow": {
    fontCharacter: "\\eb8c",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "121%"
  },
  "_darcs_dark-green": {
    fontCharacter: "\\e964",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_darcs_medium-green": {
    fontCharacter: "\\e964",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dart_medium-cyan": {
    fontCharacter: "\\e698",
    fontColor: "#75b5aa",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_dashboard_medium-blue": {
    fontCharacter: "\\f07d",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "93%"
  },
  "_dashboard_medium-green": {
    fontCharacter: "\\f07d",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "93%"
  },
  "_dashboard_medium-orange": {
    fontCharacter: "\\f07d",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "93%"
  },
  "_database_dark-blue": {
    fontCharacter: "\\f096",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_dark-cyan": {
    fontCharacter: "\\f096",
    fontColor: "#4d9085",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_dark-green": {
    fontCharacter: "\\f096",
    fontColor: "#66783e",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_dark-orange": {
    fontCharacter: "\\f096",
    fontColor: "#a35f27",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_dark-purple": {
    fontCharacter: "\\f096",
    fontColor: "#825078",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_dark-red": {
    fontCharacter: "\\f096",
    fontColor: "#be2f31",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_light-blue": {
    fontCharacter: "\\f096",
    fontColor: "#9dc0ce",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_medium-blue": {
    fontCharacter: "\\f096",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_medium-cyan": {
    fontCharacter: "\\f096",
    fontColor: "#75b5aa",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_medium-green": {
    fontCharacter: "\\f096",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_medium-grey": {
    fontCharacter: "\\f096",
    fontColor: "#7f7f7f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_medium-maroon": {
    fontCharacter: "\\f096",
    fontColor: "#8f5536",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_medium-orange": {
    fontCharacter: "\\f096",
    fontColor: "#d28445",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_medium-purple": {
    fontCharacter: "\\f096",
    fontColor: "#aa759f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_database_medium-red": {
    fontCharacter: "\\f096",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_dataweave_dark-blue": {
    fontCharacter: "\\ea99",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dataweave_medium-blue": {
    fontCharacter: "\\ea99",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dbase_medium-red": {
    fontCharacter: "\\e9f1",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_debian_dark-cyan": {
    fontCharacter: "\\f111",
    fontColor: "#4d9085",
    fontId: "mf"
  },
  "_debian_medium-cyan": {
    fontCharacter: "\\f111",
    fontColor: "#75b5aa",
    fontId: "mf"
  },
  "_debian_medium-red": {
    fontCharacter: "\\f111",
    fontColor: "#ac4142",
    fontId: "mf"
  },
  "_delphi_medium-blue": {
    fontCharacter: "\\ea40",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_delphi_medium-orange": {
    fontCharacter: "\\ea40",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_delphi_medium-red": {
    fontCharacter: "\\ea40",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_deno_dark-grey": {
    fontCharacter: "\\eaef",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_deno_medium-grey": {
    fontCharacter: "\\eaef",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_dependabot_medium-blue": {
    fontCharacter: "\\eb3e",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_devcontainer_medium-blue": {
    fontCharacter: "\\eb83",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_devicetree_medium-orange": {
    fontCharacter: "\\ea57",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_devicetree_medium-purple": {
    fontCharacter: "\\ea57",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_dhall_dark-grey": {
    fontCharacter: "\\1f58b",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_dia_dark-cyan": {
    fontCharacter: "\\eab5",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dia_medium-cyan": {
    fontCharacter: "\\eab5",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_diff_medium-orange": {
    fontCharacter: "\\e960",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_diff_medium-red": {
    fontCharacter: "\\e960",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_digdag_medium-orange": {
    fontCharacter: "\\eb03",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dlang_medium-red": {
    fontCharacter: "\\e6af",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_dna_dark-yellow": {
    fontCharacter: "\\2624",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_dna_medium-blue": {
    fontCharacter: "\\2624",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_dna_medium-green": {
    fontCharacter: "\\2624",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_dna_medium-orange": {
    fontCharacter: "\\2624",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_dna_medium-pink": {
    fontCharacter: "\\2624",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "114%"
  },
  "_dna_medium-purple": {
    fontCharacter: "\\2624",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_dna_medium-red": {
    fontCharacter: "\\2624",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_docbook_medium-cyan": {
    fontCharacter: "\\13167",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_docker_dark-blue": {
    fontCharacter: "\\f106",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "129%"
  },
  "_docker_dark-orange": {
    fontCharacter: "\\f106",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "129%"
  },
  "_doclets_light-green": {
    fontCharacter: "\\ea3f",
    fontColor: "#b2c38b",
    fontId: "fi",
    fontSize: "107%"
  },
  "_doclets_medium-green": {
    fontCharacter: "\\ea3f",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_docpad_medium-maroon": {
    fontCharacter: "\\21b9",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_docz_dark-orange": {
    fontCharacter: "\\eb21",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "121%"
  },
  "_docz_dark-yellow": {
    fontCharacter: "\\eb21",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_docz_medium-orange": {
    fontCharacter: "\\eb21",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_docz_medium-yellow": {
    fontCharacter: "\\eb21",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "121%"
  },
  "_doge_medium-yellow": {
    fontCharacter: "\\e946",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dojo_light-red": {
    fontCharacter: "\\e61c",
    fontColor: "#c97071",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_dosbox_medium-orange": {
    fontCharacter: "\\eaf2",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_dotenv_dark-yellow": {
    fontCharacter: "\\ebb8",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dotenv_medium-yellow": {
    fontCharacter: "\\ebb8",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dotjs_medium-blue": {
    fontCharacter: "\\eb0b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_download_dark-blue": {
    fontCharacter: "\\f019",
    fontColor: "#46788d",
    fontId: "fa",
    fontSize: "114%"
  },
  "_doxygen_medium-blue": {
    fontCharacter: "\\e928",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "93%"
  },
  "_dragula_dark-purple": {
    fontCharacter: "\\1f44c",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "121%"
  },
  "_drawio_medium-orange": {
    fontCharacter: "\\eb93",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_drone_medium-cyan": {
    fontCharacter: "\\ea3d",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_dropbox_medium-blue": {
    fontCharacter: "\\e607",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_dub_medium-red": {
    fontCharacter: "\\eba2",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_dvc_light-blue": {
    fontCharacter: "\\eb98",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "121%"
  },
  "_dyalog_dark-green": {
    fontCharacter: "\\e90c",
    fontColor: "#66783e",
    fontId: "fi"
  },
  "_dyalog_medium-orange": {
    fontCharacter: "\\e90c",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_dyalog_medium-red": {
    fontCharacter: "\\e90c",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_dylib_medium-cyan": {
    fontCharacter: "\\ea15",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_eagle_medium-red": {
    fontCharacter: "\\e965",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_earth_dark-blue": {
    fontCharacter: "\\f0ac",
    fontColor: "#46788d",
    fontId: "fa",
    fontSize: "107%"
  },
  "_earth_medium-blue": {
    fontCharacter: "\\f0ac",
    fontColor: "#6a9fb5",
    fontId: "fa",
    fontSize: "107%"
  },
  "_earth_medium-green": {
    fontCharacter: "\\f0ac",
    fontColor: "#90a959",
    fontId: "fa",
    fontSize: "107%"
  },
  "_easybuild_dark-blue": {
    fontCharacter: "\\ea85",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ec_dark-blue": {
    fontCharacter: "\\e9c9",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ec_dark-purple": {
    fontCharacter: "\\e9c9",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ecere_medium-blue": {
    fontCharacter: "\\e966",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_eclipse_dark-blue": {
    fontCharacter: "\\e69e",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_eclipse-lang_medium-blue": {
    fontCharacter: "\\eb80",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_eclipse_medium-maroon": {
    fontCharacter: "\\e69e",
    fontColor: "#8f5536",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_eclipse_medium-red": {
    fontCharacter: "\\e69e",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_edge_dark-orange": {
    fontCharacter: "\\ea78",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_editorconfig_dark-blue": {
    fontCharacter: "\\ea1b",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_editorconfig_medium-orange": {
    fontCharacter: "\\ea1b",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_eiffel_medium-cyan": {
    fontCharacter: "\\e967",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ejs_medium-green": {
    fontCharacter: "\\ea4b",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_electron_dark-blue": {
    fontCharacter: "\\ea27",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_electron_dark-cyan": {
    fontCharacter: "\\ea27",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_elixir_dark-purple": {
    fontCharacter: "\\f113",
    fontColor: "#825078",
    fontId: "mf"
  },
  "_elixir_light-purple": {
    fontCharacter: "\\f113",
    fontColor: "#c7a4c0",
    fontId: "mf"
  },
  "_elixir_medium-purple": {
    fontCharacter: "\\f113",
    fontColor: "#aa759f",
    fontId: "mf"
  },
  "_elm_medium-blue": {
    fontCharacter: "\\f102",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_emacs_dark-blue": {
    fontCharacter: "\\e926",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_emacs_dark-green": {
    fontCharacter: "\\e926",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_emacs_dark-purple": {
    fontCharacter: "\\e926",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_emacs_medium-blue": {
    fontCharacter: "\\e926",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_emacs_medium-purple": {
    fontCharacter: "\\e926",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_emacs_medium-red": {
    fontCharacter: "\\e926",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_e_medium-green": {
    fontCharacter: "E",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_em_medium-red": {
    fontCharacter: "\\e968",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ensime_medium-red": {
    fontCharacter: "\\ead4",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_eq_medium-orange": {
    fontCharacter: "\\ea0a",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_erlang_dark-green": {
    fontCharacter: "\\e6b1",
    fontColor: "#66783e",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_erlang_dark-maroon": {
    fontCharacter: "\\e6b1",
    fontColor: "#7c4426",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_erlang_dark-red": {
    fontCharacter: "\\e6b1",
    fontColor: "#be2f31",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_erlang_medium-green": {
    fontCharacter: "\\e6b1",
    fontColor: "#90a959",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_erlang_medium-maroon": {
    fontCharacter: "\\e6b1",
    fontColor: "#8f5536",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_erlang_medium-red": {
    fontCharacter: "\\e6b1",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_esdoc_medium-red": {
    fontCharacter: "\\ea5c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_eslint_light-purple": {
    fontCharacter: "\\ea0f",
    fontColor: "#c7a4c0",
    fontId: "fi",
    fontSize: "114%"
  },
  "_eslint_medium-purple": {
    fontCharacter: "\\ea0f",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_excel_dark-cyan": {
    fontCharacter: "\\e9ee",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_excel_dark-green": {
    fontCharacter: "\\e9ee",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_excel_dark-maroon": {
    fontCharacter: "\\e9ee",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_excel_dark-orange": {
    fontCharacter: "\\e9ee",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_excel_dark-red": {
    fontCharacter: "\\e9ee",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_excel_medium-green": {
    fontCharacter: "\\e9ee",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_excel_medium-maroon": {
    fontCharacter: "\\e9ee",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_excel_medium-orange": {
    fontCharacter: "\\e9ee",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_excel_medium-red": {
    fontCharacter: "\\e9ee",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_expo_medium-blue": {
    fontCharacter: "\\eb71",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_fabfile_medium-blue": {
    fontCharacter: "\\e94b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_fabric_dark-orange": {
    fontCharacter: "\\1f4dc",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_fabric_medium-orange": {
    fontCharacter: "\\1f4dc",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_factor_dark-orange": {
    fontCharacter: "\\e96a",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "129%"
  },
  "_factor_medium-orange": {
    fontCharacter: "\\e96a",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "129%"
  },
  "_factor_medium-red": {
    fontCharacter: "\\e96a",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "129%"
  },
  "_falcon_medium-red": {
    fontCharacter: "\\eae4",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_fancy_dark-blue": {
    fontCharacter: "\\e96b",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_fancy_medium-blue": {
    fontCharacter: "\\e96b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_fancy_medium-green": {
    fontCharacter: "\\e96b",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_fantom_medium-blue": {
    fontCharacter: "\\e96f",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_fauna_dark-blue": {
    fontCharacter: "\\13168",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_faust_dark-orange": {
    fontCharacter: "\\22c0",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_fbx_medium-maroon": {
    fontCharacter: "\\e9fc",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_fexl_medium-cyan": {
    fontCharacter: "\\eb20",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "121%"
  },
  "_ff_dark-blue": {
    fontCharacter: "\\fb00",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ff_medium-orange": {
    fontCharacter: "\\fb00",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_figma_medium-red": {
    fontCharacter: "\\ebba",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_filter_medium-red": {
    fontCharacter: "\\f0b0",
    fontColor: "#ac4142",
    fontId: "fa",
    fontSize: "114%"
  },
  "_finaldraft_medium-green": {
    fontCharacter: "\\1d4bb",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_finder_dark-blue": {
    fontCharacter: "\\e9e9",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_finder_dark-cyan": {
    fontCharacter: "\\e9e9",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_finder_medium-blue": {
    fontCharacter: "\\e9e9",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_firebase-bolt_medium-yellow": {
    fontCharacter: "\\26A1",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_firebase_medium-orange": {
    fontCharacter: "\\ea7f",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_firebase_medium-yellow": {
    fontCharacter: "\\ea7f",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_firefox_medium-orange": {
    fontCharacter: "\\e645",
    fontColor: "#d28445",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_flask_dark-blue": {
    fontCharacter: "\\1f704",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_floobits_medium-red": {
    fontCharacter: "\\ead5",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_flow_medium-orange": {
    fontCharacter: "\\e921",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_flutter_light-blue": {
    fontCharacter: "\\eaeb",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "107%"
  },
  "_flux_dark-blue": {
    fontCharacter: "\\e969",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_flux_medium-blue": {
    fontCharacter: "\\e969",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_font-bitmap_dark-blue": {
    fontCharacter: "\\eaab",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_font-bitmap_dark-orange": {
    fontCharacter: "\\eaab",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_font-bitmap_dark-red": {
    fontCharacter: "\\eaab",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_font-bitmap_medium-blue": {
    fontCharacter: "\\eaab",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_font-bitmap_medium-cyan": {
    fontCharacter: "\\eaab",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_font-bitmap_medium-orange": {
    fontCharacter: "\\eaab",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_font-bitmap_medium-red": {
    fontCharacter: "\\eaab",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_font_dark-blue": {
    fontCharacter: "\\eaaa",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_font_dark-cyan": {
    fontCharacter: "\\eaaa",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_font_dark-green": {
    fontCharacter: "\\eaaa",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_font_dark-red": {
    fontCharacter: "\\eaaa",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_font_dark-yellow": {
    fontCharacter: "\\eaaa",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_font_light-green": {
    fontCharacter: "\\eaaa",
    fontColor: "#b2c38b",
    fontId: "fi",
    fontSize: "114%"
  },
  "_font_medium-blue": {
    fontCharacter: "\\eaaa",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_font_medium-green": {
    fontCharacter: "\\eaaa",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_font_medium-red": {
    fontCharacter: "\\eaaa",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_fork_medium-blue": {
    fontCharacter: "\\2442",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_fortran_dark-blue": {
    fontCharacter: "\\e90a",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_fortran_dark-cyan": {
    fontCharacter: "\\e90a",
    fontColor: "#4d9085",
    fontId: "fi"
  },
  "_fortran_dark-pink": {
    fontCharacter: "\\e90a",
    fontColor: "#cc00a3",
    fontId: "fi"
  },
  "_fortran_dark-yellow": {
    fontCharacter: "\\e90a",
    fontColor: "#ee9e2e",
    fontId: "fi"
  },
  "_fortran_medium-blue": {
    fontCharacter: "\\e90a",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_fortran_medium-green": {
    fontCharacter: "\\e90a",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_fortran_medium-maroon": {
    fontCharacter: "\\e90a",
    fontColor: "#8f5536",
    fontId: "fi"
  },
  "_fortran_medium-red": {
    fontCharacter: "\\e90a",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_fossa_dark-blue": {
    fontCharacter: "\\eac3",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_fossa_medium-blue": {
    fontCharacter: "\\eac3",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  _fossil: {
    fontCharacter: "\\ead6",
    fontId: "fi",
    fontSize: "121%"
  },
  "_fossil_dark-cyan": {
    fontCharacter: "\\ead6",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "121%"
  },
  "_fossil_medium-cyan": {
    fontCharacter: "\\ead6",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "121%"
  },
  "_fountain_medium-blue": {
    fontCharacter: "\\1f135",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_franca_medium-maroon": {
    fontCharacter: "\\ea56",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_franca_medium-orange": {
    fontCharacter: "\\ea56",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_freemarker_medium-blue": {
    fontCharacter: "\\e970",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_frege_dark-red": {
    fontCharacter: "\\e96e",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_fsharp_medium-blue": {
    fontCharacter: "\\e6a7",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_fthtml_medium-orange": {
    fontCharacter: "\\eb97",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ftr_medium-red": {
    fontCharacter: "\\2933",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "129%"
  },
  "_fuelux_dark-orange": {
    fontCharacter: "\\ea09",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_fuelux_medium-orange": {
    fontCharacter: "\\ea09",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_fusebox_medium-blue": {
    fontCharacter: "\\ead7",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_futhark_dark-maroon": {
    fontCharacter: "\\eb77",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "129%"
  },
  "_galaxy_medium-grey": {
    fontCharacter: "\\eb74",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_galen_medium-blue": {
    fontCharacter: "\\ead8",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_galen_medium-cyan": {
    fontCharacter: "\\ead8",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gams_dark-red": {
    fontCharacter: "\\e973",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gap_dark-blue": {
    fontCharacter: "\\e971",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gap_dark-yellow": {
    fontCharacter: "\\e971",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gap_medium-orange": {
    fontCharacter: "\\e971",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gap_medium-yellow": {
    fontCharacter: "\\e971",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gatsby_dark-purple": {
    fontCharacter: "\\24bc",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gauss_medium-orange": {
    fontCharacter: "\\eb7e",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gdb_dark-cyan": {
    fontCharacter: "\\ea08",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gdb_dark-green": {
    fontCharacter: "\\ea08",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gdb_medium-cyan": {
    fontCharacter: "\\ea08",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gdb_medium-green": {
    fontCharacter: "\\ea08",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gear_dark-blue": {
    fontCharacter: "\\f02f",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gear_dark-green": {
    fontCharacter: "\\f02f",
    fontColor: "#66783e",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gear_dark-orange": {
    fontCharacter: "\\f02f",
    fontColor: "#a35f27",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gear_dark-yellow": {
    fontCharacter: "\\f02f",
    fontColor: "#ee9e2e",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gear_medium-blue": {
    fontCharacter: "\\f02f",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gear_medium-maroon": {
    fontCharacter: "\\f02f",
    fontColor: "#8f5536",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gear_medium-orange": {
    fontCharacter: "\\f02f",
    fontColor: "#d28445",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gear_medium-red": {
    fontCharacter: "\\f02f",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gear_medium-yellow": {
    fontCharacter: "\\f02f",
    fontColor: "#f4bf75",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gears_dark-orange": {
    fontCharacter: "\\f085",
    fontColor: "#a35f27",
    fontId: "fa",
    fontSize: "107%"
  },
  "_genshi_medium-red": {
    fontCharacter: "\\e976",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_genstat_medium-blue": {
    fontCharacter: "\\223f",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_genstat_medium-green": {
    fontCharacter: "\\223f",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gentoo_dark-cyan": {
    fontCharacter: "\\e96d",
    fontColor: "#4d9085",
    fontId: "fi"
  },
  "_gentoo_medium-blue": {
    fontCharacter: "\\e96d",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_gf_medium-red": {
    fontCharacter: "\\e978",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gimp_medium-cyan": {
    fontCharacter: "\\ea88",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "121%"
  },
  "_gimp_medium-green": {
    fontCharacter: "\\ea88",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_gimp_medium-maroon": {
    fontCharacter: "\\ea88",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_gimp_medium-orange": {
    fontCharacter: "\\ea88",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_gimp_medium-red": {
    fontCharacter: "\\ea88",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_git-commit_medium-red": {
    fontCharacter: "\\f01f",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  _github: {
    fontCharacter: "\\f00a",
    fontId: "octicons",
    fontSize: "114%"
  },
  _gitlab: {
    fontCharacter: "\\ea3c",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gitlab_medium-orange": {
    fontCharacter: "\\ea3c",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_git_medium-red": {
    fontCharacter: "\\e602",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_git-merge_medium-red": {
    fontCharacter: "\\f023",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_gitpod_medium-blue": {
    fontCharacter: "\\1d5a6",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_glade_medium-green": {
    fontCharacter: "\\e938",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_glide_light-orange": {
    fontCharacter: "\\eacb",
    fontColor: "#e1ad83",
    fontId: "fi",
    fontSize: "121%"
  },
  "_gltf_medium-green": {
    fontCharacter: "\\eaa7",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_glyphs_medium-green": {
    fontCharacter: "G",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gml_medium-green": {
    fontCharacter: "\\e975",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gn_dark-blue": {
    fontCharacter: "\\ea25",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gn_medium-blue": {
    fontCharacter: "\\ea25",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gnu_dark-red": {
    fontCharacter: "\\e679",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gnu_medium-red": {
    fontCharacter: "\\e679",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gnuplot_medium-red": {
    fontCharacter: "\\1f4c8",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_godot_dark-blue": {
    fontCharacter: "\\e974",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_godot_dark-cyan": {
    fontCharacter: "\\e974",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_godot_medium-blue": {
    fontCharacter: "\\e974",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_godot_medium-cyan": {
    fontCharacter: "\\e974",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_godot_medium-green": {
    fontCharacter: "\\e974",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_godot_medium-red": {
    fontCharacter: "\\e974",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_golo_medium-orange": {
    fontCharacter: "\\e979",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_go_medium-blue": {
    fontCharacter: "\\eaae",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "129%"
  },
  "_goreleaser_medium-blue": {
    fontCharacter: "\\eb90",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "129%"
  },
  "_gosu_dark-blue": {
    fontCharacter: "\\e97a",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gosu_dark-green": {
    fontCharacter: "\\e97a",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gosu_medium-blue": {
    fontCharacter: "\\e97a",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gosu_medium-green": {
    fontCharacter: "\\e97a",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_gql-codegen_dark-pink": {
    fontCharacter: "\\ebae",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "129%"
  },
  "_gradle_dark-purple": {
    fontCharacter: "\\e903",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gradle_medium-blue": {
    fontCharacter: "\\e903",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_graph_dark-blue": {
    fontCharacter: "\\f043",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_grapher_dark-green": {
    fontCharacter: "\\1f4c9",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_grapher_medium-green": {
    fontCharacter: "\\1f4c9",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_graph_light-green": {
    fontCharacter: "\\f043",
    fontColor: "#b2c38b",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_graph_light-red": {
    fontCharacter: "\\f043",
    fontColor: "#c97071",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_graph_medium-blue": {
    fontCharacter: "\\f043",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_graph_medium-cyan": {
    fontCharacter: "\\f043",
    fontColor: "#75b5aa",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_graph_medium-green": {
    fontCharacter: "\\f043",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_graphql_medium-pink": {
    fontCharacter: "\\e97c",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "107%"
  },
  "_graphql_medium-purple": {
    fontCharacter: "\\e97c",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_graphql_medium-red": {
    fontCharacter: "\\e97c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_graphviz_dark-cyan": {
    fontCharacter: "\\e97d",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "121%"
  },
  "_graphviz_medium-blue": {
    fontCharacter: "\\e97d",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_graphviz_medium-orange": {
    fontCharacter: "\\e97d",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_greenkeeper_medium-green": {
    fontCharacter: "\\eb0c",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_groovy_light-blue": {
    fontCharacter: "\\e904",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "121%"
  },
  "_grunt_medium-blue": {
    fontCharacter: "\\e611",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_grunt_medium-maroon": {
    fontCharacter: "\\e611",
    fontColor: "#8f5536",
    fontId: "fi"
  },
  "_grunt_medium-yellow": {
    fontCharacter: "\\e611",
    fontColor: "#f4bf75",
    fontId: "fi"
  },
  "_gulp_medium-blue": {
    fontCharacter: "\\e610",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gulp_medium-maroon": {
    fontCharacter: "\\e610",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gulp_medium-red": {
    fontCharacter: "\\e610",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_gvdesign_medium-yellow": {
    fontCharacter: "\\eb02",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hack_medium-orange": {
    fontCharacter: "\\e9ce",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hack_medium-red": {
    fontCharacter: "\\e9ce",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hack_medium-yellow": {
    fontCharacter: "\\e9ce",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_haml_medium-maroon": {
    fontCharacter: "\\f15b",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_haml_medium-red": {
    fontCharacter: "\\f15b",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_haml_medium-yellow": {
    fontCharacter: "\\f15b",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_harbour_dark-blue": {
    fontCharacter: "\\e97b",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_hashicorp_dark-purple": {
    fontCharacter: "\\e97e",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hashicorp_medium-cyan": {
    fontCharacter: "\\e97e",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_haskell_dark-blue": {
    fontCharacter: "\\f121",
    fontColor: "#46788d",
    fontId: "mf",
    fontSize: "114%"
  },
  "_haskell_dark-purple": {
    fontCharacter: "\\f121",
    fontColor: "#825078",
    fontId: "mf",
    fontSize: "114%"
  },
  "_haskell_medium-blue": {
    fontCharacter: "\\f121",
    fontColor: "#6a9fb5",
    fontId: "mf",
    fontSize: "114%"
  },
  "_haskell_medium-maroon": {
    fontCharacter: "\\f121",
    fontColor: "#8f5536",
    fontId: "mf",
    fontSize: "114%"
  },
  "_haskell_medium-purple": {
    fontCharacter: "\\f121",
    fontColor: "#aa759f",
    fontId: "mf",
    fontSize: "114%"
  },
  "_haxedevelop_dark-blue": {
    fontCharacter: "\\ea3b",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_haxedevelop_medium-blue": {
    fontCharacter: "\\ea3b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_haxe_medium-orange": {
    fontCharacter: "\\e907",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_helix_medium-blue": {
    fontCharacter: "\\2695",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_heroku_dark-purple": {
    fontCharacter: "\\e67b",
    fontColor: "#825078",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_heroku_light-purple": {
    fontCharacter: "\\e67b",
    fontColor: "#c7a4c0",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_heroku_medium-purple": {
    fontCharacter: "\\e67b",
    fontColor: "#aa759f",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_hg_dark-cyan": {
    fontCharacter: "\\263f",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hg_dark-grey": {
    fontCharacter: "\\263f",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hg_medium-cyan": {
    fontCharacter: "\\263f",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hg_medium-grey": {
    fontCharacter: "\\263f",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hie_dark-purple": {
    fontCharacter: "\\ebab",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "129%"
  },
  "_hjson_medium-green": {
    fontCharacter: "\\eac2",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_hoplon_medium-red": {
    fontCharacter: "\\ea4d",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_houdini_medium-cyan": {
    fontCharacter: "\\1f300",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_houdini_medium-orange": {
    fontCharacter: "\\1f300",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_houndci_medium-purple": {
    fontCharacter: "\\eaaf",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hp_medium-blue": {
    fontCharacter: "\\33cb",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_html5_dark-blue": {
    fontCharacter: "\\f13b",
    fontColor: "#46788d",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_dark-orange": {
    fontCharacter: "\\f13b",
    fontColor: "#a35f27",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_dark-purple": {
    fontCharacter: "\\f13b",
    fontColor: "#825078",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_dark-red": {
    fontCharacter: "\\f13b",
    fontColor: "#be2f31",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_medium-blue": {
    fontCharacter: "\\f13b",
    fontColor: "#6a9fb5",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_medium-cyan": {
    fontCharacter: "\\f13b",
    fontColor: "#75b5aa",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_medium-green": {
    fontCharacter: "\\f13b",
    fontColor: "#90a959",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_medium-maroon": {
    fontCharacter: "\\f13b",
    fontColor: "#8f5536",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_medium-orange": {
    fontCharacter: "\\f13b",
    fontColor: "#d28445",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_medium-purple": {
    fontCharacter: "\\f13b",
    fontColor: "#aa759f",
    fontId: "fa",
    fontSize: "107%"
  },
  "_html5_medium-red": {
    fontCharacter: "\\f13b",
    fontColor: "#ac4142",
    fontId: "fa",
    fontSize: "107%"
  },
  "_husky_dark-blue": {
    fontCharacter: "\\1f436",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_husky_dark-green": {
    fontCharacter: "\\1f436",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_husky_dark-orange": {
    fontCharacter: "\\1f436",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "121%"
  },
  "_husky_dark-red": {
    fontCharacter: "\\1f436",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_husky_dark-yellow": {
    fontCharacter: "\\1f436",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_husky_medium-blue": {
    fontCharacter: "\\1f436",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_husky_medium-green": {
    fontCharacter: "\\1f436",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_husky_medium-orange": {
    fontCharacter: "\\1f436",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_husky_medium-red": {
    fontCharacter: "\\1f436",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_husky_medium-yellow": {
    fontCharacter: "\\1f436",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "121%"
  },
  "_hy_dark-blue": {
    fontCharacter: "\\e97f",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_hygen_medium-pink": {
    fontCharacter: "\\1f4c3",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "114%"
  },
  "_hyper_dark-purple": {
    fontCharacter: "\\eb37",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_icomoon_medium-purple": {
    fontCharacter: "\\eaea",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_idl_medium-blue": {
    fontCharacter: "\\e947",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "129%"
  },
  "_idris_dark-red": {
    fontCharacter: "\\e983",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_idris_medium-maroon": {
    fontCharacter: "\\e983",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_igorpro_dark-red": {
    fontCharacter: "\\e980",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_image_dark-blue": {
    fontCharacter: "\\f012",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_dark-cyan": {
    fontCharacter: "\\f012",
    fontColor: "#4d9085",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_dark-green": {
    fontCharacter: "\\f012",
    fontColor: "#66783e",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_dark-grey": {
    fontCharacter: "\\f012",
    fontColor: "#7f7f7f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_dark-maroon": {
    fontCharacter: "\\f012",
    fontColor: "#7c4426",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_dark-orange": {
    fontCharacter: "\\f012",
    fontColor: "#a35f27",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_dark-purple": {
    fontCharacter: "\\f012",
    fontColor: "#825078",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_dark-red": {
    fontCharacter: "\\f012",
    fontColor: "#be2f31",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_light-blue": {
    fontCharacter: "\\f012",
    fontColor: "#9dc0ce",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_light-purple": {
    fontCharacter: "\\f012",
    fontColor: "#c7a4c0",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_medium-blue": {
    fontCharacter: "\\f012",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_medium-cyan": {
    fontCharacter: "\\f012",
    fontColor: "#75b5aa",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_medium-green": {
    fontCharacter: "\\f012",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_medium-grey": {
    fontCharacter: "\\f012",
    fontColor: "#7f7f7f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_medium-orange": {
    fontCharacter: "\\f012",
    fontColor: "#d28445",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_medium-pink": {
    fontCharacter: "\\f012",
    fontColor: "#ff00cc",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_medium-purple": {
    fontCharacter: "\\f012",
    fontColor: "#aa759f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_medium-red": {
    fontCharacter: "\\f012",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_image_medium-yellow": {
    fontCharacter: "\\f012",
    fontColor: "#f4bf75",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_imba_medium-yellow": {
    fontCharacter: "\\26ff",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_imgbot_dark-cyan": {
    fontCharacter: "\\ebbf",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "121%"
  },
  "_indesign_dark-blue": {
    fontCharacter: "\\e9f4",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_indesign_dark-pink": {
    fontCharacter: "\\e9f4",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_indesign_dark-purple": {
    fontCharacter: "\\e9f4",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_indesign_medium-purple": {
    fontCharacter: "\\e9f4",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_infopath_dark-purple": {
    fontCharacter: "\\ea35",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_inform7_dark-blue": {
    fontCharacter: "\\e984",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_inform7_medium-blue": {
    fontCharacter: "\\e984",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ink_dark-blue": {
    fontCharacter: "\\eace",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ink_dark-purple": {
    fontCharacter: "\\eace",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_inkscape_dark-purple": {
    fontCharacter: "\\ea8e",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_inno_dark-blue": {
    fontCharacter: "\\e985",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_inno_medium-cyan": {
    fontCharacter: "\\e985",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_io_dark-purple": {
    fontCharacter: "\\e981",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "93%"
  },
  "_ioke_medium-red": {
    fontCharacter: "\\e982",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ionic_medium-blue": {
    fontCharacter: "\\f14b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_isabelle_dark-blue": {
    fontCharacter: "\\e945",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_isabelle_dark-red": {
    fontCharacter: "\\e945",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_istanbul_dark-blue": {
    fontCharacter: "\\1f54c",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_istanbul_dark-green": {
    fontCharacter: "\\1f54c",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_istanbul_dark-yellow": {
    fontCharacter: "\\1f54c",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_istanbul_medium-blue": {
    fontCharacter: "\\1f54c",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_istanbul_medium-green": {
    fontCharacter: "\\1f54c",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_istanbul_medium-orange": {
    fontCharacter: "\\1f54c",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_istanbul_medium-yellow": {
    fontCharacter: "\\1f54c",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "121%"
  },
  "_jade_medium-red": {
    fontCharacter: "\\e90d",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_jake_dark-maroon": {
    fontCharacter: "\\e948",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "114%"
  },
  "_jake_dark-yellow": {
    fontCharacter: "\\e948",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_jake_medium-maroon": {
    fontCharacter: "\\e948",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_jake_medium-yellow": {
    fontCharacter: "\\e948",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_jasmine_dark-purple": {
    fontCharacter: "\\ea3a",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_jasmine_medium-purple": {
    fontCharacter: "\\ea3a",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_java_medium-maroon": {
    fontCharacter: "\\f126",
    fontColor: "#8f5536",
    fontId: "mf",
    fontSize: "114%"
  },
  "_java_medium-purple": {
    fontCharacter: "\\f126",
    fontColor: "#aa759f",
    fontId: "mf",
    fontSize: "114%"
  },
  "_jekyll_medium-green": {
    fontCharacter: "\\e60d",
    fontColor: "#90a959",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_jekyll_medium-red": {
    fontCharacter: "\\e60d",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_jenkins_dark-red": {
    fontCharacter: "\\e667",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "129%"
  },
  "_jenkins_medium-red": {
    fontCharacter: "\\e667",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "129%"
  },
  "_jest_dark-green": {
    fontCharacter: "\\ea39",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jest_dark-yellow": {
    fontCharacter: "\\ea39",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jest_medium-blue": {
    fontCharacter: "\\ea39",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jest_medium-green": {
    fontCharacter: "\\ea39",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jest_medium-red": {
    fontCharacter: "\\ea39",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jest_medium-yellow": {
    fontCharacter: "\\ea39",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jinja_dark-red": {
    fontCharacter: "\\e944",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jinja_medium-red": {
    fontCharacter: "\\e944",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jison_medium-blue": {
    fontCharacter: "\\ea55",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jison_medium-cyan": {
    fontCharacter: "\\ea55",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_j_light-blue": {
    fontCharacter: "\\e937",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "93%"
  },
  "_jolie_dark-pink": {
    fontCharacter: "\\ea75",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jolie_medium-red": {
    fontCharacter: "\\ea75",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jquery_dark-blue": {
    fontCharacter: "\\e650",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_jscpd_medium-cyan": {
    fontCharacter: "\\eb95",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "121%"
  },
  "_jscpd_medium-grey": {
    fontCharacter: "\\eb95",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_jscpd_medium-orange": {
    fontCharacter: "\\eb95",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_js_dark-blue": {
    fontCharacter: "\\f129",
    fontColor: "#46788d",
    fontId: "mf"
  },
  "_js_dark-green": {
    fontCharacter: "\\f129",
    fontColor: "#66783e",
    fontId: "mf"
  },
  "_js_dark-maroon": {
    fontCharacter: "\\f129",
    fontColor: "#7c4426",
    fontId: "mf"
  },
  "_js_dark-orange": {
    fontCharacter: "\\f129",
    fontColor: "#a35f27",
    fontId: "mf"
  },
  "_js_dark-pink": {
    fontCharacter: "\\f129",
    fontColor: "#cc00a3",
    fontId: "mf"
  },
  "_js_dark-purple": {
    fontCharacter: "\\f129",
    fontColor: "#825078",
    fontId: "mf"
  },
  "_js_dark-red": {
    fontCharacter: "\\f129",
    fontColor: "#be2f31",
    fontId: "mf"
  },
  "_js_dark-yellow": {
    fontCharacter: "\\f129",
    fontColor: "#ee9e2e",
    fontId: "mf"
  },
  "_js_medium-blue": {
    fontCharacter: "\\f129",
    fontColor: "#6a9fb5",
    fontId: "mf"
  },
  "_js_medium-cyan": {
    fontCharacter: "\\f129",
    fontColor: "#75b5aa",
    fontId: "mf"
  },
  "_js_medium-green": {
    fontCharacter: "\\f129",
    fontColor: "#90a959",
    fontId: "mf"
  },
  "_js_medium-maroon": {
    fontCharacter: "\\f129",
    fontColor: "#8f5536",
    fontId: "mf"
  },
  "_js_medium-orange": {
    fontCharacter: "\\f129",
    fontColor: "#d28445",
    fontId: "mf"
  },
  "_js_medium-pink": {
    fontCharacter: "\\f129",
    fontColor: "#ff00cc",
    fontId: "mf"
  },
  "_js_medium-purple": {
    fontCharacter: "\\f129",
    fontColor: "#aa759f",
    fontId: "mf"
  },
  "_js_medium-red": {
    fontCharacter: "\\f129",
    fontColor: "#ac4142",
    fontId: "mf"
  },
  "_js_medium-yellow": {
    fontCharacter: "\\f129",
    fontColor: "#f4bf75",
    fontId: "mf"
  },
  "_json5_dark-yellow": {
    fontCharacter: "\\2478",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_json_dark-blue": {
    fontCharacter: "\\eabe",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jsonld_medium-blue": {
    fontCharacter: "\\e958",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_json_medium-blue": {
    fontCharacter: "\\eabe",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_json_medium-cyan": {
    fontCharacter: "\\eabe",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jsonnet_dark-blue": {
    fontCharacter: "\\eb1e",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_jsonnet_medium-blue": {
    fontCharacter: "\\eb1e",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_jsx_dark-blue": {
    fontCharacter: "\\e9e6",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_jsx_medium-blue": {
    fontCharacter: "\\e9e6",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_julia_medium-purple": {
    fontCharacter: "\\26ec",
    fontColor: "#aa759f",
    fontId: "fi"
  },
  "_junos_medium-blue": {
    fontCharacter: "\\ea81",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_junos_medium-cyan": {
    fontCharacter: "\\ea81",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_jupyter_dark-cyan": {
    fontCharacter: "\\e987",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_jupyter_dark-orange": {
    fontCharacter: "\\e987",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_kaitai_medium-maroon": {
    fontCharacter: "\\30ab",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_karma_medium-cyan": {
    fontCharacter: "\\e9cd",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_karma_medium-maroon": {
    fontCharacter: "\\e9cd",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_keybase_medium-blue": {
    fontCharacter: "\\eaf8",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_key_dark-green": {
    fontCharacter: "\\f049",
    fontColor: "#66783e",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_key_medium-blue": {
    fontCharacter: "\\f049",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_key_medium-green": {
    fontCharacter: "\\f049",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_key_medium-orange": {
    fontCharacter: "\\f049",
    fontColor: "#d28445",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_key_medium-purple": {
    fontCharacter: "\\f049",
    fontColor: "#aa759f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_key_medium-yellow": {
    fontCharacter: "\\f049",
    fontColor: "#f4bf75",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_keynote_dark-blue": {
    fontCharacter: "\\e9e5",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_keynote_medium-blue": {
    fontCharacter: "\\e9e5",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_khronos_medium-orange": {
    fontCharacter: "\\e9f8",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kibo_dark-orange": {
    fontCharacter: "\\eba9",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kibo_light-yellow": {
    fontCharacter: "\\eba9",
    fontColor: "#fae0bc",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kicad_dark-blue": {
    fontCharacter: "\\ea4c",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kicad_dark-green": {
    fontCharacter: "\\ea4c",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kicad_dark-red": {
    fontCharacter: "\\ea4c",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kicad_medium-cyan": {
    fontCharacter: "\\ea4c",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kicad_medium-green": {
    fontCharacter: "\\ea4c",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kicad_medium-maroon": {
    fontCharacter: "\\ea4c",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kicad_medium-orange": {
    fontCharacter: "\\ea4c",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kicad_medium-red": {
    fontCharacter: "\\ea4c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kitchenci_medium-green": {
    fontCharacter: "\\ea38",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kivy_dark-maroon": {
    fontCharacter: "\\e901",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kos_dark-green": {
    fontCharacter: "k",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_kotlin_dark-blue": {
    fontCharacter: "\\e989",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_kotlin_medium-blue": {
    fontCharacter: "\\e989",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_kotlin_medium-orange": {
    fontCharacter: "\\e989",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_krl_medium-blue": {
    fontCharacter: "\\e988",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_kubernetes_medium-blue": {
    fontCharacter: "\\2388",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_kusto_medium-blue": {
    fontCharacter: "\\eb9a",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kx_dark-purple": {
    fontCharacter: "\\ea9b",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_kx_medium-blue": {
    fontCharacter: "\\ea9b",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_labview_dark-blue": {
    fontCharacter: "\\e98a",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_laravel_medium-orange": {
    fontCharacter: "\\e63f",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lark_dark-blue": {
    fontCharacter: "\\1316b",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lasso_dark-blue": {
    fontCharacter: "\\e98c",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_lasso_dark-red": {
    fontCharacter: "\\e98c",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_lasso_medium-blue": {
    fontCharacter: "\\e98c",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_lasso_medium-purple": {
    fontCharacter: "\\e98c",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_lasso_medium-red": {
    fontCharacter: "\\e98c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_latino_dark-blue": {
    fontCharacter: "\\1f426",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_latino_medium-blue": {
    fontCharacter: "\\1f426",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_lean_dark-purple": {
    fontCharacter: "L",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "93%"
  },
  "_lean_dark-red": {
    fontCharacter: "L",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "93%"
  },
  "_lefthook_medium-red": {
    fontCharacter: "\\eb8b",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  _lein: {
    fontCharacter: "\\f105",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lektor_dark-purple": {
    fontCharacter: "\\eab9",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lektor_medium-orange": {
    fontCharacter: "\\eab9",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lerna_dark-blue": {
    fontCharacter: "\\ea37",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lerna_medium-blue": {
    fontCharacter: "\\ea37",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lex_dark-red": {
    fontCharacter: "\\101ef",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lex_medium-cyan": {
    fontCharacter: "\\101ef",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lfe_dark-red": {
    fontCharacter: "\\e94c",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lgtm_dark-purple": {
    fontCharacter: "\\1f435",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "121%"
  },
  "_lighthouse_dark-blue": {
    fontCharacter: "\\26ef",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lightwave_medium-blue": {
    fontCharacter: "\\e9fb",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_lightwave_medium-red": {
    fontCharacter: "\\e9fb",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_lilypond_dark-green": {
    fontCharacter: "\\1f4ae",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lilypond_medium-green": {
    fontCharacter: "\\1f4ae",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lime_medium-green": {
    fontCharacter: "\\ea36",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_link_dark-blue": {
    fontCharacter: "\\f0b0",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_link_medium-blue": {
    fontCharacter: "\\f0b0",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_linqpad_dark-pink": {
    fontCharacter: "\\1d6cc",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_lisp_dark-purple": {
    fontCharacter: "\\e908",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "121%"
  },
  "_lisp_dark-red": {
    fontCharacter: "\\e908",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_lisp_medium-blue": {
    fontCharacter: "\\e908",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_lisp_medium-maroon": {
    fontCharacter: "\\e908",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_lisp_medium-purple": {
    fontCharacter: "\\e908",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_lisp_medium-red": {
    fontCharacter: "\\e908",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_llvm_dark-green": {
    fontCharacter: "\\e91d",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_llvm_dark-red": {
    fontCharacter: "\\e91d",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_llvm_dark-yellow": {
    fontCharacter: "\\e91d",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_llvm_medium-red": {
    fontCharacter: "\\e91d",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_llvm_medium-yellow": {
    fontCharacter: "\\e91d",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "121%"
  },
  "_logtalk_medium-red": {
    fontCharacter: "\\e98d",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_lolcode_dark-red": {
    fontCharacter: "\\1f63a",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_lookml_medium-purple": {
    fontCharacter: "\\e98e",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ls_dark-blue": {
    fontCharacter: "\\e914",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_lsl_dark-cyan": {
    fontCharacter: "\\e98b",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_lsl_medium-cyan": {
    fontCharacter: "\\e98b",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ls_medium-blue": {
    fontCharacter: "\\e914",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_ls_medium-green": {
    fontCharacter: "\\e914",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_lua_dark-blue": {
    fontCharacter: "\\e91b",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_lua_dark-green": {
    fontCharacter: "\\e91b",
    fontColor: "#66783e",
    fontId: "fi"
  },
  "_lua_dark-purple": {
    fontCharacter: "\\e91b",
    fontColor: "#825078",
    fontId: "fi"
  },
  "_lua_dark-red": {
    fontCharacter: "\\e91b",
    fontColor: "#be2f31",
    fontId: "fi"
  },
  "_lua_medium-blue": {
    fontCharacter: "\\e91b",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_lua_medium-green": {
    fontCharacter: "\\e91b",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_lua_medium-purple": {
    fontCharacter: "\\e91b",
    fontColor: "#aa759f",
    fontId: "fi"
  },
  "_lync_dark-blue": {
    fontCharacter: "\\ead9",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_macaulay2_dark-cyan": {
    fontCharacter: "\\2644",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "121%"
  },
  "_macaulay2_light-cyan": {
    fontCharacter: "\\2644",
    fontColor: "#a7d0c9",
    fontId: "fi",
    fontSize: "121%"
  },
  "_mail_medium-blue": {
    fontId: "octicons",
    fontCharacter: "\\f03b",
    fontSize: "114%",
    fontColor: "#6a9fb5"
  },
  "_mail_medium-red": {
    fontId: "octicons",
    fontCharacter: "\\f03b",
    fontSize: "114%",
    fontColor: "#ac4142"
  },
  "_mako_dark-blue": {
    fontCharacter: "\\e98f",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_manpage_dark-green": {
    fontCharacter: "\\e936",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_manpage_dark-maroon": {
    fontCharacter: "\\e936",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_mapbox_medium-cyan": {
    fontCharacter: "\\e941",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "93%"
  },
  "_markdownlint_dark-cyan": {
    fontCharacter: "\\f0c9",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "121%"
  },
  "_markdownlint_medium-red": {
    fontCharacter: "\\f0c9",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_markdown_medium-blue": {
    fontCharacter: "\\f0c9",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_markdown_medium-purple": {
    fontCharacter: "\\f0c9",
    fontColor: "#aa759f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_marko_medium-blue": {
    fontCharacter: "\\e920",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "129%"
  },
  "_marko_medium-maroon": {
    fontCharacter: "\\e920",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "129%"
  },
  "_materialize_light-red": {
    fontCharacter: "\\e6b6",
    fontColor: "#c97071",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_mathematica_dark-orange": {
    fontCharacter: "\\e990",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mathematica_dark-red": {
    fontCharacter: "\\e990",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mathematica_medium-maroon": {
    fontCharacter: "\\e990",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mathematica_medium-orange": {
    fontCharacter: "\\e990",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mathjax_dark-green": {
    fontCharacter: "\\ea06",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_matlab_dark-maroon": {
    fontCharacter: "\\e991",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_matlab_dark-purple": {
    fontCharacter: "\\e991",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_matlab_dark-red": {
    fontCharacter: "\\e991",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_matlab_medium-cyan": {
    fontCharacter: "\\e991",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_matlab_medium-maroon": {
    fontCharacter: "\\e991",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_matlab_medium-red": {
    fontCharacter: "\\e991",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_matlab_medium-yellow": {
    fontCharacter: "\\e991",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_max_dark-purple": {
    fontCharacter: "\\e993",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_max_medium-blue": {
    fontCharacter: "\\e993",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_max_medium-green": {
    fontCharacter: "\\e993",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_max_medium-purple": {
    fontCharacter: "\\e993",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_max_medium-red": {
    fontCharacter: "\\e993",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_maxscript_dark-blue": {
    fontCharacter: "\\e900",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_maxscript_dark-cyan": {
    fontCharacter: "\\e900",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_maxscript_dark-purple": {
    fontCharacter: "\\e900",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_maxscript_medium-cyan": {
    fontCharacter: "\\e900",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_maxscript_medium-red": {
    fontCharacter: "\\e900",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_maya_dark-blue": {
    fontCharacter: "\\e9f6",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_maya_dark-cyan": {
    fontCharacter: "\\e9f6",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_maya_dark-purple": {
    fontCharacter: "\\e9f6",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mdx_medium-orange": {
    fontCharacter: "\\eab7",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mediawiki_medium-orange": {
    fontCharacter: "\\e954",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mediawiki_medium-yellow": {
    fontCharacter: "\\e954",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mercury_medium-cyan": {
    fontCharacter: "\\e994",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mermaid_medium-blue": {
    fontCharacter: "\\eb84",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_meson_medium-green": {
    fontCharacter: "\\ea54",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_metal_dark-cyan": {
    fontCharacter: "M",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_metapost_dark-green": {
    fontCharacter: "\\1d5ac",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_metapost_dark-red": {
    fontCharacter: "\\1d5ac",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_meteor_dark-orange": {
    fontCharacter: "\\e6a5",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_minecraft_dark-green": {
    fontCharacter: "\\e9dc",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_minecraft_light-green": {
    fontCharacter: "\\e9dc",
    fontColor: "#b2c38b",
    fontId: "fi",
    fontSize: "107%"
  },
  "_minecraft_medium-blue": {
    fontCharacter: "\\e9dc",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_minecraft_medium-green": {
    fontCharacter: "\\e9dc",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_minizinc_dark-blue": {
    fontCharacter: "\\ea53",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_minizinc_medium-blue": {
    fontCharacter: "\\ea53",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_mint_medium-green": {
    fontCharacter: "\\1f33f",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mirah_light-blue": {
    fontCharacter: "\\e995",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "107%"
  },
  "_mirah_medium-blue": {
    fontCharacter: "\\e995",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_miranda_medium-red": {
    fontCharacter: "\\ea52",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mirc_medium-red": {
    fontCharacter: "\\eb3a",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mixin_medium-orange": {
    fontCharacter: "\\ebb9",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_mjml_medium-orange": {
    fontCharacter: "\\ea6f",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_mjml_medium-red": {
    fontCharacter: "\\ea6f",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_mobile_dark-blue": {
    fontCharacter: "\\f10b",
    fontColor: "#46788d",
    fontId: "fa",
    fontSize: "143%"
  },
  "_mobile_dark-red": {
    fontCharacter: "\\f10b",
    fontColor: "#be2f31",
    fontId: "fa",
    fontSize: "143%"
  },
  "_mocha_light-maroon": {
    fontCharacter: "\\26fe",
    fontColor: "#be7953",
    fontId: "fi",
    fontSize: "121%"
  },
  "_mocha_medium-maroon": {
    fontCharacter: "\\26fe",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_mocha_medium-red": {
    fontCharacter: "\\26fe",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_model_dark-blue": {
    fontCharacter: "\\e9e8",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_model_dark-cyan": {
    fontCharacter: "\\e9e8",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_model_dark-green": {
    fontCharacter: "\\e9e8",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_model_dark-orange": {
    fontCharacter: "\\e9e8",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_model_dark-red": {
    fontCharacter: "\\e9e8",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_modelica_dark-red": {
    fontCharacter: "\\eaff",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_modelica_medium-red": {
    fontCharacter: "\\eaff",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_model_medium-blue": {
    fontCharacter: "\\e9e8",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_model_medium-cyan": {
    fontCharacter: "\\e9e8",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_model_medium-green": {
    fontCharacter: "\\e9e8",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_model_medium-orange": {
    fontCharacter: "\\e9e8",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_model_medium-purple": {
    fontCharacter: "\\e9e8",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_model_medium-red": {
    fontCharacter: "\\e9e8",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_modernweb_medium-blue": {
    fontCharacter: "\\eb9f",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_modo_medium-cyan": {
    fontCharacter: "\\f01f",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_modula2_medium-blue": {
    fontCharacter: "\\e996",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_modula2_medium-green": {
    fontCharacter: "\\e996",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_modula3_dark-blue": {
    fontCharacter: "\\2778",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_modula3_dark-green": {
    fontCharacter: "\\2778",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_modula3_medium-blue": {
    fontCharacter: "\\2778",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_modula3_medium-green": {
    fontCharacter: "\\2778",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_modula3_medium-red": {
    fontCharacter: "\\2778",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_moho_medium-blue": {
    fontCharacter: "\\eaee",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_moho_medium-maroon": {
    fontCharacter: "\\eaee",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_moho_medium-orange": {
    fontCharacter: "\\eaee",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_moho_medium-purple": {
    fontCharacter: "\\eaee",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_moho_medium-yellow": {
    fontCharacter: "\\eaee",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_moleculer_medium-blue": {
    fontCharacter: "\\eb0e",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_moment_medium-cyan": {
    fontCharacter: "\\1f558",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_monkey_medium-maroon": {
    fontCharacter: "\\e997",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "129%"
  },
  "_monotone_dark-purple": {
    fontCharacter: "\\1f400",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "129%"
  },
  "_moon_medium-yellow": {
    fontCharacter: "\\f186",
    fontColor: "#f4bf75",
    fontId: "fa",
    fontSize: "114%"
  },
  "_mruby_medium-red": {
    fontCharacter: "\\ea18",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_msproject_dark-green": {
    fontCharacter: "\\eae8",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_msproject_medium-green": {
    fontCharacter: "\\eae8",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_msql_medium-purple": {
    fontCharacter: "\\f136",
    fontColor: "#aa759f",
    fontId: "mf",
    fontSize: "107%"
  },
  "_mupad_medium-red": {
    fontCharacter: "\\e9ca",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_music_dark-blue": {
    fontCharacter: "\\f001",
    fontColor: "#46788d",
    fontId: "fa",
    fontSize: "107%"
  },
  "_music_dark-red": {
    fontCharacter: "\\f001",
    fontColor: "#be2f31",
    fontId: "fa",
    fontSize: "107%"
  },
  "_music_medium-orange": {
    fontCharacter: "\\f001",
    fontColor: "#d28445",
    fontId: "fa",
    fontSize: "107%"
  },
  "_mustache_medium-blue": {
    fontCharacter: "\\e60f",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_mustache_medium-orange": {
    fontCharacter: "\\e60f",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_n64_dark-cyan": {
    fontCharacter: "n",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_n64_dark-green": {
    fontCharacter: "n",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nailpolish_dark-blue": {
    fontCharacter: "\\1f485",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nailpolish_dark-green": {
    fontCharacter: "\\1f485",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nailpolish_light-blue": {
    fontCharacter: "\\1f485",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nailpolish_medium-blue": {
    fontCharacter: "\\1f485",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nailpolish_medium-green": {
    fontCharacter: "\\1f485",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nailpolish_medium-yellow": {
    fontCharacter: "\\1f485",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nanoc_medium-red": {
    fontCharacter: "\\ea51",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nano_medium-blue": {
    fontCharacter: "\\ea76",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nant_medium-orange": {
    fontCharacter: "\\e9e1",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nasm_dark-blue": {
    fontCharacter: "\\ea72",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ndepend_medium-blue": {
    fontCharacter: "\\eab4",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_neko_dark-orange": {
    fontCharacter: "\\ea05",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_neko_medium-orange": {
    fontCharacter: "\\ea05",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_neo4j_dark-blue": {
    fontCharacter: "\\eab3",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_neo4j_medium-blue": {
    fontCharacter: "\\eab3",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_neon_medium-grey": {
    fontCharacter: "\\eb8e",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nessus_dark-cyan": {
    fontCharacter: "\\23e3",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nessus_medium-cyan": {
    fontCharacter: "\\23e3",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nestjs_medium-red": {
    fontCharacter: "\\eac9",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_netlify_dark-blue": {
    fontCharacter: "\\eabf",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_netlogo_medium-red": {
    fontCharacter: "\\e99c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nextflow_dark-green": {
    fontCharacter: "\\eaa5",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nextflow_medium-green": {
    fontCharacter: "\\eaa5",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nextjs_dark-grey": {
    fontCharacter: "\\24c3",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nginx_dark-green": {
    fontCharacter: "\\f146b",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nginx_medium-green": {
    fontCharacter: "\\f146b",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nib_dark-orange": {
    fontCharacter: "\\2712",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nickle_dark-grey": {
    fontCharacter: "\\a2",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nickle_medium-grey": {
    fontCharacter: "\\a2",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nightwatch_dark-maroon": {
    fontCharacter: "\\eb08",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nimble_medium-grey": {
    fontCharacter: "\\eb85",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nimrod_medium-green": {
    fontCharacter: "\\e998",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nit_dark-green": {
    fontCharacter: "\\e999",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nix_medium-cyan": {
    fontCharacter: "\\e99a",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nmap_dark-blue": {
    fontCharacter: "\\e94d",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_node_dark-green": {
    fontCharacter: "\\e618",
    fontColor: "#66783e",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_node_medium-green": {
    fontCharacter: "\\e618",
    fontColor: "#90a959",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_nodemon_medium-green": {
    fontCharacter: "\\ea26",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nokogiri_medium-red": {
    fontCharacter: "\\92f8",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nomad_medium-green": {
    fontCharacter: "\\ea96",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_noon_dark-grey": {
    fontCharacter: "\\eb33",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_normalize_medium-red": {
    fontCharacter: "\\ea04",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_npm_medium-red": {
    fontCharacter: "\\e91c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_nsis_dark-cyan": {
    fontCharacter: "\\ea1e",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nsis_medium-purple": {
    fontCharacter: "\\ea1e",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nsri-alt_medium-green": {
    fontCharacter: "\\eb2b",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nsri_dark-green": {
    fontCharacter: "\\eb2f",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nsri_medium-green": {
    fontCharacter: "\\eb2f",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nuget_dark-green": {
    fontCharacter: "\\e9d9",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nuget_dark-purple": {
    fontCharacter: "\\e9d9",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nuget_medium-blue": {
    fontCharacter: "\\e9d9",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nuget_medium-green": {
    fontCharacter: "\\e9d9",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nuget_medium-purple": {
    fontCharacter: "\\e9d9",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_numpy_dark-blue": {
    fontCharacter: "\\eba8",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_numpy_dark-cyan": {
    fontCharacter: "\\eba8",
    fontColor: "#4d9085",
    fontId: "fi"
  },
  "_numpy_medium-blue": {
    fontCharacter: "\\eba8",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_numpy_medium-cyan": {
    fontCharacter: "\\eba8",
    fontColor: "#75b5aa",
    fontId: "fi"
  },
  "_numpy_medium-orange": {
    fontCharacter: "\\eba8",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_nunjucks_dark-green": {
    fontCharacter: "\\e953",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nuxt_medium-cyan": {
    fontCharacter: "\\eaca",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nvidia_dark-green": {
    fontCharacter: "\\e95d",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nvidia_medium-green": {
    fontCharacter: "\\e95d",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_nwscript_dark-blue": {
    fontCharacter: "\\23ff",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_nwscript_dark-red": {
    fontCharacter: "\\23ff",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_nwscript_medium-maroon": {
    fontCharacter: "\\23ff",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_nxc_medium-orange": {
    fontCharacter: "\\ea6b",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_nx_dark-blue": {
    fontCharacter: "\\eb9c",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_oberon_medium-purple": {
    fontCharacter: "\\eb3f",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_objc_dark-blue": {
    fontCharacter: "\\f13e",
    fontColor: "#46788d",
    fontId: "mf",
    fontSize: "114%"
  },
  "_objc_dark-green": {
    fontCharacter: "\\f13e",
    fontColor: "#66783e",
    fontId: "mf",
    fontSize: "114%"
  },
  "_objc_dark-red": {
    fontCharacter: "\\f13e",
    fontColor: "#be2f31",
    fontId: "mf",
    fontSize: "114%"
  },
  "_objc_medium-blue": {
    fontCharacter: "\\f13e",
    fontColor: "#6a9fb5",
    fontId: "mf",
    fontSize: "114%"
  },
  "_objj_dark-orange": {
    fontCharacter: "\\e99e",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_objj_dark-red": {
    fontCharacter: "\\e99e",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ocaml_dark-green": {
    fontCharacter: "\\e91a",
    fontColor: "#66783e",
    fontId: "fi"
  },
  "_ocaml_dark-orange": {
    fontCharacter: "\\e91a",
    fontColor: "#a35f27",
    fontId: "fi"
  },
  "_ocaml_dark-red": {
    fontCharacter: "\\e91a",
    fontColor: "#be2f31",
    fontId: "fi"
  },
  "_ocaml_dark-yellow": {
    fontCharacter: "\\e91a",
    fontColor: "#ee9e2e",
    fontId: "fi"
  },
  "_ocaml_medium-green": {
    fontCharacter: "\\e91a",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_ocaml_medium-orange": {
    fontCharacter: "\\e91a",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_ocaml_medium-red": {
    fontCharacter: "\\e91a",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_octave_dark-orange": {
    fontCharacter: "\\ea33",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_octave_medium-orange": {
    fontCharacter: "\\ea33",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_odin_medium-blue": {
    fontCharacter: "\\eb36",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ogone_dark-grey": {
    fontCharacter: "\\ebaa",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ogone_medium-grey": {
    fontCharacter: "\\ebaa",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_omnigraffle_dark-green": {
    fontCharacter: "\\ebaf",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_omnigraffle_medium-cyan": {
    fontCharacter: "\\ebaf",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_omnigraffle_medium-green": {
    fontCharacter: "\\ebaf",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_omnigraffle_medium-red": {
    fontCharacter: "\\ebaf",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_onenote_dark-purple": {
    fontCharacter: "\\e9eb",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ooc_medium-green": {
    fontCharacter: "\\e9cb",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_opa_medium-blue": {
    fontCharacter: "\\2601",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openbsd_dark-orange": {
    fontCharacter: "\\1f421",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "121%"
  },
  "_openbsd_medium-orange": {
    fontCharacter: "\\1f421",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_opencl_medium-red": {
    fontCharacter: "\\e99f",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_openexr_dark-pink": {
    fontCharacter: "\\1f127",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "114%"
  },
  "_openexr_medium-pink": {
    fontCharacter: "\\1f127",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "114%"
  },
  "_opengl_dark-cyan": {
    fontCharacter: "\\ea7a",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "129%"
  },
  "_openoffice_dark-blue": {
    fontCharacter: "\\e9e4",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_dark-cyan": {
    fontCharacter: "\\e9e4",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_dark-green": {
    fontCharacter: "\\e9e4",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_dark-orange": {
    fontCharacter: "\\e9e4",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_dark-pink": {
    fontCharacter: "\\e9e4",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_dark-purple": {
    fontCharacter: "\\e9e4",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_dark-red": {
    fontCharacter: "\\e9e4",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_light-pink": {
    fontCharacter: "\\e9e4",
    fontColor: "#ff4ddb",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_medium-blue": {
    fontCharacter: "\\e9e4",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_medium-green": {
    fontCharacter: "\\e9e4",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_medium-maroon": {
    fontCharacter: "\\e9e4",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_medium-pink": {
    fontCharacter: "\\e9e4",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_medium-purple": {
    fontCharacter: "\\e9e4",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openoffice_medium-red": {
    fontCharacter: "\\e9e4",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openpolicy_medium-cyan": {
    fontCharacter: "\\eb39",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_openvms_medium-blue": {
    fontCharacter: "\\eac6",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_openvms_medium-orange": {
    fontCharacter: "\\eac6",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_openvpn_medium-orange": {
    fontCharacter: "\\eaf3",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_openzfs_dark-blue": {
    fontCharacter: "\\1d419",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_org_dark-green": {
    fontCharacter: "\\e917",
    fontColor: "#66783e",
    fontId: "fi"
  },
  "_osx_medium-red": {
    fontCharacter: "\\f141",
    fontColor: "#ac4142",
    fontId: "mf"
  },
  "_outlook_dark-blue": {
    fontCharacter: "\\eada",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_outlook_dark-cyan": {
    fontCharacter: "\\eada",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_outlook_dark-red": {
    fontCharacter: "\\eada",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_outlook_medium-blue": {
    fontCharacter: "\\eada",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_outlook_medium-maroon": {
    fontCharacter: "\\eada",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_outlook_medium-red": {
    fontCharacter: "\\eada",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_owl_dark-blue": {
    fontCharacter: "\\e957",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ox_dark-blue": {
    fontCharacter: "\\e9a1",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ox_dark-cyan": {
    fontCharacter: "\\e9a1",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ox_dark-green": {
    fontCharacter: "\\e9a1",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ox_medium-blue": {
    fontCharacter: "\\e9a1",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ox_medium-cyan": {
    fontCharacter: "\\e9a1",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ox_medium-green": {
    fontCharacter: "\\e9a1",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_oxygene_dark-cyan": {
    fontCharacter: "\\e9bf",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_oxygene_medium-cyan": {
    fontCharacter: "\\e9bf",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_oz_medium-yellow": {
    fontCharacter: "\\e9be",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_p4_dark-purple": {
    fontCharacter: "\\ea50",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  _package: {
    fontCharacter: "\\f0c4",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_package_dark-orange": {
    fontCharacter: "\\f0c4",
    fontColor: "#a35f27",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_package_light-orange": {
    fontCharacter: "\\f0c4",
    fontColor: "#e1ad83",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_package_medium-blue": {
    fontCharacter: "\\f0c4",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_package_medium-green": {
    fontCharacter: "\\f0c4",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_package_medium-yellow": {
    fontCharacter: "\\f0c4",
    fontColor: "#f4bf75",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_paintcan_medium-purple": {
    fontId: "octicons",
    fontCharacter: "\\f0d1",
    fontSize: "114%",
    fontColor: "#aa759f"
  },
  "_pan_medium-red": {
    fontCharacter: "\\e9bd",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_papyrus_medium-green": {
    fontCharacter: "\\e9bc",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_parrot_dark-blue": {
    fontCharacter: "\\e9bb",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_parrot_dark-green": {
    fontCharacter: "\\e9bb",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_parrot_medium-green": {
    fontCharacter: "\\e9bb",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pascal_dark-blue": {
    fontCharacter: "\\e92a",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pascal_dark-cyan": {
    fontCharacter: "\\e92a",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pascal_dark-purple": {
    fontCharacter: "\\e92a",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pascal_dark-red": {
    fontCharacter: "\\e92a",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pascal_medium-blue": {
    fontCharacter: "\\e92a",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pascal_medium-cyan": {
    fontCharacter: "\\e92a",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pascal_medium-maroon": {
    fontCharacter: "\\e92a",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pascal_medium-purple": {
    fontCharacter: "\\e92a",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pascal_medium-red": {
    fontCharacter: "\\e92a",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_patch_medium-green": {
    fontCharacter: "\\e961",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_patreon_medium-orange": {
    fontCharacter: "\\eb42",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pawn_medium-orange": {
    fontCharacter: "\\265f",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_pcd_medium-green": {
    fontCharacter: "\\26c5",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pdf_medium-red": {
    fontId: "octicons",
    fontCharacter: "\\f014",
    fontSize: "114%",
    fontColor: "#ac4142"
  },
  "_peg_medium-maroon": {
    fontCharacter: "\\ea74",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_peg_medium-red": {
    fontCharacter: "\\ea74",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_perl6_dark-blue": {
    fontCharacter: "\\e96c",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_perl6_dark-cyan": {
    fontCharacter: "\\e96c",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_perl6_dark-green": {
    fontCharacter: "\\e96c",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_perl6_dark-pink": {
    fontCharacter: "\\e96c",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "107%"
  },
  "_perl6_dark-purple": {
    fontCharacter: "\\e96c",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_perl6_light-blue": {
    fontCharacter: "\\e96c",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "107%"
  },
  "_perl6_medium-blue": {
    fontCharacter: "\\e96c",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_perl6_medium-green": {
    fontCharacter: "\\e96c",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_perl6_medium-purple": {
    fontCharacter: "\\e96c",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_perl_dark-blue": {
    fontCharacter: "\\e669",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_perl_dark-purple": {
    fontCharacter: "\\e669",
    fontColor: "#825078",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_perl_medium-blue": {
    fontCharacter: "\\e669",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_perl_medium-purple": {
    fontCharacter: "\\e669",
    fontColor: "#aa759f",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_perl_medium-red": {
    fontCharacter: "\\e669",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_pgsql_dark-blue": {
    fontCharacter: "\\f14a",
    fontColor: "#46788d",
    fontId: "mf",
    fontSize: "114%"
  },
  "_phalcon_medium-cyan": {
    fontCharacter: "\\e94a",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_phoenix_medium-orange": {
    fontCharacter: "\\ea5f",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_phoenix_medium-red": {
    fontCharacter: "\\ea5f",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_photorec_dark-green": {
    fontCharacter: "\\ebc0",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_photorec_medium-green": {
    fontCharacter: "\\ebc0",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_php_dark-blue": {
    fontCharacter: "\\f147",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_php_medium-blue": {
    fontCharacter: "\\f147",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_php_medium-red": {
    fontCharacter: "\\f147",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_phpunit_medium-purple": {
    fontCharacter: "\\ea32",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_phraseapp_medium-blue": {
    fontCharacter: "\\eadb",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pickle_dark-cyan": {
    fontCharacter: "\\e9c4",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pico8_medium-red": {
    fontCharacter: "\\eabc",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_picolisp_medium-purple": {
    fontCharacter: "\\eb25",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_pike_dark-cyan": {
    fontCharacter: "\\e9b9",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pike_medium-blue": {
    fontCharacter: "\\e9b9",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pinescript_medium-green": {
    fontCharacter: "\\eb30",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pipenv_dark-blue": {
    fontCharacter: "\\1f381",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_platformio_medium-orange": {
    fontCharacter: "\\ea2c",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pnpm_dark-yellow": {
    fontCharacter: "\\eb86",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pnpm_medium-orange": {
    fontCharacter: "\\eb86",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pnpm_medium-yellow": {
    fontCharacter: "\\eb86",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pod_dark-blue": {
    fontCharacter: "\\ea84",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pogo_dark-orange": {
    fontCharacter: "\\e9b8",
    fontColor: "#a35f27",
    fontId: "fi"
  },
  "_pogo_medium-orange": {
    fontCharacter: "\\e9b8",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_pointwise_medium-blue": {
    fontCharacter: "\\e977",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_polymer_medium-purple": {
    fontCharacter: "\\ea2b",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pony_light-maroon": {
    fontCharacter: "\\e9b7",
    fontColor: "#be7953",
    fontId: "fi",
    fontSize: "114%"
  },
  "_postcss_dark-orange": {
    fontCharacter: "\\e910",
    fontColor: "#a35f27",
    fontId: "fi"
  },
  "_postcss_dark-pink": {
    fontCharacter: "\\e910",
    fontColor: "#cc00a3",
    fontId: "fi"
  },
  "_postcss_dark-red": {
    fontCharacter: "\\e910",
    fontColor: "#be2f31",
    fontId: "fi"
  },
  "_postcss_dark-yellow": {
    fontCharacter: "\\e910",
    fontColor: "#ee9e2e",
    fontId: "fi"
  },
  "_postcss_medium-orange": {
    fontCharacter: "\\e910",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_postcss_medium-yellow": {
    fontCharacter: "\\e910",
    fontColor: "#f4bf75",
    fontId: "fi"
  },
  "_postscript_dark-blue": {
    fontCharacter: "\\e955",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_postscript_dark-orange": {
    fontCharacter: "\\e955",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_postscript_dark-red": {
    fontCharacter: "\\e955",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_postscript_medium-blue": {
    fontCharacter: "\\e955",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_postscript_medium-green": {
    fontCharacter: "\\e955",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_postscript_medium-orange": {
    fontCharacter: "\\e955",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_postscript_medium-red": {
    fontCharacter: "\\e955",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_povray_dark-blue": {
    fontCharacter: "P",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerbuilder_dark-blue": {
    fontCharacter: "\\ea14",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerbuilder_medium-blue": {
    fontCharacter: "\\ea14",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerbuilder_medium-maroon": {
    fontCharacter: "\\ea14",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerbuilder_medium-orange": {
    fontCharacter: "\\ea14",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerbuilder_medium-purple": {
    fontCharacter: "\\ea14",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerbuilder_medium-red": {
    fontCharacter: "\\ea14",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerpoint_dark-orange": {
    fontCharacter: "\\e9ec",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerpoint_dark-red": {
    fontCharacter: "\\e9ec",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerpoint_medium-maroon": {
    fontCharacter: "\\e9ec",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerpoint_medium-orange": {
    fontCharacter: "\\e9ec",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powerpoint_medium-red": {
    fontCharacter: "\\e9ec",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_powershell_dark-blue": {
    fontCharacter: "\\e9da",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_powershell_dark-purple": {
    fontCharacter: "\\e9da",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_powershell_medium-blue": {
    fontCharacter: "\\e9da",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_powershell_medium-purple": {
    fontCharacter: "\\e9da",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_precommit_dark-yellow": {
    fontCharacter: "\\eac1",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_precommit_medium-yellow": {
    fontCharacter: "\\eac1",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_premiere_dark-purple": {
    fontCharacter: "\\e9f5",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_premiere_medium-maroon": {
    fontCharacter: "\\e9f5",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_premiere_medium-purple": {
    fontCharacter: "\\e9f5",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_prettier_dark-cyan": {
    fontCharacter: "\\eaa1",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_prettier_dark-yellow": {
    fontCharacter: "\\eaa1",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_prettier_medium-cyan": {
    fontCharacter: "\\eaa1",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_print_dark-cyan": {
    fontCharacter: "\\f02f",
    fontColor: "#4d9085",
    fontId: "fa",
    fontSize: "107%"
  },
  "_print_dark-red": {
    fontCharacter: "\\f02f",
    fontColor: "#be2f31",
    fontId: "fa",
    fontSize: "107%"
  },
  "_print_medium-orange": {
    fontCharacter: "\\f02f",
    fontColor: "#d28445",
    fontId: "fa",
    fontSize: "107%"
  },
  "_prisma_dark-blue": {
    fontCharacter: "\\eac5",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_processing_dark-blue": {
    fontCharacter: "\\e9a0",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_progress_medium-green": {
    fontCharacter: "\\eadc",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_prolog_medium-blue": {
    fontCharacter: "\\e6a1",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_prolog_medium-cyan": {
    fontCharacter: "\\e6a1",
    fontColor: "#75b5aa",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_prolog_medium-purple": {
    fontCharacter: "\\e6a1",
    fontColor: "#aa759f",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_propeller_medium-orange": {
    fontCharacter: "\\e9b5",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_proselint_dark-cyan": {
    fontCharacter: "\\ea6d",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pros_medium-orange": {
    fontCharacter: "\\eaad",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_psd_dark-blue": {
    fontCharacter: "\\e6b8",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_psd_dark-purple": {
    fontCharacter: "\\e6b8",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_psd_medium-blue": {
    fontCharacter: "\\e6b8",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_publisher_dark-cyan": {
    fontCharacter: "\\eadd",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pug_medium-red": {
    fontCharacter: "\\ea13",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pullapprove_dark-blue": {
    fontCharacter: "\\293e",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_puppet_dark-blue": {
    fontCharacter: "\\f0c3",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_puppet_medium-orange": {
    fontCharacter: "\\f0c3",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_puppet_medium-purple": {
    fontCharacter: "\\f0c3",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_purebasic_dark-orange": {
    fontCharacter: "\\01b5",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_purebasic_medium-red": {
    fontCharacter: "\\01b5",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pure_medium-grey": {
    fontCharacter: "\\1f4a7",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_purescript_dark-purple": {
    fontCharacter: "\\e9b2",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pypi_dark-blue": {
    fontCharacter: "\\ea94",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_pyret_dark-red": {
    fontCharacter: "\\2620",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_pytest_medium-blue": {
    fontCharacter: "\\eba6",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_python_dark-blue": {
    fontCharacter: "\\f14c",
    fontColor: "#46788d",
    fontId: "mf"
  },
  "_python_dark-green": {
    fontCharacter: "\\f14c",
    fontColor: "#66783e",
    fontId: "mf"
  },
  "_python_dark-maroon": {
    fontCharacter: "\\f14c",
    fontColor: "#7c4426",
    fontId: "mf"
  },
  "_python_dark-pink": {
    fontCharacter: "\\f14c",
    fontColor: "#cc00a3",
    fontId: "mf"
  },
  "_python_dark-purple": {
    fontCharacter: "\\f14c",
    fontColor: "#825078",
    fontId: "mf"
  },
  "_python_dark-red": {
    fontCharacter: "\\f14c",
    fontColor: "#be2f31",
    fontId: "mf"
  },
  "_python_dark-yellow": {
    fontCharacter: "\\f14c",
    fontColor: "#ee9e2e",
    fontId: "mf"
  },
  "_python_medium-blue": {
    fontCharacter: "\\f14c",
    fontColor: "#6a9fb5",
    fontId: "mf"
  },
  "_python_medium-green": {
    fontCharacter: "\\f14c",
    fontColor: "#90a959",
    fontId: "mf"
  },
  "_python_medium-grey": {
    fontCharacter: "\\f14c",
    fontColor: "#7f7f7f",
    fontId: "mf"
  },
  "_python_medium-maroon": {
    fontCharacter: "\\f14c",
    fontColor: "#8f5536",
    fontId: "mf"
  },
  "_python_medium-orange": {
    fontCharacter: "\\f14c",
    fontColor: "#d28445",
    fontId: "mf"
  },
  "_python_medium-pink": {
    fontCharacter: "\\f14c",
    fontColor: "#ff00cc",
    fontId: "mf"
  },
  "_python_medium-yellow": {
    fontCharacter: "\\f14c",
    fontColor: "#f4bf75",
    fontId: "mf"
  },
  "_pyup_dark-cyan": {
    fontCharacter: "\\eb26",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_qiskit_dark-blue": {
    fontCharacter: "\\eb81",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_qlik_dark-green": {
    fontCharacter: "\\1f50d",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_qlik_medium-green": {
    fontCharacter: "\\1f50d",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_qsharp_dark-purple": {
    fontCharacter: "\\eb91",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_qt_dark-green": {
    fontCharacter: "\\eb00",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_qt_dark-yellow": {
    fontCharacter: "\\eb00",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_qt_medium-cyan": {
    fontCharacter: "\\eb00",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_qt_medium-green": {
    fontCharacter: "\\eb00",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_qt_medium-yellow": {
    fontCharacter: "\\eb00",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_quasar_medium-blue": {
    fontCharacter: "\\eacc",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_question_dark-blue": {
    fontCharacter: "\\f059",
    fontColor: "#46788d",
    fontId: "fa",
    fontSize: "114%"
  },
  "_question_medium-blue": {
    fontCharacter: "\\f059",
    fontColor: "#6a9fb5",
    fontId: "fa",
    fontSize: "114%"
  },
  "_racket_dark-blue": {
    fontCharacter: "\\e9b1",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_racket_light-red": {
    fontCharacter: "\\e9b1",
    fontColor: "#c97071",
    fontId: "fi",
    fontSize: "107%"
  },
  "_racket_medium-blue": {
    fontCharacter: "\\e9b1",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_racket_medium-red": {
    fontCharacter: "\\e9b1",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_raml_medium-cyan": {
    fontCharacter: "\\e913",
    fontColor: "#75b5aa",
    fontId: "fi"
  },
  "_raphael_medium-orange": {
    fontCharacter: "\\e65f",
    fontColor: "#d28445",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_rascal_medium-yellow": {
    fontCharacter: "\\ea24",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_rdata_medium-maroon": {
    fontCharacter: "\\eb49",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_rdata_medium-orange": {
    fontCharacter: "\\eb49",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_rdata_medium-red": {
    fontCharacter: "\\eb49",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_rdata_medium-yellow": {
    fontCharacter: "\\eb49",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_rdoc_medium-red": {
    fontCharacter: "\\e9b0",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_react_dark-blue": {
    fontCharacter: "\\f100",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_react_medium-blue": {
    fontCharacter: "\\f100",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_readthedocs_dark-grey": {
    fontCharacter: "\\2398",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_reason_medium-orange": {
    fontCharacter: "\\ea1d",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_reason_medium-red": {
    fontCharacter: "\\ea1d",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_reasonstudios_dark-orange": {
    fontCharacter: "\\eb44",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_reasonstudios_medium-orange": {
    fontCharacter: "\\eb44",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_reasonstudios_medium-red": {
    fontCharacter: "\\eb44",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_reasonstudios_medium-yellow": {
    fontCharacter: "\\eb44",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_rebol_dark-blue": {
    fontCharacter: "\\e9ae",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "93%"
  },
  "_rebol_dark-green": {
    fontCharacter: "\\e9ae",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "93%"
  },
  "_rebol_dark-red": {
    fontCharacter: "\\e9ae",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "93%"
  },
  "_recycle_dark-green": {
    fontCharacter: "\\f1b8",
    fontColor: "#66783e",
    fontId: "fa",
    fontSize: "107%"
  },
  "_recycle_light-green": {
    fontCharacter: "\\f1b8",
    fontColor: "#b2c38b",
    fontId: "fa",
    fontSize: "107%"
  },
  "_red-hat_dark-red": {
    fontCharacter: "\\f14e",
    fontColor: "#be2f31",
    fontId: "mf"
  },
  "_red-hat_medium-red": {
    fontCharacter: "\\f14e",
    fontColor: "#ac4142",
    fontId: "mf"
  },
  "_red_light-red": {
    fontCharacter: "\\eaec",
    fontColor: "#c97071",
    fontId: "fi",
    fontSize: "114%"
  },
  "_red_medium-red": {
    fontCharacter: "\\eaec",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_reek_medium-red": {
    fontCharacter: "\\eaa0",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_regex_medium-green": {
    fontCharacter: "*",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "86%"
  },
  "_remark_dark-green": {
    fontCharacter: "\\eb1d",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_remark_dark-red": {
    fontCharacter: "\\eb1d",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_remark_dark-yellow": {
    fontCharacter: "\\eb1d",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_remark_medium-green": {
    fontCharacter: "\\eb1d",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_remark_medium-red": {
    fontCharacter: "\\eb1d",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_remark_medium-yellow": {
    fontCharacter: "\\eb1d",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_renovate_medium-cyan": {
    fontCharacter: "\\eb2d",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "121%"
  },
  "_requirejs_medium-blue": {
    fontCharacter: "\\e670",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_rescript_medium-red": {
    fontCharacter: "\\eba7",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_restql_dark-blue": {
    fontCharacter: "\\ebb0",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_restql_medium-cyan": {
    fontCharacter: "\\ebb0",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_rexx_medium-blue": {
    fontCharacter: "\\ea16",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_rexx_medium-red": {
    fontCharacter: "\\ea16",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_rhino_medium-blue": {
    fontCharacter: "\\ea4a",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_rhino_medium-green": {
    fontCharacter: "\\ea4a",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_ring_medium-purple": {
    fontCharacter: "\\1f48d",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_riot_medium-red": {
    fontCharacter: "\\eb2e",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_rmarkdown_medium-red": {
    fontCharacter: "\\211b",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_r_medium-blue": {
    fontCharacter: "\\e905",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_robot_medium-cyan": {
    fontCharacter: "\\eb0d",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_robots_dark-cyan": {
    fontCharacter: "\\1f916",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_rspec_medium-red": {
    fontCharacter: "\\ea31",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_rss_medium-orange": {
    fontCharacter: "\\f143",
    fontColor: "#d28445",
    fontId: "fa",
    fontSize: "114%"
  },
  "_rst_dark-blue": {
    fontCharacter: "\\e9cc",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_rstudio_light-blue": {
    fontCharacter: "\\24c7",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "107%"
  },
  "_rsync_dark-purple": {
    fontCharacter: "\\eb9e",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "121%"
  },
  "_rubocop_dark-red": {
    fontCharacter: "\\eade",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ruby_dark-red": {
    fontCharacter: "\\f047",
    fontColor: "#be2f31",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_ruby_dark-yellow": {
    fontCharacter: "\\f047",
    fontColor: "#ee9e2e",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_rubygems_medium-red": {
    fontCharacter: "\\1f48e",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_ruby_medium-red": {
    fontCharacter: "\\f047",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_rust_light-maroon": {
    fontCharacter: "\\e6a8",
    fontColor: "#be7953",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_rust_medium-maroon": {
    fontCharacter: "\\e6a8",
    fontColor: "#8f5536",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_rust_medium-red": {
    fontCharacter: "\\e6a8",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_sac_medium-yellow": {
    fontCharacter: "\\203c",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_safari_dark-blue": {
    fontCharacter: "\\e648",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_safari_medium-blue": {
    fontCharacter: "\\e648",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_sage_dark-blue": {
    fontCharacter: "\\e9ab",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_sage_medium-blue": {
    fontCharacter: "\\e9ab",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_sails_medium-blue": {
    fontCharacter: "\\eb87",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_saltstack_dark-blue": {
    fontCharacter: "\\e915",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_saltstack_medium-blue": {
    fontCharacter: "\\e915",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_sandbox_dark-orange": {
    fontCharacter: "\\ebb1",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_san_medium-cyan": {
    fontCharacter: "\\eae6",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sas_medium-blue": {
    fontCharacter: "\\e95a",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sass_dark-pink": {
    fontCharacter: "\\e64b",
    fontColor: "#cc00a3",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_sass_dark-yellow": {
    fontCharacter: "\\e64b",
    fontColor: "#ee9e2e",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_sass_light-pink": {
    fontCharacter: "\\e64b",
    fontColor: "#ff4ddb",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_sass_medium-yellow": {
    fontCharacter: "\\e64b",
    fontColor: "#f4bf75",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_sbt_dark-purple": {
    fontCharacter: "\\e9d2",
    fontColor: "#825078",
    fontId: "fi"
  },
  "_scad_medium-orange": {
    fontCharacter: "\\e911",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_scad_medium-yellow": {
    fontCharacter: "\\e911",
    fontColor: "#f4bf75",
    fontId: "fi"
  },
  "_scala_medium-green": {
    fontCharacter: "\\f154",
    fontColor: "#90a959",
    fontId: "mf"
  },
  "_scala_medium-red": {
    fontCharacter: "\\f154",
    fontColor: "#ac4142",
    fontId: "mf"
  },
  "_scales_dark-green": {
    fontCharacter: "\\f24e",
    fontColor: "#66783e",
    fontId: "fa",
    fontSize: "107%"
  },
  "_scales_dark-red": {
    fontCharacter: "\\f24e",
    fontColor: "#be2f31",
    fontId: "fa",
    fontSize: "107%"
  },
  "_scales_medium-green": {
    fontCharacter: "\\f24e",
    fontColor: "#90a959",
    fontId: "fa",
    fontSize: "107%"
  },
  "_scales_medium-red": {
    fontCharacter: "\\f24e",
    fontColor: "#ac4142",
    fontId: "fa",
    fontSize: "107%"
  },
  "_scd_medium-red": {
    fontCharacter: "\\e9a2",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_scheme_medium-blue": {
    fontCharacter: "\\03bb",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_scheme_medium-purple": {
    fontCharacter: "\\03bb",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_scheme_medium-red": {
    fontCharacter: "\\03bb",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_scheme_medium-yellow": {
    fontCharacter: "\\03bb",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_scilab_dark-blue": {
    fontCharacter: "\\e9a9",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "129%"
  },
  "_scilab_dark-cyan": {
    fontCharacter: "\\e9a9",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "129%"
  },
  "_scilab_dark-purple": {
    fontCharacter: "\\e9a9",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "129%"
  },
  "_scilla_medium-orange": {
    fontCharacter: "\\eae2",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_scratch_dark-orange": {
    fontCharacter: "\\a7",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_scratch_medium-orange": {
    fontCharacter: "\\a7",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_scrutinizer_dark-blue": {
    fontCharacter: "\\e9d4",
    fontColor: "#46788d",
    fontId: "fi"
  },
  _secret: {
    fontCharacter: "\\f08c",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_self_dark-blue": {
    fontCharacter: "\\e9a8",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_semrelease_medium-grey": {
    fontCharacter: "\\1f7cd",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_sencha_light-green": {
    fontCharacter: "\\e68c",
    fontColor: "#b2c38b",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_sentry_light-red": {
    fontCharacter: "\\eb1c",
    fontColor: "#c97071",
    fontId: "fi",
    fontSize: "114%"
  },
  "_sentry_medium-red": {
    fontCharacter: "\\eb1c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_sequelize_dark-blue": {
    fontCharacter: "\\ea2f",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_sequelize_medium-blue": {
    fontCharacter: "\\ea2f",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_serverless_medium-red": {
    fontCharacter: "\\eab8",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sf_light-orange": {
    fontCharacter: "\\e9db",
    fontColor: "#e1ad83",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sgi_medium-orange": {
    fontCharacter: "\\2318",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_shadowcljs_dark-cyan": {
    fontCharacter: "\\eb88",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_shadowcljs_medium-cyan": {
    fontCharacter: "\\eb88",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_shellcheck_light-maroon": {
    fontCharacter: "\\1f41a",
    fontColor: "#be7953",
    fontId: "fi",
    fontSize: "121%"
  },
  "_shen_dark-cyan": {
    fontCharacter: "\\e9a7",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_shipit_medium-orange": {
    fontCharacter: "\\26f5",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_shippable_medium-cyan": {
    fontCharacter: "\\ea2d",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_shopify_medium-green": {
    fontCharacter: "\\e9cf",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_shuriken_dark-cyan": {
    fontCharacter: "\\272b",
    fontColor: "#4d9085",
    fontId: "fi"
  },
  "_shuriken_medium-blue": {
    fontCharacter: "\\272b",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_sigils_dark-red": {
    fontCharacter: "\\1f764",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_silverstripe_medium-blue": {
    fontCharacter: "\\e800",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sketch_medium-orange": {
    fontCharacter: "\\e927",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sketchup-lo_dark-red": {
    fontCharacter: "\\ea7c",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sketchup-lo_medium-red": {
    fontCharacter: "\\ea7c",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sketchup-mk_medium-red": {
    fontCharacter: "\\ea7e",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sketchup-sb_dark-red": {
    fontCharacter: "\\ea7d",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sketchup-sb_medium-red": {
    fontCharacter: "\\ea7d",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_slash_dark-blue": {
    fontCharacter: "\\e9a6",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_smarty_dark-yellow": {
    fontCharacter: "\\f0eb",
    fontColor: "#ee9e2e",
    fontId: "fa",
    fontSize: "107%"
  },
  "_smarty_medium-yellow": {
    fontCharacter: "\\f0eb",
    fontColor: "#f4bf75",
    fontId: "fa",
    fontSize: "107%"
  },
  "_snapcraft_dark-cyan": {
    fontCharacter: "\\eb09",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_snapsvg_medium-cyan": {
    fontCharacter: "\\e65e",
    fontColor: "#75b5aa",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_snort_light-red": {
    fontCharacter: "\\1f43d",
    fontColor: "#c97071",
    fontId: "fi",
    fontSize: "121%"
  },
  "_snowpack_dark-blue": {
    fontCharacter: "\\1f3d4",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_snyk_dark-purple": {
    fontCharacter: "\\ea1c",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_solidarity_dark-red": {
    fontCharacter: "\\1d5e6",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_solidity_dark-cyan": {
    fontCharacter: "\\ea86",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sophia_dark-pink": {
    fontCharacter: "\\eb72",
    fontColor: "#cc00a3",
    fontId: "fi",
    fontSize: "121%"
  },
  "_sorbet_dark-purple": {
    fontCharacter: "\\1f366",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_sorbet_medium-purple": {
    fontCharacter: "\\1f366",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_source_dark-blue": {
    fontCharacter: "\\eb82",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_source_dark-red": {
    fontCharacter: "\\eb82",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sourcemap_dark-blue": {
    fontCharacter: "\\f279",
    fontColor: "#46788d",
    fontId: "fa"
  },
  "_sourcemap_dark-green": {
    fontCharacter: "\\f279",
    fontColor: "#66783e",
    fontId: "fa"
  },
  "_sourcemap_dark-yellow": {
    fontCharacter: "\\f279",
    fontColor: "#ee9e2e",
    fontId: "fa"
  },
  "_sourcemap_light-cyan": {
    fontCharacter: "\\f279",
    fontColor: "#a7d0c9",
    fontId: "fa"
  },
  "_sourcemap_medium-blue": {
    fontCharacter: "\\f279",
    fontColor: "#6a9fb5",
    fontId: "fa"
  },
  "_sourcemap_medium-green": {
    fontCharacter: "\\f279",
    fontColor: "#90a959",
    fontId: "fa"
  },
  "_sourcemap_medium-maroon": {
    fontCharacter: "\\f279",
    fontColor: "#8f5536",
    fontId: "fa"
  },
  "_sourcemap_medium-orange": {
    fontCharacter: "\\f279",
    fontColor: "#d28445",
    fontId: "fa"
  },
  "_sourcemap_medium-purple": {
    fontCharacter: "\\f279",
    fontColor: "#aa759f",
    fontId: "fa"
  },
  "_sourcemap_medium-yellow": {
    fontCharacter: "\\f279",
    fontColor: "#f4bf75",
    fontId: "fa"
  },
  "_source_medium-blue": {
    fontCharacter: "\\eb82",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_source_medium-cyan": {
    fontCharacter: "\\eb82",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_source_medium-maroon": {
    fontCharacter: "\\eb82",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_source_medium-orange": {
    fontCharacter: "\\eb82",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_source_medium-red": {
    fontCharacter: "\\eb82",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_spacemacs_medium-purple": {
    fontCharacter: "\\eaa4",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_spacengine_medium-blue": {
    fontCharacter: "\\29cf",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sparql_dark-blue": {
    fontCharacter: "\\e959",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sparql_medium-blue": {
    fontCharacter: "\\e959",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sqf_dark-maroon": {
    fontCharacter: "\\e9a5",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sqf_dark-red": {
    fontCharacter: "\\e9a5",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sql_dark-blue": {
    fontCharacter: "\\f10e",
    fontColor: "#46788d",
    fontId: "mf"
  },
  "_sql_dark-cyan": {
    fontCharacter: "\\f10e",
    fontColor: "#4d9085",
    fontId: "mf"
  },
  "_sql_dark-red": {
    fontCharacter: "\\f10e",
    fontColor: "#be2f31",
    fontId: "mf"
  },
  "_sqlite_dark-blue": {
    fontCharacter: "\\e9dd",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sqlite_dark-purple": {
    fontCharacter: "\\e9dd",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sqlite_medium-blue": {
    fontCharacter: "\\e9dd",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sqlite_medium-purple": {
    fontCharacter: "\\e9dd",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sql_medium-blue": {
    fontCharacter: "\\f10e",
    fontColor: "#6a9fb5",
    fontId: "mf"
  },
  "_sql_medium-cyan": {
    fontCharacter: "\\f10e",
    fontColor: "#75b5aa",
    fontId: "mf"
  },
  "_sql_medium-green": {
    fontCharacter: "\\f10e",
    fontColor: "#90a959",
    fontId: "mf"
  },
  "_sql_medium-orange": {
    fontCharacter: "\\f10e",
    fontColor: "#d28445",
    fontId: "mf"
  },
  "_sql_medium-purple": {
    fontCharacter: "\\f10e",
    fontColor: "#aa759f",
    fontId: "mf"
  },
  "_sql_medium-red": {
    fontCharacter: "\\f10e",
    fontColor: "#ac4142",
    fontId: "mf"
  },
  "_squarespace_dark-purple": {
    fontCharacter: "\\ea5e",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_squirrel_medium-maroon": {
    fontCharacter: "\\f0b2",
    fontColor: "#8f5536",
    fontId: "octicons",
    fontSize: "107%"
  },
  "_squirrel_medium-red": {
    fontCharacter: "\\f0b2",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "107%"
  },
  "_stan_medium-red": {
    fontCharacter: "\\e9a4",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_star_dark-red": {
    fontId: "octicons",
    fontCharacter: "\\f02a",
    fontSize: "114%",
    fontColor: "#be2f31"
  },
  "_stata_dark-blue": {
    fontCharacter: "\\e9a3",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stata_dark-cyan": {
    fontCharacter: "\\e9a3",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stata_light-blue": {
    fontCharacter: "\\e9a3",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stata_light-cyan": {
    fontCharacter: "\\e9a3",
    fontColor: "#a7d0c9",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stata_medium-blue": {
    fontCharacter: "\\e9a3",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stata_medium-cyan": {
    fontCharacter: "\\e9a3",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stata_medium-purple": {
    fontCharacter: "\\e9a3",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stdlibjs_medium-blue": {
    fontCharacter: "\\eb70",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stdlibjs_medium-orange": {
    fontCharacter: "\\eb70",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stencil_medium-orange": {
    fontCharacter: "\\ea95",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stitches_medium-purple": {
    fontCharacter: "\\eba0",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_storybook_medium-blue": {
    fontCharacter: "\\eadf",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_storybook_medium-orange": {
    fontCharacter: "\\eadf",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_storyist_medium-blue": {
    fontCharacter: "\\e9ef",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_strings_medium-red": {
    fontCharacter: "\\e9e0",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stylable_medium-green": {
    fontCharacter: "\\eae0",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stylelint_dark-blue": {
    fontCharacter: "\\e93d",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stylelint_dark-yellow": {
    fontCharacter: "\\e93d",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stylelint_medium-purple": {
    fontCharacter: "\\e93d",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stylelint_medium-yellow": {
    fontCharacter: "\\e93d",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_stylishhaskell_medium-purple": {
    fontCharacter: "\\eb3d",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_stylus_medium-green": {
    fontCharacter: "s",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sublime_dark-orange": {
    fontCharacter: "\\e986",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sublime_medium-orange": {
    fontCharacter: "\\e986",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sun_dark-yellow": {
    fontCharacter: "\\f185",
    fontColor: "#ee9e2e",
    fontId: "fa"
  },
  "_sun_medium-yellow": {
    fontCharacter: "\\f185",
    fontColor: "#f4bf75",
    fontId: "fa"
  },
  "_svelte_medium-orange": {
    fontCharacter: "\\33dc",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_svg_dark-yellow": {
    fontCharacter: "\\f15c",
    fontColor: "#ee9e2e",
    fontId: "mf"
  },
  _svn: {
    fontCharacter: "\\ea17",
    fontId: "fi",
    fontSize: "107%"
  },
  "_swagger_dark-green": {
    fontCharacter: "\\ea29",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_swagger_medium-green": {
    fontCharacter: "\\ea29",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_swift_medium-orange": {
    fontCharacter: "\\e655",
    fontColor: "#d28445",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_sysverilog_dark-blue": {
    fontCharacter: "\\e9c3",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sysverilog_dark-cyan": {
    fontCharacter: "\\e9c3",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sysverilog_dark-green": {
    fontCharacter: "\\e9c3",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sysverilog_medium-blue": {
    fontCharacter: "\\e9c3",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sysverilog_medium-cyan": {
    fontCharacter: "\\e9c3",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_sysverilog_medium-green": {
    fontCharacter: "\\e9c3",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_tag_medium-blue": {
    fontCharacter: "\\f015",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_tag_medium-cyan": {
    fontCharacter: "\\f015",
    fontColor: "#75b5aa",
    fontId: "fi"
  },
  "_tag_medium-green": {
    fontCharacter: "\\f015",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_tag_medium-maroon": {
    fontCharacter: "\\f015",
    fontColor: "#8f5536",
    fontId: "fi"
  },
  "_tag_medium-orange": {
    fontCharacter: "\\f015",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_tag_medium-yellow": {
    fontCharacter: "\\f015",
    fontColor: "#f4bf75",
    fontId: "fi"
  },
  "_tailwind_medium-cyan": {
    fontCharacter: "\\301c",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "121%"
  },
  "_tcl_dark-blue": {
    fontCharacter: "\\e956",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tcl_dark-orange": {
    fontCharacter: "\\e956",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tcl_dark-red": {
    fontCharacter: "\\e956",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tcl_medium-orange": {
    fontCharacter: "\\e956",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tcl_medium-red": {
    fontCharacter: "\\e956",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_telegram_light-blue": {
    fontCharacter: "\\2708",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "107%"
  },
  "_telegram_medium-blue": {
    fontCharacter: "\\2708",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_templeos_medium-orange": {
    fontCharacter: "\\2696",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "129%"
  },
  "_templeos_medium-yellow": {
    fontCharacter: "\\2696",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "129%"
  },
  "_terminal_dark-blue": {
    fontCharacter: "\\f0c8",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_terminal_dark-purple": {
    fontCharacter: "\\f0c8",
    fontColor: "#825078",
    fontId: "fi"
  },
  "_terminal_dark-yellow": {
    fontCharacter: "\\f0c8",
    fontColor: "#ee9e2e",
    fontId: "fi"
  },
  "_terminal_medium-blue": {
    fontCharacter: "\\f0c8",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_terminal_medium-green": {
    fontCharacter: "\\f0c8",
    fontColor: "#90a959",
    fontId: "fi"
  },
  "_terminal_medium-orange": {
    fontCharacter: "\\f0c8",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_terminal_medium-purple": {
    fontCharacter: "\\f0c8",
    fontColor: "#aa759f",
    fontId: "fi"
  },
  "_terminal_medium-red": {
    fontCharacter: "\\f0c8",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_terminal_medium-yellow": {
    fontCharacter: "\\f0c8",
    fontColor: "#f4bf75",
    fontId: "fi"
  },
  "_tern_medium-blue": {
    fontCharacter: "\\1f54a",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tern_medium-purple": {
    fontCharacter: "\\1f54a",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_terraform_dark-purple": {
    fontCharacter: "\\e916",
    fontColor: "#825078",
    fontId: "fi"
  },
  "_terraform_medium-cyan": {
    fontCharacter: "\\e916",
    fontColor: "#75b5aa",
    fontId: "fi"
  },
  "_terraform_medium-yellow": {
    fontCharacter: "\\e916",
    fontColor: "#f4bf75",
    fontId: "fi"
  },
  "_terser_medium-orange": {
    fontCharacter: "\\272c",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_testcafe_medium-blue": {
    fontCharacter: "\\2714",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-coffee_dark-maroon": {
    fontCharacter: "\\ea62",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-coffee_medium-maroon": {
    fontCharacter: "\\ea62",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-generic_dark-green": {
    fontCharacter: "\\ea63",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-generic_dark-grey": {
    fontCharacter: "\\ea63",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-generic_medium-green": {
    fontCharacter: "\\ea63",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-generic_medium-grey": {
    fontCharacter: "\\ea63",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-go_dark-cyan": {
    fontCharacter: "\\eb0f",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-go_medium-cyan": {
    fontCharacter: "\\eb0f",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-hs_dark-purple": {
    fontCharacter: "\\eb10",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-hs_medium-purple": {
    fontCharacter: "\\eb10",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-js_dark-blue": {
    fontCharacter: "\\ea64",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-js_dark-green": {
    fontCharacter: "\\ea64",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-js_dark-yellow": {
    fontCharacter: "\\ea64",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-js_medium-blue": {
    fontCharacter: "\\ea64",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-js_medium-green": {
    fontCharacter: "\\ea64",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-js_medium-yellow": {
    fontCharacter: "\\ea64",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-perl_dark-blue": {
    fontCharacter: "\\ea65",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-perl_medium-blue": {
    fontCharacter: "\\ea65",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-react_dark-blue": {
    fontCharacter: "\\ea67",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-react_medium-blue": {
    fontCharacter: "\\ea67",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-ruby_dark-red": {
    fontCharacter: "\\ea68",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-ruby_medium-red": {
    fontCharacter: "\\ea68",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-rust_dark-maroon": {
    fontCharacter: "\\eb11",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-rust_medium-maroon": {
    fontCharacter: "\\eb11",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-ts_dark-blue": {
    fontCharacter: "\\ea69",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-ts_light-blue": {
    fontCharacter: "\\ea69",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "121%"
  },
  "_test-ts_medium-blue": {
    fontCharacter: "\\ea69",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "121%"
  },
  "_tex_dark-blue": {
    fontCharacter: "\\e600",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_dark-green": {
    fontCharacter: "\\e600",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_dark-maroon": {
    fontCharacter: "\\e600",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_dark-orange": {
    fontCharacter: "\\e600",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_dark-purple": {
    fontCharacter: "\\e600",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_dark-red": {
    fontCharacter: "\\e600",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_medium-blue": {
    fontCharacter: "\\e600",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_medium-green": {
    fontCharacter: "\\e600",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_medium-maroon": {
    fontCharacter: "\\e600",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_medium-orange": {
    fontCharacter: "\\e600",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_medium-purple": {
    fontCharacter: "\\e600",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tex_medium-red": {
    fontCharacter: "\\e600",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_text_dark-blue": {
    fontCharacter: "\\f011",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_dark-orange": {
    fontCharacter: "\\f011",
    fontColor: "#a35f27",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_dark-purple": {
    fontCharacter: "\\f011",
    fontColor: "#825078",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_dark-red": {
    fontCharacter: "\\f011",
    fontColor: "#be2f31",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_textile_medium-orange": {
    fontCharacter: "t",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_textmate_dark-blue": {
    fontCharacter: "\\2122",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_textmate_dark-orange": {
    fontCharacter: "\\2122",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_textmate_dark-purple": {
    fontCharacter: "\\2122",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_textmate_medium-blue": {
    fontCharacter: "\\2122",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_textmate_medium-green": {
    fontCharacter: "\\2122",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_textmate_medium-maroon": {
    fontCharacter: "\\2122",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_textmate_medium-orange": {
    fontCharacter: "\\2122",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_textmate_medium-pink": {
    fontCharacter: "\\2122",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "114%"
  },
  "_textmate_medium-purple": {
    fontCharacter: "\\2122",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_text_medium-blue": {
    fontCharacter: "\\f011",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_medium-cyan": {
    fontCharacter: "\\f011",
    fontColor: "#75b5aa",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_medium-green": {
    fontCharacter: "\\f011",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_medium-maroon": {
    fontCharacter: "\\f011",
    fontColor: "#8f5536",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_medium-orange": {
    fontCharacter: "\\f011",
    fontColor: "#d28445",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_medium-purple": {
    fontCharacter: "\\f011",
    fontColor: "#aa759f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_medium-red": {
    fontCharacter: "\\f011",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_text_medium-yellow": {
    fontCharacter: "\\f011",
    fontColor: "#f4bf75",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_tfs_dark-purple": {
    fontCharacter: "\\eae1",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_thor_dark-orange": {
    fontCharacter: "\\e9d8",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_thor_medium-orange": {
    fontCharacter: "\\e9d8",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_tilt_medium-green": {
    fontCharacter: "\\eb8a",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_tipe_medium-cyan": {
    fontCharacter: "\\eaa9",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "114%"
  },
  "_tla_medium-maroon": {
    fontCharacter: "\\eab2",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_tmux_medium-green": {
    fontCharacter: "\\ea8c",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_toc_dark-cyan": {
    fontCharacter: "\\f03a",
    fontColor: "#4d9085",
    fontId: "fa",
    fontSize: "107%"
  },
  "_toc_medium-cyan": {
    fontCharacter: "\\f03a",
    fontColor: "#75b5aa",
    fontId: "fa",
    fontSize: "107%"
  },
  "_toc_medium-maroon": {
    fontCharacter: "\\f03a",
    fontColor: "#8f5536",
    fontId: "fa",
    fontSize: "107%"
  },
  "_toml_medium-green": {
    fontCharacter: "\\1f143",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_tortoise_medium-red": {
    fontCharacter: "\\ea93",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_totvs_dark-blue": {
    fontCharacter: "\\eb34",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_totvs_dark-green": {
    fontCharacter: "\\eb34",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_totvs_medium-green": {
    fontCharacter: "\\eb34",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_totvs_medium-maroon": {
    fontCharacter: "\\eb34",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_truffle_dark-maroon": {
    fontCharacter: "\\eb3b",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_truffle_medium-maroon": {
    fontCharacter: "\\eb3b",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_ts_medium-blue": {
    fontCharacter: "\\2a6",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_tsx_light-blue": {
    fontCharacter: "\\e9e7",
    fontColor: "#9dc0ce",
    fontId: "fi"
  },
  "_ttcn3_medium-blue": {
    fontCharacter: "\\2476",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_tt_medium-blue": {
    fontCharacter: "T",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_tt_medium-purple": {
    fontCharacter: "T",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_turing_medium-red": {
    fontCharacter: "\\e9b6",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_twig_medium-green": {
    fontCharacter: "\\2e19",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_twine_medium-blue": {
    fontCharacter: "\\ea5d",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_txl_medium-orange": {
    fontCharacter: "\\e9c1",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_typedoc_dark-purple": {
    fontCharacter: "\\e9fe",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_typings_medium-maroon": {
    fontCharacter: "\\e9df",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_typo3_medium-orange": {
    fontCharacter: "\\e672",
    fontColor: "#d28445",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_uikit_medium-blue": {
    fontCharacter: "\\e673",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "107%"
  },
  "_unibeautify_dark-cyan": {
    fontCharacter: "\\eac4",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "114%"
  },
  "_unibeautify_dark-orange": {
    fontCharacter: "\\eac4",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_unibeautify_dark-yellow": {
    fontCharacter: "\\eac4",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_unibeautify_medium-orange": {
    fontCharacter: "\\eac4",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_unibeautify_medium-yellow": {
    fontCharacter: "\\eac4",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_unicode_medium-red": {
    fontCharacter: "\\eb6e",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_unity3d_dark-blue": {
    fontCharacter: "\\e621",
    fontColor: "#46788d",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_unity3d_dark-cyan": {
    fontCharacter: "\\e621",
    fontColor: "#4d9085",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_unity3d_dark-green": {
    fontCharacter: "\\e621",
    fontColor: "#66783e",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_unity3d_dark-red": {
    fontCharacter: "\\e621",
    fontColor: "#be2f31",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_unity3d_medium-blue": {
    fontCharacter: "\\e621",
    fontColor: "#6a9fb5",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_unity3d_medium-cyan": {
    fontCharacter: "\\e621",
    fontColor: "#75b5aa",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_unity3d_medium-maroon": {
    fontCharacter: "\\e621",
    fontColor: "#8f5536",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_unity3d_medium-red": {
    fontCharacter: "\\e621",
    fontColor: "#ac4142",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_uno_dark-blue": {
    fontCharacter: "\\e9b3",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_unreal_dark-blue": {
    fontCharacter: "u",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_unreal_medium-grey": {
    fontCharacter: "u",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_urweb_dark-blue": {
    fontCharacter: "\\e9ba",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "129%"
  },
  "_urweb_medium-maroon": {
    fontCharacter: "\\e9ba",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "129%"
  },
  "_v8_dark-blue": {
    fontCharacter: "\\ea1f",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_v8_medium-blue": {
    fontCharacter: "\\ea1f",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vagrant_medium-cyan": {
    fontCharacter: "V",
    fontColor: "#75b5aa",
    fontId: "fi"
  },
  "_vala_dark-purple": {
    fontCharacter: "\\1d4b1",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vala_medium-purple": {
    fontCharacter: "\\1d4b1",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_varnish_dark-blue": {
    fontCharacter: "\\e9b4",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_velocity_dark-blue": {
    fontCharacter: "\\2b94",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "121%"
  },
  "_verilog_dark-green": {
    fontCharacter: "\\e949",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_verilog_medium-red": {
    fontCharacter: "\\e949",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vertex_medium-blue": {
    fontCharacter: "\\ea79",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vertex_medium-red": {
    fontCharacter: "\\ea79",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vhdl_dark-blue": {
    fontCharacter: "\\e9aa",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vhdl_dark-green": {
    fontCharacter: "\\e9aa",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vhdl_dark-orange": {
    fontCharacter: "\\e9aa",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vhdl_dark-purple": {
    fontCharacter: "\\e9aa",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vhdl_dark-red": {
    fontCharacter: "\\e9aa",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vhdl_medium-blue": {
    fontCharacter: "\\e9aa",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vhdl_medium-purple": {
    fontCharacter: "\\e9aa",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_video_dark-blue": {
    fontCharacter: "\\f057",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_video_dark-purple": {
    fontCharacter: "\\f057",
    fontColor: "#825078",
    fontId: "fi"
  },
  "_video_medium-blue": {
    fontCharacter: "\\f057",
    fontColor: "#6a9fb5",
    fontId: "fi"
  },
  "_video_medium-cyan": {
    fontCharacter: "\\f057",
    fontColor: "#75b5aa",
    fontId: "fi"
  },
  "_video_medium-maroon": {
    fontCharacter: "\\f057",
    fontColor: "#8f5536",
    fontId: "fi"
  },
  "_video_medium-orange": {
    fontCharacter: "\\f057",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_video_medium-purple": {
    fontCharacter: "\\f057",
    fontColor: "#aa759f",
    fontId: "fi"
  },
  "_video_medium-red": {
    fontCharacter: "\\f057",
    fontColor: "#ac4142",
    fontId: "fi"
  },
  "_vim_dark-green": {
    fontCharacter: "\\e6c5",
    fontColor: "#66783e",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_vim_medium-green": {
    fontCharacter: "\\e6c5",
    fontColor: "#90a959",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_virtualbox_dark-blue": {
    fontCharacter: "\\ea3e",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_virtualbox_dark-green": {
    fontCharacter: "\\ea3e",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_virtualbox_medium-blue": {
    fontCharacter: "\\ea3e",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_virtualbox_medium-green": {
    fontCharacter: "\\ea3e",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_virtualbox_medium-purple": {
    fontCharacter: "\\ea3e",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_visio_dark-blue": {
    fontCharacter: "\\ea83",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_visio_dark-maroon": {
    fontCharacter: "\\ea83",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_visio_dark-purple": {
    fontCharacter: "\\ea83",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_visio_dark-red": {
    fontCharacter: "\\ea83",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "107%"
  },
  "_visio_medium-blue": {
    fontCharacter: "\\ea83",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_visio_medium-cyan": {
    fontCharacter: "\\ea83",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_visio_medium-green": {
    fontCharacter: "\\ea83",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_visio_medium-orange": {
    fontCharacter: "\\ea83",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_visio_medium-red": {
    fontCharacter: "\\ea83",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vite_dark-yellow": {
    fontCharacter: "\\2607",
    fontColor: "#ee9e2e",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vite_medium-yellow": {
    fontCharacter: "\\2607",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "114%"
  },
  "_v_medium-blue": {
    fontCharacter: "v",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vmware_dark-blue": {
    fontCharacter: "\\ea49",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vmware_dark-orange": {
    fontCharacter: "\\ea49",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vmware_dark-red": {
    fontCharacter: "\\ea49",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vmware_medium-blue": {
    fontCharacter: "\\ea49",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vmware_medium-green": {
    fontCharacter: "\\ea49",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vmware_medium-orange": {
    fontCharacter: "\\ea49",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vmware_medium-red": {
    fontCharacter: "\\ea49",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vray_dark-grey": {
    fontCharacter: "\\24cb",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vray_medium-grey": {
    fontCharacter: "\\24cb",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  _vs: {
    fontCharacter: "\\e60c",
    fontId: "devicons"
  },
  "_vs_dark-blue": {
    fontCharacter: "\\e60c",
    fontColor: "#46788d",
    fontId: "devicons"
  },
  "_vs_dark-green": {
    fontCharacter: "\\e60c",
    fontColor: "#66783e",
    fontId: "devicons"
  },
  "_vs_dark-orange": {
    fontCharacter: "\\e60c",
    fontColor: "#a35f27",
    fontId: "devicons"
  },
  "_vs_dark-purple": {
    fontCharacter: "\\e60c",
    fontColor: "#825078",
    fontId: "devicons"
  },
  "_vs_dark-red": {
    fontCharacter: "\\e60c",
    fontColor: "#be2f31",
    fontId: "devicons"
  },
  "_vs_light-cyan": {
    fontCharacter: "\\e60c",
    fontColor: "#a7d0c9",
    fontId: "devicons"
  },
  "_vs_light-red": {
    fontCharacter: "\\e60c",
    fontColor: "#c97071",
    fontId: "devicons"
  },
  "_vs_medium-blue": {
    fontCharacter: "\\e60c",
    fontColor: "#6a9fb5",
    fontId: "devicons"
  },
  "_vs_medium-cyan": {
    fontCharacter: "\\e60c",
    fontColor: "#75b5aa",
    fontId: "devicons"
  },
  "_vs_medium-green": {
    fontCharacter: "\\e60c",
    fontColor: "#90a959",
    fontId: "devicons"
  },
  "_vs_medium-maroon": {
    fontCharacter: "\\e60c",
    fontColor: "#8f5536",
    fontId: "devicons"
  },
  "_vs_medium-orange": {
    fontCharacter: "\\e60c",
    fontColor: "#d28445",
    fontId: "devicons"
  },
  "_vs_medium-purple": {
    fontCharacter: "\\e60c",
    fontColor: "#aa759f",
    fontId: "devicons"
  },
  "_vs_medium-red": {
    fontCharacter: "\\e60c",
    fontColor: "#ac4142",
    fontId: "devicons"
  },
  "_vsts_medium-blue": {
    fontCharacter: "\\eac0",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_vue_light-green": {
    fontCharacter: "\\e906",
    fontColor: "#b2c38b",
    fontId: "fi",
    fontSize: "107%"
  },
  "_vyper_medium-grey": {
    fontCharacter: "\\eb31",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_w3c_dark-blue": {
    fontCharacter: "\\ebac",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "129%"
  },
  "_w3c_medium-blue": {
    fontCharacter: "\\ebac",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "129%"
  },
  "_wallaby_medium-green": {
    fontCharacter: "\\231f",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_walt_medium-purple": {
    fontCharacter: "\\eaba",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "114%"
  },
  "_warcraft3_dark-orange": {
    fontCharacter: "\\2162",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_warcraft3_medium-maroon": {
    fontCharacter: "\\2162",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_warcraft3_medium-red": {
    fontCharacter: "\\2162",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_wasm_medium-blue": {
    fontCharacter: "\\ea70",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_wasm_medium-red": {
    fontCharacter: "\\ea70",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_watchman_medium-blue": {
    fontCharacter: "\\ea4f",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_wdl_medium-blue": {
    fontCharacter: "\\eab1",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_webgl_dark-red": {
    fontCharacter: "\\ea7b",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "129%"
  },
  "_webhint_dark-purple": {
    fontCharacter: "\\eb35",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_webpack_medium-blue": {
    fontCharacter: "\\ea61",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_webvtt_dark-blue": {
    fontCharacter: "\\eb24",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_wechat_medium-blue": {
    fontCharacter: "\\f1d7",
    fontColor: "#6a9fb5",
    fontId: "fa",
    fontSize: "114%"
  },
  "_wechat_medium-green": {
    fontCharacter: "\\f1d7",
    fontColor: "#90a959",
    fontId: "fa",
    fontSize: "114%"
  },
  "_wenyan_light-orange": {
    fontCharacter: "\\8a00",
    fontColor: "#e1ad83",
    fontId: "fi",
    fontSize: "121%"
  },
  "_wercker_medium-purple": {
    fontCharacter: "\\ea19",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_wget_medium-maroon": {
    fontCharacter: "\\eb38",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_wget_medium-purple": {
    fontCharacter: "\\eb38",
    fontColor: "#aa759f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_windi_medium-blue": {
    fontCharacter: "\\1f4a8",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  _windows: {
    fontCharacter: "\\e60f",
    fontId: "devicons"
  },
  "_windows_medium-blue": {
    fontCharacter: "\\e60f",
    fontColor: "#6a9fb5",
    fontId: "devicons"
  },
  "_windows_medium-purple": {
    fontCharacter: "\\e60f",
    fontColor: "#aa759f",
    fontId: "devicons"
  },
  "_wine_dark-red": {
    fontCharacter: "\\1f377",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_winui_medium-blue": {
    fontCharacter: "\\ebb7",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_winui_medium-red": {
    fontCharacter: "\\ebb7",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_wix_dark-maroon": {
    fontCharacter: "\\eab0",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "114%"
  },
  "_wix_dark-orange": {
    fontCharacter: "\\eab0",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "114%"
  },
  "_wix_dark-purple": {
    fontCharacter: "\\eab0",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_wix_medium-maroon": {
    fontCharacter: "\\eab0",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_wix_medium-orange": {
    fontCharacter: "\\eab0",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_wix_medium-red": {
    fontCharacter: "\\eab0",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_wolfram_dark-orange": {
    fontCharacter: "\\1f43a",
    fontColor: "#a35f27",
    fontId: "fi",
    fontSize: "121%"
  },
  "_wolfram_dark-red": {
    fontCharacter: "\\1f43a",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "121%"
  },
  "_wolfram_medium-orange": {
    fontCharacter: "\\1f43a",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "121%"
  },
  "_wolfram_medium-red": {
    fontCharacter: "\\1f43a",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "121%"
  },
  "_word_dark-blue": {
    fontCharacter: "\\e9ed",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_word_dark-cyan": {
    fontCharacter: "\\e9ed",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_word_dark-maroon": {
    fontCharacter: "\\e9ed",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_word_medium-blue": {
    fontCharacter: "\\e9ed",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_word_medium-cyan": {
    fontCharacter: "\\e9ed",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_word_medium-maroon": {
    fontCharacter: "\\e9ed",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_word_medium-orange": {
    fontCharacter: "\\e9ed",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_workbox_medium-orange": {
    fontCharacter: "\\eaa8",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_wurst_medium-maroon": {
    fontCharacter: "\\1f32d",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "114%"
  },
  "_x10_light-maroon": {
    fontCharacter: "\\2169",
    fontColor: "#be7953",
    fontId: "fi",
    fontSize: "107%"
  },
  "_x11_medium-orange": {
    fontCharacter: "\\f16e",
    fontColor: "#d28445",
    fontId: "mf",
    fontSize: "93%"
  },
  "_xamarin_light-blue": {
    fontCharacter: "\\ea77",
    fontColor: "#9dc0ce",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xmake_medium-green": {
    fontCharacter: "\\eb94",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xmos_dark-blue": {
    fontCharacter: "X",
    fontColor: "#46788d",
    fontId: "fi"
  },
  "_xmos_medium-orange": {
    fontCharacter: "X",
    fontColor: "#d28445",
    fontId: "fi"
  },
  "_xmos_medium-purple": {
    fontCharacter: "X",
    fontColor: "#aa759f",
    fontId: "fi"
  },
  "_xojo_dark-blue": {
    fontCharacter: "\\e9af",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xojo_dark-cyan": {
    fontCharacter: "\\e9af",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xojo_dark-green": {
    fontCharacter: "\\e9af",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xojo_dark-purple": {
    fontCharacter: "\\e9af",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xojo_medium-blue": {
    fontCharacter: "\\e9af",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xojo_medium-cyan": {
    fontCharacter: "\\e9af",
    fontColor: "#75b5aa",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xojo_medium-green": {
    fontCharacter: "\\e9af",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xojo_medium-red": {
    fontCharacter: "\\e9af",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xpages_dark-blue": {
    fontCharacter: "\\e9c5",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xpages_medium-blue": {
    fontCharacter: "\\e9c5",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "107%"
  },
  "_xtend_dark-purple": {
    fontCharacter: "\\e9c6",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "107%"
  },
  "_yaml_dark-green": {
    fontCharacter: "y",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_yamllint_medium-green": {
    fontCharacter: "\\eb9d",
    fontColor: "#90a959",
    fontId: "fi",
    fontSize: "114%"
  },
  "_yaml_medium-orange": {
    fontCharacter: "y",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_yaml_medium-red": {
    fontCharacter: "y",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_yandex_medium-red": {
    fontCharacter: "\\42f",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_yang_medium-red": {
    fontCharacter: "\\262f",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_yang_medium-yellow": {
    fontCharacter: "\\262f",
    fontColor: "#f4bf75",
    fontId: "fi",
    fontSize: "107%"
  },
  "_yara_medium-red": {
    fontCharacter: "\\ea9f",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  },
  "_yarn_dark-blue": {
    fontCharacter: "\\ea1a",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "114%"
  },
  "_yarn_medium-blue": {
    fontCharacter: "\\ea1a",
    fontColor: "#6a9fb5",
    fontId: "fi",
    fontSize: "114%"
  },
  "_yeoman_medium-cyan": {
    fontCharacter: "\\e67a",
    fontColor: "#75b5aa",
    fontId: "devicons",
    fontSize: "114%"
  },
  "_yorick_medium-orange": {
    fontCharacter: "\\1f480",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "107%"
  },
  "_yui_dark-blue": {
    fontCharacter: "\\ea00",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zbrush_dark-purple": {
    fontCharacter: "\\e9f2",
    fontColor: "#825078",
    fontId: "fi",
    fontSize: "114%"
  },
  "_zbrush_dark-red": {
    fontCharacter: "\\e9f2",
    fontColor: "#be2f31",
    fontId: "fi",
    fontSize: "114%"
  },
  "_zbrush_medium-red": {
    fontCharacter: "\\e9f2",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "114%"
  },
  "_zeit_dark-grey": {
    fontCharacter: "\\25B2",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zeit_dark-maroon": {
    fontCharacter: "\\25B2",
    fontColor: "#7c4426",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zeit_medium-grey": {
    fontCharacter: "\\25B2",
    fontColor: "#7f7f7f",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zeit_medium-maroon": {
    fontCharacter: "\\25B2",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zephir_medium-pink": {
    fontCharacter: "\\e9c7",
    fontColor: "#ff00cc",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zig_medium-orange": {
    fontCharacter: "z",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  "_zimpl_medium-orange": {
    fontCharacter: "\\e9c8",
    fontColor: "#d28445",
    fontId: "fi",
    fontSize: "114%"
  },
  _zip: {
    fontCharacter: "\\f013",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_dark-blue": {
    fontCharacter: "\\f013",
    fontColor: "#46788d",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_dark-cyan": {
    fontCharacter: "\\f013",
    fontColor: "#4d9085",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_dark-orange": {
    fontCharacter: "\\f013",
    fontColor: "#a35f27",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_dark-pink": {
    fontCharacter: "\\f013",
    fontColor: "#cc00a3",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_light-orange": {
    fontCharacter: "\\f013",
    fontColor: "#e1ad83",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_medium-blue": {
    fontCharacter: "\\f013",
    fontColor: "#6a9fb5",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_medium-cyan": {
    fontCharacter: "\\f013",
    fontColor: "#75b5aa",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_medium-green": {
    fontCharacter: "\\f013",
    fontColor: "#90a959",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_medium-maroon": {
    fontCharacter: "\\f013",
    fontColor: "#8f5536",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_medium-orange": {
    fontCharacter: "\\f013",
    fontColor: "#d28445",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_medium-purple": {
    fontCharacter: "\\f013",
    fontColor: "#aa759f",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zip_medium-red": {
    fontCharacter: "\\f013",
    fontColor: "#ac4142",
    fontId: "octicons",
    fontSize: "114%"
  },
  "_zork_dark-blue": {
    fontCharacter: "\\1b6",
    fontColor: "#46788d",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zork_dark-cyan": {
    fontCharacter: "\\1b6",
    fontColor: "#4d9085",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zork_dark-green": {
    fontCharacter: "\\1b6",
    fontColor: "#66783e",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zork_medium-maroon": {
    fontCharacter: "\\1b6",
    fontColor: "#8f5536",
    fontId: "fi",
    fontSize: "107%"
  },
  "_zork_medium-red": {
    fontCharacter: "\\1b6",
    fontColor: "#ac4142",
    fontId: "fi",
    fontSize: "107%"
  }
}, gs = {
  1: "_manpage_dark-green",
  2: "_manpage_dark-green",
  3: "_manpage_dark-green",
  4: "_manpage_dark-green",
  5: "_manpage_dark-green",
  6: "_manpage_dark-green",
  7: "_manpage_dark-green",
  8: "_manpage_dark-green",
  9: "_manpage_dark-green",
  80386: "_asm-intel_dark-blue",
  "+": "_a-plus_medium-blue",
  "1b": "_manpage_dark-green",
  "1c": "_manpage_dark-green",
  "1has": "_manpage_dark-green",
  "1in": "_manpage_dark-green",
  "1m": "_manpage_dark-green",
  "1s": "_manpage_dark-green",
  "1st": "_book_medium-blue",
  "1t": "_manpage_dark-green",
  "1x": "_manpage_dark-green",
  "2da": "_database_medium-cyan",
  "3avl": "_manpage_dark-green",
  "3bsm": "_manpage_dark-green",
  "3c": "_manpage_dark-green",
  "3cfgadm": "_manpage_dark-green",
  "3dm": "_rhino_medium-blue",
  "3ds": "_maxscript_medium-cyan",
  "3gp": "_video_medium-blue",
  "3gpp": "_video_medium-blue",
  "3in": "_manpage_dark-green",
  "3m": "_manpage_dark-green",
  "3p": "_manpage_dark-green",
  "3perl": "_manpage_dark-green",
  "3pm": "_manpage_dark-green",
  "3qt": "_manpage_dark-green",
  "3x": "_manpage_dark-green",
  "4dm": "_4d_dark-blue",
  "4gl": "_sql_medium-blue",
  "4th": "_code_medium-blue",
  "5c": "_nickle_medium-grey",
  "6pl": "_perl6_light-blue",
  "6pm": "_perl6_dark-cyan",
  "7d": "_manpage_dark-green",
  "7fs": "_manpage_dark-green",
  "7i": "_manpage_dark-green",
  "7ipp": "_manpage_dark-green",
  "7m": "_manpage_dark-green",
  "7p": "_manpage_dark-green",
  "7z": "_zip_medium-maroon",
  "8xk": "_calc_medium-maroon",
  "8xk.txt": "_calc_medium-maroon",
  "8xp": "_calc_medium-maroon",
  "8xp.txt": "_calc_medium-maroon",
  "9e": "_manpage_dark-green",
  "9f": "_manpage_dark-green",
  "9p": "_manpage_dark-green",
  "9s": "_manpage_dark-green",
  "a+": "_a-plus_medium-blue",
  a: "_asm_medium-green",
  a51: "_asm_medium-orange",
  aac: "_audio_dark-cyan",
  ab1: "_abif_medium-green",
  abap: "_abap_medium-orange",
  "abbrev-defs": "_emacs_medium-purple",
  abbrev_defs: "_emacs_medium-purple",
  abc: "_clean_medium-blue",
  abif: "_abif_medium-blue",
  abl: "_progress_medium-green",
  abnf: "_bnf_medium-green",
  abt: "_text_dark-purple",
  ac3: "_audio_dark-cyan",
  accda: "_access_dark-maroon",
  accdb: "_access_medium-maroon",
  accde: "_access_medium-green",
  accdr: "_access_medium-red",
  accdt: "_access_dark-red",
  acs: "_angelscript_medium-blue",
  ad: "_asciidoctor_medium-blue",
  ada: "_ada_medium-blue",
  adb: "_ada_medium-blue",
  adml: "_code_dark-blue",
  admx: "_code_dark-blue",
  adn: "_access_light-maroon",
  ado: "_stata_dark-blue",
  adoc: "_asciidoctor_medium-blue",
  adp: "_tcl_medium-orange",
  ads: "_ada_medium-blue",
  aep: "_ae_dark-pink",
  aepx: "_code_medium-purple",
  aes: "_sophia_dark-pink",
  aet: "_ae_dark-purple",
  afdesign: "_affinity_medium-blue",
  aff: "_database_medium-red",
  affect: "_affectscript_medium-pink",
  afm: "_postscript_medium-green",
  afphoto: "_affinity_medium-pink",
  afpub: "_affinity_medium-red",
  agc: "_asm-agc_dark-blue",
  agda: "_agda_dark-cyan",
  ahk: "_ahk_dark-blue",
  ahkl: "_ahk_dark-purple",
  ahu: "_totvs_medium-green",
  ai: "_ai_medium-orange",
  aia: "_ai_medium-yellow",
  aif: "_audio_medium-purple",
  aifc: "_audio_medium-purple",
  aiff: "_audio_medium-purple",
  ait: "_ai_dark-orange",
  aj: "_eclipse_medium-maroon",
  al: "_perl_dark-blue",
  alexignore: "_alex_medium-red",
  alexrc: "_alex_medium-pink",
  alias: "_link_medium-blue",
  als: "_alloy_medium-red",
  am: "_checklist_medium-red",
  amm: "_postscript_medium-green",
  ampl: "_ampl_dark-maroon",
  ana: "_analytica_medium-orange",
  angelscript: "_angelscript_medium-blue",
  anim: "_unity3d_dark-blue",
  anime: "_animestudio_medium-orange",
  animeaction: "_animestudio_medium-blue",
  animebrush: "_animestudio_medium-maroon",
  animeexport: "_animestudio_medium-yellow",
  animeproj: "_animestudio_medium-orange",
  animestyle: "_animestudio_medium-purple",
  anme: "_animestudio_medium-maroon",
  ans: "_text_dark-orange",
  ansible: "_ansible_dark-cyan",
  "ansible.yaml": "_ansible_dark-cyan",
  "ansible.yml": "_ansible_dark-cyan",
  ansiweatherrc: "_sun_medium-yellow",
  ant: "_ant_dark-pink",
  any: "_anyscript_dark-red",
  apacheconf: "_apache_dark-red",
  aph: "_totvs_dark-green",
  apib: "_api_medium-blue",
  apk: "_zip_medium-red",
  apkbuild: "_alpine_dark-blue",
  apl: "_apl_dark-cyan",
  apla: "_apl_dark-cyan",
  aplc: "_apl_dark-cyan",
  aplf: "_apl_dark-cyan",
  "apl.history": "_apl_medium-maroon",
  apli: "_apl_dark-cyan",
  apln: "_apl_dark-cyan",
  aplo: "_apl_dark-cyan",
  apm: "_image_medium-red",
  apng: "_image_medium-orange",
  applescript: "_apple_medium-purple",
  "app.src": "_erlang_dark-maroon",
  appxmanifest: "_code_medium-orange",
  arc: "_arc_medium-blue",
  arcconfig: "_gear_dark-blue",
  arm: "_asm-arm_medium-blue",
  arpa: "_earth_medium-green",
  arr: "_pyret_dark-red",
  as: "_as_medium-red",
  asax: "_asp_medium-maroon",
  asc: "_asciidoctor_medium-blue",
  asciidoc: "_asciidoctor_medium-blue",
  ascx: "_asp_dark-green",
  asf: "_video_dark-purple",
  ash: "_code_medium-cyan",
  ashx: "_asp_medium-green",
  asl: "_code_medium-blue",
  asm: "_asm_medium-green",
  asmx: "_asp_dark-cyan",
  asn: "_code_medium-cyan",
  asn1: "_code_medium-cyan",
  asp: "_asp_dark-blue",
  aspx: "_asp_medium-purple",
  asset: "_unity3d_dark-green",
  asx: "_video_medium-maroon",
  asy: "_asymptote_medium-red",
  atn: "_psd_dark-blue",
  atomignore: "_atom_medium-green",
  "atomproject.cson": "_atom_dark-green",
  "atomproject.json": "_atom_dark-green",
  au: "_audio_medium-cyan",
  au3: "_autoit_medium-purple",
  aug: "_augeas_dark-orange",
  auk: "_awk_medium-cyan",
  aup: "_audacity_medium-yellow",
  autotest: "_config-ruby_medium-red",
  aux: "_tex_medium-green",
  avcs: "_avro_medium-blue",
  avdl: "_avro_medium-blue",
  avi: "_video_medium-blue",
  avif: "_image_medium-orange",
  avr: "_asm-avr_dark-purple",
  avsc: "_avro_medium-blue",
  awk: "_awk_medium-blue",
  axd: "_asp_medium-cyan",
  axf: "_binary_dark-blue",
  axi: "_amx_dark-blue",
  axml: "_code_dark-blue",
  axs: "_amx_medium-blue",
  b: "_brain_dark-pink",
  babel: "_babel_medium-yellow",
  babelignore: "_babel_dark-yellow",
  babelrc: "_babel_medium-yellow",
  "babelrc.cjs": "_babel_medium-yellow",
  "babelrc.js": "_babel_medium-yellow",
  "babelrc.mjs": "_babel_medium-yellow",
  bak: "_backup",
  bal: "_ballerina_medium-cyan",
  balx: "_ballerina_dark-green",
  baml: "_winui_medium-red",
  bas: "_vs_medium-blue",
  bash: "_terminal_medium-purple",
  bat: "_windows_medium-purple",
  bats: "_test-generic_medium-grey",
  bazel: "_bazel_dark-blue",
  bb: "_blitzbasic_medium-cyan",
  bbl: "_bibtex_medium-blue",
  bbx: "_bibtex_medium-orange",
  bc: "_code_dark-red",
  bcmx: "_outlook_dark-blue",
  bdf: "_font-bitmap_medium-red",
  beam: "_erlang_dark-red",
  befunge: "_code_medium-orange",
  bemjson: "_bem_medium-maroon",
  "bemjson.cjs": "_bem_medium-maroon",
  "bemjson.js": "_bem_medium-maroon",
  "bemjson.mjs": "_bem_medium-maroon",
  bez: "_postscript_medium-red",
  bf: "_brain_dark-pink",
  bib: "_bibtex_medium-yellow",
  bibtex: "_bibtex_medium-yellow",
  biml: "_biml_medium-red",
  bin: "_binary_dark-orange",
  binarycookies: "_safari_dark-blue",
  bison: "_bison_medium-red",
  bithoundrc: "_bithound_medium-red",
  blade: "_laravel_medium-orange",
  "blade.php": "_laravel_medium-orange",
  blend: "_blender_medium-orange",
  blend0: "_blender_dark-orange",
  blend1: "_blender_dark-orange",
  blend2: "_blender_dark-orange",
  blend3: "_blender_dark-orange",
  blend4: "_blender_dark-orange",
  blend5: "_blender_dark-orange",
  blend6: "_blender_dark-orange",
  blend7: "_blender_dark-orange",
  blend8: "_blender_dark-orange",
  blend9: "_blender_dark-orange",
  bmp: "_image_medium-red",
  bmx: "_code_dark-blue",
  bnf: "_bnf_medium-maroon",
  bolt: "_firebase-bolt_medium-yellow",
  boo: "_boo_medium-green",
  boot: "_boot",
  bootstraprc: "_bootstrap_medium-orange",
  bpg: "_image_medium-red",
  bphys: "_blender_dark-blue",
  br: "_brotli_medium-orange",
  "brakeman.yml": "_brakeman_medium-red",
  brd: "_circuit-board_dark-green",
  brf: "_text_medium-maroon",
  bro: "_bro_dark-cyan",
  brs: "_code_dark-blue",
  bs: "_bikeshed_medium-red",
  bsdiff: "_binary_dark-orange",
  bsl: "_1c_medium-red",
  bsp: "_source_medium-orange",
  bsq: "_bosque_medium-green",
  bst: "_bibtex_medium-green",
  bsv: "_bluespec_dark-blue",
  buckconfig: "_buck_medium-blue",
  build: "_nant_medium-orange",
  builder: "_ruby_dark-red",
  buildpacks: "_heroku_light-purple",
  builds: "_vs_medium-maroon",
  bundle: "_dylib_medium-cyan",
  bz2: "_zip_dark-cyan",
  bzl: "_bazel_dark-blue",
  bzrignore: "_bazaar_medium-yellow",
  c: "_c_medium-blue",
  "c++": "_cpp_medium-blue",
  c2hs: "_haskell_dark-purple",
  c4d: "_model_dark-blue",
  cabal: "_cabal_medium-cyan",
  caffe2model: "_caffe2_dark-blue",
  caffemodel: "_caffe_medium-maroon",
  cake: "_cake_medium-yellow",
  "calva-repl": "_calva_medium-maroon",
  capnp: "_code_dark-red",
  "cargo.lock": "_package_dark-orange",
  "cargo.toml": "_package_light-orange",
  cas: "_casc_medium-orange",
  casc: "_casc_medium-orange",
  cats: "_c_medium-purple",
  cbl: "_cobol_medium-blue",
  cbor: "_database_medium-cyan",
  cbx: "_bibtex_medium-red",
  cc: "_cpp_medium-blue",
  ccp: "_cobol_medium-blue",
  ccx: "_corel_medium-blue",
  ccxml: "_code_dark-blue",
  cd5: "_image_dark-green",
  cddl: "_bnf_medium-grey",
  cdf: "_cdf_medium-red",
  cdr: "_coreldraw_medium-green",
  cdrx: "_coreldraw_medium-green",
  cdt: "_coreldraw_medium-green",
  ceylon: "_ceylon_medium-orange",
  cf: "_bnf_dark-yellow",
  cfc: "_cf_light-cyan",
  cfg: "_config_medium-yellow",
  cfignore: "_cloudfoundry_medium-blue",
  cfl: "_cuneiform_dark-blue",
  cfm: "_cf_medium-cyan",
  cfml: "_cf_medium-cyan",
  cgi: "_code_medium-red",
  cginc: "_model_dark-cyan",
  cgm: "_image_medium-orange",
  cgt: "_bnf_medium-red",
  ch: "_code_medium-red",
  changes: "_book_medium-blue",
  checksum: "_tag_medium-green",
  checksums: "_tag_medium-green",
  chem: "_manpage_dark-green",
  chm: "_question_medium-blue",
  chord: "_music_medium-orange",
  chpl: "_chapel_medium-green",
  cidmap: "_sourcemap_medium-orange",
  cin: "_image_medium-orange",
  cir: "_circuit-board_dark-green",
  cirru: "_cirru_medium-pink",
  cjs: "_js_medium-green",
  "cjs.map": "_sourcemap_medium-green",
  "cjs.snap": "_jest_medium-green",
  cjsx: "_coffee_dark-maroon",
  ck: "_chuck_medium-green",
  cksum: "_tag_medium-green",
  cksums: "_tag_medium-green",
  ckt: "_circuit-board_dark-green",
  cl: "_cl_medium-orange",
  cl2: "_clojure_medium-purple",
  "clang-format": "_llvm_medium-yellow",
  "clang-tidy": "_llvm_medium-yellow",
  class: "_java_medium-maroon",
  classpath: "_eclipse_medium-red",
  cld: "_openvms_medium-orange",
  click: "_click_medium-yellow",
  clixml: "_code_dark-blue",
  clj: "_clojure_medium-blue",
  cljc: "_clojure_medium-green",
  cljs: "_cljs_medium-blue",
  cljscm: "_cljs_medium-blue",
  cljx: "_clojure_medium-red",
  cloc: "_dashboard_medium-blue",
  clp: "_clips_dark-green",
  cls: "_tex_medium-orange",
  clw: "_clarion_medium-orange",
  cmake: "_cmake_medium-green",
  cmd: "_windows_medium-purple",
  cmx: "_corel_medium-blue",
  cnc: "_binary_medium-orange",
  cnf: "_config_medium-yellow",
  cob: "_cobol_medium-blue",
  cobjdump: "_binary_dark-orange",
  "c-objdump": "_binary_dark-orange",
  "c++objdump": "_binary_dark-orange",
  "c++-objdump": "_binary_dark-orange",
  cobol: "_cobol_medium-blue",
  cocci: "_code_medium-blue",
  "codacy.yaml": "_codacy_dark-blue",
  "codacy.yml": "_codacy_dark-blue",
  "codeclimate.yml": "_cc_medium-green",
  codekit: "_codekit",
  "code-workspace": "_vs_dark-blue",
  codoopts: "_gear_medium-maroon",
  coffee: "_coffee_medium-maroon",
  "coffee.ecr": "_coffee_medium-cyan",
  "coffee.erb": "_coffee_medium-red",
  coffeelintignore: "_config-coffee_medium-red",
  "coffee.md": "_coffee_medium-blue",
  collada: "_khronos_medium-orange",
  com: "_openvms_medium-orange",
  command: "_terminal_medium-purple",
  comp: "_model_medium-purple",
  compilerc: "_electron_dark-blue",
  "compilerc.json": "_electron_dark-blue",
  conf: "_config_medium-yellow",
  config: "_code_medium-blue",
  conll: "_conll_medium-blue",
  conllu: "_conll_medium-orange",
  control: "_debian_dark-cyan",
  coq: "_coq_medium-maroon",
  "c+p": "_cpp_medium-blue",
  "cp+": "_cpp_medium-blue",
  cp: "_cp_medium-maroon",
  cpc: "_cpcdosc_medium-blue",
  "c+pobjdump": "_binary_dark-orange",
  "c+p-objdump": "_binary_dark-orange",
  "cp+objdump": "_binary_dark-orange",
  "cp+-objdump": "_binary_dark-orange",
  cpp: "_cpp_medium-blue",
  cppobjdump: "_binary_dark-orange",
  "cpp-objdump": "_binary_dark-orange",
  cproject: "_eclipse_dark-blue",
  cps: "_cp_dark-red",
  cpuprofile: "_dashboard_medium-green",
  cpx: "_cpp_medium-blue",
  cpxobjdump: "_binary_dark-orange",
  "cpx-objdump": "_binary_dark-orange",
  cpy: "_cobol_medium-blue",
  cql: "_sql_dark-blue",
  cr: "_crystal_medium-cyan",
  cr2: "_image_medium-orange",
  crc32sum: "_tag_medium-green",
  crc32sums: "_tag_medium-green",
  crcsum: "_tag_medium-green",
  crcsums: "_tag_medium-green",
  crdownload: "_download_dark-blue",
  crec: "_lync_dark-blue",
  creole: "_creole_medium-blue",
  cross_rubies: "_config-ruby_medium-red",
  crt: "_key_medium-blue",
  crx: "_chrome_medium-red",
  cs: "_csharp_medium-blue",
  cscfg: "_code_medium-red",
  csd: "_csound_dark-maroon",
  csh: "_terminal_medium-yellow",
  cshtml: "_html5_medium-red",
  csl: "_kusto_medium-blue",
  cson: "_database_medium-maroon",
  csproj: "_vs_dark-blue",
  css: "_css3_medium-blue",
  csslintrc: "_gear_medium-yellow",
  "css.map": "_sourcemap_medium-blue",
  cstr: "_manpage_dark-green",
  csv: "_graph_light-red",
  csx: "_csscript_dark-green",
  ct: "_code_dark-pink",
  ctags: "_tag_medium-blue",
  ctp: "_cakephp_medium-red",
  cts: "_ts_medium-blue",
  cu: "_nvidia_medium-green",
  cubemap: "_unity3d_medium-cyan",
  cuh: "_nvidia_dark-green",
  curlrc: "_curl_dark-blue",
  curry: "_curry_medium-red",
  cvsignore: "_cvs_medium-orange",
  cw: "_code_medium-red",
  cwl: "_cwl_dark-red",
  "c+x": "_cpp_medium-blue",
  "cx+": "_cpp_medium-blue",
  "c+xobjdump": "_binary_dark-orange",
  "c+x-objdump": "_binary_dark-orange",
  "cx+objdump": "_binary_dark-orange",
  "cx+-objdump": "_binary_dark-orange",
  cxp: "_cpp_medium-blue",
  cxpobjdump: "_binary_dark-orange",
  "cxp-objdump": "_binary_dark-orange",
  cxx: "_cpp_medium-blue",
  cxxobjdump: "_binary_dark-orange",
  "cxx-objdump": "_binary_dark-orange",
  cy: "_code_dark-green",
  cyp: "_neo4j_medium-blue",
  cypher: "_neo4j_medium-blue",
  d: "_dlang_medium-red",
  dae: "_khronos_medium-orange",
  dafny: "_dafny_medium-yellow",
  darcspatch: "_darcs_medium-green",
  dart: "_dart_medium-cyan",
  dat: "_binary_dark-orange",
  dats: "_ats_medium-red",
  db: "_sqlite_medium-purple",
  db2: "_sql_medium-purple",
  db3: "_sqlite_dark-purple",
  dbf: "_dbase_medium-red",
  dbi: "_database_medium-orange",
  dbk: "_docbook_medium-cyan",
  dbproj: "_vs_dark-purple",
  dc: "_calc_medium-blue",
  dcl: "_clean_medium-cyan",
  dcm: "_image_medium-pink",
  ddl: "_sql_medium-blue",
  dds: "_image_dark-green",
  deb: "_debian_medium-red",
  decls: "_blitzbasic_medium-green",
  def: "_modula2_medium-green",
  der: "_key_medium-purple",
  desktop: "_config_medium-yellow",
  dfm: "_delphi_medium-red",
  dfont: "_font_dark-cyan",
  dformat: "_manpage_dark-green",
  dfy: "_dafny_medium-yellow",
  dhall: "_dhall_dark-grey",
  di: "_dlang_medium-red",
  dia: "_dia_medium-cyan",
  dic: "_database_medium-green",
  dict: "_database_medium-green",
  dif: "_graph_medium-green",
  diff: "_diff_medium-orange",
  diffs: "_diff_medium-red",
  dig: "_digdag_medium-orange",
  dio: "_drawio_medium-orange",
  "dio.png": "_drawio_medium-orange",
  "dio.svg": "_drawio_medium-orange",
  directory: "_config_medium-yellow",
  dit: "_binary_dark-green",
  dita: "_code_medium-purple",
  ditamap: "_code_dark-purple",
  ditaval: "_code_medium-green",
  ditroff: "_binary_dark-green",
  djs: "_doge_medium-yellow",
  djv: "_image_medium-purple",
  djvu: "_image_medium-purple",
  dll: "_gears_dark-orange",
  dlm: "_idl_medium-blue",
  dm: "_byond_medium-blue",
  dmark: "_star_dark-red",
  dmg: "_osx_medium-red",
  dnc: "_binary_medium-orange",
  dnh: "_yang_medium-red",
  do: "_stata_medium-blue",
  "d-objdump": "_binary_dark-blue",
  doc: "_word_medium-blue",
  docbook: "_docbook_medium-cyan",
  dockerfile: "_docker_dark-blue",
  dockerignore: "_docker_dark-blue",
  "doclets.yaml": "_doclets_light-green",
  "doclets.yml": "_doclets_light-green",
  docm: "_word_medium-maroon",
  docx: "_word_dark-blue",
  docxml: "_word_dark-cyan",
  "docz.cjs": "_docz_medium-yellow",
  "docz.config.cjs": "_docz_medium-yellow",
  "docz.config.js": "_docz_medium-yellow",
  "docz.config.json": "_docz_medium-orange",
  "docz.config.mjs": "_docz_medium-yellow",
  "docz.js": "_docz_medium-yellow",
  "docz.json": "_docz_medium-orange",
  "docz.mjs": "_docz_medium-yellow",
  "doczrc.cjs": "_docz_medium-yellow",
  "doczrc.config.cjs": "_docz_medium-yellow",
  "doczrc.config.js": "_docz_medium-yellow",
  "doczrc.config.json": "_docz_medium-orange",
  "doczrc.config.mjs": "_docz_medium-yellow",
  "doczrc.js": "_docz_medium-yellow",
  "doczrc.json": "_docz_medium-orange",
  "doczrc.mjs": "_docz_medium-yellow",
  dof: "_delphi_medium-blue",
  doh: "_stata_light-blue",
  dot: "_dotjs_medium-blue",
  dotm: "_word_dark-maroon",
  dotsettings: "_code_dark-red",
  dotx: "_word_medium-cyan",
  dpatch: "_darcs_medium-green",
  dpr: "_delphi_medium-orange",
  dpx: "_image_dark-orange",
  drawio: "_drawio_medium-orange",
  "drawio.png": "_drawio_medium-orange",
  "drawio.svg": "_drawio_medium-orange",
  dri: "_text_medium-blue",
  drl: "_circuit-board_dark-blue",
  "drone.yaml": "_drone_medium-cyan",
  "drone.yml": "_drone_medium-cyan",
  druby: "_mirah_medium-blue",
  dsc: "_debian_dark-cyan",
  dsk: "_zip_medium-green",
  dsl: "_code_medium-blue",
  dsn: "_circuit-board_dark-cyan",
  dsp: "_faust_dark-orange",
  dsql: "_msql_medium-purple",
  ds_store: "_finder_dark-cyan",
  dtd: "_code_medium-cyan",
  dtml: "_html5_medium-blue",
  dts: "_devicetree_medium-purple",
  dtsi: "_devicetree_medium-orange",
  dtx: "_tex_medium-maroon",
  duby: "_mirah_medium-blue",
  dust: "_js_medium-maroon",
  dwg: "_model_dark-orange",
  dwl: "_dataweave_medium-blue",
  dxf: "_model_medium-orange",
  dyalog: "_dyalog_medium-orange",
  dyapp: "_dyalog_medium-red",
  dyl: "_code_medium-blue",
  dylan: "_code_medium-blue",
  dylib: "_dylib_medium-cyan",
  dzn: "_minizinc_dark-blue",
  e: "_eiffel_medium-cyan",
  "eam.fs": "_database_dark-purple",
  ear: "_zip_medium-purple",
  eb: "_easybuild_dark-blue",
  ebnf: "_bnf_medium-red",
  ebuild: "_gentoo_dark-cyan",
  ec: "_ec_dark-blue",
  ecl: "_eclipse-lang_medium-blue",
  eclass: "_gentoo_medium-blue",
  "ecl.txt": "_eclipse-lang_medium-blue",
  eclxml: "_code_dark-green",
  eco: "_docpad_medium-maroon",
  ecr: "_crystal_medium-cyan",
  ecrc: "_editorconfig_dark-blue",
  ecw: "_image_light-blue",
  ed: "_code_dark-maroon",
  edge: "_edge_dark-orange",
  editorconfig: "_editorconfig_medium-orange",
  edn: "_database_medium-purple",
  eex: "_elixir_medium-purple",
  egg: "_zip_light-orange",
  egt: "_bnf_medium-red",
  eh: "_ec_dark-purple",
  ejs: "_ejs_medium-green",
  ejson: "_database_dark-red",
  "ejs.t": "_hygen_medium-pink",
  el: "_emacs_medium-purple",
  elc: "_emacs_dark-purple",
  eld: "_emacs_dark-purple",
  elf: "_binary_medium-green",
  eliom: "_ocaml_medium-red",
  eliomi: "_ocaml_dark-red",
  elm: "_elm_medium-blue",
  em: "_mustache_medium-blue",
  emacs: "_emacs_medium-purple",
  _emacs: "_emacs_medium-purple",
  "emacs.desktop": "_emacs_medium-purple",
  emberscript: "_em_medium-red",
  emblem: "_mustache_medium-blue",
  emf: "_image_medium-red",
  eml: "_mail_medium-blue",
  "encodings.dir": "_database_medium-orange",
  enf: "_book_medium-blue",
  engine: "_php_medium-blue",
  enigma: "_sourcemap_medium-purple",
  enl: "_book_medium-blue",
  enlp: "_book_medium-blue",
  enlx: "_book_medium-blue",
  enq: "_book_medium-blue",
  ens: "_book_medium-blue",
  ensime: "_ensime_medium-red",
  entl: "_book_medium-blue",
  enw: "_book_medium-blue",
  enz: "_book_medium-blue",
  eot: "_font_light-green",
  epj: "_ecere_medium-blue",
  epp: "_puppet_medium-orange",
  eps: "_postscript_medium-orange",
  epsf: "_postscript_dark-orange",
  epsi: "_postscript_dark-orange",
  epub: "_zip_medium-green",
  eq: "_eq_medium-orange",
  eqn: "_manpage_dark-green",
  eqnrc: "_manpage_dark-green",
  "eqnrc-end": "_manpage_dark-green",
  erb: "_ruby_medium-red",
  erl: "_erlang_medium-red",
  err: "_text_medium-red",
  es: "_js_medium-yellow",
  es0: "_js_medium-yellow",
  es1: "_book_medium-blue",
  es2: "_js_medium-yellow",
  es3: "_js_medium-yellow",
  es4: "_js_medium-yellow",
  es5: "_js_medium-yellow",
  es6: "_js_medium-yellow",
  es7: "_js_medium-yellow",
  es8: "_js_medium-yellow",
  es9: "_js_medium-yellow",
  eskip: "_anchor_dark-blue",
  eslintcache: "_eslint_medium-purple",
  eslintignore: "_eslint_medium-purple",
  eslintrc: "_eslint_light-purple",
  etx: "_text_medium-yellow",
  eup: "_eagle_medium-red",
  ex: "_elixir_dark-purple",
  exe: "_windows",
  exp: "_tcl_dark-blue",
  exr: "_openexr_medium-pink",
  exrc: "_vim_medium-green",
  exs: "_elixir_medium-purple",
  f: "_fortran_medium-maroon",
  f03: "_fortran_medium-red",
  f08: "_fortran_medium-blue",
  f4a: "_audio_medium-red",
  f4b: "_audio_medium-red",
  f77: "_fortran_medium-maroon",
  f90: "_fortran_medium-green",
  f95: "_fortran_dark-pink",
  fa: "_dna_medium-purple",
  faa: "_dna_medium-orange",
  fab: "_circuit-board_dark-red",
  factor: "_factor_medium-orange",
  "factor-boot-rc": "_factor_medium-red",
  "factor-rc": "_factor_dark-orange",
  fal: "_falcon_medium-red",
  falcon: "_falcon_medium-red",
  fan: "_fantom_medium-blue",
  fancypack: "_fancy_medium-blue",
  faq: "_book_medium-blue",
  fas: "_dna_medium-purple",
  fasta: "_dna_medium-purple",
  fastq: "_dna_medium-green",
  faunarc: "_fauna_dark-blue",
  fbx: "_fbx_medium-maroon",
  fcgi: "_code_medium-blue",
  fdepl: "_franca_medium-maroon",
  fdl: "_franca_medium-orange",
  fdx: "_finaldraft_medium-green",
  fea: "_database_light-blue",
  feature: "_cucumber_medium-green",
  ff: "_ff_medium-orange",
  ffn: "_dna_medium-red",
  fidl: "_code_medium-pink",
  fig: "_image_dark-orange",
  figma: "_figma_medium-red",
  filters: "_code_medium-pink",
  firebaserc: "_firebase_medium-orange",
  fish: "_terminal_medium-green",
  fit: "_image_medium-cyan",
  fits: "_image_medium-cyan",
  fla: "_animate_dark-orange",
  flac: "_audio_dark-red",
  flake8: "_config-python_dark-blue",
  flc: "_config_medium-green",
  flex: "_lex_dark-red",
  flf: "_font-bitmap_medium-red",
  flif: "_image_dark-red",
  flooignore: "_floobits_medium-red",
  flow: "_flow_medium-orange",
  flowconfig: "_flow_medium-orange",
  "flutter-plugins": "_flutter_light-blue",
  flux: "_flux_dark-blue",
  flv: "_video_medium-red",
  fna: "_dna_medium-pink",
  fnc: "_model_dark-blue",
  fnt: "_font-bitmap_medium-blue",
  fo: "_code_medium-red",
  fodg: "_openoffice_dark-orange",
  fodp: "_openoffice_medium-pink",
  fods: "_openoffice_dark-cyan",
  fodt: "_openoffice_dark-purple",
  fon: "_font-bitmap_dark-red",
  "fonts.alias": "_database_medium-red",
  "fonts.dir": "_database_medium-red",
  "fonts.scale": "_database_medium-red",
  for: "_fortran_dark-cyan",
  "forge.config.js": "_electron_dark-cyan",
  forth: "_code_medium-blue",
  fossaignore: "_fossa_dark-blue",
  "fossa.yaml": "_fossa_medium-blue",
  "fossa.yml": "_fossa_medium-blue",
  fossil: "_fossil_medium-cyan",
  fountain: "_fountain_medium-blue",
  fp: "_vertex_medium-red",
  fpp: "_fortran_dark-yellow",
  fq: "_dna_medium-green",
  fql: "_fauna_dark-blue",
  fr: "_frege_dark-red",
  frag: "_vertex_medium-red",
  frg: "_vertex_medium-red",
  frm: "_vs_medium-blue",
  frn: "_dna_medium-blue",
  frt: "_code_dark-purple",
  frx: "_vs_medium-blue",
  fs: "_fsharp_medium-blue",
  fsa: "_dna_medium-purple",
  fsh: "_vertex_medium-red",
  fshader: "_vertex_medium-red",
  fsi: "_fsharp_medium-blue",
  fsproj: "_code_dark-red",
  fsx: "_fsharp_medium-blue",
  fth: "_code_dark-blue",
  fthtml: "_fthtml_medium-orange",
  ftl: "_freemarker_medium-blue",
  fts: "_image_medium-cyan",
  fun: "_code_medium-orange",
  fut: "_futhark_dark-maroon",
  fx: "_flux_medium-blue",
  fxh: "_model_dark-cyan",
  fxl: "_fexl_medium-cyan",
  fxml: "_code_medium-maroon",
  fy: "_fancy_dark-blue",
  g: "_antlr_medium-red",
  g0: "_circuit-board_dark-blue",
  g1: "_circuit-board_dark-blue",
  g2: "_circuit-board_dark-blue",
  g3: "_circuit-board_dark-blue",
  g4: "_circuit-board_dark-blue",
  g5: "_circuit-board_dark-blue",
  g6: "_circuit-board_dark-blue",
  g7: "_circuit-board_dark-blue",
  g8: "_circuit-board_dark-blue",
  g9: "_circuit-board_dark-blue",
  gap: "_gap_medium-yellow",
  gawk: "_awk_medium-red",
  gbl: "_circuit-board_medium-cyan",
  gbo: "_circuit-board_dark-blue",
  gbp: "_circuit-board_dark-red",
  gbr: "_circuit-board_medium-red",
  gbs: "_circuit-board_medium-orange",
  gc: "_binary_medium-orange",
  gco: "_binary_medium-orange",
  gcode: "_binary_medium-orange",
  gcx: "_grapher_medium-green",
  gd: "_godot_medium-blue",
  gdb: "_gdb_medium-green",
  gdbinit: "_gdb_medium-cyan",
  gdiagramstyle: "_omnigraffle_medium-cyan",
  gdshader: "_godot_dark-cyan",
  gem: "_zip_medium-red",
  gemfile: "_bundler_medium-cyan",
  gemspec: "_rubygems_medium-red",
  gemtest: "_config-ruby_medium-red",
  gen: "_genstat_medium-green",
  geo: "_model_medium-red",
  geojson: "_json_medium-cyan",
  geom: "_model_medium-red",
  geometry: "_model_medium-red",
  gf: "_gf_medium-red",
  ggr: "_gimp_medium-orange",
  gi: "_gap_dark-blue",
  gif: "_image_medium-yellow",
  gih: "_gimp_medium-maroon",
  gitattributes: "_git_medium-red",
  gitconfig: "_git_medium-red",
  gitignore: "_git_medium-red",
  "gitignore-global": "_git_medium-red",
  gitignore_global: "_git_medium-red",
  gko: "_circuit-board_medium-red",
  glade: "_glade_medium-green",
  glf: "_pointwise_medium-blue",
  glsl: "_opengl_dark-cyan",
  glslv: "_opengl_dark-cyan",
  gltf: "_gltf_medium-green",
  glyphs: "_glyphs_medium-green",
  glyphslicense: "_key_medium-green",
  gm0: "_circuit-board_medium-green",
  gm1: "_circuit-board_medium-green",
  gm2: "_circuit-board_medium-green",
  gm3: "_circuit-board_medium-green",
  gm4: "_circuit-board_medium-green",
  gm5: "_circuit-board_medium-green",
  gm6: "_circuit-board_medium-green",
  gm7: "_circuit-board_medium-green",
  gm8: "_circuit-board_medium-green",
  gm9: "_circuit-board_medium-green",
  gml: "_gml_medium-green",
  gms: "_gams_dark-red",
  gn: "_gn_dark-blue",
  gni: "_gn_medium-blue",
  gnu: "_gnu_medium-red",
  gnuplot: "_gnuplot_medium-red",
  gnus: "_emacs_medium-red",
  gnut: "_squirrel_medium-red",
  go: "_go_medium-blue",
  god: "_ruby_medium-red",
  godot: "_godot_dark-blue",
  gohtml: "_html5_dark-blue",
  golo: "_golo_medium-orange",
  gp: "_gnuplot_medium-red",
  gpb: "_circuit-board_dark-yellow",
  gpi: "_genstat_medium-blue",
  gpl: "_gimp_medium-green",
  gplv2: "_gnu_medium-red",
  gplv3: "_gnu_medium-red",
  gpt: "_circuit-board_medium-yellow",
  gql: "_graphql_medium-purple",
  grace: "_code_medium-purple",
  gradle: "_gradle_medium-blue",
  gradlew: "_gradle_dark-purple",
  graffle: "_omnigraffle_medium-green",
  grammar: "_bnf_medium-cyan",
  graphql: "_graphql_medium-pink",
  graphqls: "_graphql_medium-red",
  gremlin: "_image_medium-orange",
  grm: "_bnf_medium-yellow",
  grn: "_image_medium-orange",
  groff: "_manpage_dark-green",
  groovy: "_groovy_light-blue",
  grt: "_groovy_light-blue",
  grxml: "_code_dark-orange",
  gs: "_gosu_medium-blue",
  gsf: "_postscript_dark-orange",
  gsh: "_opengl_dark-cyan",
  gshader: "_opengl_dark-cyan",
  gsp: "_groovy_light-blue",
  gspec: "_galen_medium-blue",
  gsrc: "_image_medium-orange",
  gss: "_gauss_medium-orange",
  gst: "_gosu_medium-green",
  gstencil: "_omnigraffle_medium-red",
  gsx: "_gosu_dark-green",
  gtemplate: "_omnigraffle_dark-green",
  gtest: "_galen_medium-cyan",
  gtl: "_circuit-board_medium-blue",
  gto: "_circuit-board_medium-maroon",
  gtp: "_circuit-board_dark-orange",
  gtpl: "_groovy_light-blue",
  gts: "_circuit-board_dark-maroon",
  gv: "_graphviz_medium-blue",
  gvdesign: "_gvdesign_medium-yellow",
  gvimrc: "_vim_medium-green",
  gvy: "_groovy_light-blue",
  gyp: "_python_medium-green",
  gypi: "_python_dark-green",
  gz: "_zip_dark-blue",
  h: "_c_medium-purple",
  "h++": "_cpp_medium-purple",
  h264: "_video_dark-blue",
  hack: "_hack_medium-yellow",
  hak: "_zip_dark-blue",
  haml: "_haml_medium-yellow",
  hamlc: "_haml_medium-maroon",
  "haml.deface": "_haml_medium-red",
  handlebars: "_mustache_medium-orange",
  hats: "_ats_medium-blue",
  hb: "_harbour_dark-blue",
  hbs: "_mustache_medium-orange",
  hbt: "_mustache_medium-orange",
  hc: "_templeos_medium-yellow",
  hcl: "_hashicorp_dark-purple",
  "hc.z": "_templeos_medium-orange",
  hdp: "_image_dark-red",
  hdr: "_image_medium-blue",
  heex: "_elixir_medium-purple",
  heic: "_image_dark-red",
  heif: "_image_medium-orange",
  heifs: "_image_medium-orange",
  hgignore: "_hg_medium-grey",
  hgrc: "_hg_dark-grey",
  hgsub: "_hg_dark-cyan",
  hgsubstate: "_hg_medium-cyan",
  hgtags: "_tag_medium-cyan",
  hh: "_hack_medium-orange",
  hhi: "_hack_medium-red",
  hic: "_clojure_medium-red",
  hif: "_image_medium-orange",
  hip: "_houdini_medium-orange",
  hipnc: "_houdini_medium-orange",
  hjson: "_json_medium-cyan",
  hl: "_hoplon_medium-red",
  hlb: "_openvms_medium-blue",
  hlean: "_lean_dark-red",
  hledger: "_graph_medium-green",
  hlp: "_question_dark-blue",
  hlsl: "_model_medium-blue",
  hlsli: "_model_dark-green",
  hnc: "_binary_medium-orange",
  hoerc: "_config-ruby_medium-red",
  "hound.yaml": "_houndci_medium-purple",
  "hound.yml": "_houndci_medium-purple",
  "h+p": "_cpp_medium-purple",
  "hp+": "_cpp_medium-purple",
  hpgl: "_hp_medium-blue",
  hpp: "_cpp_medium-purple",
  hpx: "_cpp_medium-purple",
  hqf: "_sqf_dark-red",
  hql: "_sql_medium-red",
  hqx: "_zip_medium-cyan",
  hrl: "_erlang_medium-maroon",
  hs: "_haskell_medium-purple",
  "hs-boot": "_haskell_medium-maroon",
  hsc: "_haskell_medium-blue",
  hsig: "_haskell_medium-maroon",
  hson: "_database_medium-orange",
  hta: "_html5_dark-orange",
  htc: "_js_dark-yellow",
  htm: "_html5_medium-orange",
  "htm.ecr": "_html5_medium-cyan",
  "htm.erb": "_html5_medium-red",
  "htm.erb.deface": "_html5_medium-red",
  html: "_html5_medium-orange",
  "html.ecr": "_html5_medium-cyan",
  "html.eex": "_html5_medium-purple",
  "html.erb": "_html5_medium-red",
  "html.erb.deface": "_html5_medium-red",
  "html.heex": "_html5_medium-purple",
  htmlhintrc: "_gear_medium-red",
  "html.leex": "_html5_medium-purple",
  http: "_database_medium-red",
  huskyrc: "_husky_medium-blue",
  "huskyrc.cjs": "_husky_medium-green",
  "huskyrc.js": "_husky_medium-orange",
  "huskyrc.json": "_husky_medium-yellow",
  "huskyrc.mjs": "_husky_medium-blue",
  "huskyrc.yaml": "_husky_medium-red",
  "huskyrc.yml": "_husky_medium-red",
  "h+x": "_cpp_medium-purple",
  "hx+": "_cpp_medium-purple",
  hx: "_haxe_medium-orange",
  hxml: "_haxe_medium-orange",
  hxp: "_cpp_medium-purple",
  hxproj: "_haxedevelop_medium-blue",
  hxsl: "_haxe_medium-orange",
  hxx: "_cpp_medium-purple",
  hy: "_hy_dark-blue",
  hypr: "_kibo_light-yellow",
  "hypr.live": "_kibo_dark-orange",
  hzp: "_code_dark-blue",
  i: "_asm_medium-cyan",
  i3: "_modula3_medium-blue",
  i386: "_asm-intel_dark-blue",
  i3d: "_houdini_medium-orange",
  i7x: "_inform7_dark-blue",
  ia32: "_asm-intel_dark-blue",
  "ia-32": "_asm-intel_dark-blue",
  ia_32: "_asm-intel_dark-blue",
  ia32asm: "_asm-intel_dark-blue",
  "ia-32asm": "_asm-intel_dark-blue",
  ia_32asm: "_asm-intel_dark-blue",
  ia64: "_asm-intel_dark-blue",
  "ia-64": "_asm-intel_dark-blue",
  ia_64: "_asm-intel_dark-blue",
  ia64asm: "_asm-intel_dark-blue",
  "ia-64asm": "_asm-intel_dark-blue",
  ia_64asm: "_asm-intel_dark-blue",
  ia86: "_asm-intel_dark-blue",
  "ia-86": "_asm-intel_dark-blue",
  ia_86: "_asm-intel_dark-blue",
  ia86asm: "_asm-intel_dark-blue",
  "ia-86asm": "_asm-intel_dark-blue",
  ia_86asm: "_asm-intel_dark-blue",
  iced: "_coffee_medium-blue",
  icl: "_clean_dark-cyan",
  icns: "_image_medium-pink",
  ico: "_image_medium-blue",
  idc: "_c_medium-green",
  idml: "_indesign_dark-pink",
  idr: "_idris_dark-red",
  iff: "_image_dark-blue",
  ig: "_modula3_medium-green",
  ihlp: "_stata_medium-cyan",
  ijs: "_j_light-blue",
  ik: "_ioke_medium-red",
  ily: "_lilypond_dark-green",
  imba: "_imba_medium-yellow",
  iml: "_code_medium-red",
  import: "_godot_medium-red",
  inc: "_clojure_medium-green",
  indb: "_indesign_dark-blue",
  indd: "_indesign_dark-pink",
  "indent.pro": "_gear_medium-blue",
  indl: "_indesign_medium-purple",
  indt: "_indesign_dark-purple",
  info: "_text_dark-blue",
  infopathxml: "_infopath_dark-purple",
  ini: "_config_medium-yellow",
  ink: "_ink_dark-blue",
  ink2: "_ink_dark-purple",
  inl: "_cpp_medium-red",
  ino: "_arduino_dark-cyan",
  inputrc: "_terminal_medium-red",
  ins: "_tex_medium-green",
  install: "_terminal_medium-purple",
  "integrity.json": "_nsri-alt_medium-green",
  intr: "_code_dark-blue",
  inx: "_inkscape_dark-purple",
  io: "_io_dark-purple",
  iol: "_jolie_medium-red",
  ipf: "_igorpro_dark-red",
  ipp: "_cpp_medium-orange",
  ipy: "_python_medium-blue",
  ipynb: "_jupyter_dark-orange",
  "irb-history": "_database_medium-red",
  irclog: "_text_medium-blue",
  iris: "_sgi_medium-orange",
  isl: "_inno_medium-cyan",
  isml: "_html5_medium-blue",
  iso: "_zip_medium-blue",
  isolate: "_python_dark-green",
  iss: "_inno_dark-blue",
  it: "_audio_medium-orange",
  iuml: "_graphviz_medium-orange",
  ivy: "_code_dark-green",
  ixx: "_cpp_medium-blue",
  j: "_objj_dark-orange",
  j2: "_jinja_medium-red",
  j2c: "_image_dark-green",
  jade: "_jade_medium-red",
  jake: "_jake_medium-yellow",
  jar: "_zip_dark-pink",
  jas: "_cheetah3d_medium-yellow",
  jass: "_warcraft3_medium-red",
  java: "_java_medium-purple",
  jbuilder: "_ruby_dark-red",
  jelly: "_code_medium-yellow",
  jflex: "_code_medium-red",
  jinja: "_jinja_dark-red",
  jinja2: "_jinja_medium-red",
  jison: "_jison_medium-blue",
  jisonlex: "_jison_medium-cyan",
  jl: "_julia_medium-purple",
  jlex: "_code_medium-red",
  jmd: "_markdown_medium-purple",
  jng: "_image_medium-cyan",
  joboptions: "_print_dark-red",
  jos: "_junos_medium-cyan",
  journal: "_book_medium-blue",
  joy: "_code_medium-yellow",
  jp2: "_image_dark-green",
  jpeg: "_image_medium-green",
  jpf: "_image_dark-green",
  jpg: "_image_medium-green",
  jpm: "_image_dark-green",
  jps: "_image_dark-cyan",
  jpx: "_image_dark-green",
  jq: "_sql_medium-blue",
  js: "_js_medium-yellow",
  _js: "_js_medium-orange",
  jsb: "_js_medium-maroon",
  jsbeautifyrc: "_config-js_medium-yellow",
  jscad: "_scad_medium-yellow",
  jscpd: "_jscpd_medium-grey",
  "jscpd.html": "_jscpd_medium-orange",
  "jscpd.json": "_jscpd_medium-grey",
  "jscpd.xml": "_jscpd_medium-cyan",
  jscript: "_js_medium-red",
  jscsrc: "_config-js_medium-yellow",
  jse: "_js_medium-maroon",
  "js.ecr": "_js_medium-cyan",
  "js.erb": "_js_medium-red",
  jsfl: "_as_medium-yellow",
  "js.flow": "_flow_medium-orange",
  jshintrc: "_config-js_medium-yellow",
  jslib: "_js_medium-red",
  jsm: "_js_medium-blue",
  "js.map": "_sourcemap_medium-yellow",
  json: "_json_medium-cyan",
  json5: "_json5_dark-yellow",
  jsonc: "_json_dark-blue",
  "json.eex": "_database_medium-purple",
  jsonl: "_database_dark-orange",
  jsonld: "_jsonld_medium-blue",
  jsonnet: "_jsonnet_dark-blue",
  jsont: "_squarespace_dark-purple",
  "json-tmlanguage": "_textmate_medium-purple",
  jsp: "_html5_medium-purple",
  jspf: "_html5_dark-purple",
  jspre: "_js_medium-orange",
  jsproj: "_code_dark-yellow",
  jspx: "_code_dark-purple",
  jss: "_js_medium-green",
  jsx: "_jsx_medium-blue",
  jxr: "_image_dark-red",
  k: "_kx_dark-purple",
  "kazelcfg.json": "_kubernetes_medium-blue",
  key: "_key_medium-blue",
  keynote: "_keynote_medium-blue",
  kicad_dru: "_kicad_medium-red",
  kicad_mod: "_kicad_medium-green",
  kicad_pcb: "_kicad_dark-blue",
  "kicad_pcb-bak": "_kicad_dark-red",
  kicad_prl: "_kicad_medium-orange",
  kicad_pro: "_kicad_medium-orange",
  kicad_sch: "_kicad_dark-green",
  kicad_sym: "_kicad_dark-green",
  kicad_wks: "_kicad_medium-cyan",
  kick: "_config-ruby_medium-red",
  kid: "_genshi_medium-red",
  kit: "_html5_medium-green",
  kml: "_earth_medium-green",
  knc: "_binary_medium-orange",
  knt: "_keynote_dark-blue",
  ko: "_binary_dark-green",
  kojo: "_scala_medium-green",
  krl: "_krl_medium-blue",
  ks: "_kos_dark-green",
  ksh: "_terminal_dark-yellow",
  kshrc: "_terminal_dark-yellow",
  ksy: "_kaitai_medium-maroon",
  kt: "_kotlin_dark-blue",
  ktm: "_kotlin_medium-blue",
  kts: "_kotlin_medium-orange",
  kusto: "_kusto_medium-blue",
  kv: "_kivy_dark-maroon",
  kys: "_config_medium-red",
  kys_mac: "_config_medium-red",
  l: "_picolisp_medium-purple",
  la: "_binary_dark-red",
  laccdb: "_access_light-maroon",
  lagda: "_agda_medium-cyan",
  languagebabel: "_babel_medium-yellow",
  lark: "_lark_dark-blue",
  las: "_lasso_dark-blue",
  lasso: "_lasso_dark-blue",
  lasso8: "_lasso_medium-blue",
  lasso9: "_lasso_medium-purple",
  lassoapp: "_lasso_dark-red",
  lat: "_latino_medium-blue",
  latte: "_html5_medium-red",
  launch: "_code_medium-blue",
  layout: "_sketchup-lo_medium-red",
  lbm: "_image_dark-blue",
  lbnf: "_bnf_dark-yellow",
  lbx: "_tex_medium-blue",
  lcov: "_text_dark-blue",
  ld: "_config_dark-red",
  ldif: "_config_dark-green",
  ldj: "_database_dark-orange",
  ldjson: "_database_dark-orange",
  ldml: "_lasso_medium-red",
  lds: "_config_medium-red",
  lean: "_lean_dark-purple",
  ledger: "_graph_medium-blue",
  leex: "_elixir_medium-purple",
  lektorproject: "_lektor_medium-orange",
  less: "_css3_dark-blue",
  lesshst: "_database_medium-red",
  lex: "_lex_medium-cyan",
  lfe: "_lfe_dark-red",
  lfm: "_pascal_medium-blue",
  lfsconfig: "_git_medium-red",
  lgt: "_logtalk_medium-red",
  lhs: "_haskell_dark-blue",
  libsonnet: "_jsonnet_medium-blue",
  licence: "_book_medium-blue",
  licences: "_book_medium-blue",
  license: "_book_medium-blue",
  licenses: "_book_medium-blue",
  lid: "_code_medium-purple",
  lidr: "_idris_medium-maroon",
  liff: "_image_dark-blue",
  linq: "_linqpad_dark-pink",
  lintstagedrc: "_gear_dark-orange",
  liquid: "_shopify_medium-green",
  lisp: "_lisp_dark-red",
  litcoffee: "_coffee_light-maroon",
  lkml: "_lookml_medium-purple",
  ll: "_llvm_dark-green",
  lnk: "_link_medium-blue",
  lo: "_binary_medium-red",
  log: "_text_medium-maroon",
  logtalk: "_logtalk_medium-red",
  lol: "_lolcode_dark-red",
  lookml: "_lookml_medium-purple",
  lp: "_code_dark-purple",
  lpi: "_pascal_dark-blue",
  lpk: "_pascal_dark-cyan",
  lpr: "_pascal_dark-purple",
  lps: "_pascal_medium-red",
  lr: "_lektor_dark-purple",
  lrs: "_pascal_medium-maroon",
  lrt: "_pascal_dark-red",
  ls: "_ls_medium-blue",
  _ls: "_ls_dark-blue",
  lsl: "_lsl_medium-cyan",
  lslp: "_lsl_dark-cyan",
  lsp: "_lisp_medium-red",
  lsproj: "_vs_light-cyan",
  lst: "_asm-m68k_medium-blue",
  ltx: "_tex_medium-blue",
  lua: "_lua_medium-blue",
  luacheckrc: "_lua_medium-green",
  lvlib: "_labview_dark-blue",
  lvproj: "_labview_dark-blue",
  lwo: "_lightwave_medium-red",
  lws: "_lightwave_medium-blue",
  lx: "_lex_medium-cyan",
  lxo: "_modo_medium-cyan",
  ly: "_lilypond_medium-green",
  lz: "_zip_medium-maroon",
  lzma: "_zip_medium-maroon",
  lzo: "_zip_medium-maroon",
  m: "_miranda_medium-red",
  m2: "_macaulay2_light-cyan",
  m3: "_modula3_dark-blue",
  m4: "_code_medium-red",
  m4a: "_audio_medium-cyan",
  m4p: "_audio_dark-cyan",
  m4v: "_video_dark-blue",
  m68k: "_asm-m68k_dark-red",
  ma: "_mathematica_medium-orange",
  maff: "_zip_medium-orange",
  mailmap: "_git_medium-red",
  mak: "_checklist_medium-yellow",
  make: "_checklist_medium-yellow",
  makefile: "_checklist_medium-yellow",
  makfile: "_checklist_medium-yellow",
  mako: "_mako_dark-blue",
  man: "_manpage_dark-green",
  mandoc: "_manpage_dark-green",
  manifest: "_code_medium-blue",
  mao: "_mako_dark-blue",
  map: "_sourcemap_dark-blue",
  mapping: "_sourcemap_dark-blue",
  markdown: "_markdown_medium-blue",
  marko: "_marko_medium-blue",
  "marko.cjs": "_marko_medium-maroon",
  "marko.js": "_marko_medium-maroon",
  "marko.mjs": "_marko_medium-maroon",
  mask: "_code_medium-red",
  mat: "_unity3d_medium-red",
  mata: "_stata_dark-cyan",
  matah: "_stata_light-cyan",
  match: "_sourcemap_medium-maroon",
  mathematica: "_mathematica_dark-red",
  matlab: "_matlab_medium-yellow",
  mawk: "_awk_medium-maroon",
  max: "_maxscript_dark-cyan",
  maxhelp: "_max_medium-red",
  maxpat: "_max_dark-purple",
  maxproj: "_max_medium-blue",
  mb: "_maya_dark-cyan",
  mbox: "_mail_medium-red",
  mbx: "_mail_medium-red",
  mce: "_maxscript_medium-red",
  mcf: "_config_medium-blue",
  mcfi: "_maya_dark-purple",
  mcfp: "_maya_dark-purple",
  mcfunction: "_minecraft_light-green",
  mclevel: "_minecraft_medium-green",
  mcpack: "_minecraft_dark-green",
  mcr: "_maxscript_dark-purple",
  mcworld: "_minecraft_medium-blue",
  md: "_markdown_medium-blue",
  md5sum: "_tag_medium-green",
  md5sums: "_tag_medium-green",
  mdl: "_model_medium-red",
  mdlp: "_matlab_medium-red",
  mdo: "_1c-alt_medium-red",
  mdoc: "_manpage_dark-green",
  mdown: "_markdown_medium-blue",
  mdpolicy: "_code_dark-blue",
  mdtext: "_markdown_medium-blue",
  mdtxt: "_markdown_medium-blue",
  mdw: "_access_dark-purple",
  mdwn: "_markdown_medium-blue",
  mdx: "_mdx_medium-orange",
  me: "_manpage_dark-green",
  mediawiki: "_mediawiki_medium-yellow",
  mel: "_maya_dark-blue",
  menu: "_code_medium-blue",
  mermaid: "_mermaid_medium-blue",
  meta: "_unity3d_dark-red",
  metal: "_metal_dark-cyan",
  mf: "_metapost_dark-green",
  mg: "_modula3_dark-green",
  mht: "_html5_medium-blue",
  mhtml: "_html5_medium-blue",
  mid: "_music_dark-blue",
  midi: "_music_dark-blue",
  mint: "_mint_medium-green",
  mipage: "_dyalog_dark-green",
  mir: "_mirah_light-blue",
  mirah: "_mirah_light-blue",
  "mixin.json": "_mixin_medium-orange",
  "mixins.json": "_mixin_medium-orange",
  mj2: "_image_dark-green",
  mjml: "_mjml_medium-red",
  mjmlslim: "_mjml_medium-orange",
  mjs: "_js_medium-blue",
  "mjs.map": "_sourcemap_medium-blue",
  "mjs.snap": "_jest_medium-blue",
  mk: "_checklist_medium-yellow",
  mk3d: "_video_medium-purple",
  mka: "_audio_medium-purple",
  mkd: "_markdown_medium-blue",
  mkdn: "_markdown_medium-blue",
  mkdown: "_markdown_medium-blue",
  mkfile: "_checklist_medium-yellow",
  mkii: "_tex_medium-orange",
  mkiv: "_tex_medium-orange",
  mks: "_video_medium-purple",
  mksh: "_terminal_dark-yellow",
  mkshrc: "_terminal_dark-yellow",
  mkv: "_video_medium-purple",
  mkvi: "_tex_medium-orange",
  ml: "_ocaml_medium-orange",
  ml4: "_ocaml_medium-green",
  mlappinstall: "_matlab_dark-maroon",
  mli: "_ocaml_dark-orange",
  mll: "_ocaml_dark-green",
  mlpkginstall: "_matlab_medium-cyan",
  mltbx: "_matlab_dark-red",
  mly: "_ocaml_dark-yellow",
  mm: "_objc_dark-blue",
  mmd: "_mermaid_medium-blue",
  mmk: "_checklist_light-blue",
  mms: "_checklist_medium-blue",
  mn: "_matlab_dark-purple",
  mng: "_image_medium-orange",
  mo: "_modelica_medium-red",
  "mocha.opts": "_mocha_light-maroon",
  "mocharc.cjs": "_mocha_medium-maroon",
  "mocharc.js": "_mocha_medium-maroon",
  "mocharc.json": "_mocha_medium-maroon",
  "mocharc.jsonc": "_mocha_medium-maroon",
  "mocharc.mjs": "_mocha_medium-maroon",
  "mocharc.yaml": "_mocha_medium-maroon",
  "mocharc.yml": "_mocha_medium-maroon",
  mod: "_modula2_medium-blue",
  mode0v3: "_appstore_medium-red",
  mode1v3: "_appstore_medium-red",
  mode2v3: "_appstore_medium-red",
  mode3v3: "_appstore_medium-red",
  mode4v3: "_appstore_medium-red",
  mode5v3: "_appstore_medium-red",
  mode6v3: "_appstore_medium-red",
  mode7v3: "_appstore_medium-red",
  mode8v3: "_appstore_medium-red",
  mode9v3: "_appstore_medium-red",
  modelproj: "_vs_dark-red",
  module: "_gear_medium-blue",
  modulefile: "_puppet_dark-blue",
  moho: "_moho_medium-orange",
  mohoaction: "_moho_medium-blue",
  mohobrush: "_moho_medium-maroon",
  mohoexport: "_moho_medium-yellow",
  mohoproj: "_moho_medium-orange",
  mohostyle: "_moho_medium-purple",
  mom: "_manpage_dark-green",
  monkey: "_monkey_medium-maroon",
  moo: "_mercury_medium-cyan",
  moon: "_moon_medium-yellow",
  more: "_text_medium-purple",
  mov: "_video_medium-cyan",
  "mp+": "_audio_dark-green",
  mp: "_metapost_dark-red",
  mp3: "_audio_medium-red",
  mp4: "_video_dark-blue",
  mpc: "_audio_dark-green",
  mpeg: "_video_medium-red",
  mpfa: "_dna_medium-orange",
  mpg: "_video_medium-red",
  mpo: "_image_medium-pink",
  mpp: "_msproject_medium-green",
  mpt: "_msproject_dark-green",
  mq4: "_code_dark-blue",
  mq5: "_code_dark-blue",
  mqh: "_code_dark-blue",
  mrb: "_mruby_medium-red",
  mrc: "_mirc_medium-red",
  ms: "_maxscript_dark-blue",
  msg: "_text_medium-orange",
  msi: "_windows",
  mspec: "_ruby_medium-red",
  mss: "_mapbox_medium-cyan",
  mt: "_mathematica_medium-maroon",
  mtl: "_model_dark-blue",
  mtml: "_code_dark-blue",
  "mtn-ignore": "_monotone_dark-purple",
  mts: "_ts_medium-blue",
  mu: "_mupad_medium-red",
  mud: "_zork_medium-maroon",
  muf: "_code_medium-orange",
  mumps: "_code_medium-red",
  muse: "_amusewiki_dark-red",
  mustache: "_mustache_medium-orange",
  mxml: "_code_dark-maroon",
  mxt: "_max_medium-purple",
  mysql: "_sql_medium-orange",
  myt: "_code_dark-blue",
  mzn: "_minizinc_medium-blue",
  n: "_manpage_dark-green",
  n64: "_n64_dark-cyan",
  nanorc: "_nano_medium-blue",
  nasl: "_nessus_medium-cyan",
  nasm: "_nasm_dark-blue",
  natvis: "_code_dark-green",
  nawk: "_awk_medium-green",
  nb: "_mathematica_dark-orange",
  nbib: "_book_medium-blue",
  nbp: "_mathematica_dark-red",
  nc: "_c_dark-blue",
  ncl: "_earth_medium-green",
  ncs: "_nwscript_dark-red",
  ndb: "_nwscript_medium-maroon",
  ndjson: "_database_medium-orange",
  ndproj: "_ndepend_medium-blue",
  neko: "_neko_medium-orange",
  neon: "_neon_medium-grey",
  net: "_circuit-board_dark-blue",
  nexrc: "_vim_medium-green",
  nf: "_nextflow_medium-green",
  nfo: "_text_dark-blue",
  nginx: "_nginx_medium-green",
  nginxconf: "_nginx_medium-green",
  ni: "_inform7_medium-blue",
  nib: "_nib_dark-orange",
  nim: "_nimrod_medium-green",
  nimble: "_nimble_medium-grey",
  nimrod: "_nimrod_medium-green",
  ninja: "_shuriken_medium-blue",
  "ninja.d": "_shuriken_dark-cyan",
  nit: "_nit_dark-green",
  nix: "_nix_medium-cyan",
  njk: "_nunjucks_dark-green",
  njs: "_node_medium-green",
  njsproj: "_vs_light-red",
  nk2: "_outlook_dark-red",
  nl: "_lisp_medium-maroon",
  nlogo: "_netlogo_medium-red",
  no: "_text_medium-red",
  node: "_node_dark-green",
  nodemonignore: "_nodemon_medium-green",
  node_repl_history: "_node_dark-green",
  "node-version": "_node_dark-green",
  nojekyll: "_jekyll_medium-green",
  nomad: "_nomad_medium-green",
  noon: "_noon_dark-grey",
  nproj: "_ndepend_medium-blue",
  npy: "_numpy_medium-cyan",
  npz: "_numpy_dark-cyan",
  nqp: "_perl6_dark-purple",
  nr: "_manpage_dark-green",
  nroff: "_manpage_dark-green",
  nrrd: "_image_dark-blue",
  nse: "_nmap_dark-blue",
  nsh: "_nsis_dark-cyan",
  nsi: "_nsis_medium-purple",
  nss: "_nwscript_dark-blue",
  nu: "_recycle_light-green",
  numpy: "_numpy_dark-blue",
  numpyw: "_numpy_medium-blue",
  numsc: "_numpy_medium-orange",
  nunjucks: "_nunjucks_dark-green",
  nupkg: "_nuget_medium-purple",
  nuspec: "_nuget_medium-blue",
  nut: "_squirrel_medium-maroon",
  nvimrc: "_vim_medium-green",
  nvmrc: "_node_medium-green",
  nvram: "_vmware_medium-blue",
  nxc: "_nxc_medium-orange",
  ny: "_lisp_medium-blue",
  o: "_binary_medium-red",
  o3: "_ogone_medium-grey",
  oab: "_outlook_medium-blue",
  ob2: "_oberon_medium-purple",
  obj: "_model_medium-red",
  objdump: "_binary_dark-orange",
  ocrec: "_lync_dark-blue",
  octave: "_octave_medium-orange",
  octave_hist: "_octave_medium-orange",
  octaverc: "_octave_dark-orange",
  od: "_database_medium-grey",
  odb: "_openoffice_light-pink",
  odd: "_code_light-green",
  odf: "_openoffice_medium-maroon",
  odg: "_openoffice_medium-red",
  odin: "_odin_medium-blue",
  odp: "_openoffice_medium-purple",
  ods: "_openoffice_medium-green",
  odt: "_openoffice_medium-blue",
  oft: "_outlook_medium-maroon",
  oga: "_audio_dark-orange",
  ogg: "_video_medium-orange",
  ogm: "_video_medium-orange",
  ogone: "_ogone_medium-grey",
  ogv: "_video_medium-orange",
  ohm: "_code_dark-yellow",
  ol: "_jolie_dark-pink",
  old: "_backup",
  olk14: "_outlook_dark-cyan",
  omgrofl: "_code_dark-purple",
  one: "_onenote_dark-purple",
  onlydata: "_database_medium-grey",
  ooc: "_ooc_medium-green",
  opa: "_opa_medium-blue",
  opal: "_ruby_medium-red",
  opencl: "_opencl_medium-red",
  opts: "_config_medium-green",
  opus: "_audio_dark-maroon",
  or: "_pascal_medium-blue",
  ora: "_image_medium-yellow",
  orc: "_csound_medium-maroon",
  org: "_org_dark-green",
  orig: "_backup",
  os: "_1c_dark-red",
  osm: "_code_dark-purple",
  otf: "_font_dark-yellow",
  otg: "_openoffice_dark-red",
  otm: "_outlook_medium-red",
  otp: "_openoffice_dark-pink",
  ots: "_openoffice_dark-green",
  ott: "_openoffice_dark-blue",
  out: "_binary_medium-red",
  ova: "_virtualbox_medium-blue",
  ovf: "_virtualbox_medium-purple",
  ovpn: "_openvpn_medium-orange",
  owl: "_owl_dark-blue",
  ox: "_ox_medium-cyan",
  oxh: "_ox_medium-green",
  oxo: "_ox_medium-blue",
  oxygene: "_oxygene_medium-cyan",
  oz: "_oz_medium-yellow",
  p: "_progress_medium-green",
  p21: "_model_medium-orange",
  p4: "_p4_dark-purple",
  p6: "_perl6_light-blue",
  p6l: "_perl6_medium-blue",
  p6m: "_perl6_dark-pink",
  p8: "_pico8_medium-red",
  pac: "_js_medium-purple",
  packages: "_package_medium-green",
  pairs: "_gear_dark-green",
  pak: "_binary_dark-orange",
  pan: "_pan_medium-red",
  parrot: "_parrot_medium-green",
  pas: "_pascal_medium-purple",
  pascal: "_pascal_medium-purple",
  pasm: "_parrot_dark-green",
  pat: "_max_medium-green",
  patch: "_patch_medium-green",
  pb: "_purebasic_medium-red",
  pbi: "_purebasic_dark-orange",
  pbl: "_powerbuilder_medium-blue",
  pbm: "_image_medium-pink",
  pbt: "_powerbuilder_dark-blue",
  pbtext: "_database_dark-cyan",
  pbtxt: "_database_dark-cyan",
  pbxproj: "_appstore_medium-blue",
  pbxuser: "_appstore_medium-cyan",
  pcb: "_circuit-board_medium-green",
  pcd: "_pcd_medium-green",
  pcf: "_font-bitmap_medium-orange",
  pch: "_objc_dark-red",
  pck: "_sql_medium-orange",
  pcss: "_postcss_dark-red",
  pcx: "_image_dark-blue",
  pd: "_music_dark-red",
  pdb: "_binary_dark-orange",
  pde: "_processing_dark-blue",
  pdf: "_pdf_medium-red",
  pdksh: "_terminal_dark-yellow",
  pdkshrc: "_terminal_dark-yellow",
  pd_lua: "_lua_dark-blue",
  pe: "_ff_medium-orange",
  pegcoffee: "_peg_medium-maroon",
  peggy: "_peg_medium-red",
  pegjs: "_peg_medium-red",
  pem: "_key_medium-orange",
  pep: "_python_medium-orange",
  per: "_sql_medium-cyan",
  perl: "_perl_medium-blue",
  pfa: "_postscript_dark-blue",
  pfb: "_font_dark-red",
  pfm: "_font_medium-red",
  pfo: "_fortran_dark-blue",
  pgf: "_tex_medium-purple",
  pgm: "_image_medium-grey",
  pgsql: "_pgsql_dark-blue",
  ph: "_perl_dark-purple",
  phar: "_php_medium-red",
  pho: "_circuit-board_dark-cyan",
  php: "_php_dark-blue",
  php0: "_php_dark-blue",
  php1: "_php_dark-blue",
  php2: "_php_dark-blue",
  php3: "_php_dark-blue",
  php4: "_php_dark-blue",
  php5: "_php_dark-blue",
  php6: "_php_dark-blue",
  php7: "_php_dark-blue",
  php8: "_php_dark-blue",
  php9: "_php_dark-blue",
  php_cs: "_php_dark-blue",
  phps: "_php_dark-blue",
  phpt: "_php_dark-blue",
  phtml: "_html5_dark-blue",
  physicmaterial: "_unity3d_dark-cyan",
  physicmaterial2d: "_unity3d_dark-cyan",
  physicsmaterial: "_unity3d_dark-cyan",
  physicsmaterial2d: "_unity3d_dark-cyan",
  pic: "_manpage_dark-green",
  pickle: "_pickle_dark-cyan",
  picnc: "_houdini_medium-orange",
  pict: "_image_light-purple",
  pid: "_tag_medium-orange",
  pig: "_code_medium-pink",
  pikchr: "_manpage_dark-green",
  pike: "_pike_dark-cyan",
  pine: "_pinescript_medium-green",
  pir: "_parrot_dark-blue",
  pjs: "_js_dark-purple",
  pkb: "_sql_dark-red",
  pkgproj: "_nuget_dark-purple",
  pkl: "_pickle_dark-cyan",
  pks: "_sql_medium-blue",
  pl: "_perl_medium-blue",
  pl6: "_perl6_medium-purple",
  plantuml: "_graphviz_medium-orange",
  plb: "_sql_medium-purple",
  plist: "_code_dark-cyan",
  plot: "_gnuplot_medium-red",
  pls: "_sql_medium-red",
  plsql: "_sql_medium-red",
  plt: "_gnuplot_medium-red",
  pluginspec: "_ruby_medium-red",
  plx: "_perl_medium-purple",
  plxcopy: "_asm-zilog_medium-blue",
  ply: "_model_dark-red",
  pm: "_perl_dark-blue",
  pm6: "_perl6_dark-pink",
  pmd: "_markdown_medium-blue",
  pmod: "_pike_medium-blue",
  png: "_image_medium-orange",
  "png.mcmeta": "_minecraft_dark-green",
  pnm: "_image_medium-blue",
  po: "_database_medium-red",
  pod: "_pod_dark-blue",
  pod6: "_perl6_dark-green",
  podsl: "_lisp_medium-purple",
  podspec: "_ruby_medium-red",
  pogo: "_pogo_medium-orange",
  pony: "_pony_light-maroon",
  postcss: "_postcss_dark-red",
  "postcss.config.js": "_postcss_medium-yellow",
  postcssrc: "_postcss_medium-orange",
  "postcssrc.cjs": "_postcss_medium-orange",
  "postcssrc.js": "_postcss_medium-orange",
  "postcssrc.json": "_postcss_medium-orange",
  "postcssrc.mjs": "_postcss_medium-orange",
  "postcssrc.yaml": "_postcss_medium-orange",
  "postcssrc.yml": "_postcss_medium-orange",
  pot: "_database_medium-red",
  potm: "_powerpoint_medium-maroon",
  pov: "_povray_dark-blue",
  pp: "_puppet_medium-purple",
  ppd: "_print_dark-cyan",
  ppm: "_image_dark-maroon",
  pprx: "_rexx_medium-blue",
  pps: "_powerpoint_dark-red",
  ppsx: "_powerpoint_medium-orange",
  ppt: "_powerpoint_dark-orange",
  pptx: "_powerpoint_medium-red",
  ppu: "_pascal_medium-cyan",
  prc: "_sql_dark-blue",
  prefab: "_unity3d_dark-cyan",
  prefs: "_config_medium-yellow",
  prel: "_premiere_medium-maroon",
  prettierignore: "_prettier_dark-yellow",
  prettierrc: "_prettier_medium-cyan",
  "prettierrc.cjs": "_prettier_medium-cyan",
  "prettierrc.js": "_prettier_medium-cyan",
  "prettierrc.json": "_prettier_medium-cyan",
  "prettierrc.json5": "_prettier_medium-cyan",
  "prettierrc.mjs": "_prettier_medium-cyan",
  "prettierrc.yaml": "_prettier_medium-cyan",
  "prettierrc.yml": "_prettier_medium-cyan",
  prg: "_code_medium-red",
  pri: "_checklist_dark-purple",
  prisma: "_prisma_dark-blue",
  prn: "_graph_dark-blue",
  pro: "_prolog_medium-blue",
  profile: "_terminal_dark-purple",
  proj: "_code_dark-green",
  project: "_eclipse_dark-blue",
  "project.clj": "_lein",
  prolog: "_prolog_medium-cyan",
  properties: "_config_medium-purple",
  props: "_code_medium-cyan",
  proselintrc: "_proselint_dark-cyan",
  proto: "_database_dark-cyan",
  prototext: "_database_dark-cyan",
  prototxt: "_database_dark-cyan",
  prproj: "_premiere_dark-purple",
  prw: "_totvs_medium-maroon",
  prx: "_binary_medium-purple",
  ps: "_postscript_medium-red",
  ps1: "_powershell_medium-blue",
  ps1xml: "_powershell_dark-purple",
  psb: "_psd_dark-purple",
  psc: "_papyrus_medium-green",
  psc1: "_code_light-blue",
  psd: "_psd_medium-blue",
  psd1: "_powershell_dark-blue",
  psf: "_font-bitmap_medium-cyan",
  psftx: "_font-bitmap_dark-blue",
  psfu: "_font-bitmap_medium-cyan",
  psgi: "_perl_medium-red",
  psm1: "_powershell_medium-purple",
  psmdcp: "_nuget_dark-green",
  psq: "_premiere_medium-purple",
  pst: "_outlook_medium-blue",
  pt: "_code_medium-red",
  pu: "_graphviz_medium-orange",
  pub: "_key_medium-yellow",
  puff: "_binary_medium-grey",
  pug: "_pug_medium-red",
  puml: "_graphviz_medium-orange",
  pure: "_pure_medium-grey",
  purs: "_purescript_dark-purple",
  puz: "_publisher_dark-cyan",
  pwn: "_pawn_medium-orange",
  pxb: "_image_medium-red",
  pxd: "_cython_medium-blue",
  pxg: "_image_medium-cyan",
  pxi: "_cython_dark-blue",
  pxls: "_image_medium-pink",
  pxm: "_image_medium-orange",
  pxr: "_image_medium-purple",
  pxs: "_image_medium-blue",
  py: "_python_dark-blue",
  py3: "_python_dark-blue",
  pyc: "_binary_dark-purple",
  pyd: "_binary_dark-purple",
  pyde: "_python_medium-orange",
  pydeps: "_database_dark-blue",
  pyi: "_python_medium-blue",
  pyo: "_binary_dark-purple",
  pyp: "_python_dark-purple",
  pypirc: "_python_dark-blue",
  pyt: "_python_dark-green",
  pytb: "_database_medium-orange",
  pythonrc: "_python_dark-blue",
  "python-venv": "_python_dark-blue",
  "python-version": "_config-python_dark-blue",
  pyw: "_python_medium-maroon",
  pyx: "_cython_medium-orange",
  pyz: "_python_dark-red",
  q: "_kx_medium-blue",
  qasm: "_qiskit_dark-blue",
  qbs: "_qt_medium-cyan",
  qhelp: "_code_medium-purple",
  qml: "_qt_medium-green",
  qmlproject: "_qt_dark-green",
  qs: "_qsharp_dark-purple",
  qvd: "_qlik_dark-green",
  qvw: "_qlik_medium-green",
  r: "_r_medium-blue",
  r2: "_rebol_dark-red",
  r3: "_rebol_dark-blue",
  ra: "_audio_dark-blue",
  rabl: "_ruby_medium-red",
  rake: "_ruby_medium-red",
  raku: "_perl6_medium-blue",
  rakumod: "_perl6_dark-blue",
  rakutest: "_perl6_dark-purple",
  raml: "_raml_medium-cyan",
  rar: "_zip_medium-blue",
  raw: "_image_dark-orange",
  rb: "_ruby_medium-red",
  rbbas: "_xojo_medium-green",
  rbfrm: "_xojo_dark-green",
  rbi: "_sorbet_medium-purple",
  rbmnu: "_xojo_dark-cyan",
  rbres: "_xojo_medium-cyan",
  rbtbar: "_xojo_medium-blue",
  rbuild: "_ruby_dark-red",
  rbuistate: "_xojo_dark-blue",
  rbw: "_ruby_dark-red",
  rbx: "_ruby_dark-red",
  rbxs: "_lua_dark-purple",
  rc: "_terminal_medium-purple",
  rc_apple_terminal: "_terminal_dark-blue",
  rchit: "_opengl_dark-cyan",
  rd: "_r_medium-blue",
  rdata: "_rdata_medium-red",
  rdb: "_rdata_medium-orange",
  rdf: "_code_dark-red",
  rdg: "_code_dark-purple",
  rdoc: "_rdoc_medium-red",
  rds: "_rdata_medium-yellow",
  rdx: "_rdata_medium-maroon",
  re: "_reason_medium-red",
  "react.cjs": "_react_medium-blue",
  "react.js": "_react_medium-blue",
  "react.mjs": "_react_medium-blue",
  readme: "_book_medium-blue",
  reason: "_reasonstudios_medium-orange",
  reb: "_rebol_dark-green",
  rebol: "_rebol_dark-green",
  red: "_red_medium-red",
  reds: "_red_light-red",
  reek: "_reek_medium-red",
  reg: "_windows_medium-blue",
  regex: "_regex_medium-green",
  regexp: "_regex_medium-green",
  rego: "_openpolicy_medium-cyan",
  rehypeignore: "_remark_dark-yellow",
  rei: "_reason_medium-orange",
  remarkignore: "_remark_dark-red",
  renovate: "_renovate_medium-cyan",
  "renovate.json": "_renovate_medium-cyan",
  renovaterc: "_renovate_medium-cyan",
  "renovaterc.json": "_renovate_medium-cyan",
  res: "_source_medium-cyan",
  resi: "_rescript_medium-red",
  rest: "_rst_dark-blue",
  restql: "_restql_dark-blue",
  "rest.txt": "_rst_dark-blue",
  resx: "_code_medium-cyan",
  retextignore: "_remark_dark-green",
  rex: "_rexx_medium-red",
  rexx: "_rexx_medium-red",
  rg: "_clojure_medium-red",
  rhistory: "_r_medium-blue",
  rhtml: "_html5_medium-red",
  ring: "_ring_medium-purple",
  ris: "_book_medium-blue",
  "ris-rm8": "_book_medium-blue",
  rkt: "_racket_medium-red",
  rktd: "_racket_medium-blue",
  rktl: "_racket_light-red",
  rl: "_code_medium-red",
  rlib: "_rust_light-maroon",
  rm: "_audio_dark-blue",
  rmarkdown: "_rmarkdown_medium-red",
  rmd: "_rmarkdown_medium-red",
  rmd160sum: "_tag_medium-green",
  rmd160sums: "_tag_medium-green",
  rmiss: "_opengl_dark-cyan",
  rnh: "_manpage_dark-maroon",
  rno: "_manpage_dark-maroon",
  rns: "_reasonstudios_dark-orange",
  robot: "_robot_medium-cyan",
  rockspec: "_lua_medium-purple",
  rof: "_manpage_dark-green",
  roff: "_manpage_dark-green",
  ron: "_markdown_medium-blue",
  rpm: "_red-hat_medium-red",
  rpmmacros: "_red-hat_medium-red",
  rprofile: "_r_medium-blue",
  rproj: "_rstudio_light-blue",
  rpt: "_text_medium-maroon",
  rpy: "_python_medium-pink",
  rpyb: "_binary_medium-red",
  rpyc: "_binary_medium-red",
  rq: "_sparql_dark-blue",
  rql: "_restql_dark-blue",
  rs: "_rust_medium-maroon",
  rsc: "_rascal_medium-yellow",
  rsh: "_android_dark-maroon",
  rsj: "_json_medium-blue",
  rsn: "_reasonstudios_medium-orange",
  rspec: "_rspec_medium-red",
  rsrc: "_finder_dark-blue",
  rss: "_rss_medium-orange",
  rst: "_rst_dark-blue",
  "rst.txt": "_rst_dark-blue",
  rsx: "_r_medium-blue",
  rtf: "_text_dark-red",
  ru: "_ruby_medium-red",
  ruby: "_ruby_medium-red",
  run: "_manpage_dark-maroon",
  runoff: "_manpage_dark-maroon",
  rvb: "_rhino_medium-green",
  rviz: "_model_dark-blue",
  rx2: "_reasonstudios_medium-red",
  s: "_asm_dark-green",
  s3m: "_audio_medium-green",
  sac: "_sac_medium-yellow",
  sage: "_sage_medium-blue",
  sagews: "_sage_dark-blue",
  sam: "_dna_dark-yellow",
  san: "_san_medium-cyan",
  sas: "_sas_medium-blue",
  sass: "_sass_dark-pink",
  sats: "_ats_dark-yellow",
  sb: "_sandbox_dark-orange",
  sb2: "_scratch_dark-orange",
  sb3: "_scratch_medium-orange",
  sbclrc: "_lisp_dark-purple",
  sbt: "_sbt_dark-purple",
  sc: "_scala_medium-red",
  scad: "_scad_medium-orange",
  scala: "_scala_medium-red",
  scaml: "_html5_dark-red",
  "sc.cjs": "_nailpolish_medium-green",
  scd: "_scd_medium-red",
  sce: "_scilab_dark-blue",
  sch: "_circuit-board_medium-red",
  schema: "_database_dark-blue",
  sci: "_scilab_dark-purple",
  scilla: "_scilla_medium-orange",
  "sc.js": "_nailpolish_medium-yellow",
  "sc.jsx": "_nailpolish_medium-blue",
  scm: "_scheme_medium-red",
  "sc.mjs": "_nailpolish_medium-blue",
  sco: "_csound_dark-blue",
  scpt: "_apple_medium-purple",
  scrbl: "_racket_dark-blue",
  "scrutinizer.yml": "_scrutinizer_dark-blue",
  scss: "_sass_light-pink",
  sct: "_image_light-blue",
  "sc.ts": "_nailpolish_medium-blue",
  "sc.tsx": "_nailpolish_light-blue",
  scxml: "_code_light-cyan",
  sdbl: "_1c_dark-orange",
  sdl: "_config_medium-blue",
  sdlang: "_config_medium-blue",
  secret: "_secret",
  sed: "_code_dark-green",
  self: "_self_dark-blue",
  sentryclirc: "_sentry_medium-red",
  seq: "_dna_medium-purple",
  sequelizerc: "_sequelize_medium-blue",
  "sequelizerc.cjs": "_sequelize_medium-blue",
  "sequelizerc.js": "_sequelize_medium-blue",
  "sequelizerc.json": "_sequelize_medium-blue",
  "sequelizerc.mjs": "_sequelize_medium-blue",
  "serverless.yaml": "_serverless_medium-red",
  "serverless.yml": "_serverless_medium-red",
  sexp: "_lisp_medium-blue",
  sfd: "_ff_dark-blue",
  sfproj: "_sf_light-orange",
  sgi: "_sgi_medium-orange",
  sgm: "_code_dark-yellow",
  sgml: "_code_dark-yellow",
  sh: "_terminal_medium-purple",
  sha: "_tag_medium-green",
  sha1sum: "_tag_medium-green",
  sha1sums: "_tag_medium-green",
  sha224sum: "_tag_medium-green",
  sha224sums: "_tag_medium-green",
  sha256: "_tag_medium-green",
  sha256sum: "_tag_medium-green",
  sha256sums: "_tag_medium-green",
  sha2sum: "_tag_medium-green",
  sha2sums: "_tag_medium-green",
  sha384sum: "_tag_medium-green",
  sha384sums: "_tag_medium-green",
  sha3sum: "_tag_medium-green",
  sha3sums: "_tag_medium-green",
  sha512sum: "_tag_medium-green",
  sha512sums: "_tag_medium-green",
  shader: "_model_medium-cyan",
  shasum: "_tag_medium-green",
  shasums: "_tag_medium-green",
  shen: "_shen_dark-cyan",
  "sh-session": "_terminal_medium-yellow",
  shtml: "_html5_medium-cyan",
  sieve: "_filter_medium-red",
  sig: "_code_light-maroon",
  sigils: "_sigils_dark-red",
  simplecov: "_config-ruby_medium-red",
  sit: "_zip_medium-blue",
  sj: "_objj_dark-red",
  sjs: "_js_medium-pink",
  sk: "_code_light-blue",
  sk1: "_code_medium-blue",
  sk2: "_code_medium-blue",
  sketch: "_sketch_medium-orange",
  skim: "_dashboard_medium-orange",
  skp: "_sketchup-mk_medium-red",
  sl: "_slash_dark-blue",
  slax: "_junos_medium-blue",
  sld: "_scheme_medium-blue",
  sldd: "_matlab_medium-maroon",
  slim: "_dashboard_medium-orange",
  slk: "_graph_medium-cyan",
  sln: "_vs_medium-orange",
  sls: "_saltstack_medium-blue",
  slugignore: "_heroku_dark-purple",
  slx: "_matlab_medium-red",
  slxp: "_matlab_dark-red",
  sma: "_clojure_medium-yellow",
  smali: "_android_medium-green",
  smk: "_python_medium-green",
  sml: "_code_medium-red",
  smt: "_code_light-blue",
  smt2: "_code_medium-cyan",
  snap: "_jest_medium-yellow",
  sndh: "_audio_medium-yellow",
  snf: "_font-bitmap_dark-orange",
  snip: "_database_medium-green",
  snippet: "_database_medium-green",
  snippets: "_database_medium-green",
  snort: "_snort_light-red",
  snupkg: "_nuget_medium-green",
  snyk: "_snyk_dark-purple",
  so: "_binary_medium-red",
  sol: "_solidity_dark-cyan",
  solidity: "_solidity_dark-cyan",
  solverstate: "_caffe_medium-green",
  son: "_database_dark-green",
  soy: "_closure-tpl_medium-blue",
  sp: "_clojure_medium-yellow",
  spacemacs: "_spacemacs_medium-purple",
  sparql: "_sparql_medium-blue",
  spe: "_spacengine_medium-blue",
  spec: "_red-hat_dark-red",
  "-spec.c2hs": "_test-hs_medium-purple",
  "spec.c2hs": "_test-hs_medium-purple",
  "_spec.c2hs": "_test-hs_medium-purple",
  "-spec.cjs": "_test-js_medium-green",
  "spec.cjs": "_test-js_medium-green",
  "_spec.cjs": "_test-js_medium-green",
  "-spec.cjsx": "_test-coffee_medium-maroon",
  "spec.cjsx": "_test-coffee_medium-maroon",
  "_spec.cjsx": "_test-coffee_medium-maroon",
  "-spec.coffee": "_test-coffee_medium-maroon",
  "spec.coffee": "_test-coffee_medium-maroon",
  "_spec.coffee": "_test-coffee_medium-maroon",
  "-spec.es": "_test-js_medium-yellow",
  "spec.es": "_test-js_medium-yellow",
  "_spec.es": "_test-js_medium-yellow",
  "-spec.go": "_test-go_medium-cyan",
  "spec.go": "_test-go_medium-cyan",
  "_spec.go": "_test-go_medium-cyan",
  "-spec.hs": "_test-hs_medium-purple",
  "spec.hs": "_test-hs_medium-purple",
  "_spec.hs": "_test-hs_medium-purple",
  "-spec.hsc": "_test-hs_medium-purple",
  "spec.hsc": "_test-hs_medium-purple",
  "_spec.hsc": "_test-hs_medium-purple",
  "-spec.iced": "_test-coffee_medium-maroon",
  "spec.iced": "_test-coffee_medium-maroon",
  "_spec.iced": "_test-coffee_medium-maroon",
  "-spec.js": "_test-js_medium-yellow",
  "-spec._js": "_test-js_medium-yellow",
  "spec.js": "_test-js_medium-yellow",
  "spec._js": "_test-js_medium-yellow",
  "_spec.js": "_test-js_medium-yellow",
  "_spec._js": "_test-js_medium-yellow",
  "-spec.jsb": "_test-js_medium-yellow",
  "spec.jsb": "_test-js_medium-yellow",
  "_spec.jsb": "_test-js_medium-yellow",
  "-spec.jsm": "_test-js_medium-yellow",
  "spec.jsm": "_test-js_medium-yellow",
  "_spec.jsm": "_test-js_medium-yellow",
  "-spec.jss": "_test-js_medium-yellow",
  "spec.jss": "_test-js_medium-yellow",
  "_spec.jss": "_test-js_medium-yellow",
  "-spec.jsx": "_test-react_medium-blue",
  "spec.jsx": "_test-react_medium-blue",
  "_spec.jsx": "_test-react_medium-blue",
  "-spec.lhs": "_test-hs_medium-purple",
  "spec.lhs": "_test-hs_medium-purple",
  "_spec.lhs": "_test-hs_medium-purple",
  "-spec.litcoffee": "_test-coffee_medium-maroon",
  "spec.litcoffee": "_test-coffee_medium-maroon",
  "_spec.litcoffee": "_test-coffee_medium-maroon",
  "-spec.mjs": "_test-js_medium-blue",
  "spec.mjs": "_test-js_medium-blue",
  "_spec.mjs": "_test-js_medium-blue",
  "-spec.rb": "_test-ruby_medium-red",
  "spec.rb": "_test-ruby_medium-red",
  "_spec.rb": "_test-ruby_medium-red",
  "-spec.react.cjs": "_test-react_medium-blue",
  "spec.react.cjs": "_test-react_medium-blue",
  "_spec.react.cjs": "_test-react_medium-blue",
  "-spec.react.js": "_test-react_medium-blue",
  "spec.react.js": "_test-react_medium-blue",
  "_spec.react.js": "_test-react_medium-blue",
  "-spec.react.mjs": "_test-react_medium-blue",
  "spec.react.mjs": "_test-react_medium-blue",
  "_spec.react.mjs": "_test-react_medium-blue",
  "-spec.rs": "_test-rust_medium-maroon",
  "spec.rs": "_test-rust_medium-maroon",
  "_spec.rs": "_test-rust_medium-maroon",
  "-spec.ruby": "_test-ruby_medium-red",
  "spec.ruby": "_test-ruby_medium-red",
  "_spec.ruby": "_test-ruby_medium-red",
  "-specs.c2hs": "_test-hs_medium-purple",
  "specs.c2hs": "_test-hs_medium-purple",
  "_specs.c2hs": "_test-hs_medium-purple",
  "-specs.cjs": "_test-js_medium-green",
  "specs.cjs": "_test-js_medium-green",
  "_specs.cjs": "_test-js_medium-green",
  "-specs.cjsx": "_test-coffee_medium-maroon",
  "specs.cjsx": "_test-coffee_medium-maroon",
  "_specs.cjsx": "_test-coffee_medium-maroon",
  "-specs.coffee": "_test-coffee_medium-maroon",
  "specs.coffee": "_test-coffee_medium-maroon",
  "_specs.coffee": "_test-coffee_medium-maroon",
  "-specs.es": "_test-js_medium-yellow",
  "specs.es": "_test-js_medium-yellow",
  "_specs.es": "_test-js_medium-yellow",
  "-specs.go": "_test-go_medium-cyan",
  "specs.go": "_test-go_medium-cyan",
  "_specs.go": "_test-go_medium-cyan",
  "-specs.hs": "_test-hs_medium-purple",
  "specs.hs": "_test-hs_medium-purple",
  "_specs.hs": "_test-hs_medium-purple",
  "-specs.hsc": "_test-hs_medium-purple",
  "specs.hsc": "_test-hs_medium-purple",
  "_specs.hsc": "_test-hs_medium-purple",
  "-specs.iced": "_test-coffee_medium-maroon",
  "specs.iced": "_test-coffee_medium-maroon",
  "_specs.iced": "_test-coffee_medium-maroon",
  "-spec.sjs": "_test-js_medium-yellow",
  "-specs.js": "_test-js_medium-yellow",
  "-specs._js": "_test-js_medium-yellow",
  "spec.sjs": "_test-js_medium-yellow",
  "specs.js": "_test-js_medium-yellow",
  "specs._js": "_test-js_medium-yellow",
  "_spec.sjs": "_test-js_medium-yellow",
  "_specs.js": "_test-js_medium-yellow",
  "_specs._js": "_test-js_medium-yellow",
  "-specs.jsb": "_test-js_medium-yellow",
  "specs.jsb": "_test-js_medium-yellow",
  "_specs.jsb": "_test-js_medium-yellow",
  "-specs.jsm": "_test-js_medium-yellow",
  "specs.jsm": "_test-js_medium-yellow",
  "_specs.jsm": "_test-js_medium-yellow",
  "-specs.jss": "_test-js_medium-yellow",
  "specs.jss": "_test-js_medium-yellow",
  "_specs.jss": "_test-js_medium-yellow",
  "-specs.jsx": "_test-react_medium-blue",
  "specs.jsx": "_test-react_medium-blue",
  "_specs.jsx": "_test-react_medium-blue",
  "-specs.lhs": "_test-hs_medium-purple",
  "specs.lhs": "_test-hs_medium-purple",
  "_specs.lhs": "_test-hs_medium-purple",
  "-specs.litcoffee": "_test-coffee_medium-maroon",
  "specs.litcoffee": "_test-coffee_medium-maroon",
  "_specs.litcoffee": "_test-coffee_medium-maroon",
  "-specs.mjs": "_test-js_medium-blue",
  "specs.mjs": "_test-js_medium-blue",
  "_specs.mjs": "_test-js_medium-blue",
  "-specs.rb": "_test-ruby_medium-red",
  "specs.rb": "_test-ruby_medium-red",
  "_specs.rb": "_test-ruby_medium-red",
  "-specs.react.cjs": "_test-react_medium-blue",
  "specs.react.cjs": "_test-react_medium-blue",
  "_specs.react.cjs": "_test-react_medium-blue",
  "-specs.react.js": "_test-react_medium-blue",
  "specs.react.js": "_test-react_medium-blue",
  "_specs.react.js": "_test-react_medium-blue",
  "-specs.react.mjs": "_test-react_medium-blue",
  "specs.react.mjs": "_test-react_medium-blue",
  "_specs.react.mjs": "_test-react_medium-blue",
  "-specs.rs": "_test-rust_medium-maroon",
  "specs.rs": "_test-rust_medium-maroon",
  "_specs.rs": "_test-rust_medium-maroon",
  "-specs.ruby": "_test-ruby_medium-red",
  "specs.ruby": "_test-ruby_medium-red",
  "_specs.ruby": "_test-ruby_medium-red",
  "-specs.sjs": "_test-js_medium-yellow",
  "specs.sjs": "_test-js_medium-yellow",
  "_specs.sjs": "_test-js_medium-yellow",
  "-specs.ts": "_test-ts_medium-blue",
  "specs.ts": "_test-ts_medium-blue",
  "_specs.ts": "_test-ts_medium-blue",
  "-specs.tsx": "_test-ts_light-blue",
  "specs.tsx": "_test-ts_light-blue",
  "_specs.tsx": "_test-ts_light-blue",
  "-spec.ts": "_test-ts_medium-blue",
  "spec.ts": "_test-ts_medium-blue",
  "_spec.ts": "_test-ts_medium-blue",
  "-spec.tsx": "_test-ts_light-blue",
  "spec.tsx": "_test-ts_light-blue",
  "_spec.tsx": "_test-ts_light-blue",
  spin: "_propeller_medium-orange",
  sps: "_scheme_medium-purple",
  spsql: "_sql_medium-green",
  spthy: "_code_medium-green",
  sqf: "_sqf_dark-maroon",
  sql: "_sql_medium-orange",
  sqlite: "_sqlite_medium-blue",
  sqlite3: "_sqlite_dark-blue",
  sqlproj: "_vs_medium-orange",
  sra: "_powerbuilder_medium-blue",
  srdf: "_code_medium-blue",
  srj: "_powerbuilder_medium-purple",
  srp: "_powerbuilder_medium-maroon",
  srt: "_text_medium-purple",
  sru: "_powerbuilder_medium-orange",
  srw: "_powerbuilder_medium-red",
  ss: "_silverstripe_medium-blue",
  ssjs: "_js_medium-red",
  ssmssln: "_code_medium-orange",
  sss: "_postcss_dark-pink",
  st: "_code_medium-blue",
  stache: "_mustache_medium-orange",
  stan: "_stan_medium-red",
  star: "_bazel_dark-blue",
  "st.css": "_stylable_medium-green",
  stderr: "_text_medium-red",
  stdout: "_text_medium-red",
  stellaris: "_code_medium-blue",
  stencil: "_stencil_medium-orange",
  step: "_model_medium-orange",
  sthlp: "_stata_medium-purple",
  stl: "_model_dark-green",
  ston: "_database_medium-maroon",
  "stories.cjs": "_storybook_medium-orange",
  "stories.js": "_storybook_medium-orange",
  "stories.jsx": "_storybook_medium-orange",
  "stories.mjs": "_storybook_medium-orange",
  "stories.ts": "_storybook_medium-blue",
  "stories.tsx": "_storybook_medium-blue",
  story: "_storyist_medium-blue",
  storyboard: "_code_medium-green",
  "story.cjs": "_storybook_medium-orange",
  "story.js": "_storybook_medium-orange",
  "story.jsx": "_storybook_medium-orange",
  "story.mjs": "_storybook_medium-orange",
  "story.ts": "_storybook_medium-blue",
  "story.tsx": "_storybook_medium-blue",
  stp: "_model_medium-orange",
  strings: "_strings_medium-red",
  struct: "_circuit-board_dark-green",
  sttheme: "_sublime_medium-orange",
  sty: "_tex_medium-red",
  styl: "_stylus_medium-green",
  style: "_sketchup-sb_medium-red",
  stylelintcache: "_stylelint_dark-blue",
  stylelintignore: "_stylelint_dark-blue",
  stylus: "_stylus_medium-green",
  sub: "_text_dark-purple",
  "sublime-build": "_sublime_medium-orange",
  sublime_build: "_sublime_medium-orange",
  "sublime-commands": "_sublime_medium-orange",
  sublime_commands: "_sublime_medium-orange",
  "sublime-completions": "_sublime_medium-orange",
  sublime_completions: "_sublime_medium-orange",
  "sublime-keymap": "_sublime_medium-orange",
  sublime_keymap: "_sublime_medium-orange",
  "sublime-macro": "_sublime_medium-orange",
  sublime_macro: "_sublime_medium-orange",
  "sublime-menu": "_sublime_medium-orange",
  sublime_menu: "_sublime_medium-orange",
  "sublime-metrics": "_sublime_medium-orange",
  sublime_metrics: "_sublime_medium-orange",
  "sublime-mousemap": "_sublime_medium-orange",
  sublime_mousemap: "_sublime_medium-orange",
  "sublime-project": "_sublime_medium-orange",
  sublime_project: "_sublime_medium-orange",
  "sublime-session": "_sublime_medium-orange",
  sublime_session: "_sublime_medium-orange",
  "sublime-settings": "_sublime_medium-orange",
  sublime_settings: "_sublime_medium-orange",
  "sublime-snippet": "_sublime_medium-orange",
  sublime_snippet: "_sublime_medium-orange",
  "sublime-syntax": "_sublime_dark-orange",
  "sublime-theme": "_sublime_medium-orange",
  sublime_theme: "_sublime_medium-orange",
  "sublime-workspace": "_sublime_medium-orange",
  sublime_workspace: "_sublime_medium-orange",
  sum: "_tag_medium-green",
  sums: "_tag_medium-green",
  sv: "_sysverilog_medium-blue",
  svelte: "_svelte_medium-orange",
  svg: "_svg_dark-yellow",
  svgz: "_image_medium-orange",
  svh: "_sysverilog_medium-green",
  "swagger-codegen-ignore": "_swagger_dark-green",
  swc: "_as_dark-red",
  swf: "_as_medium-blue",
  swift: "_swift_medium-orange",
  swig: "_html5_medium-green",
  swp: "_binary_dark-green",
  sxt: "_reasonstudios_medium-yellow",
  sy: "_database_dark-green",
  syntax: "_database_medium-blue",
  t: "_test-perl_medium-blue",
  t6: "_perl6_light-blue",
  tab: "_graph_light-green",
  tac: "_python_dark-pink",
  tag: "_riot_medium-red",
  tags: "_tag_medium-blue",
  tagx: "_code_medium-purple",
  tar: "_zip_dark-blue",
  targets: "_code_medium-red",
  "tar.lzma": "_zip_medium-maroon",
  taskpaper: "_checklist_medium-yellow",
  tcc: "_cpp_medium-red",
  tcl: "_tcl_dark-orange",
  tcsh: "_terminal_medium-green",
  tea: "_coffee_medium-orange",
  tech: "_circuit-board_dark-green",
  tera: "_code_medium-red",
  terminal: "_config_dark-blue",
  terminalrc: "_config_dark-blue",
  "tern-config": "_tern_medium-purple",
  "tern-project": "_tern_medium-blue",
  tesc: "_model_medium-green",
  tese: "_model_medium-green",
  test: "_test-generic_medium-green",
  "-test.c2hs": "_test-hs_medium-purple",
  "test.c2hs": "_test-hs_medium-purple",
  "_test.c2hs": "_test-hs_medium-purple",
  "-test.cjs": "_test-js_medium-green",
  "test.cjs": "_test-js_medium-green",
  "_test.cjs": "_test-js_medium-green",
  "-test.cjsx": "_test-coffee_medium-maroon",
  "test.cjsx": "_test-coffee_medium-maroon",
  "_test.cjsx": "_test-coffee_medium-maroon",
  "-test.coffee": "_test-coffee_medium-maroon",
  "test.coffee": "_test-coffee_medium-maroon",
  "_test.coffee": "_test-coffee_medium-maroon",
  "-test.es": "_test-js_medium-yellow",
  "test.es": "_test-js_medium-yellow",
  "_test.es": "_test-js_medium-yellow",
  "-test.go": "_test-go_medium-cyan",
  "test.go": "_test-go_medium-cyan",
  "_test.go": "_test-go_medium-cyan",
  "-test.hs": "_test-hs_medium-purple",
  "test.hs": "_test-hs_medium-purple",
  "_test.hs": "_test-hs_medium-purple",
  "-test.hsc": "_test-hs_medium-purple",
  "test.hsc": "_test-hs_medium-purple",
  "_test.hsc": "_test-hs_medium-purple",
  "-test.iced": "_test-coffee_medium-maroon",
  "test.iced": "_test-coffee_medium-maroon",
  "_test.iced": "_test-coffee_medium-maroon",
  "-test.js": "_test-js_medium-yellow",
  "-test._js": "_test-js_medium-yellow",
  "test.js": "_test-js_medium-yellow",
  "test._js": "_test-js_medium-yellow",
  "_test.js": "_test-js_medium-yellow",
  "_test._js": "_test-js_medium-yellow",
  "-test.jsb": "_test-js_medium-yellow",
  "test.jsb": "_test-js_medium-yellow",
  "_test.jsb": "_test-js_medium-yellow",
  "-test.jsm": "_test-js_medium-yellow",
  "test.jsm": "_test-js_medium-yellow",
  "_test.jsm": "_test-js_medium-yellow",
  "-test.jss": "_test-js_medium-yellow",
  "test.jss": "_test-js_medium-yellow",
  "_test.jss": "_test-js_medium-yellow",
  "-test.jsx": "_test-react_medium-blue",
  "test.jsx": "_test-react_medium-blue",
  "_test.jsx": "_test-react_medium-blue",
  "-test.lhs": "_test-hs_medium-purple",
  "test.lhs": "_test-hs_medium-purple",
  "_test.lhs": "_test-hs_medium-purple",
  "-test.litcoffee": "_test-coffee_medium-maroon",
  "test.litcoffee": "_test-coffee_medium-maroon",
  "_test.litcoffee": "_test-coffee_medium-maroon",
  "-test.mjs": "_test-js_medium-blue",
  "test.mjs": "_test-js_medium-blue",
  "_test.mjs": "_test-js_medium-blue",
  "-test.rb": "_test-ruby_medium-red",
  "test.rb": "_test-ruby_medium-red",
  "_test.rb": "_test-ruby_medium-red",
  "-test.react.cjs": "_test-react_medium-blue",
  "test.react.cjs": "_test-react_medium-blue",
  "_test.react.cjs": "_test-react_medium-blue",
  "-test.react.js": "_test-react_medium-blue",
  "test.react.js": "_test-react_medium-blue",
  "_test.react.js": "_test-react_medium-blue",
  "-test.react.mjs": "_test-react_medium-blue",
  "test.react.mjs": "_test-react_medium-blue",
  "_test.react.mjs": "_test-react_medium-blue",
  "-test.rs": "_test-rust_medium-maroon",
  "test.rs": "_test-rust_medium-maroon",
  "_test.rs": "_test-rust_medium-maroon",
  "-test.ruby": "_test-ruby_medium-red",
  "test.ruby": "_test-ruby_medium-red",
  "_test.ruby": "_test-ruby_medium-red",
  "-tests.c2hs": "_test-hs_medium-purple",
  "tests.c2hs": "_test-hs_medium-purple",
  "_tests.c2hs": "_test-hs_medium-purple",
  "-tests.cjs": "_test-js_medium-green",
  "tests.cjs": "_test-js_medium-green",
  "_tests.cjs": "_test-js_medium-green",
  "-tests.cjsx": "_test-coffee_medium-maroon",
  "tests.cjsx": "_test-coffee_medium-maroon",
  "_tests.cjsx": "_test-coffee_medium-maroon",
  "-tests.coffee": "_test-coffee_medium-maroon",
  "tests.coffee": "_test-coffee_medium-maroon",
  "_tests.coffee": "_test-coffee_medium-maroon",
  "-tests.es": "_test-js_medium-yellow",
  "tests.es": "_test-js_medium-yellow",
  "_tests.es": "_test-js_medium-yellow",
  "-tests.go": "_test-go_medium-cyan",
  "tests.go": "_test-go_medium-cyan",
  "_tests.go": "_test-go_medium-cyan",
  "-tests.hs": "_test-hs_medium-purple",
  "tests.hs": "_test-hs_medium-purple",
  "_tests.hs": "_test-hs_medium-purple",
  "-tests.hsc": "_test-hs_medium-purple",
  "tests.hsc": "_test-hs_medium-purple",
  "_tests.hsc": "_test-hs_medium-purple",
  "-tests.iced": "_test-coffee_medium-maroon",
  "tests.iced": "_test-coffee_medium-maroon",
  "_tests.iced": "_test-coffee_medium-maroon",
  "-test.sjs": "_test-js_medium-yellow",
  "-tests.js": "_test-js_medium-yellow",
  "-tests._js": "_test-js_medium-yellow",
  "test.sjs": "_test-js_medium-yellow",
  "tests.js": "_test-js_medium-yellow",
  "tests._js": "_test-js_medium-yellow",
  "_test.sjs": "_test-js_medium-yellow",
  "_tests.js": "_test-js_medium-yellow",
  "_tests._js": "_test-js_medium-yellow",
  "-tests.jsb": "_test-js_medium-yellow",
  "tests.jsb": "_test-js_medium-yellow",
  "_tests.jsb": "_test-js_medium-yellow",
  "-tests.jsm": "_test-js_medium-yellow",
  "tests.jsm": "_test-js_medium-yellow",
  "_tests.jsm": "_test-js_medium-yellow",
  "-tests.jss": "_test-js_medium-yellow",
  "tests.jss": "_test-js_medium-yellow",
  "_tests.jss": "_test-js_medium-yellow",
  "-tests.jsx": "_test-react_medium-blue",
  "tests.jsx": "_test-react_medium-blue",
  "_tests.jsx": "_test-react_medium-blue",
  "-tests.lhs": "_test-hs_medium-purple",
  "tests.lhs": "_test-hs_medium-purple",
  "_tests.lhs": "_test-hs_medium-purple",
  "-tests.litcoffee": "_test-coffee_medium-maroon",
  "tests.litcoffee": "_test-coffee_medium-maroon",
  "_tests.litcoffee": "_test-coffee_medium-maroon",
  "-tests.mjs": "_test-js_medium-blue",
  "tests.mjs": "_test-js_medium-blue",
  "_tests.mjs": "_test-js_medium-blue",
  "-tests.rb": "_test-ruby_medium-red",
  "tests.rb": "_test-ruby_medium-red",
  "_tests.rb": "_test-ruby_medium-red",
  "-tests.react.cjs": "_test-react_medium-blue",
  "tests.react.cjs": "_test-react_medium-blue",
  "_tests.react.cjs": "_test-react_medium-blue",
  "-tests.react.js": "_test-react_medium-blue",
  "tests.react.js": "_test-react_medium-blue",
  "_tests.react.js": "_test-react_medium-blue",
  "-tests.react.mjs": "_test-react_medium-blue",
  "tests.react.mjs": "_test-react_medium-blue",
  "_tests.react.mjs": "_test-react_medium-blue",
  "-tests.rs": "_test-rust_medium-maroon",
  "tests.rs": "_test-rust_medium-maroon",
  "_tests.rs": "_test-rust_medium-maroon",
  "-tests.ruby": "_test-ruby_medium-red",
  "tests.ruby": "_test-ruby_medium-red",
  "_tests.ruby": "_test-ruby_medium-red",
  "-tests.sjs": "_test-js_medium-yellow",
  "tests.sjs": "_test-js_medium-yellow",
  "_tests.sjs": "_test-js_medium-yellow",
  "-tests.ts": "_test-ts_medium-blue",
  "tests.ts": "_test-ts_medium-blue",
  "_tests.ts": "_test-ts_medium-blue",
  "-tests.tsx": "_test-ts_light-blue",
  "tests.tsx": "_test-ts_light-blue",
  "_tests.tsx": "_test-ts_light-blue",
  "-test.ts": "_test-ts_medium-blue",
  "test.ts": "_test-ts_medium-blue",
  "_test.ts": "_test-ts_medium-blue",
  "-test.tsx": "_test-ts_light-blue",
  "test.tsx": "_test-ts_light-blue",
  "_test.tsx": "_test-ts_light-blue",
  tex: "_tex_medium-blue",
  texi: "_tex_medium-red",
  texinfo: "_tex_medium-red",
  text: "_text_medium-blue",
  textile: "_textile_medium-orange",
  tf: "_terraform_dark-purple",
  tfignore: "_tfs_dark-purple",
  "tf.json": "_terraform_medium-yellow",
  tfm: "_font_dark-green",
  tfstate: "_terraform_medium-cyan",
  "tfstate.backup": "_terraform_medium-cyan",
  tfvars: "_terraform_dark-purple",
  tga: "_image_dark-orange",
  tgn: "_database_medium-blue",
  tgz: "_zip_dark-blue",
  theme: "_paintcan_medium-purple",
  thor: "_thor_medium-orange",
  thrift: "_apache_medium-green",
  thy: "_isabelle_dark-red",
  tif: "_image_medium-red",
  tiff: "_image_medium-red",
  tikz: "_tex_medium-purple",
  tiny: "_sourcemap_dark-green",
  tinyv2: "_sourcemap_medium-green",
  tipe: "_tipe_medium-cyan",
  tl: "_telegram_medium-blue",
  tla: "_tla_medium-maroon",
  tld: "_tag_medium-maroon",
  tlf: "_font-bitmap_medium-orange",
  tlpp: "_totvs_dark-blue",
  tlz: "_zip_medium-maroon",
  tm: "_tcl_medium-red",
  tmac: "_manpage_dark-green",
  "tmac-u": "_manpage_dark-green",
  tmcg: "_textmate_medium-green",
  tmcommand: "_textmate_medium-blue",
  tml: "_code_dark-green",
  tmlanguage: "_textmate_dark-purple",
  tmmacro: "_textmate_medium-maroon",
  tmpreferences: "_textmate_dark-blue",
  tm_properties: "_textmate_medium-pink",
  tmproperties: "_textmate_medium-pink",
  tmsnippet: "_textmate_dark-orange",
  tmtheme: "_textmate_medium-pink",
  tmux: "_terminal_medium-blue",
  "tmux.conf": "_tmux_medium-green",
  "_tmux.conf": "_tmux_medium-green",
  toc: "_toc_medium-cyan",
  todo: "_checklist_medium-yellow",
  toml: "_toml_medium-green",
  tool: "_terminal_medium-purple",
  topojson: "_json_medium-cyan",
  tpl: "_smarty_medium-yellow",
  tpp: "_cpp_medium-orange",
  tr: "_manpage_dark-green",
  tres: "_godot_medium-cyan",
  trm: "_ftr_medium-red",
  troff: "_manpage_dark-green",
  troffrc: "_manpage_dark-green",
  "troffrc-end": "_manpage_dark-green",
  ts: "_ts_medium-blue",
  tscn: "_godot_medium-green",
  tsconfig: "_typo3_medium-orange",
  tss: "_css3_dark-red",
  "ts.snap": "_jest_medium-blue",
  tst: "_scilab_dark-cyan",
  tsv: "_graph_light-green",
  tsx: "_tsx_light-blue",
  "tsx.snap": "_jest_medium-blue",
  tt: "_tt_medium-blue",
  tt2: "_tt_medium-blue",
  tt3: "_tt_medium-purple",
  ttc: "_font_dark-green",
  ttcn: "_ttcn3_medium-blue",
  ttcn3: "_ttcn3_medium-blue",
  ttf: "_font_medium-green",
  ttl: "_database_medium-cyan",
  tu: "_turing_medium-red",
  tw: "_twine_medium-blue",
  twig: "_twig_medium-green",
  txi: "_tex_medium-red",
  txl: "_txl_medium-orange",
  txt: "_text_medium-blue",
  typoscript: "_typo3_medium-orange",
  u3d: "_model_medium-orange",
  uasset: "_unreal_dark-blue",
  uc: "_unreal_medium-grey",
  udf: "_sql_medium-green",
  udo: "_csound_dark-orange",
  ui: "_code_medium-blue",
  unibeautifyrc: "_unibeautify_dark-cyan",
  "unibeautifyrc.cjs": "_unibeautify_medium-orange",
  "unibeautifyrc.js": "_unibeautify_medium-orange",
  "unibeautifyrc.json": "_unibeautify_medium-orange",
  "unibeautifyrc.mjs": "_unibeautify_medium-orange",
  "unibeautifyrc.yaml": "_unibeautify_medium-yellow",
  "unibeautifyrc.yml": "_unibeautify_medium-yellow",
  units: "_scales_medium-green",
  unity: "_unity3d_medium-blue",
  unitypackage: "_unity3d_dark-green",
  unityproj: "_unity3d_medium-maroon",
  uno: "_uno_dark-blue",
  unpick: "_sourcemap_light-cyan",
  uof: "_text_dark-red",
  uop: "_text_medium-purple",
  uos: "_text_medium-green",
  uot: "_text_medium-blue",
  upc: "_c_medium-cyan",
  upp: "_print_medium-orange",
  ur: "_urweb_medium-maroon",
  urdf: "_code_dark-orange",
  url: "_link_dark-blue",
  urs: "_urweb_dark-blue",
  utf8: "_text_medium-cyan",
  utxt: "_text_medium-cyan",
  ux: "_code_light-orange",
  v: "_v_medium-blue",
  vala: "_vala_medium-purple",
  vapi: "_vala_dark-purple",
  vark: "_gosu_dark-blue",
  vash: "_html5_medium-red",
  vax: "_asm-vax_medium-maroon",
  vb: "_vs_medium-blue",
  vba: "_vs_medium-blue",
  vbhtml: "_vs_medium-red",
  vbox: "_virtualbox_medium-blue",
  "vbox-prev": "_virtualbox_medium-blue",
  vbox_version: "_virtualbox_medium-blue",
  vbproj: "_vs_dark-red",
  vbr: "_gimp_medium-cyan",
  vbs: "_vs_medium-green",
  vcg: "_model_dark-blue",
  vcl: "_varnish_dark-blue",
  vcproj: "_vs_dark-purple",
  vcxitems: "_vs_medium-purple",
  vcxproj: "_vs_dark-purple",
  vdw: "_visio_dark-purple",
  vdx: "_visio_medium-red",
  veo: "_verilog_medium-red",
  vert: "_vertex_medium-blue",
  vertex: "_vertex_medium-blue",
  vfl: "_houdini_medium-cyan",
  vh: "_sysverilog_medium-cyan",
  vhd: "_virtualbox_medium-green",
  vhdl: "_vhdl_dark-green",
  vhdx: "_virtualbox_dark-green",
  vhf: "_vhdl_dark-blue",
  vhi: "_vhdl_medium-blue",
  vho: "_vhdl_dark-purple",
  vhost: "_apache_dark-green",
  vhs: "_vhdl_medium-purple",
  vht: "_vhdl_dark-red",
  vhw: "_vhdl_dark-orange",
  vim: "_vim_medium-green",
  vimrc: "_vim_medium-green",
  viper: "_emacs_dark-green",
  viw: "_sql_dark-cyan",
  vm: "_velocity_dark-blue",
  vmasm: "_asm-vax_medium-maroon",
  vmb: "_vim_dark-green",
  vmdk: "_vmware_medium-orange",
  vmf: "_source_medium-maroon",
  vmsd: "_vmware_medium-green",
  vmsn: "_vmware_medium-green",
  vmss: "_vmware_medium-blue",
  vmt: "_source_medium-blue",
  vmtm: "_vmware_medium-red",
  vmx: "_vmware_medium-orange",
  vmxf: "_vmware_medium-orange",
  volt: "_phalcon_medium-cyan",
  vpk: "_source_medium-red",
  vrd: "_visio_medium-cyan",
  vrimg: "_vray_medium-grey",
  vrx: "_vertex_medium-blue",
  vscodeignore: "_vs_medium-blue",
  "vscodeignore.json": "_vs_medium-blue",
  vsd: "_visio_medium-blue",
  vsdm: "_visio_dark-maroon",
  vsdx: "_visio_dark-blue",
  vsh: "_vertex_medium-blue",
  vshader: "_vertex_medium-blue",
  vsix: "_vs_medium-cyan",
  vsixmanifest: "_vs_dark-orange",
  vsl: "_visio_medium-orange",
  vss: "_visio_dark-blue",
  vssettings: "_vs_dark-green",
  "vssettings.json": "_vs_dark-green",
  vssm: "_visio_dark-blue",
  vssx: "_visio_dark-blue",
  vst: "_visio_dark-blue",
  vstemplate: "_vs_medium-purple",
  vstm: "_visio_dark-blue",
  vstx: "_visio_dark-blue",
  vsw: "_visio_medium-green",
  vsx: "_visio_dark-red",
  vtf: "_source_dark-blue",
  vtfx: "_source_dark-red",
  vtt: "_webvtt_dark-blue",
  vtx: "_visio_dark-red",
  vue: "_vue_light-green",
  vxml: "_code_light-purple",
  vy: "_vyper_medium-grey",
  w: "_c_medium-maroon",
  walt: "_walt_medium-purple",
  war: "_zip_medium-purple",
  wasm: "_wasm_medium-red",
  wast: "_wasm_medium-blue",
  wat: "_wasm_medium-blue",
  watchmanconfig: "_watchman_medium-blue",
  watchr: "_ruby_dark-yellow",
  wav: "_audio_dark-yellow",
  wbm: "_image_dark-maroon",
  wbmp: "_image_dark-grey",
  wc3: "_warcraft3_dark-orange",
  wdl: "_wdl_medium-blue",
  wdp: "_image_dark-red",
  webapp: "_firefox_medium-orange",
  webarchive: "_safari_medium-blue",
  webarchivexml: "_android_dark-cyan",
  webgl: "_webgl_dark-red",
  webidl: "_code_medium-red",
  webm: "_video_dark-blue",
  webmanifest: "_database_medium-blue",
  webp: "_image_dark-blue",
  "webpack.cjs": "_webpack_medium-blue",
  "webpack.coffee": "_webpack_medium-blue",
  "webpackfile.cjs": "_webpack_medium-blue",
  "webpackfile.coffee": "_webpack_medium-blue",
  "webpackfile.js": "_webpack_medium-blue",
  "webpackfile.json": "_webpack_medium-blue",
  "webpackfile.jsx": "_webpack_medium-blue",
  "webpackfile.litcoffee": "_webpack_medium-blue",
  "webpackfile.mjs": "_webpack_medium-blue",
  "webpackfile.ts": "_webpack_medium-blue",
  "webpackfile.tsx": "_webpack_medium-blue",
  "webpack.js": "_webpack_medium-blue",
  "webpack.json": "_webpack_medium-blue",
  "webpack.jsx": "_webpack_medium-blue",
  "webpack.litcoffee": "_webpack_medium-blue",
  "webpack.mjs": "_webpack_medium-blue",
  "webpack.ts": "_webpack_medium-blue",
  "webpack.tsx": "_webpack_medium-blue",
  weechatlog: "_text_medium-green",
  "wget-hsts": "_wget_medium-maroon",
  wgetrc: "_wget_medium-purple",
  wgt: "_zip_medium-blue",
  whl: "_zip_dark-blue",
  wiki: "_mediawiki_medium-orange",
  wisp: "_code_dark-cyan",
  wix: "_wix_medium-maroon",
  wixobj: "_wix_medium-red",
  wixproj: "_wix_medium-orange",
  wl: "_wolfram_medium-red",
  wll: "_word_dark-blue",
  wlp4: "_code_medium-blue",
  wlpppp: "_code_medium-blue",
  wls: "_wolfram_dark-red",
  wlt: "_wolfram_medium-orange",
  wlua: "_lua_dark-red",
  wma: "_audio_medium-blue",
  wmaproj: "_vs_medium-maroon",
  wmf: "_image_medium-red",
  wmv: "_video_dark-purple",
  wmz: "_image_medium-red",
  woff: "_font_medium-blue",
  woff2: "_font_dark-blue",
  workbook: "_xamarin_light-blue",
  workflow: "_hashicorp_medium-cyan",
  wri: "_word_medium-orange",
  wsdl: "_code_medium-red",
  wsf: "_code_medium-blue",
  wsgi: "_python_dark-red",
  wurst: "_wurst_medium-maroon",
  wxi: "_wix_medium-orange",
  wxl: "_wix_medium-maroon",
  wxml: "_wechat_medium-green",
  wxs: "_wix_dark-purple",
  wxss: "_wechat_medium-blue",
  wy: "_wenyan_light-orange",
  x: "_model_medium-green",
  x10: "_x10_light-maroon",
  x32: "_asm-intel_dark-blue",
  x32asm: "_asm-intel_dark-blue",
  x3d: "_code_medium-blue",
  x64: "_asm-intel_dark-blue",
  x64asm: "_asm-intel_dark-blue",
  x86: "_asm-intel_dark-blue",
  x86asm: "_asm-intel_dark-blue",
  xacro: "_code_medium-red",
  xaml: "_winui_medium-blue",
  xar: "_zip_dark-orange",
  xauthority: "_x11_medium-orange",
  xbm: "_c_medium-orange",
  xc: "_xmos_medium-orange",
  xccheckout: "_appstore_medium-orange",
  xcf: "_gimp_medium-red",
  xclients: "_x11_medium-orange",
  xcplugindata: "_appstore_dark-purple",
  xcrequiredplugins: "_appstore_dark-cyan",
  xcscheme: "_appstore_medium-purple",
  xcscmblueprint: "_appstore_dark-blue",
  xcsettings: "_appstore_medium-green",
  xcuserstate: "_appstore_dark-cyan",
  xcworkspacedata: "_appstore_dark-red",
  xht: "_html5_medium-maroon",
  xhtm: "_html5_medium-orange",
  xhtml: "_html5_medium-orange",
  xi: "_mobile_dark-red",
  xib: "_code_dark-purple",
  xinitrc: "_x11_medium-orange",
  xinputrc: "_x11_medium-orange",
  xla: "_excel_medium-orange",
  xlam: "_excel_dark-red",
  xlf: "_code_dark-cyan",
  xliff: "_code_medium-red",
  xls: "_excel_dark-orange",
  xlsb: "_excel_medium-red",
  xlsm: "_excel_medium-green",
  xlsx: "_excel_dark-green",
  xlt: "_excel_dark-cyan",
  xltm: "_excel_medium-maroon",
  xltx: "_excel_dark-maroon",
  xm: "_mobile_dark-blue",
  xmi: "_code_medium-green",
  xml: "_code_medium-blue",
  xmp: "_code_medium-red",
  xojo_code: "_xojo_medium-green",
  xojo_menu: "_xojo_medium-blue",
  xojo_report: "_xojo_medium-red",
  xojo_script: "_xojo_dark-green",
  xojo_toolbar: "_xojo_dark-purple",
  xojo_window: "_xojo_dark-cyan",
  xpi: "_zip_medium-orange",
  xpl: "_xmos_dark-blue",
  xpm: "_c_medium-green",
  xproc: "_xmos_medium-purple",
  xprofile: "_x11_medium-orange",
  xproj: "_code_dark-red",
  xps: "_telegram_light-blue",
  xpy: "_python_medium-yellow",
  xq: "_sql_dark-red",
  xql: "_sql_dark-red",
  xqm: "_sql_dark-red",
  xquery: "_sql_dark-red",
  xqy: "_sql_dark-red",
  xresources: "_x11_medium-orange",
  xrl: "_erlang_medium-green",
  xs: "_perl_medium-red",
  xscreensaver: "_x11_medium-orange",
  xsd: "_code_dark-blue",
  "xsession-errors": "_x11_medium-orange",
  xsf: "_infopath_dark-purple",
  xsjs: "_js_medium-purple",
  xsjslib: "_js_medium-blue",
  xsl: "_code_medium-cyan",
  xslt: "_code_dark-cyan",
  xsn: "_infopath_dark-purple",
  "xsp-config": "_xpages_medium-blue",
  xspec: "_test-generic_dark-green",
  "xsp.metadata": "_xpages_dark-blue",
  xtend: "_xtend_dark-purple",
  xtm: "_scheme_medium-yellow",
  xtp2: "_infopath_dark-purple",
  xul: "_code_medium-orange",
  xwd: "_image_dark-purple",
  xz: "_zip",
  xzap: "_zork_dark-green",
  y: "_bison_dark-green",
  yacc: "_bison_medium-green",
  yaml: "_yaml_medium-red",
  "yaml.mysql": "_yaml_medium-orange",
  "yaml.sed": "_yaml_dark-green",
  "yaml-tmlanguage": "_textmate_medium-orange",
  yang: "_yang_medium-yellow",
  yaourtrc: "_archlinux_light-yellow",
  yap: "_prolog_medium-purple",
  yar: "_yara_medium-red",
  yara: "_yara_medium-red",
  yardopts: "_config-ruby_medium-red",
  yarnclean: "_yarn_dark-blue",
  "yarn-integrity": "_yarn_dark-blue",
  "yarn-metadata": "_yarn_medium-blue",
  "yarn-metadata.json": "_yarn_medium-blue",
  yarnrc: "_yarn_dark-blue",
  yas: "_database_medium-green",
  yasnippet: "_database_medium-green",
  yml: "_yaml_medium-red",
  "yml.mysql": "_yaml_medium-orange",
  "yml.sed": "_yaml_dark-green",
  yo: "_book_medium-red",
  "yo-rc.json": "_yeoman_medium-cyan",
  yorick: "_yorick_medium-orange",
  ypp: "_bison_medium-cyan",
  yrl: "_erlang_dark-green",
  yy: "_bison_medium-cyan",
  z: "_zip",
  z64: "_n64_dark-green",
  z80: "_asm-zilog_medium-yellow",
  zabst: "_zork_medium-red",
  zabstr: "_zork_medium-red",
  zap: "_zork_dark-cyan",
  zcml: "_code_dark-pink",
  zep: "_zephir_medium-pink",
  zig: "_zig_medium-orange",
  zil: "_zork_dark-blue",
  zimpl: "_zimpl_medium-orange",
  zip: "_zip",
  zmpl: "_zimpl_medium-orange",
  zn: "_warcraft3_medium-maroon",
  zone: "_earth_medium-blue",
  zpl: "_zimpl_medium-orange",
  zpr: "_zbrush_dark-purple",
  zs: "_crafttweaker_medium-maroon",
  zsh: "_terminal_medium-blue",
  zsh_history: "_terminal_medium-blue",
  "zsh-theme": "_terminal_medium-blue",
  ztl: "_zbrush_medium-red"
}, bs = {
  "abbrev-defs": "_emacs_medium-purple",
  abbrev_defs: "_emacs_medium-purple",
  "acre.config": "_acre_medium-blue",
  "adobe illustrator cloud prefs": "_ai_medium-orange",
  "adobe illustrator prefs": "_ai_medium-orange",
  aiappresources: "_ai_medium-orange",
  "alacritty.yaml": "_alacritty_medium-orange",
  ".alacritty.yaml": "_alacritty_medium-orange",
  "alacritty.yml": "_alacritty_medium-orange",
  ".alacritty.yml": "_alacritty_medium-orange",
  "angular.cjs": "_angular_medium-red",
  "angular.js": "_angular_medium-red",
  "angular.mjs": "_angular_medium-red",
  ansible: "_ansible_dark-cyan",
  "ansible.yaml": "_ansible_dark-cyan",
  "ansible.yml": "_ansible_dark-cyan",
  antigen: "_terminal_medium-blue",
  ".antigen": "_terminal_medium-blue",
  "antwar.conf.cjs": "_antwar_dark-purple",
  ".antwar.conf.cjs": "_antwar_dark-purple",
  "antwar.config.cjs": "_antwar_dark-purple",
  ".antwar.config.cjs": "_antwar_dark-purple",
  "antwar.config.js": "_antwar_dark-purple",
  ".antwar.config.js": "_antwar_dark-purple",
  "antwar.config.mjs": "_antwar_dark-purple",
  ".antwar.config.mjs": "_antwar_dark-purple",
  "antwar.conf.js": "_antwar_dark-purple",
  ".antwar.conf.js": "_antwar_dark-purple",
  "antwar.conf.mjs": "_antwar_dark-purple",
  ".antwar.conf.mjs": "_antwar_dark-purple",
  "ant.xml": "_ant_dark-pink",
  "apache2.conf": "_apache_medium-red",
  "apache.conf": "_apache_medium-red",
  "api-extractor-base.json": "_apiextractor_light-blue",
  "api-extractor.json": "_apiextractor_light-blue",
  apkbuild: "_alpine_dark-blue",
  apmrc: "_atom_medium-green",
  ".apmrc": "_atom_medium-green",
  "apollo.config.js": "_apollo_dark-blue",
  "appcelerator.cjs": "_appcelerator_medium-red",
  "appcelerator.js": "_appcelerator_medium-red",
  "appcelerator.mjs": "_appcelerator_medium-red",
  appfile: "_ruby_medium-red",
  "appfile.lock": "_ruby_medium-red",
  appraisals: "_ruby_medium-red",
  "appveyor.yml": "_appveyor_medium-blue",
  ".appveyor.yml": "_appveyor_medium-blue",
  aptfile: "_heroku_medium-purple",
  "arabicshaping.txt": "_unicode_medium-red",
  atom_commit_editmsg: "_git-commit_medium-red",
  "aurelia.json": "_aurelia_dark-pink",
  authors: "_at_medium-red",
  "azure-pipelines.yaml": "_azurepipelines_dark-blue",
  "azure-pipelines.yml": "_azurepipelines_dark-blue",
  "babel.config.esm.js": "_babel_medium-yellow",
  "babel.config.js": "_babel_medium-yellow",
  "babel.config.json": "_babel_medium-yellow",
  "backbone.cjs": "_backbone_dark-blue",
  "backbonedev.cjs": "_backbone_dark-blue",
  "backbonedev.js": "_backbone_dark-blue",
  "backbonedev.mjs": "_backbone_dark-blue",
  "backbone.js": "_backbone_dark-blue",
  "backbone-min.cjs": "_backbone_dark-blue",
  "backbone.min.cjs": "_backbone_dark-blue",
  "backbone-min.js": "_backbone_dark-blue",
  "backbone.min.js": "_backbone_dark-blue",
  "backbone-min.mjs": "_backbone_dark-blue",
  "backbone.min.mjs": "_backbone_dark-blue",
  "backbone.mjs": "_backbone_dark-blue",
  bashhistory: "_terminal_dark-purple",
  "bash-history": "_terminal_dark-purple",
  bash_history: "_terminal_dark-purple",
  ".bashhistory": "_terminal_dark-purple",
  ".bash-history": "_terminal_dark-purple",
  ".bash_history": "_terminal_dark-purple",
  bashlogin: "_terminal_dark-purple",
  "bash-login": "_terminal_dark-purple",
  bash_login: "_terminal_dark-purple",
  ".bashlogin": "_terminal_dark-purple",
  ".bash-login": "_terminal_dark-purple",
  ".bash_login": "_terminal_dark-purple",
  bashlogout: "_terminal_dark-purple",
  "bash-logout": "_terminal_dark-purple",
  bash_logout: "_terminal_dark-purple",
  ".bashlogout": "_terminal_dark-purple",
  ".bash-logout": "_terminal_dark-purple",
  ".bash_logout": "_terminal_dark-purple",
  bashprofile: "_terminal_dark-purple",
  "bash-profile": "_terminal_dark-purple",
  bash_profile: "_terminal_dark-purple",
  ".bashprofile": "_terminal_dark-purple",
  ".bash-profile": "_terminal_dark-purple",
  ".bash_profile": "_terminal_dark-purple",
  bashprompt: "_terminal_dark-purple",
  "bash-prompt": "_terminal_dark-purple",
  bash_prompt: "_terminal_dark-purple",
  ".bashprompt": "_terminal_dark-purple",
  ".bash-prompt": "_terminal_dark-purple",
  ".bash_prompt": "_terminal_dark-purple",
  bashrc: "_terminal_dark-purple",
  ".bashrc": "_terminal_dark-purple",
  "bazel.bazelrc": "_bazel_dark-green",
  ".bazelrc": "_bazel_dark-green",
  "bazel.rc": "_bazel_dark-green",
  "bc.library": "_calc_medium-red",
  "behat.yaml": "_behat_medium-cyan",
  "behat.yml": "_behat_medium-cyan",
  berksfile: "_chef_medium-orange",
  "berksfile.lock": "_chef_medium-orange",
  "bidibrackets.txt": "_unicode_medium-red",
  "bidicharactertest.txt": "_unicode_medium-red",
  "bidimirroring.txt": "_unicode_medium-red",
  "biditest.txt": "_unicode_medium-red",
  "binder-requirements.in": "_binder_medium-orange",
  "binder_requirements.in": "_binder_medium-orange",
  "binder-requirements.txt": "_binder_medium-orange",
  "binder_requirements.txt": "_binder_medium-orange",
  ".bintray.json": "_bintray_medium-green",
  birthtoken: "_database_medium-green",
  "bitbucket-pipelines.yaml": "_bitbucket_medium-blue",
  "bitbucket-pipelines.yml": "_bitbucket_medium-blue",
  "bitcoin.conf": "_bitcoin_medium-orange",
  "blocks.txt": "_unicode_medium-red",
  "bootstrap.cjs": "_bootstrap_medium-green",
  "bootstrap.css": "_bootstrap_medium-blue",
  "bootstrap.js": "_bootstrap_medium-yellow",
  "bootstrap.less": "_bootstrap_dark-blue",
  "bootstrap.mjs": "_bootstrap_medium-blue",
  "bootstrap.scss": "_bootstrap_light-pink",
  "bootstrap.styl": "_bootstrap_medium-green",
  ".boringignore": "_darcs_dark-green",
  "bors.toml": "_bors_dark-purple",
  bowerfile: "_bower_medium-yellow",
  "bower.json": "_bower_medium-yellow",
  ".bowerrc": "_bower_medium-yellow",
  "brakeman.ignore": "_brakeman_dark-red",
  brewfile: "_brew_medium-orange",
  browserslist: "_browserslist_medium-orange",
  ".browserslistrc": "_browserslist_medium-orange",
  "browser-sync.cjs": "_browsersync_medium-red",
  "browser-sync.js": "_browsersync_medium-red",
  "browser-sync.json": "_browsersync_medium-red",
  "browser-sync.mjs": "_browsersync_medium-red",
  "brunch-config.cjs": "_brunch_medium-green",
  "brunch-config.coffee": "_brunch_medium-green",
  "brunch-config.js": "_brunch_medium-green",
  "brunch-config.mjs": "_brunch_medium-green",
  "brunch-config.ts": "_brunch_medium-green",
  "bs-config.cjs": "_browsersync_medium-red",
  "bs-config.js": "_browsersync_medium-red",
  "bs-config.json": "_browsersync_medium-red",
  "bs-config.mjs": "_browsersync_medium-red",
  bsdmakefile: "_checklist_medium-red",
  buck: "_buck_dark-blue",
  "bug-report": "_text_medium-red",
  bugs: "_book_dark-blue",
  build: "_bazel_medium-green",
  "build.bazel": "_bazel_medium-green",
  buildfile: "_ruby_medium-red",
  "buildfile.lock": "_ruby_medium-red",
  "buildozer.spec": "_config_dark-blue",
  bundled_node_version: "_node_dark-green",
  ".c8rc": "_v8_dark-blue",
  ".c8rc.json": "_v8_dark-blue",
  "cabal.config": "_cabal_medium-purple",
  "cabal-ghcjs.project": "_cabal_medium-yellow",
  "cabal.project": "_cabal_medium-purple",
  caddyfile: "_caddy_dark-blue",
  cakefile: "_cakefile_medium-red",
  capfile: "_ruby_medium-red",
  "capfile.lock": "_ruby_medium-red",
  cartfile: "_carthage_dark-pink",
  "casefolding.txt": "_unicode_medium-red",
  cask: "_emacs_dark-blue",
  ".cfignore": "_cloudfoundry_medium-blue",
  "chai.coffee": "_chai_medium-red",
  "chai.es": "_chai_medium-red",
  "chai.es6": "_chai_medium-red",
  "chai.js": "_chai_medium-red",
  "chai.jsx": "_chai_medium-red",
  "chai.ts": "_chai_medium-red",
  "chai.tsx": "_chai_medium-red",
  changelog: "_book_dark-blue",
  "change-log": "_book_dark-blue",
  change_log: "_book_dark-blue",
  changes: "_book_dark-blue",
  "chart.bundle.cjs": "_chartjs_dark-pink",
  "chart.bundle.js": "_chartjs_dark-pink",
  "chart.bundle.min.cjs": "_chartjs_dark-pink",
  "chart.bundle.min.js": "_chartjs_dark-pink",
  "chart.bundle.min.mjs": "_chartjs_dark-pink",
  "chart.bundle.mjs": "_chartjs_dark-pink",
  "chart.cjs": "_chartjs_dark-pink",
  "chart.js": "_chartjs_dark-pink",
  "chart.min.cjs": "_chartjs_dark-pink",
  "chart.min.js": "_chartjs_dark-pink",
  "chart.min.mjs": "_chartjs_dark-pink",
  "chart.mjs": "_chartjs_dark-pink",
  checksum: "_tag_medium-green",
  checksums: "_tag_medium-green",
  chefignore: "_chef_medium-orange",
  "chem.macros": "_manpage_dark-green",
  "chocolatey.ps1": "_chocolatey_medium-blue",
  "circle.yml": "_circleci_medium-green",
  citation: "_book_medium-blue",
  "citation.cff": "_book_medium-blue",
  citations: "_book_medium-blue",
  "cjkradicals.txt": "_unicode_medium-red",
  cksum: "_tag_medium-green",
  cksums: "_tag_medium-green",
  "click.me": "_book_medium-blue",
  "click.me.md": "_book_medium-blue",
  "click.me.txt": "_book_medium-blue",
  "cmakelists.txt": "_cmake_medium-red",
  cname: "_earth_dark-blue",
  "codecov.yaml": "_codecov_dark-pink",
  ".codecov.yaml": "_codecov_dark-pink",
  "codecov.yml": "_codecov_dark-pink",
  ".codecov.yml": "_codecov_dark-pink",
  "codegen.json": "_gql-codegen_dark-pink",
  "codegen.yaml": "_gql-codegen_dark-pink",
  "codegen.yml": "_gql-codegen_dark-pink",
  "codemeta.json": "_codemeta_medium-grey",
  "codemeta.jsonld": "_codemeta_medium-grey",
  codeowners: "_at_medium-red",
  "codeship-0.yaml": "_codeship_dark-blue",
  "codeship-0.yml": "_codeship_dark-blue",
  "codeship-1.yaml": "_codeship_dark-blue",
  "codeship-1.yml": "_codeship_dark-blue",
  "codeship-2.yaml": "_codeship_dark-blue",
  "codeship-2.yml": "_codeship_dark-blue",
  "codeship-3.yaml": "_codeship_dark-blue",
  "codeship-3.yml": "_codeship_dark-blue",
  "codeship-4.yaml": "_codeship_dark-blue",
  "codeship-4.yml": "_codeship_dark-blue",
  "codeship-5.yaml": "_codeship_dark-blue",
  "codeship-5.yml": "_codeship_dark-blue",
  "codeship-6.yaml": "_codeship_dark-blue",
  "codeship-6.yml": "_codeship_dark-blue",
  "codeship-7.yaml": "_codeship_dark-blue",
  "codeship-7.yml": "_codeship_dark-blue",
  "codeship-8.yaml": "_codeship_dark-blue",
  "codeship-8.yml": "_codeship_dark-blue",
  "codeship-9.yaml": "_codeship_dark-blue",
  "codeship-9.yml": "_codeship_dark-blue",
  "codeship-a.yaml": "_codeship_dark-blue",
  "codeship-a.yml": "_codeship_dark-blue",
  "codeship-b.yaml": "_codeship_dark-blue",
  "codeship-b.yml": "_codeship_dark-blue",
  "codeship-c.yaml": "_codeship_dark-blue",
  "codeship-c.yml": "_codeship_dark-blue",
  "codeship-d.yaml": "_codeship_dark-blue",
  "codeship-d.yml": "_codeship_dark-blue",
  "codeship-e.yaml": "_codeship_dark-blue",
  "codeship-e.yml": "_codeship_dark-blue",
  "codeship-f.yaml": "_codeship_dark-blue",
  "codeship-f.yml": "_codeship_dark-blue",
  "codeship-g.yaml": "_codeship_dark-blue",
  "codeship-g.yml": "_codeship_dark-blue",
  "codeship-h.yaml": "_codeship_dark-blue",
  "codeship-h.yml": "_codeship_dark-blue",
  "codeship-i.yaml": "_codeship_dark-blue",
  "codeship-i.yml": "_codeship_dark-blue",
  "codeship-j.yaml": "_codeship_dark-blue",
  "codeship-j.yml": "_codeship_dark-blue",
  "codeship-k.yaml": "_codeship_dark-blue",
  "codeship-k.yml": "_codeship_dark-blue",
  "codeship-l.yaml": "_codeship_dark-blue",
  "codeship-l.yml": "_codeship_dark-blue",
  "codeship-m.yaml": "_codeship_dark-blue",
  "codeship-m.yml": "_codeship_dark-blue",
  "codeship-n.yaml": "_codeship_dark-blue",
  "codeship-n.yml": "_codeship_dark-blue",
  "codeship-o.yaml": "_codeship_dark-blue",
  "codeship-o.yml": "_codeship_dark-blue",
  "codeship-p.yaml": "_codeship_dark-blue",
  "codeship-p.yml": "_codeship_dark-blue",
  "codeship-q.yaml": "_codeship_dark-blue",
  "codeship-q.yml": "_codeship_dark-blue",
  "codeship-r.yaml": "_codeship_dark-blue",
  "codeship-r.yml": "_codeship_dark-blue",
  "codeship-s.yaml": "_codeship_dark-blue",
  "codeship-s.yml": "_codeship_dark-blue",
  "codeship-t.yaml": "_codeship_dark-blue",
  "codeship-t.yml": "_codeship_dark-blue",
  "codeship-u.yaml": "_codeship_dark-blue",
  "codeship-u.yml": "_codeship_dark-blue",
  "codeship-v.yaml": "_codeship_dark-blue",
  "codeship-v.yml": "_codeship_dark-blue",
  "codeship-w.yaml": "_codeship_dark-blue",
  "codeship-w.yml": "_codeship_dark-blue",
  "codeship-x.yaml": "_codeship_dark-blue",
  "codeship-x.yml": "_codeship_dark-blue",
  "codeship--.yaml": "_codeship_dark-blue",
  "codeship-..yaml": "_codeship_dark-blue",
  "codeship-_.yaml": "_codeship_dark-blue",
  "codeship--.yml": "_codeship_dark-blue",
  "codeship-..yml": "_codeship_dark-blue",
  "codeship-_.yml": "_codeship_dark-blue",
  "codeship-y.yaml": "_codeship_dark-blue",
  "codeship-y.yml": "_codeship_dark-blue",
  "codeship-z.yaml": "_codeship_dark-blue",
  "codeship-z.yml": "_codeship_dark-blue",
  "coffeelint.json": "_config-coffee_medium-maroon",
  commit_editmsg: "_git-commit_medium-red",
  "commitlint.config.js": "_commitlint_medium-blue",
  ".commitlintrc.js": "_commitlint_medium-blue",
  ".commitlintrc.json": "_commitlint_medium-blue",
  ".commitlintrc.yaml": "_commitlint_medium-blue",
  ".commitlintrc.yml": "_commitlint_medium-blue",
  "compass.scss": "_compass_medium-red",
  "_compass.scss": "_compass_medium-red",
  compile: "_terminal_medium-red",
  "composer.json": "_composer_medium-yellow",
  "composer.lock": "_composer_medium-yellow",
  "composer.phar": "_composer_dark-blue",
  "compositionexclusions.txt": "_unicode_medium-red",
  "conan.conf": "_conan_medium-blue",
  "conanfile.py": "_conan_medium-blue",
  "conanfile.txt": "_conan_medium-blue",
  condarc: "_conda_medium-green",
  ".condarc": "_conda_medium-green",
  config: "_terminal_dark-purple",
  "config.codekit": "_codekit",
  "config.guess": "_terminal_medium-red",
  "config.rpath": "_terminal_medium-red",
  "config.status": "_terminal_medium-red",
  "config.sub": "_terminal_medium-red",
  configure: "_terminal_medium-red",
  "configure.ac": "_code_medium-red",
  "_config.yml": "_jekyll_medium-red",
  "+contents": "_openbsd_medium-orange",
  "contrib.mak": "_checklist_dark-red",
  "contrib.make": "_checklist_dark-red",
  contribute: "_book_dark-blue",
  contributing: "_book_dark-blue",
  contributors: "_book_dark-blue",
  control: "_debian_dark-cyan",
  copying: "_book_dark-blue",
  "copying.regex": "_book_dark-blue",
  copyright: "_book_dark-blue",
  "copyright.regex": "_book_dark-blue",
  "cordova-0.cjs": "_cordova_light-blue",
  "cordova-0.js": "_cordova_light-blue",
  "cordova-0.mjs": "_cordova_light-blue",
  "cordova-1.cjs": "_cordova_light-blue",
  "cordova-1.js": "_cordova_light-blue",
  "cordova-1.mjs": "_cordova_light-blue",
  "cordova-2.cjs": "_cordova_light-blue",
  "cordova-2.js": "_cordova_light-blue",
  "cordova-2.mjs": "_cordova_light-blue",
  "cordova-3.cjs": "_cordova_light-blue",
  "cordova-3.js": "_cordova_light-blue",
  "cordova-3.mjs": "_cordova_light-blue",
  "cordova-4.cjs": "_cordova_light-blue",
  "cordova-4.js": "_cordova_light-blue",
  "cordova-4.mjs": "_cordova_light-blue",
  "cordova-5.cjs": "_cordova_light-blue",
  "cordova-5.js": "_cordova_light-blue",
  "cordova-5.mjs": "_cordova_light-blue",
  "cordova-6.cjs": "_cordova_light-blue",
  "cordova-6.js": "_cordova_light-blue",
  "cordova-6.mjs": "_cordova_light-blue",
  "cordova-7.cjs": "_cordova_light-blue",
  "cordova-7.js": "_cordova_light-blue",
  "cordova-7.mjs": "_cordova_light-blue",
  "cordova-8.cjs": "_cordova_light-blue",
  "cordova-8.js": "_cordova_light-blue",
  "cordova-8.mjs": "_cordova_light-blue",
  "cordova-9.cjs": "_cordova_light-blue",
  "cordova-9.js": "_cordova_light-blue",
  "cordova-9.mjs": "_cordova_light-blue",
  "cordova.cjs": "_cordova_light-blue",
  "cordova.js": "_cordova_light-blue",
  "cordova.mjs": "_cordova_light-blue",
  ".coveragerc": "_config-python_dark-blue",
  ".coveralls.yaml": "_coveralls_medium-red",
  ".coveralls.yml": "_coveralls_medium-red",
  cpanfile: "_cpan_dark-blue",
  crc32sum: "_tag_medium-green",
  crc32sums: "_tag_medium-green",
  crcsum: "_tag_medium-green",
  crcsums: "_tag_medium-green",
  "crowdin.yaml": "_crowdin_medium-green",
  "crowdin.yml": "_crowdin_medium-green",
  cshrc: "_terminal_medium-orange",
  ".cshrc": "_terminal_medium-orange",
  ".csscomb.json": "_gear_medium-yellow",
  "cstr.54": "_manpage_dark-green",
  curlrc: "_curl_dark-blue",
  _curlrc: "_curl_dark-blue",
  "custom.bootstrap.cjs": "_bootstrap_medium-green",
  "custom.bootstrap.css": "_bootstrap_medium-blue",
  "custom.bootstrap.js": "_bootstrap_medium-yellow",
  "custom.bootstrap.less": "_bootstrap_dark-blue",
  "custom.bootstrap.mjs": "_bootstrap_medium-blue",
  "custom.bootstrap.scss": "_bootstrap_light-pink",
  "custom.bootstrap.styl": "_bootstrap_medium-green",
  "cz.json": "_commitizen_dark-purple",
  ".cz.json": "_commitizen_dark-purple",
  "cz.toml": "_commitizen_dark-purple",
  ".cz.toml": "_commitizen_dark-purple",
  "cz.yaml": "_commitizen_dark-purple",
  ".cz.yaml": "_commitizen_dark-purple",
  "cz.yml": "_commitizen_dark-purple",
  ".cz.yml": "_commitizen_dark-purple",
  "d3.cjs": "_d3_medium-orange",
  "d3.js": "_d3_medium-orange",
  "d3.mjs": "_d3_medium-orange",
  "d3.v0.cjs": "_d3_medium-orange",
  "d3.v0.js": "_d3_medium-orange",
  "d3.v0.mjs": "_d3_medium-orange",
  "d3.v1.cjs": "_d3_medium-orange",
  "d3.v1.js": "_d3_medium-orange",
  "d3.v1.mjs": "_d3_medium-orange",
  "d3.v2.cjs": "_d3_medium-orange",
  "d3.v2.js": "_d3_medium-orange",
  "d3.v2.mjs": "_d3_medium-orange",
  "d3.v3.cjs": "_d3_medium-orange",
  "d3.v3.js": "_d3_medium-orange",
  "d3.v3.mjs": "_d3_medium-orange",
  "d3.v4.cjs": "_d3_medium-orange",
  "d3.v4.js": "_d3_medium-orange",
  "d3.v4.mjs": "_d3_medium-orange",
  "d3.v5.cjs": "_d3_medium-orange",
  "d3.v5.js": "_d3_medium-orange",
  "d3.v5.mjs": "_d3_medium-orange",
  "d3.v6.cjs": "_d3_medium-orange",
  "d3.v6.js": "_d3_medium-orange",
  "d3.v6.mjs": "_d3_medium-orange",
  "d3.v7.cjs": "_d3_medium-orange",
  "d3.v7.js": "_d3_medium-orange",
  "d3.v7.mjs": "_d3_medium-orange",
  "d3.v8.cjs": "_d3_medium-orange",
  "d3.v8.js": "_d3_medium-orange",
  "d3.v8.mjs": "_d3_medium-orange",
  "d3.v9.cjs": "_d3_medium-orange",
  "d3.v9.js": "_d3_medium-orange",
  "d3.v9.mjs": "_d3_medium-orange",
  d8: "_v8_medium-blue",
  dangerfile: "_ruby_medium-red",
  "dangerfile.lock": "_ruby_medium-red",
  dcrc: "_calc_medium-blue",
  ".dcrc": "_calc_medium-blue",
  "delete.me": "_book_medium-blue",
  "delete.me.md": "_book_medium-blue",
  "delete.me.txt": "_book_medium-blue",
  deliverfile: "_ruby_medium-red",
  "deliverfile.lock": "_ruby_medium-red",
  "deno.json": "_deno_medium-grey",
  "deno.jsonc": "_deno_medium-grey",
  depcomp: "_terminal_medium-red",
  "dependabot.yaml": "_dependabot_medium-blue",
  "dependabot.yml": "_dependabot_medium-blue",
  "deploy.prototxt": "_caffe2_medium-purple",
  deps: "_checklist_dark-blue",
  "derivedage.txt": "_unicode_medium-red",
  "derivedbidiclass.txt": "_unicode_medium-red",
  "derivedbinaryproperties.txt": "_unicode_medium-red",
  "derivedcombiningclass.txt": "_unicode_medium-red",
  "derivedcoreproperties.txt": "_unicode_medium-red",
  "deriveddecompositiontype.txt": "_unicode_medium-red",
  "derivedeastasianwidth.txt": "_unicode_medium-red",
  "derivedgeneralcategory.txt": "_unicode_medium-red",
  "derivedjoininggroup.txt": "_unicode_medium-red",
  "derivedjoiningtype.txt": "_unicode_medium-red",
  "derivedlinebreak.txt": "_unicode_medium-red",
  "derivedname.txt": "_unicode_medium-red",
  "derivednormalizationprops.txt": "_unicode_medium-red",
  "derivednumerictype.txt": "_unicode_medium-red",
  "derivednumericvalues.txt": "_unicode_medium-red",
  "+desc": "_openbsd_medium-orange",
  "devcontainer.json": "_devcontainer_medium-blue",
  "dev-requirements.in": "_pypi_dark-blue",
  "dev_requirements.in": "_pypi_dark-blue",
  "dev-requirements.txt": "_pypi_dark-blue",
  "dev_requirements.txt": "_pypi_dark-blue",
  dircolors: "_terminal_medium-green",
  dir_colors: "_terminal_medium-green",
  _dircolors: "_terminal_medium-green",
  _dir_colors: "_terminal_medium-green",
  ".dircolors": "_terminal_medium-green",
  ".dir_colors": "_terminal_medium-green",
  "._dircolors": "_terminal_medium-green",
  "._dir_colors": "_terminal_medium-green",
  "+display": "_openbsd_medium-orange",
  "docker-sync.yml": "_docker_dark-orange",
  "doc-requirements.in": "_pypi_dark-blue",
  "doc_requirements.in": "_pypi_dark-blue",
  "doc-requirements.txt": "_pypi_dark-blue",
  "doc_requirements.txt": "_pypi_dark-blue",
  "docs-requirements.in": "_pypi_dark-blue",
  "docs_requirements.in": "_pypi_dark-blue",
  "docs-requirements.txt": "_pypi_dark-blue",
  "docs_requirements.txt": "_pypi_dark-blue",
  "docz.cjs": "_docz_medium-yellow",
  "docz.config.cjs": "_docz_medium-yellow",
  "docz.config.js": "_docz_medium-yellow",
  "docz.config.json": "_docz_medium-orange",
  "docz.config.mjs": "_docz_medium-yellow",
  "docz.js": "_docz_medium-yellow",
  "docz.json": "_docz_medium-orange",
  "docz.mjs": "_docz_medium-yellow",
  "doczrc.cjs": "_docz_medium-yellow",
  "doczrc.config.cjs": "_docz_medium-yellow",
  "doczrc.config.js": "_docz_medium-yellow",
  "doczrc.config.json": "_docz_medium-orange",
  "doczrc.config.mjs": "_docz_medium-yellow",
  "doczrc.js": "_docz_medium-yellow",
  "doczrc.json": "_docz_medium-orange",
  "doczrc.mjs": "_docz_medium-yellow",
  "dojo.cjs": "_dojo_light-red",
  "dojo.js": "_dojo_light-red",
  "dojo.mjs": "_dojo_light-red",
  "dosbox.conf": "_dosbox_medium-orange",
  "dosbox_.conf": "_dosbox_medium-orange",
  dosboxpref: "_dosbox_medium-orange",
  dosbox_pref: "_dosbox_medium-orange",
  doxyfile: "_doxygen_medium-blue",
  ".doxyfile": "_doxygen_medium-blue",
  "dragula.cjs": "_dragula_dark-purple",
  "dragula.css": "_dragula_dark-purple",
  "dragula.js": "_dragula_dark-purple",
  "dragula.min.cjs": "_dragula_dark-purple",
  "dragula.min.css": "_dragula_dark-purple",
  "dragula.min.js": "_dragula_dark-purple",
  "dragula.min.mjs": "_dragula_dark-purple",
  "dragula.mjs": "_dragula_dark-purple",
  ".drawio": "_drawio_medium-orange",
  dsc: "_debian_dark-cyan",
  "dub.json": "_dub_medium-red",
  "dub.sdl": "_dub_medium-red",
  "dub.selections.json": "_dub_medium-red",
  "dub.selections.sdl": "_dub_medium-red",
  "eastasianwidth.txt": "_unicode_medium-red",
  eign: "_database_dark-red",
  el: "_emacs_medium-purple",
  elc: "_emacs_dark-purple",
  eld: "_emacs_dark-purple",
  emacs: "_emacs_medium-purple",
  _emacs: "_emacs_medium-purple",
  "emacs.desktop": "_emacs_medium-purple",
  emakefile: "_erlang_dark-green",
  "emojisources.txt": "_unicode_medium-red",
  "encodings.dir": "_database_medium-orange",
  ".env": "_dotenv_medium-yellow",
  eqnrc: "_manpage_dark-green",
  "eqnrc-end": "_manpage_dark-green",
  "equivalentunifiedideograph.txt": "_unicode_medium-red",
  "esdoc.cjs": "_esdoc_medium-red",
  ".esdoc.cjs": "_esdoc_medium-red",
  "esdoc.js": "_esdoc_medium-red",
  ".esdoc.js": "_esdoc_medium-red",
  "esdoc.json": "_esdoc_medium-red",
  ".esdoc.json": "_esdoc_medium-red",
  "esdoc.mjs": "_esdoc_medium-red",
  ".esdoc.mjs": "_esdoc_medium-red",
  "eshost-config.json": "_config-js_medium-yellow",
  ".eshost-config.json": "_config-js_medium-yellow",
  "eshost.json": "_config-js_medium-yellow",
  ".eshost.json": "_config-js_medium-yellow",
  ".eslintrc.cjs": "_eslint_light-purple",
  ".eslintrc.js": "_eslint_light-purple",
  ".eslintrc.json": "_eslint_light-purple",
  ".eslintrc.mjs": "_eslint_light-purple",
  ".eslintrc.yaml": "_eslint_light-purple",
  ".eslintrc.yml": "_eslint_light-purple",
  "eth.p": "_manpage_dark-green",
  exrc: "_vim_medium-green",
  "fabfile.py": "_fabfile_medium-blue",
  "fabric.mod.json": "_fabric_medium-orange",
  fakefile: "_fancy_medium-green",
  faq: "_book_dark-blue",
  fastfile: "_ruby_medium-red",
  "fastfile.lock": "_ruby_medium-red",
  "fc-list": "_database_medium-orange",
  fdl: "_text_medium-red",
  figmagic: "_database_medium-purple",
  "firebase.json": "_firebase_medium-yellow",
  "firestore.indexes.json": "_firebase_medium-yellow",
  "firestore.rule": "_firebase_medium-orange",
  "firestore.rules": "_firebase_medium-orange",
  ".fishrc": "_terminal_medium-green",
  fixes: "_book_dark-blue",
  "flask-.py": "_flask_dark-blue",
  "flask..py": "_flask_dark-blue",
  "flask_.py": "_flask_dark-blue",
  flowers: "_database_medium-green",
  fontinfo: "_postscript_medium-blue",
  fontmap: "_postscript_dark-red",
  "fontmap.gs": "_postscript_dark-red",
  "fonts.alias": "_database_medium-red",
  "fonts.dir": "_database_medium-red",
  "fonts.scale": "_database_medium-red",
  "forge.config.js": "_electron_dark-cyan",
  "for-release": "_text_medium-red",
  "fp-info-cache": "_kicad_medium-maroon",
  "fp-lib-table": "_kicad_medium-maroon",
  fstab: "_database_medium-maroon",
  "fuelux.cjs": "_fuelux_medium-orange",
  "fuelux.css": "_fuelux_medium-orange",
  "fuelux.js": "_fuelux_medium-orange",
  "fuelux.min.cjs": "_fuelux_medium-orange",
  "fuelux.min.css": "_fuelux_medium-orange",
  "fuelux.min.js": "_fuelux_medium-orange",
  "fuelux.min.mjs": "_fuelux_medium-orange",
  "fuelux.mjs": "_fuelux_medium-orange",
  "fuse.cjs": "_fusebox_medium-blue",
  "fuse.js": "_fusebox_medium-blue",
  "fuse.mjs": "_fusebox_medium-blue",
  "galaxy.ini": "_galaxy_medium-grey",
  "gatsby-0.js": "_gatsby_dark-purple",
  "gatsby-0.ts": "_gatsby_dark-purple",
  "gatsby-1.js": "_gatsby_dark-purple",
  "gatsby-1.ts": "_gatsby_dark-purple",
  "gatsby-2.js": "_gatsby_dark-purple",
  "gatsby-2.ts": "_gatsby_dark-purple",
  "gatsby-3.js": "_gatsby_dark-purple",
  "gatsby-3.ts": "_gatsby_dark-purple",
  "gatsby-4.js": "_gatsby_dark-purple",
  "gatsby-4.ts": "_gatsby_dark-purple",
  "gatsby-5.js": "_gatsby_dark-purple",
  "gatsby-5.ts": "_gatsby_dark-purple",
  "gatsby-6.js": "_gatsby_dark-purple",
  "gatsby-6.ts": "_gatsby_dark-purple",
  "gatsby-7.js": "_gatsby_dark-purple",
  "gatsby-7.ts": "_gatsby_dark-purple",
  "gatsby-8.js": "_gatsby_dark-purple",
  "gatsby-8.ts": "_gatsby_dark-purple",
  "gatsby-9.js": "_gatsby_dark-purple",
  "gatsby-9.ts": "_gatsby_dark-purple",
  "gatsby-a.js": "_gatsby_dark-purple",
  "gatsby-a.ts": "_gatsby_dark-purple",
  "gatsby-b.js": "_gatsby_dark-purple",
  "gatsby-b.ts": "_gatsby_dark-purple",
  "gatsby-c.js": "_gatsby_dark-purple",
  "gatsby-c.ts": "_gatsby_dark-purple",
  "gatsby-d.js": "_gatsby_dark-purple",
  "gatsby-d.ts": "_gatsby_dark-purple",
  "gatsby-e.js": "_gatsby_dark-purple",
  "gatsby-e.ts": "_gatsby_dark-purple",
  "gatsby-f.js": "_gatsby_dark-purple",
  "gatsby-f.ts": "_gatsby_dark-purple",
  "gatsby-g.js": "_gatsby_dark-purple",
  "gatsby-g.ts": "_gatsby_dark-purple",
  "gatsby-h.js": "_gatsby_dark-purple",
  "gatsby-h.ts": "_gatsby_dark-purple",
  "gatsby-i.js": "_gatsby_dark-purple",
  "gatsby-i.ts": "_gatsby_dark-purple",
  "gatsby-j.js": "_gatsby_dark-purple",
  "gatsby- .js": "_gatsby_dark-purple",
  "gatsby-!.js": "_gatsby_dark-purple",
  'gatsby-".js': "_gatsby_dark-purple",
  "gatsby-#.js": "_gatsby_dark-purple",
  "gatsby-$.js": "_gatsby_dark-purple",
  "gatsby-%.js": "_gatsby_dark-purple",
  "gatsby-&.js": "_gatsby_dark-purple",
  "gatsby-'.js": "_gatsby_dark-purple",
  "gatsby-(.js": "_gatsby_dark-purple",
  "gatsby-).js": "_gatsby_dark-purple",
  "gatsby-*.js": "_gatsby_dark-purple",
  "gatsby-+.js": "_gatsby_dark-purple",
  "gatsby-,.js": "_gatsby_dark-purple",
  "gatsby--.js": "_gatsby_dark-purple",
  "gatsby-..js": "_gatsby_dark-purple",
  "gatsby-/.js": "_gatsby_dark-purple",
  "gatsby-:.js": "_gatsby_dark-purple",
  "gatsby-;.js": "_gatsby_dark-purple",
  "gatsby-<.js": "_gatsby_dark-purple",
  "gatsby-=.js": "_gatsby_dark-purple",
  "gatsby->.js": "_gatsby_dark-purple",
  "gatsby-?.js": "_gatsby_dark-purple",
  "gatsby-@.js": "_gatsby_dark-purple",
  "gatsby-[.js": "_gatsby_dark-purple",
  "gatsby-\\.js": "_gatsby_dark-purple",
  "gatsby-].js": "_gatsby_dark-purple",
  "gatsby-^.js": "_gatsby_dark-purple",
  "gatsby-_.js": "_gatsby_dark-purple",
  "gatsby-`.js": "_gatsby_dark-purple",
  "gatsby-{.js": "_gatsby_dark-purple",
  "gatsby-|.js": "_gatsby_dark-purple",
  "gatsby-}.js": "_gatsby_dark-purple",
  "gatsby-~.js": "_gatsby_dark-purple",
  "gatsby-j.ts": "_gatsby_dark-purple",
  "gatsby-k.js": "_gatsby_dark-purple",
  "gatsby-k.ts": "_gatsby_dark-purple",
  "gatsby-l.js": "_gatsby_dark-purple",
  "gatsby-l.ts": "_gatsby_dark-purple",
  "gatsby-m.js": "_gatsby_dark-purple",
  "gatsby-m.ts": "_gatsby_dark-purple",
  "gatsby-n.js": "_gatsby_dark-purple",
  "gatsby-n.ts": "_gatsby_dark-purple",
  "gatsby-o.js": "_gatsby_dark-purple",
  "gatsby-o.ts": "_gatsby_dark-purple",
  "gatsby-p.js": "_gatsby_dark-purple",
  "gatsby-p.ts": "_gatsby_dark-purple",
  "gatsby-q.js": "_gatsby_dark-purple",
  "gatsby-q.ts": "_gatsby_dark-purple",
  "gatsby-r.js": "_gatsby_dark-purple",
  "gatsby-r.ts": "_gatsby_dark-purple",
  "gatsby-s.js": "_gatsby_dark-purple",
  "gatsby-s.ts": "_gatsby_dark-purple",
  "gatsby-t.js": "_gatsby_dark-purple",
  "gatsby- .ts": "_gatsby_dark-purple",
  "gatsby-!.ts": "_gatsby_dark-purple",
  'gatsby-".ts': "_gatsby_dark-purple",
  "gatsby-#.ts": "_gatsby_dark-purple",
  "gatsby-$.ts": "_gatsby_dark-purple",
  "gatsby-%.ts": "_gatsby_dark-purple",
  "gatsby-&.ts": "_gatsby_dark-purple",
  "gatsby-'.ts": "_gatsby_dark-purple",
  "gatsby-(.ts": "_gatsby_dark-purple",
  "gatsby-).ts": "_gatsby_dark-purple",
  "gatsby-*.ts": "_gatsby_dark-purple",
  "gatsby-+.ts": "_gatsby_dark-purple",
  "gatsby-,.ts": "_gatsby_dark-purple",
  "gatsby--.ts": "_gatsby_dark-purple",
  "gatsby-..ts": "_gatsby_dark-purple",
  "gatsby-/.ts": "_gatsby_dark-purple",
  "gatsby-:.ts": "_gatsby_dark-purple",
  "gatsby-;.ts": "_gatsby_dark-purple",
  "gatsby-<.ts": "_gatsby_dark-purple",
  "gatsby-=.ts": "_gatsby_dark-purple",
  "gatsby->.ts": "_gatsby_dark-purple",
  "gatsby-?.ts": "_gatsby_dark-purple",
  "gatsby-@.ts": "_gatsby_dark-purple",
  "gatsby-[.ts": "_gatsby_dark-purple",
  "gatsby-\\.ts": "_gatsby_dark-purple",
  "gatsby-].ts": "_gatsby_dark-purple",
  "gatsby-^.ts": "_gatsby_dark-purple",
  "gatsby-_.ts": "_gatsby_dark-purple",
  "gatsby-`.ts": "_gatsby_dark-purple",
  "gatsby-{.ts": "_gatsby_dark-purple",
  "gatsby-|.ts": "_gatsby_dark-purple",
  "gatsby-}.ts": "_gatsby_dark-purple",
  "gatsby-~.ts": "_gatsby_dark-purple",
  "gatsby-t.ts": "_gatsby_dark-purple",
  "gatsby-u.js": "_gatsby_dark-purple",
  "gatsby-u.ts": "_gatsby_dark-purple",
  "gatsby-v.js": "_gatsby_dark-purple",
  "gatsby-v.ts": "_gatsby_dark-purple",
  "gatsby-w.js": "_gatsby_dark-purple",
  "gatsby-w.ts": "_gatsby_dark-purple",
  "gatsby-x.js": "_gatsby_dark-purple",
  "gatsby-x.ts": "_gatsby_dark-purple",
  "gatsby-y.js": "_gatsby_dark-purple",
  "gatsby-y.ts": "_gatsby_dark-purple",
  "gatsby-z.js": "_gatsby_dark-purple",
  "gatsby-z.ts": "_gatsby_dark-purple",
  ".gazelcfg.json": "_bazel_medium-cyan",
  gemfile: "_bundler_medium-blue",
  "gemfile.lock": "_bundler_medium-blue",
  gemrc: "_ruby_medium-red",
  ".gemrc": "_ruby_medium-red",
  ".gitattributes": "_git_medium-red",
  ".git-blame-ignore-revs": "_git_medium-red",
  "git-credential-osxkeychain": "_key_medium-green",
  gitignore: "_git_medium-red",
  "gitignore-global": "_git_medium-red",
  gitignore_global: "_git_medium-red",
  ".gitkeep": "_git_medium-red",
  ".gitlab-ci.yml": "_gitlab_medium-orange",
  ".gitmodules": "_git_medium-red",
  "gitpod.yaml": "_gitpod_medium-blue",
  ".gitpod.yaml": "_gitpod_medium-blue",
  "gitpod.yml": "_gitpod_medium-blue",
  ".gitpod.yml": "_gitpod_medium-blue",
  "glide.yaml": "_glide_light-orange",
  "glide.yml": "_glide_light-orange",
  ".global.gitattributes": "_git_medium-red",
  ".global.gitignore": "_git_medium-red",
  gnumakefile: "_checklist_medium-green",
  "go.mod": "_config-go_dark-blue",
  ".goreleaser.yaml": "_goreleaser_medium-blue",
  ".goreleaser.yml": "_goreleaser_medium-blue",
  "go.sum": "_config-go_medium-green",
  "grap.defines": "_manpage_dark-green",
  "graphemebreakproperty.txt": "_unicode_medium-red",
  "graphemebreaktest.txt": "_unicode_medium-red",
  "graphql.config.js": "_graphql_medium-pink",
  ".graphqlrc": "_graphql_medium-pink",
  ".graphqlrc.js": "_graphql_medium-pink",
  ".graphqlrc.json": "_graphql_medium-pink",
  ".graphqlrc.yaml": "_graphql_medium-pink",
  ".graphqlrc.yml": "_graphql_medium-pink",
  "grap.tex.defines": "_manpage_dark-green",
  "greenkeeper.json": "_greenkeeper_medium-green",
  "gruntfile.babel.cjs": "_grunt_medium-yellow",
  "gruntfile.babel.coffee": "_grunt_medium-maroon",
  "gruntfile.babel.js": "_grunt_medium-yellow",
  "gruntfile.babel.jsx": "_grunt_medium-yellow",
  "gruntfile.babel.litcoffee": "_grunt_medium-maroon",
  "gruntfile.babel.mjs": "_grunt_medium-yellow",
  "gruntfile.cjs": "_grunt_medium-yellow",
  "gruntfile.coffee": "_grunt_medium-maroon",
  "gruntfile.js": "_grunt_medium-yellow",
  "gruntfile.jsx": "_grunt_medium-yellow",
  "gruntfile.litcoffee": "_grunt_medium-maroon",
  "gruntfile.mjs": "_grunt_medium-yellow",
  "gruntfile.ts": "_grunt_medium-blue",
  "gruntfile.tsx": "_grunt_medium-blue",
  guardfile: "_ruby_medium-red",
  "guardfile.lock": "_ruby_medium-red",
  "gulpfile.babel.cjs": "_gulp_medium-red",
  "gulpfile.babel.coffee": "_gulp_medium-maroon",
  "gulpfile.babel.js": "_gulp_medium-red",
  "gulpfile.babel.jsx": "_gulp_medium-red",
  "gulpfile.babel.litcoffee": "_gulp_medium-maroon",
  "gulpfile.babel.mjs": "_gulp_medium-red",
  "gulpfile.cjs": "_gulp_medium-red",
  "gulpfile.coffee": "_gulp_medium-maroon",
  "gulpfile.esm.cjs": "_gulp_medium-red",
  "gulpfile.esm.coffee": "_gulp_medium-maroon",
  "gulpfile.esm.js": "_gulp_medium-red",
  "gulpfile.esm.jsx": "_gulp_medium-red",
  "gulpfile.esm.litcoffee": "_gulp_medium-maroon",
  "gulpfile.esm.mjs": "_gulp_medium-red",
  "gulpfile.js": "_gulp_medium-red",
  "gulpfile.jsx": "_gulp_medium-red",
  "gulpfile.litcoffee": "_gulp_medium-maroon",
  "gulpfile.mjs": "_gulp_medium-red",
  "gulpfile.ts": "_gulp_medium-blue",
  "gulpfile.tsx": "_gulp_medium-blue",
  gviminfo: "_vim_dark-green",
  gvimrc: "_vim_dark-green",
  hacking: "_book_dark-blue",
  "hangulsyllabletype.txt": "_unicode_medium-red",
  "haskellconfig.json": "_config-hs_medium-purple",
  "hie.yaml": "_hie_dark-purple",
  "hie.yml": "_hie_dark-purple",
  ".hintrc": "_webhint_dark-purple",
  history: "_book_dark-blue",
  ".htaccess": "_gear_medium-red",
  ".htpasswd": "_gear_medium-orange",
  "httpd.conf": "_apache_medium-red",
  ".hyper.cjs": "_hyper_dark-purple",
  ".hyper.js": "_hyper_dark-purple",
  ".hyper.mjs": "_hyper_dark-purple",
  "hyphen.cs": "_tex_medium-red",
  "hyphen.den": "_tex_medium-red",
  "hyphen.det": "_tex_medium-red",
  "hyphenex.cs": "_tex_medium-red",
  "hyphenex.den": "_tex_medium-red",
  "hyphenex.det": "_tex_medium-red",
  "hyphenex.fr": "_tex_medium-red",
  "hyphenex.sv": "_tex_medium-red",
  "hyphenex.us": "_tex_medium-red",
  "hyphen.fr": "_tex_medium-red",
  "hyphen.sv": "_tex_medium-red",
  "hyphen.us": "_tex_medium-red",
  "icomoon.json": "_icomoon_medium-purple",
  "icon\r": "_finder_medium-blue",
  ".icondb.js": "_database_dark-red",
  ".imgbotconfig": "_imgbot_dark-cyan",
  indep_tr: "_manpage_dark-green",
  "index.bt": "_database_medium-red",
  "index.db": "_database_medium-red",
  "index.dir": "_database_medium-red",
  "index.pag": "_database_medium-red",
  "index.txt": "_unicode_medium-red",
  "indicpositionalcategory.txt": "_unicode_medium-red",
  "indicsyllabiccategory.txt": "_unicode_medium-red",
  "init_net.pb": "_caffe2_dark-blue",
  ".install": "_archlinux_dark-purple",
  install: "_book_dark-blue",
  "installscript.qs": "_qt_medium-yellow",
  "install-sh": "_terminal_dark-purple",
  "ionic.config.json": "_ionic_medium-blue",
  "ionic.project": "_ionic_medium-blue",
  irbrc: "_ruby_medium-red",
  ".irbrc": "_ruby_medium-red",
  ".issuetracker": "_fork_medium-blue",
  jakefile: "_jake_medium-maroon",
  "jamo.txt": "_unicode_medium-red",
  jarfile: "_ruby_medium-red",
  "jarfile.lock": "_ruby_medium-red",
  "jasmine.0.cjs": "_jasmine_medium-purple",
  "jasmine.0.coffee": "_jasmine_medium-purple",
  "jasmine.0.js": "_jasmine_medium-purple",
  "jasmine.0.mjs": "_jasmine_medium-purple",
  "jasmine.0.ts": "_jasmine_medium-purple",
  "jasmine.1.cjs": "_jasmine_medium-purple",
  "jasmine.1.coffee": "_jasmine_medium-purple",
  "jasmine.1.js": "_jasmine_medium-purple",
  "jasmine.1.mjs": "_jasmine_medium-purple",
  "jasmine.1.ts": "_jasmine_medium-purple",
  "jasmine.2.cjs": "_jasmine_medium-purple",
  "jasmine.2.coffee": "_jasmine_medium-purple",
  "jasmine.2.js": "_jasmine_medium-purple",
  "jasmine.2.mjs": "_jasmine_medium-purple",
  "jasmine.2.ts": "_jasmine_medium-purple",
  "jasmine.3.cjs": "_jasmine_medium-purple",
  "jasmine.3.coffee": "_jasmine_medium-purple",
  "jasmine.3.js": "_jasmine_medium-purple",
  "jasmine.3.mjs": "_jasmine_medium-purple",
  "jasmine.3.ts": "_jasmine_medium-purple",
  "jasmine.4.cjs": "_jasmine_medium-purple",
  "jasmine.4.coffee": "_jasmine_medium-purple",
  "jasmine.4.js": "_jasmine_medium-purple",
  "jasmine.4.mjs": "_jasmine_medium-purple",
  "jasmine.4.ts": "_jasmine_medium-purple",
  "jasmine.5.cjs": "_jasmine_medium-purple",
  "jasmine.5.coffee": "_jasmine_medium-purple",
  "jasmine.5.js": "_jasmine_medium-purple",
  "jasmine.5.mjs": "_jasmine_medium-purple",
  "jasmine.5.ts": "_jasmine_medium-purple",
  "jasmine.6.cjs": "_jasmine_medium-purple",
  "jasmine.6.coffee": "_jasmine_medium-purple",
  "jasmine.6.js": "_jasmine_medium-purple",
  "jasmine.6.mjs": "_jasmine_medium-purple",
  "jasmine.6.ts": "_jasmine_medium-purple",
  "jasmine.7.cjs": "_jasmine_medium-purple",
  "jasmine.7.coffee": "_jasmine_medium-purple",
  "jasmine.7.js": "_jasmine_medium-purple",
  "jasmine.7.mjs": "_jasmine_medium-purple",
  "jasmine.7.ts": "_jasmine_medium-purple",
  "jasmine.8.cjs": "_jasmine_medium-purple",
  "jasmine.8.coffee": "_jasmine_medium-purple",
  "jasmine.8.js": "_jasmine_medium-purple",
  "jasmine.8.mjs": "_jasmine_medium-purple",
  "jasmine.8.ts": "_jasmine_medium-purple",
  "jasmine.9.cjs": "_jasmine_medium-purple",
  "jasmine.9.coffee": "_jasmine_medium-purple",
  "jasmine.9.js": "_jasmine_medium-purple",
  "jasmine.9.mjs": "_jasmine_medium-purple",
  "jasmine.9.ts": "_jasmine_medium-purple",
  "jasmine.a.cjs": "_jasmine_medium-purple",
  "jasmine.a.coffee": "_jasmine_medium-purple",
  "jasmine.a.js": "_jasmine_medium-purple",
  "jasmine.a.mjs": "_jasmine_medium-purple",
  "jasmine.a.ts": "_jasmine_medium-purple",
  "jasmine.b.cjs": "_jasmine_medium-purple",
  "jasmine.b.coffee": "_jasmine_medium-purple",
  "jasmine.b.js": "_jasmine_medium-purple",
  "jasmine.b.mjs": "_jasmine_medium-purple",
  "jasmine.b.ts": "_jasmine_medium-purple",
  "jasmine.c.cjs": "_jasmine_medium-purple",
  "jasmine.c.coffee": "_jasmine_medium-purple",
  "jasmine.cjs": "_jasmine_medium-purple",
  "jasmine.-.cjs": "_jasmine_medium-purple",
  "jasmine.c.js": "_jasmine_medium-purple",
  "jasmine._.cjs": "_jasmine_medium-purple",
  "jasmine.c.mjs": "_jasmine_medium-purple",
  "jasmine.coffee": "_jasmine_medium-purple",
  "jasmine.-.coffee": "_jasmine_medium-purple",
  "jasmine._.coffee": "_jasmine_medium-purple",
  "jasmine.c.ts": "_jasmine_medium-purple",
  "jasmine.d.cjs": "_jasmine_medium-purple",
  "jasmine.d.coffee": "_jasmine_medium-purple",
  "jasmine.d.js": "_jasmine_medium-purple",
  "jasmine.d.mjs": "_jasmine_medium-purple",
  "jasmine.d.ts": "_jasmine_medium-purple",
  "jasmine.e.cjs": "_jasmine_medium-purple",
  "jasmine.e.coffee": "_jasmine_medium-purple",
  "jasmine.e.js": "_jasmine_medium-purple",
  "jasmine.e.mjs": "_jasmine_medium-purple",
  "jasmine.e.ts": "_jasmine_medium-purple",
  "jasmine.f.cjs": "_jasmine_medium-purple",
  "jasmine.f.coffee": "_jasmine_medium-purple",
  "jasmine.f.js": "_jasmine_medium-purple",
  "jasmine.f.mjs": "_jasmine_medium-purple",
  "jasmine.f.ts": "_jasmine_medium-purple",
  "jasmine.g.cjs": "_jasmine_medium-purple",
  "jasmine.g.coffee": "_jasmine_medium-purple",
  "jasmine.g.js": "_jasmine_medium-purple",
  "jasmine.g.mjs": "_jasmine_medium-purple",
  "jasmine.g.ts": "_jasmine_medium-purple",
  "jasmine.h.cjs": "_jasmine_medium-purple",
  "jasmine.h.coffee": "_jasmine_medium-purple",
  "jasmine.h.js": "_jasmine_medium-purple",
  "jasmine.h.mjs": "_jasmine_medium-purple",
  "jasmine.h.ts": "_jasmine_medium-purple",
  "jasmine.i.cjs": "_jasmine_medium-purple",
  "jasmine.i.coffee": "_jasmine_medium-purple",
  "jasmine.i.js": "_jasmine_medium-purple",
  "jasmine.i.mjs": "_jasmine_medium-purple",
  "jasmine.i.ts": "_jasmine_medium-purple",
  "jasmine.j.cjs": "_jasmine_medium-purple",
  "jasmine.j.coffee": "_jasmine_medium-purple",
  "jasmine.j.js": "_jasmine_medium-purple",
  "jasmine.j.mjs": "_jasmine_medium-purple",
  "jasmine.js": "_jasmine_medium-purple",
  "jasmine.-.js": "_jasmine_medium-purple",
  "jasmine._.js": "_jasmine_medium-purple",
  "jasmine.json": "_jasmine_medium-purple",
  ".jasmine.json": "_jasmine_medium-purple",
  "jasmine.j.ts": "_jasmine_medium-purple",
  "jasmine.k.cjs": "_jasmine_medium-purple",
  "jasmine.k.coffee": "_jasmine_medium-purple",
  "jasmine.k.js": "_jasmine_medium-purple",
  "jasmine.k.mjs": "_jasmine_medium-purple",
  "jasmine.k.ts": "_jasmine_medium-purple",
  "jasmine.l.cjs": "_jasmine_medium-purple",
  "jasmine.l.coffee": "_jasmine_medium-purple",
  "jasmine.l.js": "_jasmine_medium-purple",
  "jasmine.l.mjs": "_jasmine_medium-purple",
  "jasmine.l.ts": "_jasmine_medium-purple",
  "jasmine.m.cjs": "_jasmine_medium-purple",
  "jasmine.m.coffee": "_jasmine_medium-purple",
  "jasmine.mjs": "_jasmine_medium-purple",
  "jasmine.-.mjs": "_jasmine_medium-purple",
  "jasmine.m.js": "_jasmine_medium-purple",
  "jasmine._.mjs": "_jasmine_medium-purple",
  "jasmine.m.mjs": "_jasmine_medium-purple",
  "jasmine.m.ts": "_jasmine_medium-purple",
  "jasmine.n.cjs": "_jasmine_medium-purple",
  "jasmine.n.coffee": "_jasmine_medium-purple",
  "jasmine.n.js": "_jasmine_medium-purple",
  "jasmine.n.mjs": "_jasmine_medium-purple",
  "jasmine.n.ts": "_jasmine_medium-purple",
  "jasmine.o.cjs": "_jasmine_medium-purple",
  "jasmine.o.coffee": "_jasmine_medium-purple",
  "jasmine.o.js": "_jasmine_medium-purple",
  "jasmine.o.mjs": "_jasmine_medium-purple",
  "jasmine.o.ts": "_jasmine_medium-purple",
  "jasmine.p.cjs": "_jasmine_medium-purple",
  "jasmine.p.coffee": "_jasmine_medium-purple",
  "jasmine.p.js": "_jasmine_medium-purple",
  "jasmine.p.mjs": "_jasmine_medium-purple",
  "jasmine.p.ts": "_jasmine_medium-purple",
  "jasmine.q.cjs": "_jasmine_medium-purple",
  "jasmine.q.coffee": "_jasmine_medium-purple",
  "jasmine.q.js": "_jasmine_medium-purple",
  "jasmine.q.mjs": "_jasmine_medium-purple",
  "jasmine.q.ts": "_jasmine_medium-purple",
  "jasmine.r.cjs": "_jasmine_medium-purple",
  "jasmine.r.coffee": "_jasmine_medium-purple",
  "jasmine.r.js": "_jasmine_medium-purple",
  "jasmine.r.mjs": "_jasmine_medium-purple",
  "jasmine.r.ts": "_jasmine_medium-purple",
  "jasmine.s.cjs": "_jasmine_medium-purple",
  "jasmine.s.coffee": "_jasmine_medium-purple",
  "jasmine.s.js": "_jasmine_medium-purple",
  "jasmine.s.mjs": "_jasmine_medium-purple",
  "jasmine.s.ts": "_jasmine_medium-purple",
  "jasmine.t.cjs": "_jasmine_medium-purple",
  "jasmine.t.coffee": "_jasmine_medium-purple",
  "jasmine.t.js": "_jasmine_medium-purple",
  "jasmine.t.mjs": "_jasmine_medium-purple",
  "jasmine.ts": "_jasmine_medium-purple",
  "jasmine.-.ts": "_jasmine_medium-purple",
  "jasmine._.ts": "_jasmine_medium-purple",
  "jasmine.t.ts": "_jasmine_medium-purple",
  "jasmine.u.cjs": "_jasmine_medium-purple",
  "jasmine.u.coffee": "_jasmine_medium-purple",
  "jasmine.u.js": "_jasmine_medium-purple",
  "jasmine.u.mjs": "_jasmine_medium-purple",
  "jasmine.u.ts": "_jasmine_medium-purple",
  "jasmine.v.cjs": "_jasmine_medium-purple",
  "jasmine.v.coffee": "_jasmine_medium-purple",
  "jasmine.v.js": "_jasmine_medium-purple",
  "jasmine.v.mjs": "_jasmine_medium-purple",
  "jasmine.v.ts": "_jasmine_medium-purple",
  "jasmine.w.cjs": "_jasmine_medium-purple",
  "jasmine.w.coffee": "_jasmine_medium-purple",
  "jasmine.w.js": "_jasmine_medium-purple",
  "jasmine.w.mjs": "_jasmine_medium-purple",
  "jasmine.w.ts": "_jasmine_medium-purple",
  "jasmine.x.cjs": "_jasmine_medium-purple",
  "jasmine.x.coffee": "_jasmine_medium-purple",
  "jasmine.x.js": "_jasmine_medium-purple",
  "jasmine.x.mjs": "_jasmine_medium-purple",
  "jasmine.x.ts": "_jasmine_medium-purple",
  "jasmine.y.cjs": "_jasmine_medium-purple",
  "jasmine.y.coffee": "_jasmine_medium-purple",
  "jasmine.y.js": "_jasmine_medium-purple",
  "jasmine.y.mjs": "_jasmine_medium-purple",
  "jasmine.y.ts": "_jasmine_medium-purple",
  "jasmine.z.cjs": "_jasmine_medium-purple",
  "jasmine.z.coffee": "_jasmine_medium-purple",
  "jasmine.z.js": "_jasmine_medium-purple",
  "jasmine.z.mjs": "_jasmine_medium-purple",
  "jasmine.z.ts": "_jasmine_medium-purple",
  jenkinsfile: "_jenkins_medium-red",
  "jest.babel.cjs": "_jest_medium-red",
  "jest.babel.js": "_jest_medium-red",
  "jest.babel.json": "_jest_medium-red",
  "jest.babel.jsx": "_jest_medium-red",
  "jest.babel.mjs": "_jest_medium-red",
  "jest.babel.ts": "_jest_medium-red",
  "jest.babel.tsx": "_jest_medium-red",
  "jest.cjs": "_jest_medium-red",
  "jest.config.babel.cjs": "_jest_medium-red",
  "jest.config.babel.js": "_jest_medium-red",
  "jest.config.babel.json": "_jest_medium-red",
  "jest.config.babel.jsx": "_jest_medium-red",
  "jest.config.babel.mjs": "_jest_medium-red",
  "jest.config.babel.ts": "_jest_medium-red",
  "jest.config.babel.tsx": "_jest_medium-red",
  "jest.config.cjs": "_jest_medium-red",
  "jest.config.js": "_jest_medium-red",
  "jest.config.json": "_jest_medium-red",
  "jest.config.jsx": "_jest_medium-red",
  "jest.config.mjs": "_jest_medium-red",
  "jest.config.ts": "_jest_medium-red",
  "jest.config.tsx": "_jest_medium-red",
  "jest.js": "_jest_medium-red",
  "jest.json": "_jest_medium-red",
  "jest.jsx": "_jest_medium-red",
  "jest.mjs": "_jest_medium-red",
  ".jestrc": "_jest_medium-red",
  ".jestrc.cjs": "_jest_medium-red",
  ".jestrc.js": "_jest_medium-red",
  ".jestrc.json": "_jest_medium-red",
  ".jestrc.mjs": "_jest_medium-red",
  "jest.ts": "_jest_medium-red",
  "jest.tsx": "_jest_medium-red",
  "jquery.coffee": "_jquery_dark-blue",
  "jquery.es": "_jquery_dark-blue",
  "jquery.es6": "_jquery_dark-blue",
  "jquery.js": "_jquery_dark-blue",
  "jquery.jsx": "_jquery_dark-blue",
  "jquery.map": "_jquery_dark-blue",
  "jquery.ts": "_jquery_dark-blue",
  "jquery.tsx": "_jquery_dark-blue",
  "jsconfig.0.json": "_config-js_medium-yellow",
  "jsconfig.1.json": "_config-js_medium-yellow",
  "jsconfig.2.json": "_config-js_medium-yellow",
  "jsconfig.3.json": "_config-js_medium-yellow",
  "jsconfig.4.json": "_config-js_medium-yellow",
  "jsconfig.5.json": "_config-js_medium-yellow",
  "jsconfig.6.json": "_config-js_medium-yellow",
  "jsconfig.7.json": "_config-js_medium-yellow",
  "jsconfig.8.json": "_config-js_medium-yellow",
  "jsconfig.9.json": "_config-js_medium-yellow",
  "jsconfig.a.json": "_config-js_medium-yellow",
  "jsconfig.b.json": "_config-js_medium-yellow",
  "jsconfig.c.json": "_config-js_medium-yellow",
  "jsconfig.d.json": "_config-js_medium-yellow",
  "jsconfig.e.json": "_config-js_medium-yellow",
  "jsconfig.f.json": "_config-js_medium-yellow",
  "jsconfig.g.json": "_config-js_medium-yellow",
  "jsconfig.h.json": "_config-js_medium-yellow",
  "jsconfig.i.json": "_config-js_medium-yellow",
  "jsconfig.j.json": "_config-js_medium-yellow",
  "jsconfig.json": "_config-js_medium-yellow",
  "jsconfig. .json": "_config-js_medium-yellow",
  "jsconfig.!.json": "_config-js_medium-yellow",
  'jsconfig.".json': "_config-js_medium-yellow",
  "jsconfig.#.json": "_config-js_medium-yellow",
  "jsconfig.$.json": "_config-js_medium-yellow",
  "jsconfig.%.json": "_config-js_medium-yellow",
  "jsconfig.&.json": "_config-js_medium-yellow",
  "jsconfig.'.json": "_config-js_medium-yellow",
  "jsconfig.(.json": "_config-js_medium-yellow",
  "jsconfig.).json": "_config-js_medium-yellow",
  "jsconfig.*.json": "_config-js_medium-yellow",
  "jsconfig.+.json": "_config-js_medium-yellow",
  "jsconfig.,.json": "_config-js_medium-yellow",
  "jsconfig.-.json": "_config-js_medium-yellow",
  "jsconfig...json": "_config-js_medium-yellow",
  "jsconfig./.json": "_config-js_medium-yellow",
  "jsconfig.:.json": "_config-js_medium-yellow",
  "jsconfig.;.json": "_config-js_medium-yellow",
  "jsconfig.<.json": "_config-js_medium-yellow",
  "jsconfig.=.json": "_config-js_medium-yellow",
  "jsconfig.>.json": "_config-js_medium-yellow",
  "jsconfig.?.json": "_config-js_medium-yellow",
  "jsconfig.@.json": "_config-js_medium-yellow",
  "jsconfig.[.json": "_config-js_medium-yellow",
  "jsconfig.\\.json": "_config-js_medium-yellow",
  "jsconfig.].json": "_config-js_medium-yellow",
  "jsconfig.^.json": "_config-js_medium-yellow",
  "jsconfig._.json": "_config-js_medium-yellow",
  "jsconfig.`.json": "_config-js_medium-yellow",
  "jsconfig.{.json": "_config-js_medium-yellow",
  "jsconfig.|.json": "_config-js_medium-yellow",
  "jsconfig.}.json": "_config-js_medium-yellow",
  "jsconfig.~.json": "_config-js_medium-yellow",
  "jsconfig.k.json": "_config-js_medium-yellow",
  "jsconfig.l.json": "_config-js_medium-yellow",
  "jsconfig.m.json": "_config-js_medium-yellow",
  "jsconfig.n.json": "_config-js_medium-yellow",
  "jsconfig.o.json": "_config-js_medium-yellow",
  "jsconfig.p.json": "_config-js_medium-yellow",
  "jsconfig.q.json": "_config-js_medium-yellow",
  "jsconfig.r.json": "_config-js_medium-yellow",
  "jsconfig.s.json": "_config-js_medium-yellow",
  "jsconfig.t.json": "_config-js_medium-yellow",
  "jsconfig.u.json": "_config-js_medium-yellow",
  "jsconfig.v.json": "_config-js_medium-yellow",
  "jsconfig.w.json": "_config-js_medium-yellow",
  "jsconfig.x.json": "_config-js_medium-yellow",
  "jsconfig.y.json": "_config-js_medium-yellow",
  "jsconfig.z.json": "_config-js_medium-yellow",
  "jsxconfig.json": "_config-react_medium-blue",
  justfile: "_checklist_medium-cyan",
  "karma.conf.cjs": "_karma_medium-cyan",
  "karma.conf.coffee": "_karma_medium-maroon",
  "karma.config.cjs": "_karma_medium-cyan",
  "karma.config.coffee": "_karma_medium-maroon",
  "karma.config.js": "_karma_medium-cyan",
  "karma.config.mjs": "_karma_medium-cyan",
  "karma.config.ts": "_karma_medium-cyan",
  "karma.conf.js": "_karma_medium-cyan",
  "karma.conf.mjs": "_karma_medium-cyan",
  "karma.conf.ts": "_karma_medium-cyan",
  "kazelcfg.json": "_kubernetes_medium-blue",
  kbuild: "_checklist_medium-blue",
  ".keep": "_git_medium-red",
  "keep.me": "_book_medium-blue",
  "keep.me.md": "_book_medium-blue",
  "keep.me.txt": "_book_medium-blue",
  "keybase.txt": "_keybase_medium-blue",
  "kitchen.yaml": "_kitchenci_medium-green",
  ".kitchen.yaml": "_kitchenci_medium-green",
  "kitchen.yml": "_kitchenci_medium-green",
  ".kitchen.yml": "_kitchenci_medium-green",
  kshrc: "_terminal_dark-yellow",
  "kubernetes.yaml": "_kubernetes_medium-blue",
  "kubernetes.yml": "_kubernetes_medium-blue",
  lakefile: "_lua_dark-green",
  "language-subtag-registry": "_database_dark-blue",
  "language-subtag-registry.txt": "_database_dark-blue",
  "last used asset export settings": "_ai_medium-orange",
  "ld.script": "_config_medium-orange",
  "lefthook-local.yaml": "_lefthook_medium-red",
  "lefthook-local.yml": "_lefthook_medium-red",
  "lefthook.yaml": "_lefthook_medium-red",
  "lefthook.yml": "_lefthook_medium-red",
  "lemonade.scss": "_compass_medium-red",
  "_lemonade.scss": "_compass_medium-red",
  "lerna.json": "_lerna_medium-blue",
  ".lesshintrc": "_gear_dark-yellow",
  "lexer.x": "_lex_medium-cyan",
  "lgtm.yaml": "_lgtm_dark-purple",
  ".lgtm.yaml": "_lgtm_dark-purple",
  "lgtm.yml": "_lgtm_dark-purple",
  ".lgtm.yml": "_lgtm_dark-purple",
  libtool: "_terminal_medium-red",
  licence: "_book_medium-blue",
  "licence.md": "_book_medium-blue",
  "licence.mysql": "_book_medium-blue",
  "licence.mysql.md": "_book_medium-blue",
  "licence.mysql.txt": "_book_medium-blue",
  licences: "_book_medium-blue",
  "licences.md": "_book_medium-blue",
  "licences.mysql": "_book_medium-blue",
  "licences.mysql.md": "_book_medium-blue",
  "licences.mysql.txt": "_book_medium-blue",
  "licences.txt": "_book_medium-blue",
  "licence.txt": "_book_medium-blue",
  license: "_book_medium-blue",
  "license.md": "_book_medium-blue",
  "license.mysql": "_book_medium-blue",
  "license.mysql.md": "_book_medium-blue",
  "license.mysql.txt": "_book_medium-blue",
  licenses: "_book_medium-blue",
  "licenses.md": "_book_medium-blue",
  "licenses.mysql": "_book_medium-blue",
  "licenses.mysql.md": "_book_medium-blue",
  "licenses.mysql.txt": "_book_medium-blue",
  "licenses.txt": "_book_medium-blue",
  "license.txt": "_book_medium-blue",
  "lighthouserc.js": "_lighthouse_dark-blue",
  ".lighthouserc.js": "_lighthouse_dark-blue",
  "lighthouserc.json": "_lighthouse_dark-blue",
  ".lighthouserc.json": "_lighthouse_dark-blue",
  "lighthouserc.yaml": "_lighthouse_dark-blue",
  ".lighthouserc.yaml": "_lighthouse_dark-blue",
  "lighthouserc.yml": "_lighthouse_dark-blue",
  ".lighthouserc.yml": "_lighthouse_dark-blue",
  "linebreakproperty.txt": "_unicode_medium-red",
  "linebreaktest.txt": "_unicode_medium-red",
  "linebreak.txt": "_unicode_medium-red",
  ".listing": "_toc_medium-maroon",
  ".listing.0": "_toc_medium-maroon",
  ".listing.1": "_toc_medium-maroon",
  ".listing.2": "_toc_medium-maroon",
  ".listing.3": "_toc_medium-maroon",
  ".listing.4": "_toc_medium-maroon",
  ".listing.5": "_toc_medium-maroon",
  ".listing.6": "_toc_medium-maroon",
  ".listing.7": "_toc_medium-maroon",
  ".listing.8": "_toc_medium-maroon",
  ".listing.9": "_toc_medium-maroon",
  localtags: "_tag_medium-cyan",
  login: "_terminal_medium-red",
  ".login": "_terminal_medium-red",
  "lsd.p": "_manpage_dark-green",
  m3makefile: "_modula3_medium-red",
  m3overrides: "_modula3_medium-red",
  "magic.mgc": "_database_medium-purple",
  maintainers: "_book_dark-blue",
  makefile: "_checklist_medium-yellow",
  "makefile.boot": "_boot_medium-green",
  "makefile.sco": "_checklist_medium-red",
  manifest: "_book_dark-blue",
  "manifest.in": "_config-python_dark-blue",
  "manifest.mf": "_database_medium-maroon",
  "manifest.skip": "_cpan_medium-maroon",
  "man.template": "_manpage_dark-green",
  "master.passwd": "_key_dark-green",
  "materialize.cjs": "_materialize_light-red",
  "materialize.css": "_materialize_light-red",
  "materialize.js": "_materialize_light-red",
  "materialize.min.cjs": "_materialize_light-red",
  "materialize.min.css": "_materialize_light-red",
  "materialize.min.js": "_materialize_light-red",
  "materialize.min.mjs": "_materialize_light-red",
  "materialize.mjs": "_materialize_light-red",
  "mathjax.cjs": "_mathjax_dark-green",
  "mathjax.js": "_mathjax_dark-green",
  "mathjax.mjs": "_mathjax_dark-green",
  mavenfile: "_ruby_medium-red",
  "mavenfile.lock": "_ruby_medium-red",
  "mcmod.info": "_minecraft_dark-green",
  md5sum: "_tag_medium-green",
  md5sums: "_tag_medium-green",
  mdlrc: "_markdownlint_dark-cyan",
  ".mdlrc": "_markdownlint_dark-cyan",
  "mdlrc.rb": "_markdownlint_medium-red",
  ".mdlrc.rb": "_markdownlint_medium-red",
  "mdlrc.style.rb": "_markdownlint_medium-red",
  ".mdlrc.style.rb": "_markdownlint_medium-red",
  "mdoc.template": "_manpage_dark-green",
  ".mention-bot": "_bullhorn_medium-orange",
  merge_head: "_git-merge_medium-red",
  merge_mode: "_git-merge_medium-red",
  merge_msg: "_git-merge_medium-red",
  "meson.build": "_meson_medium-green",
  "meson_options.txt": "_meson_medium-green",
  "metadata.pb": "_database_medium-red",
  "meta.json": "_cpan_medium-yellow",
  "meta.yml": "_cpan_medium-red",
  "mimeapps.list": "_config_medium-blue",
  "mime.types": "_database_medium-maroon",
  "mix.ex": "_elixir_light-purple",
  "mix.exs": "_elixir_light-purple",
  "mix.lock": "_elixir_light-purple",
  "mk.config": "_checklist_medium-green",
  "mkdocs.yaml": "_book-alt_medium-blue",
  ".mkdocs.yaml": "_book-alt_medium-blue",
  "mkdocs.yml": "_book-alt_medium-blue",
  ".mkdocs.yml": "_book-alt_medium-blue",
  mkfile: "_checklist_medium-yellow",
  mkpeephole: "_v8_medium-blue",
  mkshrc: "_terminal_dark-yellow",
  mksnapshot: "_v8_medium-blue",
  mmn: "_manpage_dark-green",
  mmt: "_manpage_dark-green",
  "mocha.coffee": "_mocha_medium-maroon",
  "mocha.css": "_mocha_medium-red",
  "mocha.es": "_mocha_medium-maroon",
  "mocha.es6": "_mocha_medium-maroon",
  "mocha.js": "_mocha_medium-maroon",
  "mocha.jsx": "_mocha_medium-maroon",
  "mocha.less": "_mocha_medium-red",
  "mocha.min.coffee": "_mocha_medium-maroon",
  "mocha.min.css": "_mocha_medium-red",
  "mocha.min.es": "_mocha_medium-maroon",
  "mocha.min.es6": "_mocha_medium-maroon",
  "mocha.min.js": "_mocha_medium-maroon",
  "mocha.min.jsx": "_mocha_medium-maroon",
  "mocha.min.less": "_mocha_medium-red",
  "mocha.min.scss": "_mocha_medium-red",
  "mocha.min.styl": "_mocha_medium-red",
  "mocha.min.ts": "_mocha_medium-maroon",
  "mocha.min.tsx": "_mocha_medium-maroon",
  "mocha.scss": "_mocha_medium-red",
  "mocha.styl": "_mocha_medium-red",
  "mocha.ts": "_mocha_medium-maroon",
  "mocha.tsx": "_mocha_medium-maroon",
  "moleculer.config.cjs": "_moleculer_medium-blue",
  "moleculer.config.js": "_moleculer_medium-blue",
  "moleculer.config.json": "_moleculer_medium-blue",
  "moleculer.config.mjs": "_moleculer_medium-blue",
  "moleculer.config.ts": "_moleculer_medium-blue",
  "moment.cjs": "_moment_medium-cyan",
  "moment.js": "_moment_medium-cyan",
  "moment.min.cjs": "_moment_medium-cyan",
  "moment.min.js": "_moment_medium-cyan",
  "moment.min.mjs": "_moment_medium-cyan",
  "moment.mjs": "_moment_medium-cyan",
  "moment-with-locales.cjs": "_moment_medium-cyan",
  "moment-with-locales.js": "_moment_medium-cyan",
  "moment-with-locales.min.cjs": "_moment_medium-cyan",
  "moment-with-locales.min.js": "_moment_medium-cyan",
  "moment-with-locales.min.mjs": "_moment_medium-cyan",
  "moment-with-locales.mjs": "_moment_medium-cyan",
  "more.stuff": "_book_dark-blue",
  "morphine.p": "_manpage_dark-green",
  "namealiases.txt": "_unicode_medium-red",
  "namedsequencesprov.txt": "_unicode_medium-red",
  "namedsequences.txt": "_unicode_medium-red",
  "nameslist.lst": "_unicode_medium-red",
  "nameslist.txt": "_unicode_medium-red",
  nametable: "_database_dark-blue",
  "nanoc.yaml": "_nanoc_medium-red",
  ".nanoc.yaml": "_nanoc_medium-red",
  "nanoc.yml": "_nanoc_medium-red",
  ".nanoc.yml": "_nanoc_medium-red",
  "nestconfig.json": "_nestjs_medium-red",
  "netlify.toml": "_netlify_dark-blue",
  news: "_book_dark-blue",
  "news-": "_book_dark-blue",
  "news--": "_book_dark-blue",
  "news.-": "_book_dark-blue",
  "news_-": "_book_dark-blue",
  news0: "_book_dark-blue",
  "news-0": "_book_dark-blue",
  "news.0": "_book_dark-blue",
  news_0: "_book_dark-blue",
  news1: "_book_dark-blue",
  "news-1": "_book_dark-blue",
  "news.1": "_book_dark-blue",
  news_1: "_book_dark-blue",
  news2: "_book_dark-blue",
  "news-2": "_book_dark-blue",
  "news.2": "_book_dark-blue",
  news_2: "_book_dark-blue",
  news3: "_book_dark-blue",
  "news-3": "_book_dark-blue",
  "news.3": "_book_dark-blue",
  news_3: "_book_dark-blue",
  news4: "_book_dark-blue",
  "news-4": "_book_dark-blue",
  "news.4": "_book_dark-blue",
  news_4: "_book_dark-blue",
  news5: "_book_dark-blue",
  "news-5": "_book_dark-blue",
  "news.5": "_book_dark-blue",
  news_5: "_book_dark-blue",
  news6: "_book_dark-blue",
  "news-6": "_book_dark-blue",
  "news.6": "_book_dark-blue",
  news_6: "_book_dark-blue",
  news7: "_book_dark-blue",
  "news-7": "_book_dark-blue",
  "news.7": "_book_dark-blue",
  news_7: "_book_dark-blue",
  news8: "_book_dark-blue",
  "news-8": "_book_dark-blue",
  "news.8": "_book_dark-blue",
  news_8: "_book_dark-blue",
  news9: "_book_dark-blue",
  "news-9": "_book_dark-blue",
  "news.9": "_book_dark-blue",
  news_9: "_book_dark-blue",
  nexrc: "_vim_medium-green",
  "next.config.cjs": "_nextjs_dark-grey",
  "next.config.js": "_nextjs_dark-grey",
  "next.config.mjs": "_nextjs_dark-grey",
  "nextflow.config": "_nextflow_dark-green",
  "nginx.conf": "_nginx_dark-green",
  "nightwatch.conf.cjs": "_nightwatch_dark-maroon",
  "nightwatch.config.cjs": "_nightwatch_dark-maroon",
  "nightwatch.config.js": "_nightwatch_dark-maroon",
  "nightwatch.config.mjs": "_nightwatch_dark-maroon",
  "nightwatch.conf.js": "_nightwatch_dark-maroon",
  "nightwatch.conf.mjs": "_nightwatch_dark-maroon",
  "nodemon.json": "_nodemon_medium-green",
  nokogirirc: "_nokogiri_medium-red",
  ".nokogirirc": "_nokogiri_medium-red",
  "normalizationcorrections.txt": "_unicode_medium-red",
  "normalizationtest.txt": "_unicode_medium-red",
  "normalize.css": "_normalize_medium-red",
  "normalize.less": "_normalize_medium-red",
  "normalize.min.css": "_normalize_medium-red",
  "normalize.min.less": "_normalize_medium-red",
  "normalize.min.scss": "_normalize_medium-red",
  "normalize.min.styl": "_normalize_medium-red",
  "normalize.scss": "_normalize_medium-red",
  "normalize.styl": "_normalize_medium-red",
  notebook: "_jupyter_dark-cyan",
  notes: "_book_dark-blue",
  notice: "_book_dark-blue",
  ".nowignore": "_zeit_medium-maroon",
  "now.json": "_zeit_medium-grey",
  "npm-debug.log": "_npm_medium-red",
  ".npmignore": "_npm_medium-red",
  npmrc: "_npm_medium-red",
  ".npmrc": "_npm_medium-red",
  "npm-shrinkwrap.json": "_npm_medium-red",
  ".nsriignore": "_nsri_dark-green",
  ".nsriignore.cjs": "_nsri_dark-green",
  ".nsriignore.config.cjs": "_nsri_dark-green",
  ".nsriignore.config.js": "_nsri_dark-green",
  ".nsriignore.config.mjs": "_nsri_dark-green",
  ".nsriignore.js": "_nsri_dark-green",
  ".nsriignore.json": "_nsri_dark-green",
  ".nsriignore.mjs": "_nsri_dark-green",
  ".nsriignore.yaml": "_nsri_dark-green",
  ".nsriignore.yml": "_nsri_dark-green",
  ".nsrirc": "_nsri_medium-green",
  ".nsrirc.cjs": "_nsri_medium-green",
  ".nsrirc.config.cjs": "_nsri_medium-green",
  ".nsrirc.config.js": "_nsri_medium-green",
  ".nsrirc.config.mjs": "_nsri_medium-green",
  ".nsrirc.js": "_nsri_medium-green",
  ".nsrirc.json": "_nsri_medium-green",
  ".nsrirc.mjs": "_nsri_medium-green",
  ".nsrirc.yaml": "_nsri_medium-green",
  ".nsrirc.yml": "_nsri_medium-green",
  nukefile: "_recycle_dark-green",
  "nushusources.txt": "_unicode_medium-red",
  "nuxt.config.js": "_nuxt_medium-cyan",
  "nuxt.config.ts": "_nuxt_medium-cyan",
  nviminfo: "_vim_dark-green",
  nvimrc: "_vim_dark-green",
  "nx.json": "_nx_dark-blue",
  "nyc.config.cjs": "_istanbul_medium-green",
  "nyc.config.js": "_istanbul_medium-yellow",
  "nyc.config.mjs": "_istanbul_medium-blue",
  ".nycrc": "_istanbul_medium-orange",
  ".nycrc.json": "_istanbul_medium-orange",
  ".nycrc.yaml": "_istanbul_medium-green",
  ".nycrc.yml": "_istanbul_medium-green",
  "openapi.json": "_swagger_medium-green",
  "openapi.yaml": "_swagger_medium-green",
  "openapi.yml": "_swagger_medium-green",
  _osc: "_terminal_dark-purple",
  owners: "_at_medium-red",
  ".p4ignore": "_helix_medium-blue",
  "package.json": "_npm_medium-red",
  "package-lock.json": "_npm_medium-red",
  "pack.mcmeta": "_minecraft_dark-green",
  "pacman.conf": "_archlinux_dark-yellow",
  "paket.dependencies": "_package_medium-blue",
  "paket.local": "_package_medium-blue",
  "paket.lock": "_package_medium-blue",
  "paket.references": "_package_medium-blue",
  "paket.template": "_package_medium-blue",
  "pamac.conf": "_archlinux_light-yellow",
  passwd: "_key_dark-green",
  "patreon.md": "_patreon_medium-orange",
  "patrons.md": "_patreon_medium-orange",
  "pcb.0": "_circuit-board_dark-green",
  "pcb.0.backup": "_circuit-board_dark-green",
  "pcb.0.backup~": "_circuit-board_dark-green",
  "pcb.1": "_circuit-board_dark-green",
  "pcb.1.backup": "_circuit-board_dark-green",
  "pcb.1.backup~": "_circuit-board_dark-green",
  "pcb.2": "_circuit-board_dark-green",
  "pcb.2.backup": "_circuit-board_dark-green",
  "pcb.2.backup~": "_circuit-board_dark-green",
  "pcb.3": "_circuit-board_dark-green",
  "pcb.3.backup": "_circuit-board_dark-green",
  "pcb.3.backup~": "_circuit-board_dark-green",
  "pcb.4": "_circuit-board_dark-green",
  "pcb.4.backup": "_circuit-board_dark-green",
  "pcb.4.backup~": "_circuit-board_dark-green",
  "pcb.5": "_circuit-board_dark-green",
  "pcb.5.backup": "_circuit-board_dark-green",
  "pcb.5.backup~": "_circuit-board_dark-green",
  "pcb.6": "_circuit-board_dark-green",
  "pcb.6.backup": "_circuit-board_dark-green",
  "pcb.6.backup~": "_circuit-board_dark-green",
  "pcb.7": "_circuit-board_dark-green",
  "pcb.7.backup": "_circuit-board_dark-green",
  "pcb.7.backup~": "_circuit-board_dark-green",
  "pcb.8": "_circuit-board_dark-green",
  "pcb.8.backup": "_circuit-board_dark-green",
  "pcb.8.backup~": "_circuit-board_dark-green",
  "pcb.9": "_circuit-board_dark-green",
  "pcb.9.backup": "_circuit-board_dark-green",
  "pcb.9.backup~": "_circuit-board_dark-green",
  "perl5config.json": "_config-perl_medium-blue",
  "perl5-config.json": "_config-perl_medium-blue",
  "perl6config.json": "_config-perl_medium-blue",
  "perl6-config.json": "_config-perl_medium-blue",
  "perlconfig.json": "_config-perl_medium-blue",
  "perl-config.json": "_config-perl_medium-blue",
  "pf.os": "_config_medium-yellow",
  "phoenix.cjs": "_phoenix_medium-orange",
  "phoenix.ex": "_phoenix_medium-red",
  "phoenix.js": "_phoenix_medium-orange",
  "phoenix.mjs": "_phoenix_medium-orange",
  ".photorec.cfg": "_photorec_medium-green",
  "phpunit.xml": "_phpunit_medium-purple",
  ".phraseapp.yaml": "_phraseapp_medium-blue",
  ".phraseapp.yml": "_phraseapp_medium-blue",
  pipfile: "_pipenv_dark-blue",
  "pipfile.lock": "_pipenv_dark-blue",
  pkgbuild: "_archlinux_dark-cyan",
  pkginfo: "_database_medium-blue",
  "platformio.ini": "_platformio_medium-orange",
  "pnpmfile.js": "_pnpm_medium-yellow",
  "pnpm-lock.yaml": "_pnpm_medium-orange",
  "pnpm-lock.yml": "_pnpm_medium-orange",
  "pnpm-workspace.yaml": "_pnpm_medium-orange",
  "pnpm-workspace.yml": "_pnpm_medium-orange",
  podfile: "_ruby_medium-red",
  "podfile.lock": "_ruby_medium-red",
  "poetry.lock": "_config-python_dark-blue",
  policyfile: "_chef_medium-orange",
  "policyfile.lock": "_chef_medium-orange",
  "polymer.json": "_polymer_medium-purple",
  "postcss.config.cjs": "_postcss_medium-yellow",
  "postcss.config.js": "_postcss_medium-yellow",
  "postcss.config.mjs": "_postcss_medium-yellow",
  ".pre-commit.yaml": "_precommit_medium-yellow",
  ".pre-commit.yml": "_precommit_medium-yellow",
  "predict_net.pb": "_caffe2_dark-blue",
  "prettier.config.cjs": "_prettier_medium-cyan",
  "prettier.config.js": "_prettier_medium-cyan",
  "prettier.config.mjs": "_prettier_medium-cyan",
  problems: "_book_dark-blue",
  procfile: "_heroku_medium-purple",
  profile: "_terminal_medium-red",
  ".profile": "_terminal_medium-red",
  "project.ede": "_emacs_medium-blue",
  "project.pros": "_pros_medium-orange",
  projects: "_book_dark-blue",
  "propertyaliases.txt": "_unicode_medium-red",
  "propertyvaluealiases.txt": "_unicode_medium-red",
  "proplist.txt": "_unicode_medium-red",
  pryrc: "_ruby_medium-red",
  ".pryrc": "_ruby_medium-red",
  "pubspec.lock": "_package_medium-blue",
  "pubspec.yaml": "_package_medium-yellow",
  "pubspec.yml": "_package_medium-yellow",
  "pullapprove.yaml": "_pullapprove_dark-blue",
  ".pullapprove.yaml": "_pullapprove_dark-blue",
  "pullapprove.yml": "_pullapprove_dark-blue",
  ".pullapprove.yml": "_pullapprove_dark-blue",
  puppetfile: "_ruby_medium-red",
  "puppetfile.lock": "_ruby_medium-red",
  "pyproject.toml": "_config-python_dark-blue",
  "pytest.ini": "_pytest_medium-blue",
  "pythonconfig.json": "_config-python_dark-blue",
  "python-config.json": "_config-python_dark-blue",
  "py.typed": "_python_medium-grey",
  ".pyup": "_pyup_dark-cyan",
  ".pyup.yaml": "_pyup_dark-cyan",
  ".pyup.yml": "_pyup_dark-cyan",
  qmake: "_checklist_dark-blue",
  ".qmake": "_checklist_dark-blue",
  "quasar.conf.cjs": "_quasar_medium-blue",
  "quasar.conf.js": "_quasar_medium-blue",
  "quasar.conf.mjs": "_quasar_medium-blue",
  rails: "_ruby_medium-red",
  rakefile: "_ruby_medium-red",
  "rakefile.lock": "_ruby_medium-red",
  "raphael.cjs": "_raphael_medium-orange",
  "raphael.js": "_raphael_medium-orange",
  "raphael.mjs": "_raphael_medium-orange",
  "react.cjs": "_react_dark-blue",
  "react-.cjs": "_react_dark-blue",
  "react.js": "_react_dark-blue",
  "react-.js": "_react_dark-blue",
  "react.mjs": "_react_dark-blue",
  "react-.mjs": "_react_dark-blue",
  "read.me": "_book_medium-blue",
  "read.me.md": "_book_medium-blue",
  "readme.me": "_book_medium-blue",
  "readme.me.md": "_book_medium-blue",
  "readme.me.txt": "_book_medium-blue",
  "read.me.txt": "_book_medium-blue",
  "readthedocs.yaml": "_readthedocs_dark-grey",
  ".readthedocs.yaml": "_readthedocs_dark-grey",
  "readthedocs.yml": "_readthedocs_dark-grey",
  ".readthedocs.yml": "_readthedocs_dark-grey",
  "rebar.config.lock": "_erlang_medium-red",
  "rebar.lock": "_erlang_medium-red",
  ".rehyperc": "_remark_medium-yellow",
  ".rehyperc.cjs": "_remark_medium-yellow",
  ".rehyperc.js": "_remark_medium-yellow",
  ".rehyperc.json": "_remark_medium-yellow",
  ".rehyperc.mjs": "_remark_medium-yellow",
  ".rehyperc.yaml": "_remark_medium-yellow",
  ".rehyperc.yml": "_remark_medium-yellow",
  releasenotes: "_book_dark-blue",
  "releasenotes-": "_book_dark-blue",
  "releasenotes--": "_book_dark-blue",
  "releasenotes.-": "_book_dark-blue",
  "releasenotes_-": "_book_dark-blue",
  "release-notes": "_book_dark-blue",
  "release-notes-": "_book_dark-blue",
  "release-notes--": "_book_dark-blue",
  "release-notes.-": "_book_dark-blue",
  "release-notes_-": "_book_dark-blue",
  "release.notes": "_book_dark-blue",
  "release.notes-": "_book_dark-blue",
  "release.notes--": "_book_dark-blue",
  "release.notes.-": "_book_dark-blue",
  "release.notes_-": "_book_dark-blue",
  release_notes: "_book_dark-blue",
  "release_notes-": "_book_dark-blue",
  "release_notes--": "_book_dark-blue",
  "release_notes.-": "_book_dark-blue",
  "release_notes_-": "_book_dark-blue",
  releasenotes0: "_book_dark-blue",
  "releasenotes-0": "_book_dark-blue",
  "releasenotes.0": "_book_dark-blue",
  releasenotes_0: "_book_dark-blue",
  "release-notes0": "_book_dark-blue",
  "release-notes-0": "_book_dark-blue",
  "release-notes.0": "_book_dark-blue",
  "release-notes_0": "_book_dark-blue",
  "release.notes0": "_book_dark-blue",
  "release.notes-0": "_book_dark-blue",
  "release.notes.0": "_book_dark-blue",
  "release.notes_0": "_book_dark-blue",
  release_notes0: "_book_dark-blue",
  "release_notes-0": "_book_dark-blue",
  "release_notes.0": "_book_dark-blue",
  release_notes_0: "_book_dark-blue",
  releasenotes1: "_book_dark-blue",
  "releasenotes-1": "_book_dark-blue",
  "releasenotes.1": "_book_dark-blue",
  releasenotes_1: "_book_dark-blue",
  "release-notes1": "_book_dark-blue",
  "release-notes-1": "_book_dark-blue",
  "release-notes.1": "_book_dark-blue",
  "release-notes_1": "_book_dark-blue",
  "release.notes1": "_book_dark-blue",
  "release.notes-1": "_book_dark-blue",
  "release.notes.1": "_book_dark-blue",
  "release.notes_1": "_book_dark-blue",
  release_notes1: "_book_dark-blue",
  "release_notes-1": "_book_dark-blue",
  "release_notes.1": "_book_dark-blue",
  release_notes_1: "_book_dark-blue",
  releasenotes2: "_book_dark-blue",
  "releasenotes-2": "_book_dark-blue",
  "releasenotes.2": "_book_dark-blue",
  releasenotes_2: "_book_dark-blue",
  "release-notes2": "_book_dark-blue",
  "release-notes-2": "_book_dark-blue",
  "release-notes.2": "_book_dark-blue",
  "release-notes_2": "_book_dark-blue",
  "release.notes2": "_book_dark-blue",
  "release.notes-2": "_book_dark-blue",
  "release.notes.2": "_book_dark-blue",
  "release.notes_2": "_book_dark-blue",
  release_notes2: "_book_dark-blue",
  "release_notes-2": "_book_dark-blue",
  "release_notes.2": "_book_dark-blue",
  release_notes_2: "_book_dark-blue",
  releasenotes3: "_book_dark-blue",
  "releasenotes-3": "_book_dark-blue",
  "releasenotes.3": "_book_dark-blue",
  releasenotes_3: "_book_dark-blue",
  "release-notes3": "_book_dark-blue",
  "release-notes-3": "_book_dark-blue",
  "release-notes.3": "_book_dark-blue",
  "release-notes_3": "_book_dark-blue",
  "release.notes3": "_book_dark-blue",
  "release.notes-3": "_book_dark-blue",
  "release.notes.3": "_book_dark-blue",
  "release.notes_3": "_book_dark-blue",
  release_notes3: "_book_dark-blue",
  "release_notes-3": "_book_dark-blue",
  "release_notes.3": "_book_dark-blue",
  release_notes_3: "_book_dark-blue",
  releasenotes4: "_book_dark-blue",
  "releasenotes-4": "_book_dark-blue",
  "releasenotes.4": "_book_dark-blue",
  releasenotes_4: "_book_dark-blue",
  "release-notes4": "_book_dark-blue",
  "release-notes-4": "_book_dark-blue",
  "release-notes.4": "_book_dark-blue",
  "release-notes_4": "_book_dark-blue",
  "release.notes4": "_book_dark-blue",
  "release.notes-4": "_book_dark-blue",
  "release.notes.4": "_book_dark-blue",
  "release.notes_4": "_book_dark-blue",
  release_notes4: "_book_dark-blue",
  "release_notes-4": "_book_dark-blue",
  "release_notes.4": "_book_dark-blue",
  release_notes_4: "_book_dark-blue",
  releasenotes5: "_book_dark-blue",
  "releasenotes-5": "_book_dark-blue",
  "releasenotes.5": "_book_dark-blue",
  releasenotes_5: "_book_dark-blue",
  "release-notes5": "_book_dark-blue",
  "release-notes-5": "_book_dark-blue",
  "release-notes.5": "_book_dark-blue",
  "release-notes_5": "_book_dark-blue",
  "release.notes5": "_book_dark-blue",
  "release.notes-5": "_book_dark-blue",
  "release.notes.5": "_book_dark-blue",
  "release.notes_5": "_book_dark-blue",
  release_notes5: "_book_dark-blue",
  "release_notes-5": "_book_dark-blue",
  "release_notes.5": "_book_dark-blue",
  release_notes_5: "_book_dark-blue",
  releasenotes6: "_book_dark-blue",
  "releasenotes-6": "_book_dark-blue",
  "releasenotes.6": "_book_dark-blue",
  releasenotes_6: "_book_dark-blue",
  "release-notes6": "_book_dark-blue",
  "release-notes-6": "_book_dark-blue",
  "release-notes.6": "_book_dark-blue",
  "release-notes_6": "_book_dark-blue",
  "release.notes6": "_book_dark-blue",
  "release.notes-6": "_book_dark-blue",
  "release.notes.6": "_book_dark-blue",
  "release.notes_6": "_book_dark-blue",
  release_notes6: "_book_dark-blue",
  "release_notes-6": "_book_dark-blue",
  "release_notes.6": "_book_dark-blue",
  release_notes_6: "_book_dark-blue",
  releasenotes7: "_book_dark-blue",
  "releasenotes-7": "_book_dark-blue",
  "releasenotes.7": "_book_dark-blue",
  releasenotes_7: "_book_dark-blue",
  "release-notes7": "_book_dark-blue",
  "release-notes-7": "_book_dark-blue",
  "release-notes.7": "_book_dark-blue",
  "release-notes_7": "_book_dark-blue",
  "release.notes7": "_book_dark-blue",
  "release.notes-7": "_book_dark-blue",
  "release.notes.7": "_book_dark-blue",
  "release.notes_7": "_book_dark-blue",
  release_notes7: "_book_dark-blue",
  "release_notes-7": "_book_dark-blue",
  "release_notes.7": "_book_dark-blue",
  release_notes_7: "_book_dark-blue",
  releasenotes8: "_book_dark-blue",
  "releasenotes-8": "_book_dark-blue",
  "releasenotes.8": "_book_dark-blue",
  releasenotes_8: "_book_dark-blue",
  "release-notes8": "_book_dark-blue",
  "release-notes-8": "_book_dark-blue",
  "release-notes.8": "_book_dark-blue",
  "release-notes_8": "_book_dark-blue",
  "release.notes8": "_book_dark-blue",
  "release.notes-8": "_book_dark-blue",
  "release.notes.8": "_book_dark-blue",
  "release.notes_8": "_book_dark-blue",
  release_notes8: "_book_dark-blue",
  "release_notes-8": "_book_dark-blue",
  "release_notes.8": "_book_dark-blue",
  release_notes_8: "_book_dark-blue",
  releasenotes9: "_book_dark-blue",
  "releasenotes-9": "_book_dark-blue",
  "releasenotes.9": "_book_dark-blue",
  releasenotes_9: "_book_dark-blue",
  "release-notes9": "_book_dark-blue",
  "release-notes-9": "_book_dark-blue",
  "release-notes.9": "_book_dark-blue",
  "release-notes_9": "_book_dark-blue",
  "release.notes9": "_book_dark-blue",
  "release.notes-9": "_book_dark-blue",
  "release.notes.9": "_book_dark-blue",
  "release.notes_9": "_book_dark-blue",
  release_notes9: "_book_dark-blue",
  "release_notes-9": "_book_dark-blue",
  "release_notes.9": "_book_dark-blue",
  release_notes_9: "_book_dark-blue",
  ".releaserc": "_semrelease_medium-grey",
  ".releaserc.cjs": "_semrelease_medium-grey",
  ".releaserc.js": "_semrelease_medium-grey",
  ".releaserc.json": "_semrelease_medium-grey",
  ".releaserc.mjs": "_semrelease_medium-grey",
  ".releaserc.yaml": "_semrelease_medium-grey",
  ".releaserc.yml": "_semrelease_medium-grey",
  ".remarkrc": "_remark_medium-red",
  ".remarkrc.cjs": "_remark_medium-red",
  ".remarkrc.js": "_remark_medium-red",
  ".remarkrc.json": "_remark_medium-red",
  ".remarkrc.mjs": "_remark_medium-red",
  ".remarkrc.yaml": "_remark_medium-red",
  ".remarkrc.yml": "_remark_medium-red",
  renovate: "_renovate_medium-cyan",
  "renovate.json": "_renovate_medium-cyan",
  renovaterc: "_renovate_medium-cyan",
  "renovaterc.json": "_renovate_medium-cyan",
  "require.cjs": "_requirejs_medium-blue",
  "requiredev.cjs": "_requirejs_medium-blue",
  "requiredev.js": "_requirejs_medium-blue",
  "requiredev.mjs": "_requirejs_medium-blue",
  "require.js": "_requirejs_medium-blue",
  "requirements-dev.in": "_pypi_dark-blue",
  "requirements_dev.in": "_pypi_dark-blue",
  "requirements-dev.txt": "_pypi_dark-blue",
  "requirements_dev.txt": "_pypi_dark-blue",
  "requirements-doc.in": "_pypi_dark-blue",
  "requirements_doc.in": "_pypi_dark-blue",
  "requirements-docs.in": "_pypi_dark-blue",
  "requirements_docs.in": "_pypi_dark-blue",
  "requirements-docs.txt": "_pypi_dark-blue",
  "requirements_docs.txt": "_pypi_dark-blue",
  "requirements-doc.txt": "_pypi_dark-blue",
  "requirements_doc.txt": "_pypi_dark-blue",
  "requirements.in": "_pypi_dark-blue",
  "requirements-test.in": "_pypi_dark-blue",
  "requirements_test.in": "_pypi_dark-blue",
  "requirements-tests.in": "_pypi_dark-blue",
  "requirements_tests.in": "_pypi_dark-blue",
  "requirements-tests.txt": "_pypi_dark-blue",
  "requirements_tests.txt": "_pypi_dark-blue",
  "requirements-test.txt": "_pypi_dark-blue",
  "requirements_test.txt": "_pypi_dark-blue",
  "requirements.txt": "_pypi_dark-blue",
  "require-min.cjs": "_requirejs_medium-blue",
  "require.min.cjs": "_requirejs_medium-blue",
  "require-min.js": "_requirejs_medium-blue",
  "require.min.js": "_requirejs_medium-blue",
  "require-min.mjs": "_requirejs_medium-blue",
  "require.min.mjs": "_requirejs_medium-blue",
  "require.mjs": "_requirejs_medium-blue",
  "restql.yaml": "_restql_medium-cyan",
  "restql.yml": "_restql_medium-cyan",
  ".retextrc": "_remark_medium-green",
  ".retextrc.cjs": "_remark_medium-green",
  ".retextrc.js": "_remark_medium-green",
  ".retextrc.json": "_remark_medium-green",
  ".retextrc.mjs": "_remark_medium-green",
  ".retextrc.yaml": "_remark_medium-green",
  ".retextrc.yml": "_remark_medium-green",
  revision: "_book_dark-blue",
  rexfile: "_perl6_medium-green",
  "riemann.config": "_clojure_medium-maroon",
  rmd160sum: "_tag_medium-green",
  rmd160sums: "_tag_medium-green",
  ".rnd": "_binary_dark-blue",
  "robots.txt": "_robots_dark-cyan",
  root: "_isabelle_dark-blue",
  rpc: "_config_medium-green",
  "rsyncd.conf": "_rsync_dark-purple",
  ".rubocop_todo.yaml": "_rubocop_dark-red",
  ".rubocop_todo.yml": "_rubocop_dark-red",
  ".rubocop.yaml": "_rubocop_dark-red",
  ".rubocop.yml": "_rubocop_dark-red",
  "rubyconfig.json": "_config-ruby_medium-red",
  "ruby-gemset": "_ruby_medium-red",
  ".ruby-gemset": "_ruby_medium-red",
  "ruby-version": "_ruby_medium-red",
  ".ruby-version": "_ruby_medium-red",
  rules: "_debian_medium-cyan",
  "run.n": "_neko_dark-orange",
  "rustconfig.json": "_config-rust_medium-maroon",
  "rust-toolchain": "_rust_medium-red",
  "s4.errors": "_zork_dark-green",
  ".sailsrc": "_sails_medium-blue",
  ".sassrc": "_sass_medium-yellow",
  ".sassrc.cjs": "_sass_medium-yellow",
  ".sassrc.js": "_sass_medium-yellow",
  ".sassrc.mjs": "_sass_medium-yellow",
  sconscript: "_python_dark-green",
  sconstruct: "_python_dark-green",
  "scriptextensions.txt": "_unicode_medium-red",
  "scripts.txt": "_unicode_medium-red",
  "sencha.cjs": "_sencha_light-green",
  "sencha.js": "_sencha_light-green",
  "sencha.min.cjs": "_sencha_light-green",
  "sencha.min.js": "_sencha_light-green",
  "sencha.min.mjs": "_sencha_light-green",
  "sencha.mjs": "_sencha_light-green",
  "sentencebreakproperty.txt": "_unicode_medium-red",
  "sentencebreaktest.txt": "_unicode_medium-red",
  "serverless.yaml": "_serverless_medium-red",
  "serverless.yml": "_serverless_medium-red",
  _service: "_code_medium-blue",
  "settings.bsp": "_config_medium-green",
  "settings.stylecop": "_code_medium-green",
  sha: "_tag_medium-green",
  sha1sum: "_tag_medium-green",
  sha1sums: "_tag_medium-green",
  sha224sum: "_tag_medium-green",
  sha224sums: "_tag_medium-green",
  sha256: "_tag_medium-green",
  sha256sum: "_tag_medium-green",
  sha256sums: "_tag_medium-green",
  sha2sum: "_tag_medium-green",
  sha2sums: "_tag_medium-green",
  sha384sum: "_tag_medium-green",
  sha384sums: "_tag_medium-green",
  sha3sum: "_tag_medium-green",
  sha3sums: "_tag_medium-green",
  sha512sum: "_tag_medium-green",
  sha512sums: "_tag_medium-green",
  "shadow-cljs.edn": "_shadowcljs_medium-cyan",
  shasum: "_tag_medium-green",
  shasums: "_tag_medium-green",
  shellcheckrc: "_shellcheck_light-maroon",
  ".shellcheckrc": "_shellcheck_light-maroon",
  shells: "_config_medium-green",
  "shipitfile.cjs": "_shipit_medium-orange",
  "shipitfile.js": "_shipit_medium-orange",
  "shipitfile.mjs": "_shipit_medium-orange",
  "shippable.yaml": "_shippable_medium-cyan",
  "shippable.yml": "_shippable_medium-cyan",
  slakefile: "_ls_medium-green",
  snakefile: "_python_medium-green",
  "snapcraft.yaml": "_snapcraft_dark-cyan",
  "snapcraft.yml": "_snapcraft_dark-cyan",
  snapfile: "_ruby_medium-red",
  "snapfile.lock": "_ruby_medium-red",
  "snap.svg.cjs": "_snapsvg_medium-cyan",
  "snap.svg.js": "_snapsvg_medium-cyan",
  "snap.svg-min.cjs": "_snapsvg_medium-cyan",
  "snap.svg.min.cjs": "_snapsvg_medium-cyan",
  "snap.svg-min.js": "_snapsvg_medium-cyan",
  "snap.svg.min.js": "_snapsvg_medium-cyan",
  "snap.svg-min.mjs": "_snapsvg_medium-cyan",
  "snap.svg.min.mjs": "_snapsvg_medium-cyan",
  "snap.svg.mjs": "_snapsvg_medium-cyan",
  "snowpack.config.cjs": "_snowpack_dark-blue",
  "snowpack.config.js": "_snowpack_dark-blue",
  "snowpack.config.json": "_snowpack_dark-blue",
  "snowpack.config.mjs": "_snowpack_dark-blue",
  "snowpack.config.ts": "_snowpack_dark-blue",
  ".solidarity": "_solidarity_dark-red",
  ".solidarity.json": "_solidarity_dark-red",
  "solver.prototxt": "_caffe2_medium-purple",
  spacemacs: "_spacemacs_medium-purple",
  "specialcasing.txt": "_unicode_medium-red",
  ".srcinfo": "_archlinux_dark-maroon",
  "standardizedvariants.txt": "_unicode_medium-red",
  "stdlib.cjs": "_stdlibjs_medium-orange",
  "stdlib.cjs.gz": "_stdlibjs_medium-blue",
  "stdlib.js": "_stdlibjs_medium-orange",
  "stdlib.js.gz": "_stdlibjs_medium-blue",
  "stdlib.mjs": "_stdlibjs_medium-orange",
  "stdlib.mjs.gz": "_stdlibjs_medium-blue",
  "stitches.config.cjs": "_stitches_medium-purple",
  ".stitches.config.cjs": "_stitches_medium-purple",
  "stitches.config.js": "_stitches_medium-purple",
  ".stitches.config.js": "_stitches_medium-purple",
  "stitches.config.mjs": "_stitches_medium-purple",
  ".stitches.config.mjs": "_stitches_medium-purple",
  "stitches.config.ts": "_stitches_medium-purple",
  ".stitches.config.ts": "_stitches_medium-purple",
  "stylelint.config.cjs": "_stylelint_medium-yellow",
  "stylelint.config.js": "_stylelint_medium-yellow",
  "stylelint.config.mjs": "_stylelint_medium-yellow",
  ".stylelintrc": "_stylelint_medium-purple",
  ".stylelintrc.js": "_stylelint_medium-purple",
  ".stylelintrc.json": "_stylelint_medium-purple",
  ".stylelintrc.yaml": "_stylelint_medium-purple",
  ".stylelintrc.yml": "_stylelint_medium-purple",
  ".stylish-haskell.yaml": "_stylishhaskell_medium-purple",
  ".stylish-haskell.yml": "_stylishhaskell_medium-purple",
  "sudo-lecture": "_book_dark-blue",
  sudo_lecture: "_book_dark-blue",
  sum: "_tag_medium-green",
  sums: "_tag_medium-green",
  "swagger.json": "_swagger_medium-green",
  "swagger.yaml": "_swagger_medium-green",
  "swagger.yml": "_swagger_medium-green",
  "sym-lib-table": "_kicad_dark-green",
  "tailwind.cjs": "_tailwind_medium-cyan",
  ".tailwind.cjs": "_tailwind_medium-cyan",
  "tailwind.coffee": "_tailwind_medium-cyan",
  ".tailwind.coffee": "_tailwind_medium-cyan",
  "tailwind.config.cjs": "_tailwind_medium-cyan",
  ".tailwind.config.cjs": "_tailwind_medium-cyan",
  "tailwind.config.coffee": "_tailwind_medium-cyan",
  ".tailwind.config.coffee": "_tailwind_medium-cyan",
  "tailwind.config.js": "_tailwind_medium-cyan",
  ".tailwind.config.js": "_tailwind_medium-cyan",
  "tailwind.config.mjs": "_tailwind_medium-cyan",
  ".tailwind.config.mjs": "_tailwind_medium-cyan",
  "tailwind.config.ts": "_tailwind_medium-cyan",
  ".tailwind.config.ts": "_tailwind_medium-cyan",
  "tailwind.js": "_tailwind_medium-cyan",
  ".tailwind.js": "_tailwind_medium-cyan",
  "tailwind.mjs": "_tailwind_medium-cyan",
  ".tailwind.mjs": "_tailwind_medium-cyan",
  "tailwind.ts": "_tailwind_medium-cyan",
  ".tailwind.ts": "_tailwind_medium-cyan",
  "tangutsources.txt": "_unicode_medium-red",
  terminal: "_config_dark-blue",
  terminalrc: "_config_dark-blue",
  "terminal saved output": "_text_medium-maroon",
  "terminal saved-output": "_text_medium-maroon",
  "terminal saved_output": "_text_medium-maroon",
  "terminal-saved output": "_text_medium-maroon",
  "terminal-saved-output": "_text_medium-maroon",
  "terminal-saved_output": "_text_medium-maroon",
  "terminal_saved output": "_text_medium-maroon",
  "terminal_saved-output": "_text_medium-maroon",
  terminal_saved_output: "_text_medium-maroon",
  terms: "_book_dark-blue",
  ".terserrc": "_terser_medium-orange",
  ".terserrc._": "_terser_medium-orange",
  ".terserrc.0": "_terser_medium-orange",
  ".terserrc.1": "_terser_medium-orange",
  ".terserrc.2": "_terser_medium-orange",
  ".terserrc.3": "_terser_medium-orange",
  ".terserrc.4": "_terser_medium-orange",
  ".terserrc.5": "_terser_medium-orange",
  ".terserrc.6": "_terser_medium-orange",
  ".terserrc.7": "_terser_medium-orange",
  ".terserrc.8": "_terser_medium-orange",
  ".terserrc.9": "_terser_medium-orange",
  ".terserrc.a": "_terser_medium-orange",
  ".terserrc.b": "_terser_medium-orange",
  ".terserrc.c": "_terser_medium-orange",
  ".terserrc.d": "_terser_medium-orange",
  ".terserrc.e": "_terser_medium-orange",
  ".terserrc.f": "_terser_medium-orange",
  ".terserrc.g": "_terser_medium-orange",
  ".terserrc.h": "_terser_medium-orange",
  ".terserrc.i": "_terser_medium-orange",
  ".terserrc.j": "_terser_medium-orange",
  ".terserrc.k": "_terser_medium-orange",
  ".terserrc.l": "_terser_medium-orange",
  ".terserrc.m": "_terser_medium-orange",
  ".terserrc.n": "_terser_medium-orange",
  ".terserrc.o": "_terser_medium-orange",
  ".terserrc.p": "_terser_medium-orange",
  ".terserrc.q": "_terser_medium-orange",
  ".terserrc.r": "_terser_medium-orange",
  ".terserrc.s": "_terser_medium-orange",
  ".terserrc.t": "_terser_medium-orange",
  ".terserrc.u": "_terser_medium-orange",
  ".terserrc.v": "_terser_medium-orange",
  ".terserrc.w": "_terser_medium-orange",
  ".terserrc.x": "_terser_medium-orange",
  ".terserrc.y": "_terser_medium-orange",
  ".terserrc.z": "_terser_medium-orange",
  "test-.c2hs": "_test-hs_medium-purple",
  "test..c2hs": "_test-hs_medium-purple",
  "test_.c2hs": "_test-hs_medium-purple",
  ".testcaferc.json": "_testcafe_medium-blue",
  "test-.cjs": "_test-js_medium-green",
  "test..cjs": "_test-js_medium-green",
  "test_.cjs": "_test-js_medium-green",
  "test-.cjsx": "_test-coffee_medium-maroon",
  "test_.cjsx": "_test-coffee_medium-maroon",
  "test-.coffee": "_test-coffee_medium-maroon",
  "test_.coffee": "_test-coffee_medium-maroon",
  "test-.es": "_test-js_medium-yellow",
  "test..es": "_test-js_medium-yellow",
  "test_.es": "_test-js_medium-yellow",
  "test-.go": "_test-go_medium-cyan",
  "test..go": "_test-go_medium-cyan",
  "test_.go": "_test-go_medium-cyan",
  "test-.hs": "_test-hs_medium-purple",
  "test..hs": "_test-hs_medium-purple",
  "test_.hs": "_test-hs_medium-purple",
  "test-.hsc": "_test-hs_medium-purple",
  "test..hsc": "_test-hs_medium-purple",
  "test_.hsc": "_test-hs_medium-purple",
  "test-.iced": "_test-coffee_medium-maroon",
  "test_.iced": "_test-coffee_medium-maroon",
  "test-.js": "_test-js_medium-yellow",
  "test-._js": "_test-js_medium-yellow",
  "test..js": "_test-js_medium-yellow",
  "test.._js": "_test-js_medium-yellow",
  "test_.js": "_test-js_medium-yellow",
  "test_._js": "_test-js_medium-yellow",
  "test-.jsb": "_test-js_medium-yellow",
  "test..jsb": "_test-js_medium-yellow",
  "test_.jsb": "_test-js_medium-yellow",
  "test-.jsm": "_test-js_medium-yellow",
  "test..jsm": "_test-js_medium-yellow",
  "test_.jsm": "_test-js_medium-yellow",
  "test-.jss": "_test-js_medium-yellow",
  "test..jss": "_test-js_medium-yellow",
  "test_.jss": "_test-js_medium-yellow",
  "test-.jsx": "_test-react_medium-blue",
  "test..jsx": "_test-react_medium-blue",
  "test_.jsx": "_test-react_medium-blue",
  "test-.lhs": "_test-hs_medium-purple",
  "test..lhs": "_test-hs_medium-purple",
  "test_.lhs": "_test-hs_medium-purple",
  "test-.litcoffee": "_test-coffee_medium-maroon",
  "test_.litcoffee": "_test-coffee_medium-maroon",
  "test.me": "_book_medium-blue",
  "test.me.md": "_book_medium-blue",
  "test.me.txt": "_book_medium-blue",
  "test-.mjs": "_test-js_medium-blue",
  "test..mjs": "_test-js_medium-blue",
  "test_.mjs": "_test-js_medium-blue",
  "test-.pl": "_test-perl_medium-blue",
  "test..pl": "_test-perl_medium-blue",
  "test_.pl": "_test-perl_medium-blue",
  "test-.rb": "_test-ruby_medium-red",
  "test..rb": "_test-ruby_medium-red",
  "test_.rb": "_test-ruby_medium-red",
  "test-.react.cjs": "_test-react_medium-blue",
  "test..react.cjs": "_test-react_medium-blue",
  "test_.react.cjs": "_test-react_medium-blue",
  "test-.react.js": "_test-react_medium-blue",
  "test..react.js": "_test-react_medium-blue",
  "test_.react.js": "_test-react_medium-blue",
  "test-.react.mjs": "_test-react_medium-blue",
  "test..react.mjs": "_test-react_medium-blue",
  "test_.react.mjs": "_test-react_medium-blue",
  "test-requirements.in": "_pypi_dark-blue",
  "test_requirements.in": "_pypi_dark-blue",
  "test-requirements.txt": "_pypi_dark-blue",
  "test_requirements.txt": "_pypi_dark-blue",
  "test-.rs": "_test-rust_medium-maroon",
  "test_.rs": "_test-rust_medium-maroon",
  "test-.ruby": "_test-ruby_medium-red",
  "test..ruby": "_test-ruby_medium-red",
  "test_.ruby": "_test-ruby_medium-red",
  tests: "_text_medium-red",
  "test-.sjs": "_test-js_medium-yellow",
  "test..sjs": "_test-js_medium-yellow",
  "test_.sjs": "_test-js_medium-yellow",
  "tests-requirements.in": "_pypi_dark-blue",
  "tests_requirements.in": "_pypi_dark-blue",
  "tests-requirements.txt": "_pypi_dark-blue",
  "tests_requirements.txt": "_pypi_dark-blue",
  "test-.ts": "_test-ts_medium-blue",
  "test..ts": "_test-ts_medium-blue",
  "test_.ts": "_test-ts_medium-blue",
  "test-.tsx": "_test-ts_light-blue",
  "test..tsx": "_test-ts_light-blue",
  "test_.tsx": "_test-ts_light-blue",
  "text.enc": "_gear_dark-green",
  ".tgitconfig": "_tortoise_medium-red",
  thanks: "_book_dark-blue",
  thorfile: "_thor_dark-orange",
  tiltfile: "_tilt_medium-green",
  ".tkdiffrc": "_tcl_dark-red",
  "tmux.conf": "_tmux_medium-green",
  "toc.entries": "_manpage_dark-green",
  "todo.txt": "_checklist_medium-green",
  "toolchain_installscript.qs": "_qt_medium-yellow",
  "tools panel presets": "_ai_medium-orange",
  "train_val.prototxt": "_caffe2_medium-purple",
  troffrc: "_manpage_dark-green",
  "troffrc-end": "_manpage_dark-green",
  "truffle.cjs": "_truffle_medium-maroon",
  ".truffle.cjs": "_truffle_medium-maroon",
  "truffle.js": "_truffle_medium-maroon",
  ".truffle.js": "_truffle_medium-maroon",
  "truffle.mjs": "_truffle_medium-maroon",
  ".truffle.mjs": "_truffle_medium-maroon",
  "tsconfig.0.json": "_config-ts_medium-blue",
  "tsconfig.1.json": "_config-ts_medium-blue",
  "tsconfig.2.json": "_config-ts_medium-blue",
  "tsconfig.3.json": "_config-ts_medium-blue",
  "tsconfig.4.json": "_config-ts_medium-blue",
  "tsconfig.5.json": "_config-ts_medium-blue",
  "tsconfig.6.json": "_config-ts_medium-blue",
  "tsconfig.7.json": "_config-ts_medium-blue",
  "tsconfig.8.json": "_config-ts_medium-blue",
  "tsconfig.9.json": "_config-ts_medium-blue",
  "tsconfig.a.json": "_config-ts_medium-blue",
  "tsconfig.b.json": "_config-ts_medium-blue",
  "tsconfig.c.json": "_config-ts_medium-blue",
  "tsconfig.d.json": "_config-ts_medium-blue",
  "tsconfig.e.json": "_config-ts_medium-blue",
  "tsconfig.f.json": "_config-ts_medium-blue",
  "tsconfig.g.json": "_config-ts_medium-blue",
  "tsconfig.h.json": "_config-ts_medium-blue",
  "tsconfig.i.json": "_config-ts_medium-blue",
  "tsconfig.j.json": "_config-ts_medium-blue",
  "tsconfig.json": "_config-ts_medium-blue",
  "tsconfig. .json": "_config-ts_medium-blue",
  "tsconfig.!.json": "_config-ts_medium-blue",
  'tsconfig.".json': "_config-ts_medium-blue",
  "tsconfig.#.json": "_config-ts_medium-blue",
  "tsconfig.$.json": "_config-ts_medium-blue",
  "tsconfig.%.json": "_config-ts_medium-blue",
  "tsconfig.&.json": "_config-ts_medium-blue",
  "tsconfig.'.json": "_config-ts_medium-blue",
  "tsconfig.(.json": "_config-ts_medium-blue",
  "tsconfig.).json": "_config-ts_medium-blue",
  "tsconfig.*.json": "_config-ts_medium-blue",
  "tsconfig.+.json": "_config-ts_medium-blue",
  "tsconfig.,.json": "_config-ts_medium-blue",
  "tsconfig.-.json": "_config-ts_medium-blue",
  "tsconfig...json": "_config-ts_medium-blue",
  "tsconfig./.json": "_config-ts_medium-blue",
  "tsconfig.:.json": "_config-ts_medium-blue",
  "tsconfig.;.json": "_config-ts_medium-blue",
  "tsconfig.<.json": "_config-ts_medium-blue",
  "tsconfig.=.json": "_config-ts_medium-blue",
  "tsconfig.>.json": "_config-ts_medium-blue",
  "tsconfig.?.json": "_config-ts_medium-blue",
  "tsconfig.@.json": "_config-ts_medium-blue",
  "tsconfig.[.json": "_config-ts_medium-blue",
  "tsconfig.\\.json": "_config-ts_medium-blue",
  "tsconfig.].json": "_config-ts_medium-blue",
  "tsconfig.^.json": "_config-ts_medium-blue",
  "tsconfig._.json": "_config-ts_medium-blue",
  "tsconfig.`.json": "_config-ts_medium-blue",
  "tsconfig.{.json": "_config-ts_medium-blue",
  "tsconfig.|.json": "_config-ts_medium-blue",
  "tsconfig.}.json": "_config-ts_medium-blue",
  "tsconfig.~.json": "_config-ts_medium-blue",
  "tsconfig.k.json": "_config-ts_medium-blue",
  "tsconfig.l.json": "_config-ts_medium-blue",
  "tsconfig.m.json": "_config-ts_medium-blue",
  "tsconfig.n.json": "_config-ts_medium-blue",
  "tsconfig.o.json": "_config-ts_medium-blue",
  "tsconfig.p.json": "_config-ts_medium-blue",
  "tsconfig.q.json": "_config-ts_medium-blue",
  "tsconfig.r.json": "_config-ts_medium-blue",
  "tsconfig.s.json": "_config-ts_medium-blue",
  "tsconfig.t.json": "_config-ts_medium-blue",
  "tsconfig.u.json": "_config-ts_medium-blue",
  "tsconfig.v.json": "_config-ts_medium-blue",
  "tsconfig.w.json": "_config-ts_medium-blue",
  "tsconfig.x.json": "_config-ts_medium-blue",
  "tsconfig.y.json": "_config-ts_medium-blue",
  "tsconfig.z.json": "_config-ts_medium-blue",
  "tslint.json": "_config-ts_medium-purple",
  "typedoc.json": "_typedoc_dark-purple",
  "typings.json": "_typings_medium-maroon",
  "ubsan.blacklist": "_llvm_medium-red",
  ".uglifyrc": "_terser_medium-orange",
  ".uglifyrc._": "_terser_medium-orange",
  ".uglifyrc.0": "_terser_medium-orange",
  ".uglifyrc.1": "_terser_medium-orange",
  ".uglifyrc.2": "_terser_medium-orange",
  ".uglifyrc.3": "_terser_medium-orange",
  ".uglifyrc.4": "_terser_medium-orange",
  ".uglifyrc.5": "_terser_medium-orange",
  ".uglifyrc.6": "_terser_medium-orange",
  ".uglifyrc.7": "_terser_medium-orange",
  ".uglifyrc.8": "_terser_medium-orange",
  ".uglifyrc.9": "_terser_medium-orange",
  ".uglifyrc.a": "_terser_medium-orange",
  ".uglifyrc.b": "_terser_medium-orange",
  ".uglifyrc.c": "_terser_medium-orange",
  ".uglifyrc.d": "_terser_medium-orange",
  ".uglifyrc.e": "_terser_medium-orange",
  ".uglifyrc.f": "_terser_medium-orange",
  ".uglifyrc.g": "_terser_medium-orange",
  ".uglifyrc.h": "_terser_medium-orange",
  ".uglifyrc.i": "_terser_medium-orange",
  ".uglifyrc.j": "_terser_medium-orange",
  ".uglifyrc.k": "_terser_medium-orange",
  ".uglifyrc.l": "_terser_medium-orange",
  ".uglifyrc.m": "_terser_medium-orange",
  ".uglifyrc.n": "_terser_medium-orange",
  ".uglifyrc.o": "_terser_medium-orange",
  ".uglifyrc.p": "_terser_medium-orange",
  ".uglifyrc.q": "_terser_medium-orange",
  ".uglifyrc.r": "_terser_medium-orange",
  ".uglifyrc.s": "_terser_medium-orange",
  ".uglifyrc.t": "_terser_medium-orange",
  ".uglifyrc.u": "_terser_medium-orange",
  ".uglifyrc.v": "_terser_medium-orange",
  ".uglifyrc.w": "_terser_medium-orange",
  ".uglifyrc.x": "_terser_medium-orange",
  ".uglifyrc.y": "_terser_medium-orange",
  ".uglifyrc.z": "_terser_medium-orange",
  "uikit.cjs": "_uikit_medium-blue",
  "uikit.js": "_uikit_medium-blue",
  "uikit.min.cjs": "_uikit_medium-blue",
  "uikit.min.js": "_uikit_medium-blue",
  "uikit.min.mjs": "_uikit_medium-blue",
  "uikit.mjs": "_uikit_medium-blue",
  "unibeautify.config.cjs": "_unibeautify_medium-orange",
  "unibeautify.config.js": "_unibeautify_medium-orange",
  "unibeautify.config.mjs": "_unibeautify_medium-orange",
  "unicodedata.txt": "_unicode_medium-red",
  "unihan.txt": "_unicode_medium-red",
  "units.dat": "_scales_medium-green",
  unitshistory: "_scales_medium-red",
  "units-history": "_scales_medium-red",
  units_history: "_scales_medium-red",
  ".unitshistory": "_scales_medium-red",
  ".units-history": "_scales_medium-red",
  ".units_history": "_scales_medium-red",
  "units.lib": "_scales_medium-green",
  unittab: "_scales_medium-green",
  unlicence: "_book_medium-blue",
  "unlicence.md": "_book_medium-blue",
  "unlicence.mysql": "_book_medium-blue",
  "unlicence.mysql.md": "_book_medium-blue",
  "unlicence.mysql.txt": "_book_medium-blue",
  unlicences: "_book_medium-blue",
  "unlicences.md": "_book_medium-blue",
  "unlicences.mysql": "_book_medium-blue",
  "unlicences.mysql.md": "_book_medium-blue",
  "unlicences.mysql.txt": "_book_medium-blue",
  "unlicences.txt": "_book_medium-blue",
  "unlicence.txt": "_book_medium-blue",
  unlicense: "_book_medium-blue",
  "unlicense.md": "_book_medium-blue",
  "unlicense.mysql": "_book_medium-blue",
  "unlicense.mysql.md": "_book_medium-blue",
  "unlicense.mysql.txt": "_book_medium-blue",
  unlicenses: "_book_medium-blue",
  "unlicenses.md": "_book_medium-blue",
  "unlicenses.mysql": "_book_medium-blue",
  "unlicenses.mysql.md": "_book_medium-blue",
  "unlicenses.mysql.txt": "_book_medium-blue",
  "unlicenses.txt": "_book_medium-blue",
  "unlicense.txt": "_book_medium-blue",
  "usourcedata.txt": "_unicode_medium-red",
  v8: "_v8_medium-blue",
  "v8-": "_v8_medium-blue",
  "v8.": "_v8_medium-blue",
  v8_: "_v8_medium-blue",
  vagrantfile: "_vagrant_medium-cyan",
  vdev0: "_openzfs_dark-blue",
  vdev1: "_openzfs_dark-blue",
  vdev2: "_openzfs_dark-blue",
  vdev3: "_openzfs_dark-blue",
  vdev4: "_openzfs_dark-blue",
  vdev5: "_openzfs_dark-blue",
  vdev6: "_openzfs_dark-blue",
  vdev7: "_openzfs_dark-blue",
  vdev8: "_openzfs_dark-blue",
  vdev9: "_openzfs_dark-blue",
  ".vendor_urls": "_heroku_dark-purple",
  ".vercelignore": "_zeit_medium-maroon",
  "vercel.json": "_zeit_medium-grey",
  version: "_tag_medium-yellow",
  ".version": "_tag_medium-yellow",
  "verticalorientation.txt": "_unicode_medium-red",
  viminfo: "_vim_dark-green",
  ".viminfo": "_vim_dark-green",
  _viminfo: "_vim_dark-green",
  vimrc: "_vim_dark-green",
  ".vimrc": "_vim_dark-green",
  _vimrc: "_vim_dark-green",
  "vite.config.js": "_vite_medium-yellow",
  "vite.config.ts": "_vite_medium-yellow",
  ".vsts-ci.yaml": "_vsts_medium-blue",
  ".vsts-ci.yml": "_vsts_medium-blue",
  "vue.config.cjs": "_vue_light-green",
  "vue.config.js": "_vue_light-green",
  "vue.config.mjs": "_vue_light-green",
  "w3c.json": "_w3c_medium-blue",
  ".wallaby.cjs": "_wallaby_medium-green",
  ".wallaby.js": "_wallaby_medium-green",
  ".wallaby.mjs": "_wallaby_medium-green",
  warnings: "_book_dark-blue",
  watchlists: "_python_medium-green",
  "watchman.json": "_watchman_medium-blue",
  "web-dev-server.config.cjs": "_modernweb_medium-blue",
  "web-dev-server.config.js": "_modernweb_medium-blue",
  "web-dev-server.config.mjs": "_modernweb_medium-blue",
  "webpack.analyze.js": "_webpack_medium-blue",
  "webpack.base.conf.cjs": "_webpack_medium-blue",
  "webpack.base.conf.coffee": "_webpack_medium-blue",
  "webpack.base.conf.js": "_webpack_medium-blue",
  "webpack.base.conf.mjs": "_webpack_medium-blue",
  "webpack.base.conf.ts": "_webpack_medium-blue",
  "webpack.cjs": "_webpack_medium-blue",
  "webpack.coffee": "_webpack_medium-blue",
  "webpack.common.cjs": "_webpack_medium-blue",
  "webpack.common.coffee": "_webpack_medium-blue",
  "webpack.common.js": "_webpack_medium-blue",
  "webpack.common.mjs": "_webpack_medium-blue",
  "webpack.common.ts": "_webpack_medium-blue",
  "webpack.config.babel.cjs": "_webpack_medium-blue",
  "webpack.config.babel.coffee": "_webpack_medium-blue",
  "webpack.config.babel.js": "_webpack_medium-blue",
  "webpack.config.babel.mjs": "_webpack_medium-blue",
  "webpack.config.babel.ts": "_webpack_medium-blue",
  "webpack.config.base.babel.cjs": "_webpack_medium-blue",
  "webpack.config.base.babel.coffee": "_webpack_medium-blue",
  "webpack.config.base.babel.js": "_webpack_medium-blue",
  "webpack.config.base.babel.mjs": "_webpack_medium-blue",
  "webpack.config.base.babel.ts": "_webpack_medium-blue",
  "webpack.config.base.cjs": "_webpack_medium-blue",
  "webpack.config.base.coffee": "_webpack_medium-blue",
  "webpack.config.base.js": "_webpack_medium-blue",
  "webpack.config.base.mjs": "_webpack_medium-blue",
  "webpack.config.base.ts": "_webpack_medium-blue",
  "webpack.config.cjs": "_webpack_medium-blue",
  "webpack.config.coffee": "_webpack_medium-blue",
  "webpack.config.common.babel.cjs": "_webpack_medium-blue",
  "webpack.config.common.babel.coffee": "_webpack_medium-blue",
  "webpack.config.common.babel.js": "_webpack_medium-blue",
  "webpack.config.common.babel.mjs": "_webpack_medium-blue",
  "webpack.config.common.babel.ts": "_webpack_medium-blue",
  "webpack.config.common.cjs": "_webpack_medium-blue",
  "webpack.config.common.coffee": "_webpack_medium-blue",
  "webpack.config.common.js": "_webpack_medium-blue",
  "webpack.config.common.mjs": "_webpack_medium-blue",
  "webpack.config.common.ts": "_webpack_medium-blue",
  "webpack.config.dev.babel.cjs": "_webpack_medium-blue",
  "webpack.config.dev.babel.coffee": "_webpack_medium-blue",
  "webpack.config.dev.babel.js": "_webpack_medium-blue",
  "webpack.config.dev.babel.mjs": "_webpack_medium-blue",
  "webpack.config.dev.babel.ts": "_webpack_medium-blue",
  "webpack.config.dev.cjs": "_webpack_medium-blue",
  "webpack.config.dev.coffee": "_webpack_medium-blue",
  "webpack.config.development.babel.cjs": "_webpack_medium-blue",
  "webpack.config.development.babel.coffee": "_webpack_medium-blue",
  "webpack.config.development.babel.js": "_webpack_medium-blue",
  "webpack.config.development.babel.mjs": "_webpack_medium-blue",
  "webpack.config.development.babel.ts": "_webpack_medium-blue",
  "webpack.config.development.cjs": "_webpack_medium-blue",
  "webpack.config.development.coffee": "_webpack_medium-blue",
  "webpack.config.development.js": "_webpack_medium-blue",
  "webpack.config.development.mjs": "_webpack_medium-blue",
  "webpack.config.development.ts": "_webpack_medium-blue",
  "webpack.config.dev.js": "_webpack_medium-blue",
  "webpack.config.dev.mjs": "_webpack_medium-blue",
  "webpack.config.dev.ts": "_webpack_medium-blue",
  "webpack.config.js": "_webpack_medium-blue",
  "webpack.config.mjs": "_webpack_medium-blue",
  "webpack.config.prod.babel.cjs": "_webpack_medium-blue",
  "webpack.config.prod.babel.coffee": "_webpack_medium-blue",
  "webpack.config.prod.babel.js": "_webpack_medium-blue",
  "webpack.config.prod.babel.mjs": "_webpack_medium-blue",
  "webpack.config.prod.babel.ts": "_webpack_medium-blue",
  "webpack.config.prod.cjs": "_webpack_medium-blue",
  "webpack.config.prod.coffee": "_webpack_medium-blue",
  "webpack.config.prod.js": "_webpack_medium-blue",
  "webpack.config.prod.mjs": "_webpack_medium-blue",
  "webpack.config.prod.ts": "_webpack_medium-blue",
  "webpack.config.production.babel.cjs": "_webpack_medium-blue",
  "webpack.config.production.babel.coffee": "_webpack_medium-blue",
  "webpack.config.production.babel.js": "_webpack_medium-blue",
  "webpack.config.production.babel.mjs": "_webpack_medium-blue",
  "webpack.config.production.babel.ts": "_webpack_medium-blue",
  "webpack.config.production.cjs": "_webpack_medium-blue",
  "webpack.config.production.coffee": "_webpack_medium-blue",
  "webpack.config.production.js": "_webpack_medium-blue",
  "webpack.config.production.mjs": "_webpack_medium-blue",
  "webpack.config.production.ts": "_webpack_medium-blue",
  "webpack.config.staging.babel.cjs": "_webpack_medium-blue",
  "webpack.config.staging.babel.coffee": "_webpack_medium-blue",
  "webpack.config.staging.babel.js": "_webpack_medium-blue",
  "webpack.config.staging.babel.mjs": "_webpack_medium-blue",
  "webpack.config.staging.babel.ts": "_webpack_medium-blue",
  "webpack.config.staging.cjs": "_webpack_medium-blue",
  "webpack.config.staging.coffee": "_webpack_medium-blue",
  "webpack.config.staging.js": "_webpack_medium-blue",
  "webpack.config.staging.mjs": "_webpack_medium-blue",
  "webpack.config.staging.ts": "_webpack_medium-blue",
  "webpack.config.test.babel.cjs": "_webpack_medium-blue",
  "webpack.config.test.babel.coffee": "_webpack_medium-blue",
  "webpack.config.test.babel.js": "_webpack_medium-blue",
  "webpack.config.test.babel.mjs": "_webpack_medium-blue",
  "webpack.config.test.babel.ts": "_webpack_medium-blue",
  "webpack.config.test.cjs": "_webpack_medium-blue",
  "webpack.config.test.coffee": "_webpack_medium-blue",
  "webpack.config.test.js": "_webpack_medium-blue",
  "webpack.config.test.mjs": "_webpack_medium-blue",
  "webpack.config.test.ts": "_webpack_medium-blue",
  "webpack.config.ts": "_webpack_medium-blue",
  "webpack.dev.cjs": "_webpack_medium-blue",
  "webpack.dev.coffee": "_webpack_medium-blue",
  "webpack.dev.conf.cjs": "_webpack_medium-blue",
  "webpack.dev.conf.coffee": "_webpack_medium-blue",
  "webpack.dev.conf.js": "_webpack_medium-blue",
  "webpack.dev.conf.mjs": "_webpack_medium-blue",
  "webpack.dev.conf.ts": "_webpack_medium-blue",
  "webpack.dev.js": "_webpack_medium-blue",
  "webpack.dev.mjs": "_webpack_medium-blue",
  "webpack.dev.ts": "_webpack_medium-blue",
  "webpackfile.cjs": "_webpack_medium-blue",
  "webpackfile.coffee": "_webpack_medium-blue",
  "webpackfile.js": "_webpack_medium-blue",
  "webpackfile.json": "_webpack_medium-blue",
  "webpackfile.jsx": "_webpack_medium-blue",
  "webpackfile.litcoffee": "_webpack_medium-blue",
  "webpackfile.mjs": "_webpack_medium-blue",
  "webpackfile.ts": "_webpack_medium-blue",
  "webpackfile.tsx": "_webpack_medium-blue",
  "webpack.js": "_webpack_medium-blue",
  "webpack.json": "_webpack_medium-blue",
  "webpack.jsx": "_webpack_medium-blue",
  "webpack.litcoffee": "_webpack_medium-blue",
  "webpack.main.config.cjs": "_webpack_medium-blue",
  "webpack.main.config.coffee": "_webpack_medium-blue",
  "webpack.main.config.js": "_webpack_medium-blue",
  "webpack.main.config.mjs": "_webpack_medium-blue",
  "webpack.main.config.ts": "_webpack_medium-blue",
  "webpack.mix.cjs": "_webpack_medium-blue",
  "webpack.mix.coffee": "_webpack_medium-blue",
  "webpack.mix.js": "_webpack_medium-blue",
  "webpack.mix.mjs": "_webpack_medium-blue",
  "webpack.mix.ts": "_webpack_medium-blue",
  "webpack.mjs": "_webpack_medium-blue",
  "webpack.plugins.cjs": "_webpack_medium-blue",
  "webpack.plugins.coffee": "_webpack_medium-blue",
  "webpack.plugins.js": "_webpack_medium-blue",
  "webpack.plugins.mjs": "_webpack_medium-blue",
  "webpack.plugins.ts": "_webpack_medium-blue",
  "webpack.prod.cjs": "_webpack_medium-blue",
  "webpack.prod.coffee": "_webpack_medium-blue",
  "webpack.prod.conf.cjs": "_webpack_medium-blue",
  "webpack.prod.conf.coffee": "_webpack_medium-blue",
  "webpack.prod.conf.js": "_webpack_medium-blue",
  "webpack.prod.conf.mjs": "_webpack_medium-blue",
  "webpack.prod.conf.ts": "_webpack_medium-blue",
  "webpack.prod.js": "_webpack_medium-blue",
  "webpack.prod.mjs": "_webpack_medium-blue",
  "webpack.prod.ts": "_webpack_medium-blue",
  "webpack.renderer.config.cjs": "_webpack_medium-blue",
  "webpack.renderer.config.coffee": "_webpack_medium-blue",
  "webpack.renderer.config.js": "_webpack_medium-blue",
  "webpack.renderer.config.mjs": "_webpack_medium-blue",
  "webpack.renderer.config.ts": "_webpack_medium-blue",
  "webpack.rules.cjs": "_webpack_medium-blue",
  "webpack.rules.coffee": "_webpack_medium-blue",
  "webpack.rules.js": "_webpack_medium-blue",
  "webpack.rules.mjs": "_webpack_medium-blue",
  "webpack.rules.ts": "_webpack_medium-blue",
  "webpack.test.conf.cjs": "_webpack_medium-blue",
  "webpack.test.conf.coffee": "_webpack_medium-blue",
  "webpack.test.conf.js": "_webpack_medium-blue",
  "webpack.test.conf.mjs": "_webpack_medium-blue",
  "webpack.test.conf.ts": "_webpack_medium-blue",
  "webpack.ts": "_webpack_medium-blue",
  "webpack.tsx": "_webpack_medium-blue",
  "web-test-runner.config.cjs": "_modernweb_medium-blue",
  "web-test-runner.config.js": "_modernweb_medium-blue",
  "web-test-runner.config.mjs": "_modernweb_medium-blue",
  "wercker.yaml": "_wercker_medium-purple",
  "wercker.yml": "_wercker_medium-purple",
  wgetrc: "_wget_medium-purple",
  whatis: "_database_medium-maroon",
  "windi.config.js": "_windi_medium-blue",
  "windi.config.ts": "_windi_medium-blue",
  "wordbreakproperty.txt": "_unicode_medium-red",
  "wordbreaktest.txt": "_unicode_medium-red",
  "workbox-config.cjs": "_workbox_medium-orange",
  "workbox-config.js": "_workbox_medium-orange",
  "workbox-config.mjs": "_workbox_medium-orange",
  workspace: "_bazel_medium-green",
  "workspace.bazel": "_bazel_medium-green",
  wscript: "_python_dark-maroon",
  xcompose: "_config_medium-cyan",
  ".xcompose": "_config_medium-cyan",
  "xmake.lua": "_xmake_medium-green",
  "yahoo-.cjs": "_yui_dark-blue",
  "yahoo-.js": "_yui_dark-blue",
  "yahoo-.mjs": "_yui_dark-blue",
  ".yamllint": "_yamllint_medium-green",
  ".yamllint.yaml": "_yamllint_medium-green",
  ".yamllint.yml": "_yamllint_medium-green",
  "yarn.lock": "_yarn_medium-blue",
  ".yaspeller.json": "_yandex_medium-red",
  ".yaspellerrc": "_yandex_medium-red",
  "yui.cjs": "_yui_dark-blue",
  "yui.js": "_yui_dark-blue",
  "yui.mjs": "_yui_dark-blue",
  zlogin: "_terminal_medium-blue",
  ".zlogin": "_terminal_medium-blue",
  zlogout: "_terminal_medium-blue",
  ".zlogout": "_terminal_medium-blue",
  "zork0.a": "_book_dark-blue",
  "zork0.b": "_book_dark-blue",
  "zork0.c": "_book_dark-blue",
  "zork0.d": "_book_dark-blue",
  "zork0.doc": "_book_medium-blue",
  "zork0.e": "_book_dark-blue",
  "zork0.f": "_book_dark-blue",
  "zork0.g": "_book_dark-blue",
  "zork0.h": "_book_dark-blue",
  "zork0.i": "_book_dark-blue",
  "zork0.j": "_book_dark-blue",
  "zork0.k": "_book_dark-blue",
  "zork0.l": "_book_dark-blue",
  "zork0.m": "_book_dark-blue",
  "zork0.n": "_book_dark-blue",
  "zork0.o": "_book_dark-blue",
  "zork0.p": "_book_dark-blue",
  "zork0.q": "_book_dark-blue",
  "zork0.r": "_book_dark-blue",
  "zork0.s": "_book_dark-blue",
  "zork0.t": "_book_dark-blue",
  "zork0.u": "_book_dark-blue",
  "zork0.v": "_book_dark-blue",
  "zork0.w": "_book_dark-blue",
  "zork0.x": "_book_dark-blue",
  "zork0.y": "_book_dark-blue",
  "zork0.z": "_book_dark-blue",
  "zork1.a": "_book_dark-blue",
  "zork1.b": "_book_dark-blue",
  "zork1.c": "_book_dark-blue",
  "zork1.d": "_book_dark-blue",
  "zork1.doc": "_book_medium-blue",
  "zork1.e": "_book_dark-blue",
  "zork1.f": "_book_dark-blue",
  "zork1.g": "_book_dark-blue",
  "zork1.h": "_book_dark-blue",
  "zork1.i": "_book_dark-blue",
  "zork1.j": "_book_dark-blue",
  "zork1.k": "_book_dark-blue",
  "zork1.l": "_book_dark-blue",
  "zork1.m": "_book_dark-blue",
  "zork1.n": "_book_dark-blue",
  "zork1.o": "_book_dark-blue",
  "zork1.p": "_book_dark-blue",
  "zork1.q": "_book_dark-blue",
  "zork1.r": "_book_dark-blue",
  "zork1.s": "_book_dark-blue",
  "zork1.t": "_book_dark-blue",
  "zork1.u": "_book_dark-blue",
  "zork1.v": "_book_dark-blue",
  "zork1.w": "_book_dark-blue",
  "zork1.x": "_book_dark-blue",
  "zork1.y": "_book_dark-blue",
  "zork1.z": "_book_dark-blue",
  "zork2.a": "_book_dark-blue",
  "zork2.b": "_book_dark-blue",
  "zork2.c": "_book_dark-blue",
  "zork2.d": "_book_dark-blue",
  "zork2.doc": "_book_medium-blue",
  "zork2.e": "_book_dark-blue",
  "zork2.f": "_book_dark-blue",
  "zork2.g": "_book_dark-blue",
  "zork2.h": "_book_dark-blue",
  "zork2.i": "_book_dark-blue",
  "zork2.j": "_book_dark-blue",
  "zork2.k": "_book_dark-blue",
  "zork2.l": "_book_dark-blue",
  "zork2.m": "_book_dark-blue",
  "zork2.n": "_book_dark-blue",
  "zork2.o": "_book_dark-blue",
  "zork2.p": "_book_dark-blue",
  "zork2.q": "_book_dark-blue",
  "zork2.r": "_book_dark-blue",
  "zork2.s": "_book_dark-blue",
  "zork2.t": "_book_dark-blue",
  "zork2.u": "_book_dark-blue",
  "zork2.v": "_book_dark-blue",
  "zork2.w": "_book_dark-blue",
  "zork2.x": "_book_dark-blue",
  "zork2.y": "_book_dark-blue",
  "zork2.z": "_book_dark-blue",
  "zork3.a": "_book_dark-blue",
  "zork3.b": "_book_dark-blue",
  "zork3.c": "_book_dark-blue",
  "zork3.d": "_book_dark-blue",
  "zork3.doc": "_book_medium-blue",
  "zork3.e": "_book_dark-blue",
  "zork3.f": "_book_dark-blue",
  "zork3.g": "_book_dark-blue",
  "zork3.h": "_book_dark-blue",
  "zork3.i": "_book_dark-blue",
  "zork3.j": "_book_dark-blue",
  "zork3.k": "_book_dark-blue",
  "zork3.l": "_book_dark-blue",
  "zork3.m": "_book_dark-blue",
  "zork3.n": "_book_dark-blue",
  "zork3.o": "_book_dark-blue",
  "zork3.p": "_book_dark-blue",
  "zork3.q": "_book_dark-blue",
  "zork3.r": "_book_dark-blue",
  "zork3.s": "_book_dark-blue",
  "zork3.t": "_book_dark-blue",
  "zork3.u": "_book_dark-blue",
  "zork3.v": "_book_dark-blue",
  "zork3.w": "_book_dark-blue",
  "zork3.x": "_book_dark-blue",
  "zork3.y": "_book_dark-blue",
  "zork3.z": "_book_dark-blue",
  "zork4.a": "_book_dark-blue",
  "zork4.b": "_book_dark-blue",
  "zork4.c": "_book_dark-blue",
  "zork4.d": "_book_dark-blue",
  "zork4.doc": "_book_medium-blue",
  "zork4.e": "_book_dark-blue",
  "zork4.f": "_book_dark-blue",
  "zork4.g": "_book_dark-blue",
  "zork4.h": "_book_dark-blue",
  "zork4.i": "_book_dark-blue",
  "zork4.j": "_book_dark-blue",
  "zork4.k": "_book_dark-blue",
  "zork4.l": "_book_dark-blue",
  "zork4.m": "_book_dark-blue",
  "zork4.n": "_book_dark-blue",
  "zork4.o": "_book_dark-blue",
  "zork4.p": "_book_dark-blue",
  "zork4.q": "_book_dark-blue",
  "zork4.r": "_book_dark-blue",
  "zork4.s": "_book_dark-blue",
  "zork4.t": "_book_dark-blue",
  "zork4.u": "_book_dark-blue",
  "zork4.v": "_book_dark-blue",
  "zork4.w": "_book_dark-blue",
  "zork4.x": "_book_dark-blue",
  "zork4.y": "_book_dark-blue",
  "zork4.z": "_book_dark-blue",
  "zork5.a": "_book_dark-blue",
  "zork5.b": "_book_dark-blue",
  "zork5.c": "_book_dark-blue",
  "zork5.d": "_book_dark-blue",
  "zork5.doc": "_book_medium-blue",
  "zork5.e": "_book_dark-blue",
  "zork5.f": "_book_dark-blue",
  "zork5.g": "_book_dark-blue",
  "zork5.h": "_book_dark-blue",
  "zork5.i": "_book_dark-blue",
  "zork5.j": "_book_dark-blue",
  "zork5.k": "_book_dark-blue",
  "zork5.l": "_book_dark-blue",
  "zork5.m": "_book_dark-blue",
  "zork5.n": "_book_dark-blue",
  "zork5.o": "_book_dark-blue",
  "zork5.p": "_book_dark-blue",
  "zork5.q": "_book_dark-blue",
  "zork5.r": "_book_dark-blue",
  "zork5.s": "_book_dark-blue",
  "zork5.t": "_book_dark-blue",
  "zork5.u": "_book_dark-blue",
  "zork5.v": "_book_dark-blue",
  "zork5.w": "_book_dark-blue",
  "zork5.x": "_book_dark-blue",
  "zork5.y": "_book_dark-blue",
  "zork5.z": "_book_dark-blue",
  "zork6.a": "_book_dark-blue",
  "zork6.b": "_book_dark-blue",
  "zork6.c": "_book_dark-blue",
  "zork6.d": "_book_dark-blue",
  "zork6.doc": "_book_medium-blue",
  "zork6.e": "_book_dark-blue",
  "zork6.f": "_book_dark-blue",
  "zork6.g": "_book_dark-blue",
  "zork6.h": "_book_dark-blue",
  "zork6.i": "_book_dark-blue",
  "zork6.j": "_book_dark-blue",
  "zork6.k": "_book_dark-blue",
  "zork6.l": "_book_dark-blue",
  "zork6.m": "_book_dark-blue",
  "zork6.n": "_book_dark-blue",
  "zork6.o": "_book_dark-blue",
  "zork6.p": "_book_dark-blue",
  "zork6.q": "_book_dark-blue",
  "zork6.r": "_book_dark-blue",
  "zork6.s": "_book_dark-blue",
  "zork6.t": "_book_dark-blue",
  "zork6.u": "_book_dark-blue",
  "zork6.v": "_book_dark-blue",
  "zork6.w": "_book_dark-blue",
  "zork6.x": "_book_dark-blue",
  "zork6.y": "_book_dark-blue",
  "zork6.z": "_book_dark-blue",
  "zork7.a": "_book_dark-blue",
  "zork7.b": "_book_dark-blue",
  "zork7.c": "_book_dark-blue",
  "zork7.d": "_book_dark-blue",
  "zork7.doc": "_book_medium-blue",
  "zork7.e": "_book_dark-blue",
  "zork7.f": "_book_dark-blue",
  "zork7.g": "_book_dark-blue",
  "zork7.h": "_book_dark-blue",
  "zork7.i": "_book_dark-blue",
  "zork7.j": "_book_dark-blue",
  "zork7.k": "_book_dark-blue",
  "zork7.l": "_book_dark-blue",
  "zork7.m": "_book_dark-blue",
  "zork7.n": "_book_dark-blue",
  "zork7.o": "_book_dark-blue",
  "zork7.p": "_book_dark-blue",
  "zork7.q": "_book_dark-blue",
  "zork7.r": "_book_dark-blue",
  "zork7.s": "_book_dark-blue",
  "zork7.t": "_book_dark-blue",
  "zork7.u": "_book_dark-blue",
  "zork7.v": "_book_dark-blue",
  "zork7.w": "_book_dark-blue",
  "zork7.x": "_book_dark-blue",
  "zork7.y": "_book_dark-blue",
  "zork7.z": "_book_dark-blue",
  "zork8.a": "_book_dark-blue",
  "zork8.b": "_book_dark-blue",
  "zork8.c": "_book_dark-blue",
  "zork8.d": "_book_dark-blue",
  "zork8.doc": "_book_medium-blue",
  "zork8.e": "_book_dark-blue",
  "zork8.f": "_book_dark-blue",
  "zork8.g": "_book_dark-blue",
  "zork8.h": "_book_dark-blue",
  "zork8.i": "_book_dark-blue",
  "zork8.j": "_book_dark-blue",
  "zork8.k": "_book_dark-blue",
  "zork8.l": "_book_dark-blue",
  "zork8.m": "_book_dark-blue",
  "zork8.n": "_book_dark-blue",
  "zork8.o": "_book_dark-blue",
  "zork8.p": "_book_dark-blue",
  "zork8.q": "_book_dark-blue",
  "zork8.r": "_book_dark-blue",
  "zork8.s": "_book_dark-blue",
  "zork8.t": "_book_dark-blue",
  "zork8.u": "_book_dark-blue",
  "zork8.v": "_book_dark-blue",
  "zork8.w": "_book_dark-blue",
  "zork8.x": "_book_dark-blue",
  "zork8.y": "_book_dark-blue",
  "zork8.z": "_book_dark-blue",
  "zork9.a": "_book_dark-blue",
  "zork9.b": "_book_dark-blue",
  "zork9.c": "_book_dark-blue",
  "zork9.d": "_book_dark-blue",
  "zork9.doc": "_book_medium-blue",
  "zork9.e": "_book_dark-blue",
  "zork9.f": "_book_dark-blue",
  "zork9.g": "_book_dark-blue",
  "zork9.h": "_book_dark-blue",
  "zork9.i": "_book_dark-blue",
  "zork9.j": "_book_dark-blue",
  "zork9.k": "_book_dark-blue",
  "zork9.l": "_book_dark-blue",
  "zork9.m": "_book_dark-blue",
  "zork9.n": "_book_dark-blue",
  "zork9.o": "_book_dark-blue",
  "zork9.p": "_book_dark-blue",
  "zork9.q": "_book_dark-blue",
  "zork9.r": "_book_dark-blue",
  "zork9.s": "_book_dark-blue",
  "zork9.t": "_book_dark-blue",
  "zork9.u": "_book_dark-blue",
  "zork9.v": "_book_dark-blue",
  "zork9.w": "_book_dark-blue",
  "zork9.x": "_book_dark-blue",
  "zork9.y": "_book_dark-blue",
  "zork9.z": "_book_dark-blue",
  zpreztorc: "_terminal_medium-blue",
  ".zpreztorc": "_terminal_medium-blue",
  zprofile: "_terminal_medium-blue",
  ".zprofile": "_terminal_medium-blue",
  zshenv: "_terminal_medium-blue",
  ".zshenv": "_terminal_medium-blue",
  zshrc: "_terminal_medium-blue",
  ".zshrc": "_terminal_medium-blue",
  ".zsrc.json": "_crafttweaker_medium-orange"
}, ks = {
  ".acre": "_acre_dark-blue",
  ".agda": "_agda_dark-cyan",
  aplsource: "_acre_medium-blue",
  ".atom": "_atom_dark-green",
  ".atom-ci": "_atom_dark-green",
  ".azure-pipelines": "_azurepipelines_dark-blue",
  ".bitcoin": "_bitcoin_medium-orange",
  bloc: "_bloc_medium-cyan",
  "bower-components": "_bower_medium-yellow",
  bower_components: "_bower_medium-yellow",
  ".buildkite": "_buildkite_light-green",
  ".bundle": "_package",
  ".bzr": "_bazaar_medium-yellow",
  ".cabal": "_cabal_medium-cyan",
  ".circleci": "_circleci",
  cnab: "_cnab_dark-blue",
  ".cpan": "_cpan_medium-blue",
  ".cpanplus": "_cpan_dark-blue",
  cubit: "_cubit_medium-cyan",
  cubits: "_cubit_medium-cyan",
  cvs: "_cvs_medium-orange",
  ".devcontainer": "_devcontainer_medium-blue",
  ".docker": "_docker_dark-blue",
  dropbox: "_dropbox_medium-blue",
  ".dropbox.cache": "_dropbox_medium-blue",
  ".dub": "_dub_medium-red",
  ".dvc": "_dvc_light-blue",
  ".emacs.d": "_emacs_medium-purple",
  ".expo": "_expo_medium-blue",
  ".expo-shared": "_expo_medium-blue",
  ".fossil-settings": "_fossil",
  ".github": "_github",
  ".gitlab": "_gitlab",
  ".hg": "_hg_medium-grey",
  ".meteor": "_meteor_dark-orange",
  ".node-gyp": "_node_dark-green",
  node_modules: "_node_medium-green",
  ".nyc-output": "_istanbul_medium-orange",
  ".nyc_output": "_istanbul_medium-orange",
  ".paket": "_package",
  ".svn": "_svn",
  ".vim": "_vim_medium-green",
  ".vscode": "_vs",
  ".wine": "_wine_dark-red",
  ".yarn": "_yarn_medium-blue"
}, vs = {
  80386: "_asm-intel_dark-blue",
  "1c": "_1c_dark-orange",
  "1C": "_1c_dark-orange",
  "1centerprise": "_1c_medium-red",
  "1c enterprise": "_1c_medium-red",
  "1c-enterprise": "_1c_medium-red",
  "1c_enterprise": "_1c_medium-red",
  "1CEnterprise": "_1c_medium-red",
  "1C Enterprise": "_1c_medium-red",
  "1C-Enterprise": "_1c_medium-red",
  "1C_Enterprise": "_1c_medium-red",
  "1CENTERPRISE": "_1c_medium-red",
  "1C ENTERPRISE": "_1c_medium-red",
  "1C-ENTERPRISE": "_1c_medium-red",
  "1C_ENTERPRISE": "_1c_medium-red",
  "1cquery": "_1c_dark-orange",
  "1c query": "_1c_dark-orange",
  "1c-query": "_1c_dark-orange",
  "1c_query": "_1c_dark-orange",
  "1CQuery": "_1c_dark-orange",
  "1C Query": "_1c_dark-orange",
  "1C-Query": "_1c_dark-orange",
  "1C_Query": "_1c_dark-orange",
  "1CQUERY": "_1c_dark-orange",
  "1C QUERY": "_1c_dark-orange",
  "1C-QUERY": "_1c_dark-orange",
  "1C_QUERY": "_1c_dark-orange",
  "4d": "_4d_dark-blue",
  "4D": "_4d_dark-blue",
  "4dm": "_4d_dark-blue",
  "4gl": "_sql_medium-blue",
  abap: "_abap_medium-orange",
  ABAP: "_abap_medium-orange",
  abl: "_progress_medium-green",
  ABL: "_progress_medium-green",
  abnf: "_bnf_medium-green",
  abp: "_abap_medium-orange",
  aconf: "_apache_dark-red",
  ACONF: "_apache_dark-red",
  actionscript: "_as_medium-red",
  "action script": "_as_medium-red",
  "action-script": "_as_medium-red",
  action_script: "_as_medium-red",
  ActionScript: "_as_medium-red",
  "Action Script": "_as_medium-red",
  "Action-Script": "_as_medium-red",
  Action_Script: "_as_medium-red",
  ACTIONSCRIPT: "_as_medium-red",
  "ACTION SCRIPT": "_as_medium-red",
  "ACTION-SCRIPT": "_as_medium-red",
  ACTION_SCRIPT: "_as_medium-red",
  "actionscript.1": "_as_medium-red",
  actionscript1: "_as_medium-red",
  "actionscript 1": "_as_medium-red",
  "actionscript-1": "_as_medium-red",
  actionscript_1: "_as_medium-red",
  "action script1": "_as_medium-red",
  "action script 1": "_as_medium-red",
  "action script-1": "_as_medium-red",
  "action script_1": "_as_medium-red",
  "action-script1": "_as_medium-red",
  "action-script 1": "_as_medium-red",
  "action-script-1": "_as_medium-red",
  "action-script_1": "_as_medium-red",
  action_script1: "_as_medium-red",
  "action_script 1": "_as_medium-red",
  "action_script-1": "_as_medium-red",
  action_script_1: "_as_medium-red",
  ActionScript1: "_as_medium-red",
  "ActionScript 1": "_as_medium-red",
  "ActionScript-1": "_as_medium-red",
  ActionScript_1: "_as_medium-red",
  "Action Script1": "_as_medium-red",
  "Action Script 1": "_as_medium-red",
  "Action Script-1": "_as_medium-red",
  "Action Script_1": "_as_medium-red",
  "Action-Script1": "_as_medium-red",
  "Action-Script 1": "_as_medium-red",
  "Action-Script-1": "_as_medium-red",
  "Action-Script_1": "_as_medium-red",
  Action_Script1: "_as_medium-red",
  "Action_Script 1": "_as_medium-red",
  "Action_Script-1": "_as_medium-red",
  Action_Script_1: "_as_medium-red",
  ACTIONSCRIPT1: "_as_medium-red",
  "ACTIONSCRIPT 1": "_as_medium-red",
  "ACTIONSCRIPT-1": "_as_medium-red",
  ACTIONSCRIPT_1: "_as_medium-red",
  "ACTION SCRIPT1": "_as_medium-red",
  "ACTION SCRIPT 1": "_as_medium-red",
  "ACTION SCRIPT-1": "_as_medium-red",
  "ACTION SCRIPT_1": "_as_medium-red",
  "ACTION-SCRIPT1": "_as_medium-red",
  "ACTION-SCRIPT 1": "_as_medium-red",
  "ACTION-SCRIPT-1": "_as_medium-red",
  "ACTION-SCRIPT_1": "_as_medium-red",
  ACTION_SCRIPT1: "_as_medium-red",
  "ACTION_SCRIPT 1": "_as_medium-red",
  "ACTION_SCRIPT-1": "_as_medium-red",
  ACTION_SCRIPT_1: "_as_medium-red",
  "actionscript.2": "_as_medium-red",
  actionscript2: "_as_medium-red",
  "actionscript 2": "_as_medium-red",
  "actionscript-2": "_as_medium-red",
  actionscript_2: "_as_medium-red",
  "action script2": "_as_medium-red",
  "action script 2": "_as_medium-red",
  "action script-2": "_as_medium-red",
  "action script_2": "_as_medium-red",
  "action-script2": "_as_medium-red",
  "action-script 2": "_as_medium-red",
  "action-script-2": "_as_medium-red",
  "action-script_2": "_as_medium-red",
  action_script2: "_as_medium-red",
  "action_script 2": "_as_medium-red",
  "action_script-2": "_as_medium-red",
  action_script_2: "_as_medium-red",
  ActionScript2: "_as_medium-red",
  "ActionScript 2": "_as_medium-red",
  "ActionScript-2": "_as_medium-red",
  ActionScript_2: "_as_medium-red",
  "Action Script2": "_as_medium-red",
  "Action Script 2": "_as_medium-red",
  "Action Script-2": "_as_medium-red",
  "Action Script_2": "_as_medium-red",
  "Action-Script2": "_as_medium-red",
  "Action-Script 2": "_as_medium-red",
  "Action-Script-2": "_as_medium-red",
  "Action-Script_2": "_as_medium-red",
  Action_Script2: "_as_medium-red",
  "Action_Script 2": "_as_medium-red",
  "Action_Script-2": "_as_medium-red",
  Action_Script_2: "_as_medium-red",
  ACTIONSCRIPT2: "_as_medium-red",
  "ACTIONSCRIPT 2": "_as_medium-red",
  "ACTIONSCRIPT-2": "_as_medium-red",
  ACTIONSCRIPT_2: "_as_medium-red",
  "ACTION SCRIPT2": "_as_medium-red",
  "ACTION SCRIPT 2": "_as_medium-red",
  "ACTION SCRIPT-2": "_as_medium-red",
  "ACTION SCRIPT_2": "_as_medium-red",
  "ACTION-SCRIPT2": "_as_medium-red",
  "ACTION-SCRIPT 2": "_as_medium-red",
  "ACTION-SCRIPT-2": "_as_medium-red",
  "ACTION-SCRIPT_2": "_as_medium-red",
  ACTION_SCRIPT2: "_as_medium-red",
  "ACTION_SCRIPT 2": "_as_medium-red",
  "ACTION_SCRIPT-2": "_as_medium-red",
  ACTION_SCRIPT_2: "_as_medium-red",
  "actionscript.3": "_as_medium-red",
  actionscript3: "_as_medium-red",
  "actionscript 3": "_as_medium-red",
  "actionscript-3": "_as_medium-red",
  actionscript_3: "_as_medium-red",
  "action script3": "_as_medium-red",
  "action script 3": "_as_medium-red",
  "action script-3": "_as_medium-red",
  "action script_3": "_as_medium-red",
  "action-script3": "_as_medium-red",
  "action-script 3": "_as_medium-red",
  "action-script-3": "_as_medium-red",
  "action-script_3": "_as_medium-red",
  action_script3: "_as_medium-red",
  "action_script 3": "_as_medium-red",
  "action_script-3": "_as_medium-red",
  action_script_3: "_as_medium-red",
  ActionScript3: "_as_medium-red",
  "ActionScript 3": "_as_medium-red",
  "ActionScript-3": "_as_medium-red",
  ActionScript_3: "_as_medium-red",
  "Action Script3": "_as_medium-red",
  "Action Script 3": "_as_medium-red",
  "Action Script-3": "_as_medium-red",
  "Action Script_3": "_as_medium-red",
  "Action-Script3": "_as_medium-red",
  "Action-Script 3": "_as_medium-red",
  "Action-Script-3": "_as_medium-red",
  "Action-Script_3": "_as_medium-red",
  Action_Script3: "_as_medium-red",
  "Action_Script 3": "_as_medium-red",
  "Action_Script-3": "_as_medium-red",
  Action_Script_3: "_as_medium-red",
  ACTIONSCRIPT3: "_as_medium-red",
  "ACTIONSCRIPT 3": "_as_medium-red",
  "ACTIONSCRIPT-3": "_as_medium-red",
  ACTIONSCRIPT_3: "_as_medium-red",
  "ACTION SCRIPT3": "_as_medium-red",
  "ACTION SCRIPT 3": "_as_medium-red",
  "ACTION SCRIPT-3": "_as_medium-red",
  "ACTION SCRIPT_3": "_as_medium-red",
  "ACTION-SCRIPT3": "_as_medium-red",
  "ACTION-SCRIPT 3": "_as_medium-red",
  "ACTION-SCRIPT-3": "_as_medium-red",
  "ACTION-SCRIPT_3": "_as_medium-red",
  ACTION_SCRIPT3: "_as_medium-red",
  "ACTION_SCRIPT 3": "_as_medium-red",
  "ACTION_SCRIPT-3": "_as_medium-red",
  ACTION_SCRIPT_3: "_as_medium-red",
  ada: "_ada_medium-blue",
  Ada: "_ada_medium-blue",
  ADA: "_ada_medium-blue",
  ada2005: "_ada_medium-blue",
  ADA2005: "_ada_medium-blue",
  ada95: "_ada_medium-blue",
  ADA95: "_ada_medium-blue",
  advpl: "_totvs_medium-maroon",
  AdvPL: "_totvs_medium-maroon",
  ADVPL: "_totvs_medium-maroon",
  afdko: "_database_light-blue",
  AFDKO: "_database_light-blue",
  affect: "_affectscript_medium-pink",
  affectscript: "_affectscript_medium-pink",
  "affect script": "_affectscript_medium-pink",
  "affect-script": "_affectscript_medium-pink",
  affect_script: "_affectscript_medium-pink",
  AffectScript: "_affectscript_medium-pink",
  "Affect Script": "_affectscript_medium-pink",
  "Affect-Script": "_affectscript_medium-pink",
  Affect_Script: "_affectscript_medium-pink",
  AFFECTSCRIPT: "_affectscript_medium-pink",
  "AFFECT SCRIPT": "_affectscript_medium-pink",
  "AFFECT-SCRIPT": "_affectscript_medium-pink",
  AFFECT_SCRIPT: "_affectscript_medium-pink",
  afm: "_postscript_medium-green",
  agc: "_asm-agc_dark-blue",
  AGC: "_asm-agc_dark-blue",
  agda: "_agda_dark-cyan",
  Agda: "_agda_dark-cyan",
  AGDA: "_agda_dark-cyan",
  ahk: "_ahk_dark-blue",
  AHK: "_ahk_dark-blue",
  alloy: "_alloy_medium-red",
  Alloy: "_alloy_medium-red",
  ALLOY: "_alloy_medium-red",
  ampl: "_ampl_dark-maroon",
  AMPL: "_ampl_dark-maroon",
  amusewiki: "_amusewiki_dark-red",
  "amuse wiki": "_amusewiki_dark-red",
  "amuse-wiki": "_amusewiki_dark-red",
  amuse_wiki: "_amusewiki_dark-red",
  AmuseWiki: "_amusewiki_dark-red",
  "Amuse Wiki": "_amusewiki_dark-red",
  "Amuse-Wiki": "_amusewiki_dark-red",
  Amuse_Wiki: "_amusewiki_dark-red",
  AMUSEWIKI: "_amusewiki_dark-red",
  "AMUSE WIKI": "_amusewiki_dark-red",
  "AMUSE-WIKI": "_amusewiki_dark-red",
  AMUSE_WIKI: "_amusewiki_dark-red",
  angelcode: "_angelscript_medium-blue",
  "angel code": "_angelscript_medium-blue",
  "angel-code": "_angelscript_medium-blue",
  angel_code: "_angelscript_medium-blue",
  AngelCode: "_angelscript_medium-blue",
  "Angel Code": "_angelscript_medium-blue",
  "Angel-Code": "_angelscript_medium-blue",
  Angel_Code: "_angelscript_medium-blue",
  ANGELCODE: "_angelscript_medium-blue",
  "ANGEL CODE": "_angelscript_medium-blue",
  "ANGEL-CODE": "_angelscript_medium-blue",
  ANGEL_CODE: "_angelscript_medium-blue",
  angelscript: "_angelscript_medium-blue",
  "angel script": "_angelscript_medium-blue",
  "angel-script": "_angelscript_medium-blue",
  angel_script: "_angelscript_medium-blue",
  AngelScript: "_angelscript_medium-blue",
  "Angel Script": "_angelscript_medium-blue",
  "Angel-Script": "_angelscript_medium-blue",
  Angel_Script: "_angelscript_medium-blue",
  ANGELSCRIPT: "_angelscript_medium-blue",
  "ANGEL SCRIPT": "_angelscript_medium-blue",
  "ANGEL-SCRIPT": "_angelscript_medium-blue",
  ANGEL_SCRIPT: "_angelscript_medium-blue",
  ansible: "_ansible_dark-cyan",
  Ansible: "_ansible_dark-cyan",
  ANSIBLE: "_ansible_dark-cyan",
  "ansible-advanced": "_ansible_dark-cyan",
  "ansible.advanced": "_ansible_dark-cyan",
  antbuildsystem: "_ant_dark-pink",
  "antbuild system": "_ant_dark-pink",
  "antbuild-system": "_ant_dark-pink",
  antbuild_system: "_ant_dark-pink",
  "ant buildsystem": "_ant_dark-pink",
  "ant build system": "_ant_dark-pink",
  "ant build-system": "_ant_dark-pink",
  "ant build_system": "_ant_dark-pink",
  "ant-buildsystem": "_ant_dark-pink",
  "ant-build system": "_ant_dark-pink",
  "ant-build-system": "_ant_dark-pink",
  "ant-build_system": "_ant_dark-pink",
  ant_buildsystem: "_ant_dark-pink",
  "ant_build system": "_ant_dark-pink",
  "ant_build-system": "_ant_dark-pink",
  ant_build_system: "_ant_dark-pink",
  AntBuildSystem: "_ant_dark-pink",
  "AntBuild System": "_ant_dark-pink",
  "AntBuild-System": "_ant_dark-pink",
  AntBuild_System: "_ant_dark-pink",
  "Ant BuildSystem": "_ant_dark-pink",
  "Ant Build System": "_ant_dark-pink",
  "Ant Build-System": "_ant_dark-pink",
  "Ant Build_System": "_ant_dark-pink",
  "Ant-BuildSystem": "_ant_dark-pink",
  "Ant-Build System": "_ant_dark-pink",
  "Ant-Build-System": "_ant_dark-pink",
  "Ant-Build_System": "_ant_dark-pink",
  Ant_BuildSystem: "_ant_dark-pink",
  "Ant_Build System": "_ant_dark-pink",
  "Ant_Build-System": "_ant_dark-pink",
  Ant_Build_System: "_ant_dark-pink",
  ANTBUILDSYSTEM: "_ant_dark-pink",
  "ANTBUILD SYSTEM": "_ant_dark-pink",
  "ANTBUILD-SYSTEM": "_ant_dark-pink",
  ANTBUILD_SYSTEM: "_ant_dark-pink",
  "ANT BUILDSYSTEM": "_ant_dark-pink",
  "ANT BUILD SYSTEM": "_ant_dark-pink",
  "ANT BUILD-SYSTEM": "_ant_dark-pink",
  "ANT BUILD_SYSTEM": "_ant_dark-pink",
  "ANT-BUILDSYSTEM": "_ant_dark-pink",
  "ANT-BUILD SYSTEM": "_ant_dark-pink",
  "ANT-BUILD-SYSTEM": "_ant_dark-pink",
  "ANT-BUILD_SYSTEM": "_ant_dark-pink",
  ANT_BUILDSYSTEM: "_ant_dark-pink",
  "ANT_BUILD SYSTEM": "_ant_dark-pink",
  "ANT_BUILD-SYSTEM": "_ant_dark-pink",
  ANT_BUILD_SYSTEM: "_ant_dark-pink",
  antlr: "_antlr_medium-red",
  ANTLR: "_antlr_medium-red",
  anyscript: "_anyscript_dark-red",
  "any-script": "_anyscript_dark-red",
  "any script": "_anyscript_dark-red",
  any_script: "_anyscript_dark-red",
  AnyScript: "_anyscript_dark-red",
  "Any Script": "_anyscript_dark-red",
  "Any-Script": "_anyscript_dark-red",
  Any_Script: "_anyscript_dark-red",
  ANYSCRIPT: "_anyscript_dark-red",
  "ANY SCRIPT": "_anyscript_dark-red",
  "ANY-SCRIPT": "_anyscript_dark-red",
  ANY_SCRIPT: "_anyscript_dark-red",
  apache: "_apache_dark-red",
  Apache: "_apache_dark-red",
  APACHE: "_apache_dark-red",
  apacheconf: "_apache_dark-red",
  ApacheConf: "_apache_dark-red",
  APACHECONF: "_apache_dark-red",
  "apache-config": "_apache_dark-red",
  apib: "_api_medium-blue",
  apiblueprint: "_api_medium-blue",
  "api blueprint": "_api_medium-blue",
  "api-blueprint": "_api_medium-blue",
  api_blueprint: "_api_medium-blue",
  APIBlueprint: "_api_medium-blue",
  "API Blueprint": "_api_medium-blue",
  "API-Blueprint": "_api_medium-blue",
  API_Blueprint: "_api_medium-blue",
  APIBLUEPRINT: "_api_medium-blue",
  "API BLUEPRINT": "_api_medium-blue",
  "API-BLUEPRINT": "_api_medium-blue",
  API_BLUEPRINT: "_api_medium-blue",
  apl: "_apl_dark-cyan",
  APL: "_apl_dark-cyan",
  apollo11: "_asm-agc_dark-blue",
  "apollo 11": "_asm-agc_dark-blue",
  "apollo-11": "_asm-agc_dark-blue",
  apollo_11: "_asm-agc_dark-blue",
  Apollo11: "_asm-agc_dark-blue",
  "Apollo 11": "_asm-agc_dark-blue",
  "Apollo-11": "_asm-agc_dark-blue",
  Apollo_11: "_asm-agc_dark-blue",
  APOLLO11: "_asm-agc_dark-blue",
  "APOLLO 11": "_asm-agc_dark-blue",
  "APOLLO-11": "_asm-agc_dark-blue",
  APOLLO_11: "_asm-agc_dark-blue",
  apollo11guidancecomputer: "_asm-agc_dark-blue",
  "apollo11guidance computer": "_asm-agc_dark-blue",
  "apollo11guidance-computer": "_asm-agc_dark-blue",
  apollo11guidance_computer: "_asm-agc_dark-blue",
  "apollo11 guidancecomputer": "_asm-agc_dark-blue",
  "apollo11 guidance computer": "_asm-agc_dark-blue",
  "apollo11 guidance-computer": "_asm-agc_dark-blue",
  "apollo11 guidance_computer": "_asm-agc_dark-blue",
  "apollo11-guidancecomputer": "_asm-agc_dark-blue",
  "apollo11-guidance computer": "_asm-agc_dark-blue",
  "apollo11-guidance-computer": "_asm-agc_dark-blue",
  "apollo11-guidance_computer": "_asm-agc_dark-blue",
  apollo11_guidancecomputer: "_asm-agc_dark-blue",
  "apollo11_guidance computer": "_asm-agc_dark-blue",
  "apollo11_guidance-computer": "_asm-agc_dark-blue",
  apollo11_guidance_computer: "_asm-agc_dark-blue",
  "apollo 11guidancecomputer": "_asm-agc_dark-blue",
  "apollo 11guidance computer": "_asm-agc_dark-blue",
  "apollo 11guidance-computer": "_asm-agc_dark-blue",
  "apollo 11guidance_computer": "_asm-agc_dark-blue",
  "apollo 11 guidancecomputer": "_asm-agc_dark-blue",
  "apollo 11 guidance computer": "_asm-agc_dark-blue",
  "apollo 11 guidance-computer": "_asm-agc_dark-blue",
  "apollo 11 guidance_computer": "_asm-agc_dark-blue",
  "apollo 11-guidancecomputer": "_asm-agc_dark-blue",
  "apollo 11-guidance computer": "_asm-agc_dark-blue",
  "apollo 11-guidance-computer": "_asm-agc_dark-blue",
  "apollo 11-guidance_computer": "_asm-agc_dark-blue",
  "apollo 11_guidancecomputer": "_asm-agc_dark-blue",
  "apollo 11_guidance computer": "_asm-agc_dark-blue",
  "apollo 11_guidance-computer": "_asm-agc_dark-blue",
  "apollo 11_guidance_computer": "_asm-agc_dark-blue",
  "apollo-11guidancecomputer": "_asm-agc_dark-blue",
  "apollo-11guidance computer": "_asm-agc_dark-blue",
  "apollo-11guidance-computer": "_asm-agc_dark-blue",
  "apollo-11guidance_computer": "_asm-agc_dark-blue",
  "apollo-11 guidancecomputer": "_asm-agc_dark-blue",
  "apollo-11 guidance computer": "_asm-agc_dark-blue",
  "apollo-11 guidance-computer": "_asm-agc_dark-blue",
  "apollo-11 guidance_computer": "_asm-agc_dark-blue",
  "apollo-11-guidancecomputer": "_asm-agc_dark-blue",
  "apollo-11-guidance computer": "_asm-agc_dark-blue",
  "apollo-11-guidance-computer": "_asm-agc_dark-blue",
  "apollo-11-guidance_computer": "_asm-agc_dark-blue",
  "apollo-11_guidancecomputer": "_asm-agc_dark-blue",
  "apollo-11_guidance computer": "_asm-agc_dark-blue",
  "apollo-11_guidance-computer": "_asm-agc_dark-blue",
  "apollo-11_guidance_computer": "_asm-agc_dark-blue",
  apollo_11guidancecomputer: "_asm-agc_dark-blue",
  "apollo_11guidance computer": "_asm-agc_dark-blue",
  "apollo_11guidance-computer": "_asm-agc_dark-blue",
  apollo_11guidance_computer: "_asm-agc_dark-blue",
  "apollo_11 guidancecomputer": "_asm-agc_dark-blue",
  "apollo_11 guidance computer": "_asm-agc_dark-blue",
  "apollo_11 guidance-computer": "_asm-agc_dark-blue",
  "apollo_11 guidance_computer": "_asm-agc_dark-blue",
  "apollo_11-guidancecomputer": "_asm-agc_dark-blue",
  "apollo_11-guidance computer": "_asm-agc_dark-blue",
  "apollo_11-guidance-computer": "_asm-agc_dark-blue",
  "apollo_11-guidance_computer": "_asm-agc_dark-blue",
  apollo_11_guidancecomputer: "_asm-agc_dark-blue",
  "apollo_11_guidance computer": "_asm-agc_dark-blue",
  "apollo_11_guidance-computer": "_asm-agc_dark-blue",
  apollo_11_guidance_computer: "_asm-agc_dark-blue",
  Apollo11GuidanceComputer: "_asm-agc_dark-blue",
  "Apollo11Guidance Computer": "_asm-agc_dark-blue",
  "Apollo11Guidance-Computer": "_asm-agc_dark-blue",
  Apollo11Guidance_Computer: "_asm-agc_dark-blue",
  "Apollo11 GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo11 Guidance Computer": "_asm-agc_dark-blue",
  "Apollo11 Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo11 Guidance_Computer": "_asm-agc_dark-blue",
  "Apollo11-GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo11-Guidance Computer": "_asm-agc_dark-blue",
  "Apollo11-Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo11-Guidance_Computer": "_asm-agc_dark-blue",
  Apollo11_GuidanceComputer: "_asm-agc_dark-blue",
  "Apollo11_Guidance Computer": "_asm-agc_dark-blue",
  "Apollo11_Guidance-Computer": "_asm-agc_dark-blue",
  Apollo11_Guidance_Computer: "_asm-agc_dark-blue",
  "Apollo 11GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo 11Guidance Computer": "_asm-agc_dark-blue",
  "Apollo 11Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo 11Guidance_Computer": "_asm-agc_dark-blue",
  "Apollo 11 GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo 11 Guidance Computer": "_asm-agc_dark-blue",
  "Apollo 11 Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo 11 Guidance_Computer": "_asm-agc_dark-blue",
  "Apollo 11-GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo 11-Guidance Computer": "_asm-agc_dark-blue",
  "Apollo 11-Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo 11-Guidance_Computer": "_asm-agc_dark-blue",
  "Apollo 11_GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo 11_Guidance Computer": "_asm-agc_dark-blue",
  "Apollo 11_Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo 11_Guidance_Computer": "_asm-agc_dark-blue",
  "Apollo-11GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo-11Guidance Computer": "_asm-agc_dark-blue",
  "Apollo-11Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo-11Guidance_Computer": "_asm-agc_dark-blue",
  "Apollo-11 GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo-11 Guidance Computer": "_asm-agc_dark-blue",
  "Apollo-11 Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo-11 Guidance_Computer": "_asm-agc_dark-blue",
  "Apollo-11-GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo-11-Guidance Computer": "_asm-agc_dark-blue",
  "Apollo-11-Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo-11-Guidance_Computer": "_asm-agc_dark-blue",
  "Apollo-11_GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo-11_Guidance Computer": "_asm-agc_dark-blue",
  "Apollo-11_Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo-11_Guidance_Computer": "_asm-agc_dark-blue",
  Apollo_11GuidanceComputer: "_asm-agc_dark-blue",
  "Apollo_11Guidance Computer": "_asm-agc_dark-blue",
  "Apollo_11Guidance-Computer": "_asm-agc_dark-blue",
  Apollo_11Guidance_Computer: "_asm-agc_dark-blue",
  "Apollo_11 GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo_11 Guidance Computer": "_asm-agc_dark-blue",
  "Apollo_11 Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo_11 Guidance_Computer": "_asm-agc_dark-blue",
  "Apollo_11-GuidanceComputer": "_asm-agc_dark-blue",
  "Apollo_11-Guidance Computer": "_asm-agc_dark-blue",
  "Apollo_11-Guidance-Computer": "_asm-agc_dark-blue",
  "Apollo_11-Guidance_Computer": "_asm-agc_dark-blue",
  Apollo_11_GuidanceComputer: "_asm-agc_dark-blue",
  "Apollo_11_Guidance Computer": "_asm-agc_dark-blue",
  "Apollo_11_Guidance-Computer": "_asm-agc_dark-blue",
  Apollo_11_Guidance_Computer: "_asm-agc_dark-blue",
  APOLLO11GUIDANCECOMPUTER: "_asm-agc_dark-blue",
  "APOLLO11GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO11GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  APOLLO11GUIDANCE_COMPUTER: "_asm-agc_dark-blue",
  "APOLLO11 GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO11 GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO11 GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO11 GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  "APOLLO11-GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO11-GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO11-GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO11-GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  APOLLO11_GUIDANCECOMPUTER: "_asm-agc_dark-blue",
  "APOLLO11_GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO11_GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  APOLLO11_GUIDANCE_COMPUTER: "_asm-agc_dark-blue",
  "APOLLO 11GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11 GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11 GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11 GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11 GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11-GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11-GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11-GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11-GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11_GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11_GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11_GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO 11_GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11 GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11 GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11 GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11 GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11-GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11-GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11-GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11-GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11_GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11_GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11_GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO-11_GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  APOLLO_11GUIDANCECOMPUTER: "_asm-agc_dark-blue",
  "APOLLO_11GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO_11GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  APOLLO_11GUIDANCE_COMPUTER: "_asm-agc_dark-blue",
  "APOLLO_11 GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO_11 GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO_11 GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO_11 GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  "APOLLO_11-GUIDANCECOMPUTER": "_asm-agc_dark-blue",
  "APOLLO_11-GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO_11-GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  "APOLLO_11-GUIDANCE_COMPUTER": "_asm-agc_dark-blue",
  APOLLO_11_GUIDANCECOMPUTER: "_asm-agc_dark-blue",
  "APOLLO_11_GUIDANCE COMPUTER": "_asm-agc_dark-blue",
  "APOLLO_11_GUIDANCE-COMPUTER": "_asm-agc_dark-blue",
  APOLLO_11_GUIDANCE_COMPUTER: "_asm-agc_dark-blue",
  apple: "_apple_medium-purple",
  Apple: "_apple_medium-purple",
  APPLE: "_apple_medium-purple",
  applescript: "_apple_medium-purple",
  arduino: "_arduino_dark-cyan",
  Arduino: "_arduino_dark-cyan",
  ARDUINO: "_arduino_dark-cyan",
  arm: "_asm-arm_medium-blue",
  arr: "_pyret_dark-red",
  as3: "_as_medium-red",
  AS3: "_as_medium-red",
  asciidoc: "_asciidoctor_medium-blue",
  "ascii doc": "_asciidoctor_medium-blue",
  "ascii-doc": "_asciidoctor_medium-blue",
  ascii_doc: "_asciidoctor_medium-blue",
  AsciiDoc: "_asciidoctor_medium-blue",
  "Ascii Doc": "_asciidoctor_medium-blue",
  "Ascii-Doc": "_asciidoctor_medium-blue",
  Ascii_Doc: "_asciidoctor_medium-blue",
  ASCIIDOC: "_asciidoctor_medium-blue",
  "ASCII DOC": "_asciidoctor_medium-blue",
  "ASCII-DOC": "_asciidoctor_medium-blue",
  ASCII_DOC: "_asciidoctor_medium-blue",
  asl: "_code_medium-blue",
  asm: "_asm_medium-green",
  ASM: "_asm_medium-green",
  asp: "_asp_dark-blue",
  "asp.net": "_asp_dark-blue",
  "ASP.net": "_asp_dark-blue",
  "ASP.NET": "_asp_dark-blue",
  aspx: "_asp_dark-blue",
  ASPX: "_asp_dark-blue",
  "aspx-vb": "_asp_dark-blue",
  "ASPX-VB": "_asp_dark-blue",
  assembly: "_asm_medium-green",
  Assembly: "_asm_medium-green",
  ASSEMBLY: "_asm_medium-green",
  asymptote: "_asymptote_medium-red",
  Asymptote: "_asymptote_medium-red",
  ASYMPTOTE: "_asymptote_medium-red",
  atlilypond: "_lilypond_medium-green",
  ats: "_ats_medium-red",
  ATS: "_ats_medium-red",
  ats2: "_ats_medium-red",
  ATS2: "_ats_medium-red",
  au3: "_autoit_medium-purple",
  AU3: "_autoit_medium-purple",
  "augmentedbackus-naurform": "_bnf_medium-green",
  "augmentedbackus-naur form": "_bnf_medium-green",
  "augmentedbackus-naur-form": "_bnf_medium-green",
  "augmentedbackus-naur_form": "_bnf_medium-green",
  "augmented backus-naurform": "_bnf_medium-green",
  "augmented backus-naur form": "_bnf_medium-green",
  "augmented backus-naur-form": "_bnf_medium-green",
  "augmented backus-naur_form": "_bnf_medium-green",
  "augmented-backus-naurform": "_bnf_medium-green",
  "augmented-backus-naur form": "_bnf_medium-green",
  "augmented-backus-naur-form": "_bnf_medium-green",
  "augmented-backus-naur_form": "_bnf_medium-green",
  "augmented_backus-naurform": "_bnf_medium-green",
  "augmented_backus-naur form": "_bnf_medium-green",
  "augmented_backus-naur-form": "_bnf_medium-green",
  "augmented_backus-naur_form": "_bnf_medium-green",
  "AugmentedBackus-NaurForm": "_bnf_medium-green",
  "AugmentedBackus-Naur Form": "_bnf_medium-green",
  "AugmentedBackus-Naur-Form": "_bnf_medium-green",
  "AugmentedBackus-Naur_Form": "_bnf_medium-green",
  "Augmented Backus-NaurForm": "_bnf_medium-green",
  "Augmented Backus-Naur Form": "_bnf_medium-green",
  "Augmented Backus-Naur-Form": "_bnf_medium-green",
  "Augmented Backus-Naur_Form": "_bnf_medium-green",
  "Augmented-Backus-NaurForm": "_bnf_medium-green",
  "Augmented-Backus-Naur Form": "_bnf_medium-green",
  "Augmented-Backus-Naur-Form": "_bnf_medium-green",
  "Augmented-Backus-Naur_Form": "_bnf_medium-green",
  "Augmented_Backus-NaurForm": "_bnf_medium-green",
  "Augmented_Backus-Naur Form": "_bnf_medium-green",
  "Augmented_Backus-Naur-Form": "_bnf_medium-green",
  "Augmented_Backus-Naur_Form": "_bnf_medium-green",
  "AUGMENTEDBACKUS-NAURFORM": "_bnf_medium-green",
  "AUGMENTEDBACKUS-NAUR FORM": "_bnf_medium-green",
  "AUGMENTEDBACKUS-NAUR-FORM": "_bnf_medium-green",
  "AUGMENTEDBACKUS-NAUR_FORM": "_bnf_medium-green",
  "AUGMENTED BACKUS-NAURFORM": "_bnf_medium-green",
  "AUGMENTED BACKUS-NAUR FORM": "_bnf_medium-green",
  "AUGMENTED BACKUS-NAUR-FORM": "_bnf_medium-green",
  "AUGMENTED BACKUS-NAUR_FORM": "_bnf_medium-green",
  "AUGMENTED-BACKUS-NAURFORM": "_bnf_medium-green",
  "AUGMENTED-BACKUS-NAUR FORM": "_bnf_medium-green",
  "AUGMENTED-BACKUS-NAUR-FORM": "_bnf_medium-green",
  "AUGMENTED-BACKUS-NAUR_FORM": "_bnf_medium-green",
  "AUGMENTED_BACKUS-NAURFORM": "_bnf_medium-green",
  "AUGMENTED_BACKUS-NAUR FORM": "_bnf_medium-green",
  "AUGMENTED_BACKUS-NAUR-FORM": "_bnf_medium-green",
  "AUGMENTED_BACKUS-NAUR_FORM": "_bnf_medium-green",
  autohotkey: "_ahk_dark-blue",
  "auto hotkey": "_ahk_dark-blue",
  "auto-hotkey": "_ahk_dark-blue",
  auto_hotkey: "_ahk_dark-blue",
  AutoHotkey: "_ahk_dark-blue",
  "Auto Hotkey": "_ahk_dark-blue",
  "Auto-Hotkey": "_ahk_dark-blue",
  Auto_Hotkey: "_ahk_dark-blue",
  AUTOHOTKEY: "_ahk_dark-blue",
  "AUTO HOTKEY": "_ahk_dark-blue",
  "AUTO-HOTKEY": "_ahk_dark-blue",
  AUTO_HOTKEY: "_ahk_dark-blue",
  autoit: "_autoit_medium-purple",
  "auto it": "_autoit_medium-purple",
  "auto-it": "_autoit_medium-purple",
  auto_it: "_autoit_medium-purple",
  AutoIt: "_autoit_medium-purple",
  "Auto It": "_autoit_medium-purple",
  "Auto-It": "_autoit_medium-purple",
  Auto_It: "_autoit_medium-purple",
  AUTOIT: "_autoit_medium-purple",
  "AUTO IT": "_autoit_medium-purple",
  "AUTO-IT": "_autoit_medium-purple",
  AUTO_IT: "_autoit_medium-purple",
  autoit3: "_autoit_medium-purple",
  AutoIt3: "_autoit_medium-purple",
  AUTOIT3: "_autoit_medium-purple",
  autoitscript: "_autoit_medium-purple",
  AutoItScript: "_autoit_medium-purple",
  AUTOITSCRIPT: "_autoit_medium-purple",
  avrasm: "_asm-avr_dark-purple",
  avrdisasm: "_asm-avr_dark-purple",
  avro: "_avro_medium-blue",
  Avro: "_avro_medium-blue",
  AVRO: "_avro_medium-blue",
  "avro-idl": "_avro_medium-blue",
  awk: "_awk_medium-green",
  Awk: "_awk_medium-green",
  AWK: "_awk_medium-green",
  b3d: "_blitzbasic_medium-cyan",
  B3D: "_blitzbasic_medium-cyan",
  baan: "_code_dark-red",
  "backus-naurform": "_bnf_medium-maroon",
  "backus-naur form": "_bnf_medium-maroon",
  "backus-naur-form": "_bnf_medium-maroon",
  "backus-naur_form": "_bnf_medium-maroon",
  "Backus-NaurForm": "_bnf_medium-maroon",
  "Backus-Naur Form": "_bnf_medium-maroon",
  "Backus-Naur-Form": "_bnf_medium-maroon",
  "Backus-Naur_Form": "_bnf_medium-maroon",
  "BACKUS-NAURFORM": "_bnf_medium-maroon",
  "BACKUS-NAUR FORM": "_bnf_medium-maroon",
  "BACKUS-NAUR-FORM": "_bnf_medium-maroon",
  "BACKUS-NAUR_FORM": "_bnf_medium-maroon",
  ballerina: "_ballerina_medium-cyan",
  Ballerina: "_ballerina_medium-cyan",
  BALLERINA: "_ballerina_medium-cyan",
  bash: "_terminal_medium-purple",
  Bash: "_terminal_medium-purple",
  BASH: "_terminal_medium-purple",
  bashconsole: "_terminal_medium-yellow",
  BashConsole: "_terminal_medium-yellow",
  BASHCONSOLE: "_terminal_medium-yellow",
  bashsession: "_terminal_medium-yellow",
  BashSession: "_terminal_medium-yellow",
  BASHSESSION: "_terminal_medium-yellow",
  bat: "_windows_medium-purple",
  BAT: "_windows_medium-purple",
  batch: "_windows_medium-purple",
  Batch: "_windows_medium-purple",
  BATCH: "_windows_medium-purple",
  bats: "_test-generic_medium-grey",
  Bats: "_test-generic_medium-grey",
  BATS: "_test-generic_medium-grey",
  bazel: "_bazel_dark-blue",
  Bazel: "_bazel_dark-blue",
  BAZEL: "_bazel_dark-blue",
  bc: "_calc_medium-blue",
  BC: "_calc_medium-blue",
  bf: "_brain_dark-pink",
  BF: "_brain_dark-pink",
  bibtex: "_bibtex_medium-yellow",
  BibTeX: "_bibtex_medium-yellow",
  BIBTEX: "_bibtex_medium-yellow",
  bikeshed: "_bikeshed_medium-red",
  Bikeshed: "_bikeshed_medium-red",
  BIKESHED: "_bikeshed_medium-red",
  biml: "_biml_medium-red",
  Biml: "_biml_medium-red",
  BIML: "_biml_medium-red",
  binary: "_binary_medium-orange",
  Binary: "_binary_medium-orange",
  BINARY: "_binary_medium-orange",
  bison: "_bison_medium-red",
  Bison: "_bison_medium-red",
  BISON: "_bison_medium-red",
  blitz3d: "_blitzbasic_medium-cyan",
  BLITZ3D: "_blitzbasic_medium-cyan",
  blitzbasic: "_blitzbasic_medium-cyan",
  BlitzBASIC: "_blitzbasic_medium-cyan",
  BLITZBASIC: "_blitzbasic_medium-cyan",
  blitzmax: "_blitzbasic_medium-cyan",
  blitzplus: "_blitzbasic_medium-cyan",
  BLITZPLUS: "_blitzbasic_medium-cyan",
  bluespec: "_bluespec_dark-blue",
  Bluespec: "_bluespec_dark-blue",
  BLUESPEC: "_bluespec_dark-blue",
  bnf: "_bnf_medium-maroon",
  bolt: "_firebase-bolt_medium-yellow",
  boo: "_boo_medium-green",
  Boo: "_boo_medium-green",
  BOO: "_boo_medium-green",
  "boo.unity": "_boo_medium-green",
  bosque: "_bosque_medium-green",
  Bosque: "_bosque_medium-green",
  BOSQUE: "_bosque_medium-green",
  bplus: "_blitzbasic_medium-cyan",
  BPLUS: "_blitzbasic_medium-cyan",
  brainfck: "_brain_dark-pink",
  Brainfck: "_brain_dark-pink",
  BRAINFCK: "_brain_dark-pink",
  brainfuck: "_brain_dark-pink",
  Brainfuck: "_brain_dark-pink",
  BRAINFUCK: "_brain_dark-pink",
  brightscript: "_code_dark-blue",
  bro: "_bro_dark-cyan",
  Bro: "_bro_dark-cyan",
  BRO: "_bro_dark-cyan",
  bsdmake: "_checklist_medium-yellow",
  BSDMAKE: "_checklist_medium-yellow",
  bsl: "_1c_medium-red",
  bsq: "_bosque_medium-green",
  bsv: "_bluespec_dark-blue",
  build: "_bazel_medium-green",
  byond: "_byond_medium-blue",
  BYOND: "_byond_medium-blue",
  bzl: "_bazel_dark-blue",
  c: "_c_medium-blue",
  "c#": "_csharp_medium-blue",
  "c♯": "_csharp_medium-blue",
  "c++": "_cpp_medium-blue",
  C: "_c_medium-blue",
  "C#": "_csharp_medium-blue",
  "C♯": "_csharp_medium-blue",
  "C++": "_cpp_medium-blue",
  c2hs: "_haskell_dark-purple",
  C2hs: "_haskell_dark-purple",
  C2HS: "_haskell_dark-purple",
  c2hshaskell: "_haskell_dark-purple",
  C2hsHaskell: "_haskell_dark-purple",
  C2HSHASKELL: "_haskell_dark-purple",
  cabal: "_cabal_medium-cyan",
  Cabal: "_cabal_medium-cyan",
  CABAL: "_cabal_medium-cyan",
  cake: "_cake_medium-yellow",
  Cake: "_cake_medium-yellow",
  CAKE: "_cake_medium-yellow",
  capnp: "_code_dark-red",
  CAPNP: "_code_dark-red",
  capnproto: "_code_dark-red",
  "capn proto": "_code_dark-red",
  "capn-proto": "_code_dark-red",
  capn_proto: "_code_dark-red",
  "cap'nproto": "_code_dark-red",
  "cap'n proto": "_code_dark-red",
  "cap'n-proto": "_code_dark-red",
  "cap'n_proto": "_code_dark-red",
  CapnProto: "_code_dark-red",
  "Capn Proto": "_code_dark-red",
  "Capn-Proto": "_code_dark-red",
  Capn_Proto: "_code_dark-red",
  "Cap'nProto": "_code_dark-red",
  "Cap'n Proto": "_code_dark-red",
  "Cap'n-Proto": "_code_dark-red",
  "Cap'n_Proto": "_code_dark-red",
  CAPNPROTO: "_code_dark-red",
  "CAPN PROTO": "_code_dark-red",
  "CAPN-PROTO": "_code_dark-red",
  CAPN_PROTO: "_code_dark-red",
  "CAP'NPROTO": "_code_dark-red",
  "CAP'N PROTO": "_code_dark-red",
  "CAP'N-PROTO": "_code_dark-red",
  "CAP'N_PROTO": "_code_dark-red",
  carto: "_mapbox_medium-cyan",
  Carto: "_mapbox_medium-cyan",
  CARTO: "_mapbox_medium-cyan",
  cartocss: "_mapbox_medium-cyan",
  CartoCSS: "_mapbox_medium-cyan",
  CARTOCSS: "_mapbox_medium-cyan",
  casc: "_casc_medium-orange",
  CASC: "_casc_medium-orange",
  cddl: "_bnf_medium-grey",
  cfc: "_cf_light-cyan",
  CFC: "_cf_light-cyan",
  cfl: "_cuneiform_dark-blue",
  cfm: "_cf_medium-cyan",
  cfml: "_cf_medium-cyan",
  CFML: "_cf_medium-cyan",
  cfscript: "_cf_light-cyan",
  CFScript: "_cf_light-cyan",
  CFSCRIPT: "_cf_light-cyan",
  cg: "_model_medium-cyan",
  chapel: "_chapel_medium-green",
  Chapel: "_chapel_medium-green",
  CHAPEL: "_chapel_medium-green",
  checklist: "_checklist_medium-green",
  Checklist: "_checklist_medium-green",
  CHECKLIST: "_checklist_medium-green",
  checksums: "_tag_medium-green",
  chem: "_manpage_dark-green",
  CHEM: "_manpage_dark-green",
  chpl: "_chapel_medium-green",
  CHPL: "_chapel_medium-green",
  chuck: "_chuck_medium-green",
  ChucK: "_chuck_medium-green",
  CHUCK: "_chuck_medium-green",
  cidmap: "_sourcemap_medium-orange",
  CIDMAP: "_sourcemap_medium-orange",
  cirru: "_cirru_medium-pink",
  Cirru: "_cirru_medium-pink",
  CIRRU: "_cirru_medium-pink",
  clarion: "_clarion_medium-orange",
  Clarion: "_clarion_medium-orange",
  CLARION: "_clarion_medium-orange",
  clean: "_clean_dark-cyan",
  Clean: "_clean_dark-cyan",
  CLEAN: "_clean_dark-cyan",
  click: "_click_medium-yellow",
  "click!": "_click_medium-yellow",
  Click: "_click_medium-yellow",
  "Click!": "_click_medium-yellow",
  CLICK: "_click_medium-yellow",
  "CLICK!": "_click_medium-yellow",
  clips: "_clips_dark-green",
  CLIPS: "_clips_dark-green",
  clisp: "_cl_medium-orange",
  CLISP: "_cl_medium-orange",
  clojure: "_clojure_medium-blue",
  Clojure: "_clojure_medium-blue",
  CLOJURE: "_clojure_medium-blue",
  closuretemplate: "_closure-tpl_medium-blue",
  "closure template": "_closure-tpl_medium-blue",
  "closure-template": "_closure-tpl_medium-blue",
  closure_template: "_closure-tpl_medium-blue",
  ClosureTemplate: "_closure-tpl_medium-blue",
  "Closure Template": "_closure-tpl_medium-blue",
  "Closure-Template": "_closure-tpl_medium-blue",
  Closure_Template: "_closure-tpl_medium-blue",
  CLOSURETEMPLATE: "_closure-tpl_medium-blue",
  "CLOSURE TEMPLATE": "_closure-tpl_medium-blue",
  "CLOSURE-TEMPLATE": "_closure-tpl_medium-blue",
  CLOSURE_TEMPLATE: "_closure-tpl_medium-blue",
  cmake: "_cmake_medium-green",
  CMake: "_cmake_medium-green",
  CMAKE: "_cmake_medium-green",
  cobol: "_cobol_medium-blue",
  COBOL: "_cobol_medium-blue",
  coccinelle: "_code_medium-blue",
  Coccinelle: "_code_medium-blue",
  COCCINELLE: "_code_medium-blue",
  "code-text-binary": "_binary_medium-red",
  coffee: "_coffee_medium-maroon",
  Coffee: "_coffee_medium-maroon",
  COFFEE: "_coffee_medium-maroon",
  coffeescript: "_coffee_light-maroon",
  "coffee script": "_coffee_light-maroon",
  "coffee-script": "_coffee_light-maroon",
  coffee_script: "_coffee_light-maroon",
  CoffeeScript: "_coffee_light-maroon",
  "Coffee Script": "_coffee_light-maroon",
  "Coffee-Script": "_coffee_light-maroon",
  Coffee_Script: "_coffee_light-maroon",
  COFFEESCRIPT: "_coffee_light-maroon",
  "COFFEE SCRIPT": "_coffee_light-maroon",
  "COFFEE-SCRIPT": "_coffee_light-maroon",
  COFFEE_SCRIPT: "_coffee_light-maroon",
  coldfusion: "_cf_medium-cyan",
  "cold fusion": "_cf_medium-cyan",
  "cold-fusion": "_cf_medium-cyan",
  cold_fusion: "_cf_medium-cyan",
  ColdFusion: "_cf_medium-cyan",
  "Cold Fusion": "_cf_medium-cyan",
  "Cold-Fusion": "_cf_medium-cyan",
  Cold_Fusion: "_cf_medium-cyan",
  COLDFUSION: "_cf_medium-cyan",
  "COLD FUSION": "_cf_medium-cyan",
  "COLD-FUSION": "_cf_medium-cyan",
  COLD_FUSION: "_cf_medium-cyan",
  coldfusionhtml: "_cf_medium-cyan",
  "coldfusion html": "_cf_medium-cyan",
  "coldfusion-html": "_cf_medium-cyan",
  coldfusion_html: "_cf_medium-cyan",
  ColdFusionHTML: "_cf_medium-cyan",
  "ColdFusion HTML": "_cf_medium-cyan",
  "ColdFusion-HTML": "_cf_medium-cyan",
  ColdFusion_HTML: "_cf_medium-cyan",
  COLDFUSIONHTML: "_cf_medium-cyan",
  "COLDFUSION HTML": "_cf_medium-cyan",
  "COLDFUSION-HTML": "_cf_medium-cyan",
  COLDFUSION_HTML: "_cf_medium-cyan",
  "common-lisp": "_cl_medium-orange",
  commonlisp: "_cl_medium-orange",
  "common lisp": "_cl_medium-orange",
  common_lisp: "_cl_medium-orange",
  CommonLisp: "_cl_medium-orange",
  "Common Lisp": "_cl_medium-orange",
  "Common-Lisp": "_cl_medium-orange",
  Common_Lisp: "_cl_medium-orange",
  COMMONLISP: "_cl_medium-orange",
  "COMMON LISP": "_cl_medium-orange",
  "COMMON-LISP": "_cl_medium-orange",
  COMMON_LISP: "_cl_medium-orange",
  commonmark: "_markdown_medium-blue",
  CommonMark: "_markdown_medium-blue",
  COMMONMARK: "_markdown_medium-blue",
  commonworkflowlanguage: "_cwl_dark-red",
  "commonworkflow language": "_cwl_dark-red",
  "commonworkflow-language": "_cwl_dark-red",
  commonworkflow_language: "_cwl_dark-red",
  "common workflowlanguage": "_cwl_dark-red",
  "common workflow language": "_cwl_dark-red",
  "common workflow-language": "_cwl_dark-red",
  "common workflow_language": "_cwl_dark-red",
  "common-workflowlanguage": "_cwl_dark-red",
  "common-workflow language": "_cwl_dark-red",
  "common-workflow-language": "_cwl_dark-red",
  "common-workflow_language": "_cwl_dark-red",
  common_workflowlanguage: "_cwl_dark-red",
  "common_workflow language": "_cwl_dark-red",
  "common_workflow-language": "_cwl_dark-red",
  common_workflow_language: "_cwl_dark-red",
  CommonWorkflowLanguage: "_cwl_dark-red",
  "CommonWorkflow Language": "_cwl_dark-red",
  "CommonWorkflow-Language": "_cwl_dark-red",
  CommonWorkflow_Language: "_cwl_dark-red",
  "Common WorkflowLanguage": "_cwl_dark-red",
  "Common Workflow Language": "_cwl_dark-red",
  "Common Workflow-Language": "_cwl_dark-red",
  "Common Workflow_Language": "_cwl_dark-red",
  "Common-WorkflowLanguage": "_cwl_dark-red",
  "Common-Workflow Language": "_cwl_dark-red",
  "Common-Workflow-Language": "_cwl_dark-red",
  "Common-Workflow_Language": "_cwl_dark-red",
  Common_WorkflowLanguage: "_cwl_dark-red",
  "Common_Workflow Language": "_cwl_dark-red",
  "Common_Workflow-Language": "_cwl_dark-red",
  Common_Workflow_Language: "_cwl_dark-red",
  COMMONWORKFLOWLANGUAGE: "_cwl_dark-red",
  "COMMONWORKFLOW LANGUAGE": "_cwl_dark-red",
  "COMMONWORKFLOW-LANGUAGE": "_cwl_dark-red",
  COMMONWORKFLOW_LANGUAGE: "_cwl_dark-red",
  "COMMON WORKFLOWLANGUAGE": "_cwl_dark-red",
  "COMMON WORKFLOW LANGUAGE": "_cwl_dark-red",
  "COMMON WORKFLOW-LANGUAGE": "_cwl_dark-red",
  "COMMON WORKFLOW_LANGUAGE": "_cwl_dark-red",
  "COMMON-WORKFLOWLANGUAGE": "_cwl_dark-red",
  "COMMON-WORKFLOW LANGUAGE": "_cwl_dark-red",
  "COMMON-WORKFLOW-LANGUAGE": "_cwl_dark-red",
  "COMMON-WORKFLOW_LANGUAGE": "_cwl_dark-red",
  COMMON_WORKFLOWLANGUAGE: "_cwl_dark-red",
  "COMMON_WORKFLOW LANGUAGE": "_cwl_dark-red",
  "COMMON_WORKFLOW-LANGUAGE": "_cwl_dark-red",
  COMMON_WORKFLOW_LANGUAGE: "_cwl_dark-red",
  compiledpapyrus: "_papyrus_medium-green",
  "compiled-papyrus": "_papyrus_medium-green",
  concisedatadefinitionlanguage: "_bnf_medium-grey",
  "concisedatadefinition language": "_bnf_medium-grey",
  "concisedatadefinition-language": "_bnf_medium-grey",
  concisedatadefinition_language: "_bnf_medium-grey",
  "concisedata definitionlanguage": "_bnf_medium-grey",
  "concisedata definition language": "_bnf_medium-grey",
  "concisedata definition-language": "_bnf_medium-grey",
  "concisedata definition_language": "_bnf_medium-grey",
  "concisedata-definitionlanguage": "_bnf_medium-grey",
  "concisedata-definition language": "_bnf_medium-grey",
  "concisedata-definition-language": "_bnf_medium-grey",
  "concisedata-definition_language": "_bnf_medium-grey",
  concisedata_definitionlanguage: "_bnf_medium-grey",
  "concisedata_definition language": "_bnf_medium-grey",
  "concisedata_definition-language": "_bnf_medium-grey",
  concisedata_definition_language: "_bnf_medium-grey",
  "concise datadefinitionlanguage": "_bnf_medium-grey",
  "concise datadefinition language": "_bnf_medium-grey",
  "concise datadefinition-language": "_bnf_medium-grey",
  "concise datadefinition_language": "_bnf_medium-grey",
  "concise data definitionlanguage": "_bnf_medium-grey",
  "concise data definition language": "_bnf_medium-grey",
  "concise data definition-language": "_bnf_medium-grey",
  "concise data definition_language": "_bnf_medium-grey",
  "concise data-definitionlanguage": "_bnf_medium-grey",
  "concise data-definition language": "_bnf_medium-grey",
  "concise data-definition-language": "_bnf_medium-grey",
  "concise data-definition_language": "_bnf_medium-grey",
  "concise data_definitionlanguage": "_bnf_medium-grey",
  "concise data_definition language": "_bnf_medium-grey",
  "concise data_definition-language": "_bnf_medium-grey",
  "concise data_definition_language": "_bnf_medium-grey",
  "concise-datadefinitionlanguage": "_bnf_medium-grey",
  "concise-datadefinition language": "_bnf_medium-grey",
  "concise-datadefinition-language": "_bnf_medium-grey",
  "concise-datadefinition_language": "_bnf_medium-grey",
  "concise-data definitionlanguage": "_bnf_medium-grey",
  "concise-data definition language": "_bnf_medium-grey",
  "concise-data definition-language": "_bnf_medium-grey",
  "concise-data definition_language": "_bnf_medium-grey",
  "concise-data-definitionlanguage": "_bnf_medium-grey",
  "concise-data-definition language": "_bnf_medium-grey",
  "concise-data-definition-language": "_bnf_medium-grey",
  "concise-data-definition_language": "_bnf_medium-grey",
  "concise-data_definitionlanguage": "_bnf_medium-grey",
  "concise-data_definition language": "_bnf_medium-grey",
  "concise-data_definition-language": "_bnf_medium-grey",
  "concise-data_definition_language": "_bnf_medium-grey",
  concise_datadefinitionlanguage: "_bnf_medium-grey",
  "concise_datadefinition language": "_bnf_medium-grey",
  "concise_datadefinition-language": "_bnf_medium-grey",
  concise_datadefinition_language: "_bnf_medium-grey",
  "concise_data definitionlanguage": "_bnf_medium-grey",
  "concise_data definition language": "_bnf_medium-grey",
  "concise_data definition-language": "_bnf_medium-grey",
  "concise_data definition_language": "_bnf_medium-grey",
  "concise_data-definitionlanguage": "_bnf_medium-grey",
  "concise_data-definition language": "_bnf_medium-grey",
  "concise_data-definition-language": "_bnf_medium-grey",
  "concise_data-definition_language": "_bnf_medium-grey",
  concise_data_definitionlanguage: "_bnf_medium-grey",
  "concise_data_definition language": "_bnf_medium-grey",
  "concise_data_definition-language": "_bnf_medium-grey",
  concise_data_definition_language: "_bnf_medium-grey",
  ConciseDataDefinitionLanguage: "_bnf_medium-grey",
  "ConciseDataDefinition Language": "_bnf_medium-grey",
  "ConciseDataDefinition-Language": "_bnf_medium-grey",
  ConciseDataDefinition_Language: "_bnf_medium-grey",
  "ConciseData DefinitionLanguage": "_bnf_medium-grey",
  "ConciseData Definition Language": "_bnf_medium-grey",
  "ConciseData Definition-Language": "_bnf_medium-grey",
  "ConciseData Definition_Language": "_bnf_medium-grey",
  "ConciseData-DefinitionLanguage": "_bnf_medium-grey",
  "ConciseData-Definition Language": "_bnf_medium-grey",
  "ConciseData-Definition-Language": "_bnf_medium-grey",
  "ConciseData-Definition_Language": "_bnf_medium-grey",
  ConciseData_DefinitionLanguage: "_bnf_medium-grey",
  "ConciseData_Definition Language": "_bnf_medium-grey",
  "ConciseData_Definition-Language": "_bnf_medium-grey",
  ConciseData_Definition_Language: "_bnf_medium-grey",
  "Concise DataDefinitionLanguage": "_bnf_medium-grey",
  "Concise DataDefinition Language": "_bnf_medium-grey",
  "Concise DataDefinition-Language": "_bnf_medium-grey",
  "Concise DataDefinition_Language": "_bnf_medium-grey",
  "Concise Data DefinitionLanguage": "_bnf_medium-grey",
  "Concise Data Definition Language": "_bnf_medium-grey",
  "Concise Data Definition-Language": "_bnf_medium-grey",
  "Concise Data Definition_Language": "_bnf_medium-grey",
  "Concise Data-DefinitionLanguage": "_bnf_medium-grey",
  "Concise Data-Definition Language": "_bnf_medium-grey",
  "Concise Data-Definition-Language": "_bnf_medium-grey",
  "Concise Data-Definition_Language": "_bnf_medium-grey",
  "Concise Data_DefinitionLanguage": "_bnf_medium-grey",
  "Concise Data_Definition Language": "_bnf_medium-grey",
  "Concise Data_Definition-Language": "_bnf_medium-grey",
  "Concise Data_Definition_Language": "_bnf_medium-grey",
  "Concise-DataDefinitionLanguage": "_bnf_medium-grey",
  "Concise-DataDefinition Language": "_bnf_medium-grey",
  "Concise-DataDefinition-Language": "_bnf_medium-grey",
  "Concise-DataDefinition_Language": "_bnf_medium-grey",
  "Concise-Data DefinitionLanguage": "_bnf_medium-grey",
  "Concise-Data Definition Language": "_bnf_medium-grey",
  "Concise-Data Definition-Language": "_bnf_medium-grey",
  "Concise-Data Definition_Language": "_bnf_medium-grey",
  "Concise-Data-DefinitionLanguage": "_bnf_medium-grey",
  "Concise-Data-Definition Language": "_bnf_medium-grey",
  "Concise-Data-Definition-Language": "_bnf_medium-grey",
  "Concise-Data-Definition_Language": "_bnf_medium-grey",
  "Concise-Data_DefinitionLanguage": "_bnf_medium-grey",
  "Concise-Data_Definition Language": "_bnf_medium-grey",
  "Concise-Data_Definition-Language": "_bnf_medium-grey",
  "Concise-Data_Definition_Language": "_bnf_medium-grey",
  Concise_DataDefinitionLanguage: "_bnf_medium-grey",
  "Concise_DataDefinition Language": "_bnf_medium-grey",
  "Concise_DataDefinition-Language": "_bnf_medium-grey",
  Concise_DataDefinition_Language: "_bnf_medium-grey",
  "Concise_Data DefinitionLanguage": "_bnf_medium-grey",
  "Concise_Data Definition Language": "_bnf_medium-grey",
  "Concise_Data Definition-Language": "_bnf_medium-grey",
  "Concise_Data Definition_Language": "_bnf_medium-grey",
  "Concise_Data-DefinitionLanguage": "_bnf_medium-grey",
  "Concise_Data-Definition Language": "_bnf_medium-grey",
  "Concise_Data-Definition-Language": "_bnf_medium-grey",
  "Concise_Data-Definition_Language": "_bnf_medium-grey",
  Concise_Data_DefinitionLanguage: "_bnf_medium-grey",
  "Concise_Data_Definition Language": "_bnf_medium-grey",
  "Concise_Data_Definition-Language": "_bnf_medium-grey",
  Concise_Data_Definition_Language: "_bnf_medium-grey",
  CONCISEDATADEFINITIONLANGUAGE: "_bnf_medium-grey",
  "CONCISEDATADEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISEDATADEFINITION-LANGUAGE": "_bnf_medium-grey",
  CONCISEDATADEFINITION_LANGUAGE: "_bnf_medium-grey",
  "CONCISEDATA DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISEDATA DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISEDATA DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISEDATA DEFINITION_LANGUAGE": "_bnf_medium-grey",
  "CONCISEDATA-DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISEDATA-DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISEDATA-DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISEDATA-DEFINITION_LANGUAGE": "_bnf_medium-grey",
  CONCISEDATA_DEFINITIONLANGUAGE: "_bnf_medium-grey",
  "CONCISEDATA_DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISEDATA_DEFINITION-LANGUAGE": "_bnf_medium-grey",
  CONCISEDATA_DEFINITION_LANGUAGE: "_bnf_medium-grey",
  "CONCISE DATADEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE DATADEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATADEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATADEFINITION_LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA DEFINITION_LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA-DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA-DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA-DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA-DEFINITION_LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA_DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA_DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA_DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE DATA_DEFINITION_LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATADEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATADEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATADEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATADEFINITION_LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA DEFINITION_LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA-DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA-DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA-DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA-DEFINITION_LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA_DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA_DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA_DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE-DATA_DEFINITION_LANGUAGE": "_bnf_medium-grey",
  CONCISE_DATADEFINITIONLANGUAGE: "_bnf_medium-grey",
  "CONCISE_DATADEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE_DATADEFINITION-LANGUAGE": "_bnf_medium-grey",
  CONCISE_DATADEFINITION_LANGUAGE: "_bnf_medium-grey",
  "CONCISE_DATA DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE_DATA DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE_DATA DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE_DATA DEFINITION_LANGUAGE": "_bnf_medium-grey",
  "CONCISE_DATA-DEFINITIONLANGUAGE": "_bnf_medium-grey",
  "CONCISE_DATA-DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE_DATA-DEFINITION-LANGUAGE": "_bnf_medium-grey",
  "CONCISE_DATA-DEFINITION_LANGUAGE": "_bnf_medium-grey",
  CONCISE_DATA_DEFINITIONLANGUAGE: "_bnf_medium-grey",
  "CONCISE_DATA_DEFINITION LANGUAGE": "_bnf_medium-grey",
  "CONCISE_DATA_DEFINITION-LANGUAGE": "_bnf_medium-grey",
  CONCISE_DATA_DEFINITION_LANGUAGE: "_bnf_medium-grey",
  conll: "_conll_medium-blue",
  CoNLL: "_conll_medium-blue",
  CONLL: "_conll_medium-blue",
  conllu: "_conll_medium-blue",
  CoNLLU: "_conll_medium-blue",
  CONLLU: "_conll_medium-blue",
  conllx: "_conll_medium-blue",
  CoNLLX: "_conll_medium-blue",
  CONLLX: "_conll_medium-blue",
  containerfile: "_docker_dark-blue",
  Containerfile: "_docker_dark-blue",
  CONTAINERFILE: "_docker_dark-blue",
  coq: "_coq_medium-maroon",
  Coq: "_coq_medium-maroon",
  COQ: "_coq_medium-maroon",
  cpc: "_cpcdosc_medium-blue",
  "cpcdosc+": "_cpcdosc_medium-blue",
  "CpcdosC+": "_cpcdosc_medium-blue",
  "CPCDOSC+": "_cpcdosc_medium-blue",
  cperl: "_perl_medium-blue",
  CPerl: "_perl_medium-blue",
  CPERL: "_perl_medium-blue",
  cplusplus: "_cpp_medium-blue",
  CPLUSPLUS: "_cpp_medium-blue",
  cpp: "_cpp_medium-blue",
  "c-pp": "_cpp_medium-blue",
  c_pp: "_cpp_medium-blue",
  CPP: "_cpp_medium-blue",
  "C-PP": "_cpp_medium-blue",
  C_PP: "_cpp_medium-blue",
  cpu12: "_asm-m68k_medium-blue",
  "cpu 12": "_asm-m68k_medium-blue",
  "cpu-12": "_asm-m68k_medium-blue",
  cpu_12: "_asm-m68k_medium-blue",
  creole: "_creole_medium-blue",
  Creole: "_creole_medium-blue",
  CREOLE: "_creole_medium-blue",
  crystal: "_crystal_medium-cyan",
  Crystal: "_crystal_medium-cyan",
  CRYSTAL: "_crystal_medium-cyan",
  cs: "_csharp_medium-blue",
  "c#-script": "_csscript_dark-green",
  "C#-Script": "_csscript_dark-green",
  "C#-SCRIPT": "_csscript_dark-green",
  csharp: "_csharp_medium-blue",
  "c sharp": "_csharp_medium-blue",
  "c-sharp": "_csharp_medium-blue",
  c_sharp: "_csharp_medium-blue",
  CSharp: "_csharp_medium-blue",
  "C Sharp": "_csharp_medium-blue",
  "C-Sharp": "_csharp_medium-blue",
  C_Sharp: "_csharp_medium-blue",
  CSHARP: "_csharp_medium-blue",
  "C SHARP": "_csharp_medium-blue",
  "C-SHARP": "_csharp_medium-blue",
  C_SHARP: "_csharp_medium-blue",
  csound: "_csound_dark-blue",
  Csound: "_csound_dark-blue",
  CSOUND: "_csound_dark-blue",
  "csound-csd": "_csound_dark-maroon",
  "CSOUND-CSD": "_csound_dark-maroon",
  "csound-document": "_csound_dark-maroon",
  "csound-orc": "_csound_medium-maroon",
  "CSOUND-ORC": "_csound_medium-maroon",
  "csound-sco": "_csound_dark-blue",
  "CSOUND-SCO": "_csound_dark-blue",
  "csound-score": "_csound_dark-blue",
  css: "_css3_dark-red",
  CSS: "_css3_dark-red",
  "css.less": "_css3_dark-blue",
  csswg: "_bikeshed_medium-red",
  csv: "_graph_light-red",
  "csv.semicolon": "_graph_light-red",
  csx: "_csscript_dark-green",
  cucumber: "_cucumber_medium-green",
  Cucumber: "_cucumber_medium-green",
  CUCUMBER: "_cucumber_medium-green",
  "cucumber.steps": "_cucumber_medium-green",
  cuda: "_nvidia_medium-green",
  CUDA: "_nvidia_medium-green",
  "cudac++": "_nvidia_medium-green",
  "cuda c++": "_nvidia_medium-green",
  "cuda-c++": "_nvidia_medium-green",
  "cuda_c++": "_nvidia_medium-green",
  cudacpp: "_nvidia_medium-green",
  "cuda cpp": "_nvidia_medium-green",
  "cuda-cpp": "_nvidia_medium-green",
  cuda_cpp: "_nvidia_medium-green",
  cuneiform: "_cuneiform_dark-blue",
  Cuneiform: "_cuneiform_dark-blue",
  CUNEIFORM: "_cuneiform_dark-blue",
  curl: "_curl_dark-blue",
  cURL: "_curl_dark-blue",
  CURL: "_curl_dark-blue",
  curlrc: "_curl_dark-blue",
  curry: "_curry_medium-red",
  Curry: "_curry_medium-red",
  CURRY: "_curry_medium-red",
  cwl: "_cwl_dark-red",
  CWL: "_cwl_dark-red",
  cython: "_cython_medium-orange",
  Cython: "_cython_medium-orange",
  CYTHON: "_cython_medium-orange",
  d: "_dlang_medium-red",
  D: "_dlang_medium-red",
  dafny: "_dafny_medium-yellow",
  Dafny: "_dafny_medium-yellow",
  DAFNY: "_dafny_medium-yellow",
  danmakufu: "_yang_medium-red",
  Danmakufu: "_yang_medium-red",
  DANMAKUFU: "_yang_medium-red",
  dart: "_dart_medium-cyan",
  Dart: "_dart_medium-cyan",
  DART: "_dart_medium-cyan",
  dataweave: "_dataweave_medium-blue",
  "data-weave": "_dataweave_medium-blue",
  "data weave": "_dataweave_medium-blue",
  data_weave: "_dataweave_medium-blue",
  DataWeave: "_dataweave_medium-blue",
  "Data Weave": "_dataweave_medium-blue",
  "Data-Weave": "_dataweave_medium-blue",
  Data_Weave: "_dataweave_medium-blue",
  DATAWEAVE: "_dataweave_medium-blue",
  "DATA WEAVE": "_dataweave_medium-blue",
  "DATA-WEAVE": "_dataweave_medium-blue",
  DATA_WEAVE: "_dataweave_medium-blue",
  dc: "_calc_medium-blue",
  DC: "_calc_medium-blue",
  dcl: "_openvms_medium-orange",
  "deb-control": "_debian_dark-cyan",
  debian: "_debian_dark-cyan",
  Debian: "_debian_dark-cyan",
  DEBIAN: "_debian_dark-cyan",
  devicetree: "_devicetree_medium-purple",
  "device tree": "_devicetree_medium-purple",
  "device-tree": "_devicetree_medium-purple",
  device_tree: "_devicetree_medium-purple",
  DeviceTree: "_devicetree_medium-purple",
  "Device Tree": "_devicetree_medium-purple",
  "Device-Tree": "_devicetree_medium-purple",
  Device_Tree: "_devicetree_medium-purple",
  DEVICETREE: "_devicetree_medium-purple",
  "DEVICE TREE": "_devicetree_medium-purple",
  "DEVICE-TREE": "_devicetree_medium-purple",
  DEVICE_TREE: "_devicetree_medium-purple",
  devicetreesource: "_devicetree_medium-purple",
  "devicetree source": "_devicetree_medium-purple",
  "devicetree-source": "_devicetree_medium-purple",
  devicetree_source: "_devicetree_medium-purple",
  DeviceTreeSource: "_devicetree_medium-purple",
  "DeviceTree Source": "_devicetree_medium-purple",
  "DeviceTree-Source": "_devicetree_medium-purple",
  DeviceTree_Source: "_devicetree_medium-purple",
  DEVICETREESOURCE: "_devicetree_medium-purple",
  "DEVICETREE SOURCE": "_devicetree_medium-purple",
  "DEVICETREE-SOURCE": "_devicetree_medium-purple",
  DEVICETREE_SOURCE: "_devicetree_medium-purple",
  dformat: "_manpage_dark-green",
  DFORMAT: "_manpage_dark-green",
  dfy: "_dafny_medium-yellow",
  dhall: "_dhall_dark-grey",
  Dhall: "_dhall_dark-grey",
  DHALL: "_dhall_dark-grey",
  diff: "_diff_medium-orange",
  Diff: "_diff_medium-orange",
  DIFF: "_diff_medium-orange",
  digitalcommandlanguage: "_openvms_medium-orange",
  "digitalcommand language": "_openvms_medium-orange",
  "digitalcommand-language": "_openvms_medium-orange",
  digitalcommand_language: "_openvms_medium-orange",
  "digital commandlanguage": "_openvms_medium-orange",
  "digital command language": "_openvms_medium-orange",
  "digital command-language": "_openvms_medium-orange",
  "digital command_language": "_openvms_medium-orange",
  "digital-commandlanguage": "_openvms_medium-orange",
  "digital-command language": "_openvms_medium-orange",
  "digital-command-language": "_openvms_medium-orange",
  "digital-command_language": "_openvms_medium-orange",
  digital_commandlanguage: "_openvms_medium-orange",
  "digital_command language": "_openvms_medium-orange",
  "digital_command-language": "_openvms_medium-orange",
  digital_command_language: "_openvms_medium-orange",
  DigitalCommandLanguage: "_openvms_medium-orange",
  "DigitalCommand Language": "_openvms_medium-orange",
  "DigitalCommand-Language": "_openvms_medium-orange",
  DigitalCommand_Language: "_openvms_medium-orange",
  "Digital CommandLanguage": "_openvms_medium-orange",
  "Digital Command Language": "_openvms_medium-orange",
  "Digital Command-Language": "_openvms_medium-orange",
  "Digital Command_Language": "_openvms_medium-orange",
  "Digital-CommandLanguage": "_openvms_medium-orange",
  "Digital-Command Language": "_openvms_medium-orange",
  "Digital-Command-Language": "_openvms_medium-orange",
  "Digital-Command_Language": "_openvms_medium-orange",
  Digital_CommandLanguage: "_openvms_medium-orange",
  "Digital_Command Language": "_openvms_medium-orange",
  "Digital_Command-Language": "_openvms_medium-orange",
  Digital_Command_Language: "_openvms_medium-orange",
  DIGITALCOMMANDLANGUAGE: "_openvms_medium-orange",
  "DIGITALCOMMAND LANGUAGE": "_openvms_medium-orange",
  "DIGITALCOMMAND-LANGUAGE": "_openvms_medium-orange",
  DIGITALCOMMAND_LANGUAGE: "_openvms_medium-orange",
  "DIGITAL COMMANDLANGUAGE": "_openvms_medium-orange",
  "DIGITAL COMMAND LANGUAGE": "_openvms_medium-orange",
  "DIGITAL COMMAND-LANGUAGE": "_openvms_medium-orange",
  "DIGITAL COMMAND_LANGUAGE": "_openvms_medium-orange",
  "DIGITAL-COMMANDLANGUAGE": "_openvms_medium-orange",
  "DIGITAL-COMMAND LANGUAGE": "_openvms_medium-orange",
  "DIGITAL-COMMAND-LANGUAGE": "_openvms_medium-orange",
  "DIGITAL-COMMAND_LANGUAGE": "_openvms_medium-orange",
  DIGITAL_COMMANDLANGUAGE: "_openvms_medium-orange",
  "DIGITAL_COMMAND LANGUAGE": "_openvms_medium-orange",
  "DIGITAL_COMMAND-LANGUAGE": "_openvms_medium-orange",
  DIGITAL_COMMAND_LANGUAGE: "_openvms_medium-orange",
  dircolors: "_terminal_medium-green",
  DIRCOLORS: "_terminal_medium-green",
  directx: "_model_medium-green",
  "direct-x": "_model_medium-green",
  directx3dfile: "_model_medium-green",
  "directx3d file": "_model_medium-green",
  "directx3d-file": "_model_medium-green",
  directx3d_file: "_model_medium-green",
  "directx 3dfile": "_model_medium-green",
  "directx 3d file": "_model_medium-green",
  "directx 3d-file": "_model_medium-green",
  "directx 3d_file": "_model_medium-green",
  "directx-3dfile": "_model_medium-green",
  "directx-3d file": "_model_medium-green",
  "directx-3d-file": "_model_medium-green",
  "directx-3d_file": "_model_medium-green",
  directx_3dfile: "_model_medium-green",
  "directx_3d file": "_model_medium-green",
  "directx_3d-file": "_model_medium-green",
  directx_3d_file: "_model_medium-green",
  DirectX3DFile: "_model_medium-green",
  "DirectX3D File": "_model_medium-green",
  "DirectX3D-File": "_model_medium-green",
  DirectX3D_File: "_model_medium-green",
  "DirectX 3DFile": "_model_medium-green",
  "DirectX 3D File": "_model_medium-green",
  "DirectX 3D-File": "_model_medium-green",
  "DirectX 3D_File": "_model_medium-green",
  "DirectX-3DFile": "_model_medium-green",
  "DirectX-3D File": "_model_medium-green",
  "DirectX-3D-File": "_model_medium-green",
  "DirectX-3D_File": "_model_medium-green",
  DirectX_3DFile: "_model_medium-green",
  "DirectX_3D File": "_model_medium-green",
  "DirectX_3D-File": "_model_medium-green",
  DirectX_3D_File: "_model_medium-green",
  DIRECTX3DFILE: "_model_medium-green",
  "DIRECTX3D FILE": "_model_medium-green",
  "DIRECTX3D-FILE": "_model_medium-green",
  DIRECTX3D_FILE: "_model_medium-green",
  "DIRECTX 3DFILE": "_model_medium-green",
  "DIRECTX 3D FILE": "_model_medium-green",
  "DIRECTX 3D-FILE": "_model_medium-green",
  "DIRECTX 3D_FILE": "_model_medium-green",
  "DIRECTX-3DFILE": "_model_medium-green",
  "DIRECTX-3D FILE": "_model_medium-green",
  "DIRECTX-3D-FILE": "_model_medium-green",
  "DIRECTX-3D_FILE": "_model_medium-green",
  DIRECTX_3DFILE: "_model_medium-green",
  "DIRECTX_3D FILE": "_model_medium-green",
  "DIRECTX_3D-FILE": "_model_medium-green",
  DIRECTX_3D_FILE: "_model_medium-green",
  ditroff: "_binary_dark-green",
  Ditroff: "_binary_dark-green",
  DITROFF: "_binary_dark-green",
  django: "_jinja_dark-red",
  DJANGO: "_jinja_dark-red",
  dm: "_byond_medium-blue",
  DM: "_byond_medium-blue",
  docker: "_docker_dark-blue",
  Docker: "_docker_dark-blue",
  DOCKER: "_docker_dark-blue",
  dockercompose: "_docker_dark-blue",
  DockerCompose: "_docker_dark-blue",
  DOCKERCOMPOSE: "_docker_dark-blue",
  dockerfile: "_docker_dark-blue",
  Dockerfile: "_docker_dark-blue",
  DOCKERFILE: "_docker_dark-blue",
  docpad: "_docpad_medium-maroon",
  "doc pad": "_docpad_medium-maroon",
  "doc-pad": "_docpad_medium-maroon",
  doc_pad: "_docpad_medium-maroon",
  DocPad: "_docpad_medium-maroon",
  "Doc Pad": "_docpad_medium-maroon",
  "Doc-Pad": "_docpad_medium-maroon",
  Doc_Pad: "_docpad_medium-maroon",
  DOCPAD: "_docpad_medium-maroon",
  "DOC PAD": "_docpad_medium-maroon",
  "DOC-PAD": "_docpad_medium-maroon",
  DOC_PAD: "_docpad_medium-maroon",
  dogescript: "_doge_medium-yellow",
  Dogescript: "_doge_medium-yellow",
  DOGESCRIPT: "_doge_medium-yellow",
  dosbatch: "_windows_medium-purple",
  DOSBatch: "_windows_medium-purple",
  DOSBATCH: "_windows_medium-purple",
  dosini: "_config_medium-yellow",
  DOSINI: "_config_medium-yellow",
  dot: "_graphviz_medium-blue",
  dotenv: "_dotenv_medium-yellow",
  DOTENV: "_dotenv_medium-yellow",
  dotjs: "_dotjs_medium-blue",
  "dot.js": "_dotjs_medium-blue",
  "doT.js": "_dotjs_medium-blue",
  "DOT.JS": "_dotjs_medium-blue",
  DOTJS: "_dotjs_medium-blue",
  doxyfile: "_doxygen_medium-blue",
  Doxyfile: "_doxygen_medium-blue",
  DOXYFILE: "_doxygen_medium-blue",
  doxygen: "_doxygen_medium-blue",
  dpic: "_manpage_dark-green",
  DPIC: "_manpage_dark-green",
  dreammaker: "_byond_medium-blue",
  "dream maker": "_byond_medium-blue",
  "dream-maker": "_byond_medium-blue",
  dream_maker: "_byond_medium-blue",
  DreamMaker: "_byond_medium-blue",
  "Dream Maker": "_byond_medium-blue",
  "Dream-Maker": "_byond_medium-blue",
  Dream_Maker: "_byond_medium-blue",
  DREAMMAKER: "_byond_medium-blue",
  "DREAM MAKER": "_byond_medium-blue",
  "DREAM-MAKER": "_byond_medium-blue",
  DREAM_MAKER: "_byond_medium-blue",
  dreammakerscript: "_byond_medium-blue",
  "dreammaker script": "_byond_medium-blue",
  "dreammaker-script": "_byond_medium-blue",
  dreammaker_script: "_byond_medium-blue",
  "dream makerscript": "_byond_medium-blue",
  "dream maker script": "_byond_medium-blue",
  "dream maker-script": "_byond_medium-blue",
  "dream maker_script": "_byond_medium-blue",
  "dream-makerscript": "_byond_medium-blue",
  "dream-maker script": "_byond_medium-blue",
  "dream-maker-script": "_byond_medium-blue",
  "dream-maker_script": "_byond_medium-blue",
  dream_makerscript: "_byond_medium-blue",
  "dream_maker script": "_byond_medium-blue",
  "dream_maker-script": "_byond_medium-blue",
  dream_maker_script: "_byond_medium-blue",
  DreamMakerScript: "_byond_medium-blue",
  "DreamMaker Script": "_byond_medium-blue",
  "DreamMaker-Script": "_byond_medium-blue",
  DreamMaker_Script: "_byond_medium-blue",
  "Dream MakerScript": "_byond_medium-blue",
  "Dream Maker Script": "_byond_medium-blue",
  "Dream Maker-Script": "_byond_medium-blue",
  "Dream Maker_Script": "_byond_medium-blue",
  "Dream-MakerScript": "_byond_medium-blue",
  "Dream-Maker Script": "_byond_medium-blue",
  "Dream-Maker-Script": "_byond_medium-blue",
  "Dream-Maker_Script": "_byond_medium-blue",
  Dream_MakerScript: "_byond_medium-blue",
  "Dream_Maker Script": "_byond_medium-blue",
  "Dream_Maker-Script": "_byond_medium-blue",
  Dream_Maker_Script: "_byond_medium-blue",
  DREAMMAKERSCRIPT: "_byond_medium-blue",
  "DREAMMAKER SCRIPT": "_byond_medium-blue",
  "DREAMMAKER-SCRIPT": "_byond_medium-blue",
  DREAMMAKER_SCRIPT: "_byond_medium-blue",
  "DREAM MAKERSCRIPT": "_byond_medium-blue",
  "DREAM MAKER SCRIPT": "_byond_medium-blue",
  "DREAM MAKER-SCRIPT": "_byond_medium-blue",
  "DREAM MAKER_SCRIPT": "_byond_medium-blue",
  "DREAM-MAKERSCRIPT": "_byond_medium-blue",
  "DREAM-MAKER SCRIPT": "_byond_medium-blue",
  "DREAM-MAKER-SCRIPT": "_byond_medium-blue",
  "DREAM-MAKER_SCRIPT": "_byond_medium-blue",
  DREAM_MAKERSCRIPT: "_byond_medium-blue",
  "DREAM_MAKER SCRIPT": "_byond_medium-blue",
  "DREAM_MAKER-SCRIPT": "_byond_medium-blue",
  DREAM_MAKER_SCRIPT: "_byond_medium-blue",
  dtd: "_code_medium-cyan",
  dtml: "_html5_medium-blue",
  DTML: "_html5_medium-blue",
  dts: "_devicetree_medium-purple",
  eagle: "_eagle_medium-red",
  Eagle: "_eagle_medium-red",
  EAGLE: "_eagle_medium-red",
  ebnf: "_bnf_medium-red",
  ebuild: "_gentoo_dark-cyan",
  ec: "_ec_dark-blue",
  eC: "_ec_dark-blue",
  EC: "_ec_dark-blue",
  eclipse: "_eclipse-lang_medium-blue",
  ECLiPSe: "_eclipse-lang_medium-blue",
  ECLIPSE: "_eclipse-lang_medium-blue",
  eco: "_docpad_medium-maroon",
  ed: "_code_dark-maroon",
  edge: "_edge_dark-orange",
  Edge: "_edge_dark-orange",
  EDGE: "_edge_dark-orange",
  editorconfig: "_editorconfig_medium-orange",
  "editor config": "_editorconfig_medium-orange",
  "editor-config": "_editorconfig_medium-orange",
  editor_config: "_editorconfig_medium-orange",
  EditorConfig: "_editorconfig_medium-orange",
  "Editor Config": "_editorconfig_medium-orange",
  "Editor-Config": "_editorconfig_medium-orange",
  Editor_Config: "_editorconfig_medium-orange",
  EDITORCONFIG: "_editorconfig_medium-orange",
  "EDITOR CONFIG": "_editorconfig_medium-orange",
  "EDITOR-CONFIG": "_editorconfig_medium-orange",
  EDITOR_CONFIG: "_editorconfig_medium-orange",
  eiffel: "_eiffel_medium-cyan",
  Eiffel: "_eiffel_medium-cyan",
  EIFFEL: "_eiffel_medium-cyan",
  ejs: "_ejs_medium-green",
  EJS: "_ejs_medium-green",
  elisp: "_emacs_medium-purple",
  ELISP: "_emacs_medium-purple",
  elixir: "_elixir_dark-purple",
  Elixir: "_elixir_dark-purple",
  ELIXIR: "_elixir_dark-purple",
  elm: "_elm_medium-blue",
  Elm: "_elm_medium-blue",
  ELM: "_elm_medium-blue",
  "emacs.lisp": "_emacs_medium-purple",
  emacslisp: "_emacs_medium-purple",
  "emacs lisp": "_emacs_medium-purple",
  "emacs-lisp": "_emacs_medium-purple",
  emacs_lisp: "_emacs_medium-purple",
  EmacsLisp: "_emacs_medium-purple",
  "Emacs Lisp": "_emacs_medium-purple",
  "Emacs-Lisp": "_emacs_medium-purple",
  Emacs_Lisp: "_emacs_medium-purple",
  EMACSLISP: "_emacs_medium-purple",
  "EMACS LISP": "_emacs_medium-purple",
  "EMACS-LISP": "_emacs_medium-purple",
  EMACS_LISP: "_emacs_medium-purple",
  email: "_at_medium-red",
  "e-mail": "_at_medium-red",
  EMAIL: "_at_medium-red",
  "E-MAIL": "_at_medium-red",
  ember: "_em_medium-red",
  emberscript: "_em_medium-red",
  "ember script": "_em_medium-red",
  "ember-script": "_em_medium-red",
  ember_script: "_em_medium-red",
  EmberScript: "_em_medium-red",
  "Ember Script": "_em_medium-red",
  "Ember-Script": "_em_medium-red",
  Ember_Script: "_em_medium-red",
  EMBERSCRIPT: "_em_medium-red",
  "EMBER SCRIPT": "_em_medium-red",
  "EMBER-SCRIPT": "_em_medium-red",
  EMBER_SCRIPT: "_em_medium-red",
  emblem: "_mustache_medium-blue",
  Emblem: "_mustache_medium-blue",
  EMBLEM: "_mustache_medium-blue",
  eml: "_at_medium-red",
  EML: "_at_medium-red",
  "eml.basic": "_mail_medium-blue",
  eq: "_eq_medium-orange",
  EQ: "_eq_medium-orange",
  erlang: "_erlang_medium-red",
  Erlang: "_erlang_medium-red",
  ERLANG: "_erlang_medium-red",
  eskip: "_anchor_dark-blue",
  extempore: "_scheme_medium-yellow",
  EXTEMPORE: "_scheme_medium-yellow",
  "extendedbackus-naurform": "_bnf_medium-red",
  "extendedbackus-naur form": "_bnf_medium-red",
  "extendedbackus-naur-form": "_bnf_medium-red",
  "extendedbackus-naur_form": "_bnf_medium-red",
  "extended backus-naurform": "_bnf_medium-red",
  "extended backus-naur form": "_bnf_medium-red",
  "extended backus-naur-form": "_bnf_medium-red",
  "extended backus-naur_form": "_bnf_medium-red",
  "extended-backus-naurform": "_bnf_medium-red",
  "extended-backus-naur form": "_bnf_medium-red",
  "extended-backus-naur-form": "_bnf_medium-red",
  "extended-backus-naur_form": "_bnf_medium-red",
  "extended_backus-naurform": "_bnf_medium-red",
  "extended_backus-naur form": "_bnf_medium-red",
  "extended_backus-naur-form": "_bnf_medium-red",
  "extended_backus-naur_form": "_bnf_medium-red",
  "ExtendedBackus-NaurForm": "_bnf_medium-red",
  "ExtendedBackus-Naur Form": "_bnf_medium-red",
  "ExtendedBackus-Naur-Form": "_bnf_medium-red",
  "ExtendedBackus-Naur_Form": "_bnf_medium-red",
  "Extended Backus-NaurForm": "_bnf_medium-red",
  "Extended Backus-Naur Form": "_bnf_medium-red",
  "Extended Backus-Naur-Form": "_bnf_medium-red",
  "Extended Backus-Naur_Form": "_bnf_medium-red",
  "Extended-Backus-NaurForm": "_bnf_medium-red",
  "Extended-Backus-Naur Form": "_bnf_medium-red",
  "Extended-Backus-Naur-Form": "_bnf_medium-red",
  "Extended-Backus-Naur_Form": "_bnf_medium-red",
  "Extended_Backus-NaurForm": "_bnf_medium-red",
  "Extended_Backus-Naur Form": "_bnf_medium-red",
  "Extended_Backus-Naur-Form": "_bnf_medium-red",
  "Extended_Backus-Naur_Form": "_bnf_medium-red",
  "EXTENDEDBACKUS-NAURFORM": "_bnf_medium-red",
  "EXTENDEDBACKUS-NAUR FORM": "_bnf_medium-red",
  "EXTENDEDBACKUS-NAUR-FORM": "_bnf_medium-red",
  "EXTENDEDBACKUS-NAUR_FORM": "_bnf_medium-red",
  "EXTENDED BACKUS-NAURFORM": "_bnf_medium-red",
  "EXTENDED BACKUS-NAUR FORM": "_bnf_medium-red",
  "EXTENDED BACKUS-NAUR-FORM": "_bnf_medium-red",
  "EXTENDED BACKUS-NAUR_FORM": "_bnf_medium-red",
  "EXTENDED-BACKUS-NAURFORM": "_bnf_medium-red",
  "EXTENDED-BACKUS-NAUR FORM": "_bnf_medium-red",
  "EXTENDED-BACKUS-NAUR-FORM": "_bnf_medium-red",
  "EXTENDED-BACKUS-NAUR_FORM": "_bnf_medium-red",
  "EXTENDED_BACKUS-NAURFORM": "_bnf_medium-red",
  "EXTENDED_BACKUS-NAUR FORM": "_bnf_medium-red",
  "EXTENDED_BACKUS-NAUR-FORM": "_bnf_medium-red",
  "EXTENDED_BACKUS-NAUR_FORM": "_bnf_medium-red",
  "f#": "_fsharp_medium-blue",
  "F#": "_fsharp_medium-blue",
  factor: "_factor_medium-orange",
  Factor: "_factor_medium-orange",
  FACTOR: "_factor_medium-orange",
  falcon: "_falcon_medium-red",
  Falcon: "_falcon_medium-red",
  FALCON: "_falcon_medium-red",
  fan: "_fantom_medium-blue",
  fancy: "_fancy_dark-blue",
  Fancy: "_fancy_dark-blue",
  FANCY: "_fancy_dark-blue",
  fantom: "_fantom_medium-blue",
  Fantom: "_fantom_medium-blue",
  FANTOM: "_fantom_medium-blue",
  fasm: "_asm-intel_dark-blue",
  FASM: "_asm-intel_dark-blue",
  fasta: "_dna_medium-green",
  FASTA: "_dna_medium-green",
  fasto: "_code_medium-red",
  fastq: "_dna_medium-green",
  FASTQ: "_dna_medium-green",
  fauna: "_fauna_dark-blue",
  Fauna: "_fauna_dark-blue",
  FAUNA: "_fauna_dark-blue",
  faunadb: "_fauna_dark-blue",
  FaunaDB: "_fauna_dark-blue",
  FAUNADB: "_fauna_dark-blue",
  faunaquerylanguage: "_fauna_dark-blue",
  FaunaQueryLanguage: "_fauna_dark-blue",
  FAUNAQUERYLANGUAGE: "_fauna_dark-blue",
  faust: "_faust_dark-orange",
  Faust: "_faust_dark-orange",
  FAUST: "_faust_dark-orange",
  "fc-list": "_database_medium-orange",
  fdepl: "_franca_medium-maroon",
  fexl: "_fexl_medium-cyan",
  Fexl: "_fexl_medium-cyan",
  FEXL: "_fexl_medium-cyan",
  fidl: "_code_medium-pink",
  FIDL: "_code_medium-pink",
  figctrl: "_config_medium-green",
  figfont: "_font-bitmap_medium-red",
  firebase: "_firebase_medium-orange",
  Firebase: "_firebase_medium-orange",
  FIREBASE: "_firebase_medium-orange",
  firebasebolt: "_firebase-bolt_medium-yellow",
  "firebase bolt": "_firebase-bolt_medium-yellow",
  "firebase-bolt": "_firebase-bolt_medium-yellow",
  firebase_bolt: "_firebase-bolt_medium-yellow",
  FirebaseBolt: "_firebase-bolt_medium-yellow",
  "Firebase Bolt": "_firebase-bolt_medium-yellow",
  "Firebase-Bolt": "_firebase-bolt_medium-yellow",
  Firebase_Bolt: "_firebase-bolt_medium-yellow",
  FIREBASEBOLT: "_firebase-bolt_medium-yellow",
  "FIREBASE BOLT": "_firebase-bolt_medium-yellow",
  "FIREBASE-BOLT": "_firebase-bolt_medium-yellow",
  FIREBASE_BOLT: "_firebase-bolt_medium-yellow",
  firerules: "_firebase_medium-orange",
  FIRERULES: "_firebase_medium-orange",
  fish: "_terminal_medium-green",
  FISH: "_terminal_medium-green",
  "flex-config": "_as_medium-red",
  fontdir: "_database_medium-red",
  fontforge: "_ff_dark-blue",
  "font forge": "_ff_dark-blue",
  "font-forge": "_ff_dark-blue",
  font_forge: "_ff_dark-blue",
  FontForge: "_ff_dark-blue",
  "Font Forge": "_ff_dark-blue",
  "Font-Forge": "_ff_dark-blue",
  Font_Forge: "_ff_dark-blue",
  FONTFORGE: "_ff_dark-blue",
  "FONT FORGE": "_ff_dark-blue",
  "FONT-FORGE": "_ff_dark-blue",
  FONT_FORGE: "_ff_dark-blue",
  fontinfo: "_postscript_medium-blue",
  FONTINFO: "_postscript_medium-blue",
  "forge-config": "_minecraft_dark-green",
  fortran: "_fortran_medium-maroon",
  Fortran: "_fortran_medium-maroon",
  FORTRAN: "_fortran_medium-maroon",
  "fortran.fixed": "_fortran_medium-maroon",
  "fortran.free": "_fortran_medium-green",
  fortranmodern: "_fortran_medium-maroon",
  "fortran.modern": "_fortran_medium-maroon",
  fortranpunchcard: "_fortran_medium-maroon",
  "fortran.punchcard": "_fortran_medium-maroon",
  fountain: "_fountain_medium-blue",
  Fountain: "_fountain_medium-blue",
  FOUNTAIN: "_fountain_medium-blue",
  fql: "_fauna_dark-blue",
  franca: "_franca_medium-maroon",
  Franca: "_franca_medium-maroon",
  FRANCA: "_franca_medium-maroon",
  francadeployment: "_franca_medium-maroon",
  "franca deployment": "_franca_medium-maroon",
  "franca-deployment": "_franca_medium-maroon",
  franca_deployment: "_franca_medium-maroon",
  FrancaDeployment: "_franca_medium-maroon",
  "Franca Deployment": "_franca_medium-maroon",
  "Franca-Deployment": "_franca_medium-maroon",
  Franca_Deployment: "_franca_medium-maroon",
  FRANCADEPLOYMENT: "_franca_medium-maroon",
  "FRANCA DEPLOYMENT": "_franca_medium-maroon",
  "FRANCA-DEPLOYMENT": "_franca_medium-maroon",
  FRANCA_DEPLOYMENT: "_franca_medium-maroon",
  francaidl: "_franca_medium-orange",
  "franca idl": "_franca_medium-orange",
  "franca-idl": "_franca_medium-orange",
  franca_idl: "_franca_medium-orange",
  FrancaIDL: "_franca_medium-orange",
  "Franca IDL": "_franca_medium-orange",
  "Franca-IDL": "_franca_medium-orange",
  Franca_IDL: "_franca_medium-orange",
  FRANCAIDL: "_franca_medium-orange",
  "FRANCA IDL": "_franca_medium-orange",
  "FRANCA-IDL": "_franca_medium-orange",
  FRANCA_IDL: "_franca_medium-orange",
  freemarker: "_freemarker_medium-blue",
  "free marker": "_freemarker_medium-blue",
  "free-marker": "_freemarker_medium-blue",
  free_marker: "_freemarker_medium-blue",
  FreeMarker: "_freemarker_medium-blue",
  "Free Marker": "_freemarker_medium-blue",
  "Free-Marker": "_freemarker_medium-blue",
  Free_Marker: "_freemarker_medium-blue",
  FREEMARKER: "_freemarker_medium-blue",
  "FREE MARKER": "_freemarker_medium-blue",
  "FREE-MARKER": "_freemarker_medium-blue",
  FREE_MARKER: "_freemarker_medium-blue",
  fsharp: "_fsharp_medium-blue",
  FSharp: "_fsharp_medium-blue",
  FSHARP: "_fsharp_medium-blue",
  fthtml: "_fthtml_medium-orange",
  ftHTML: "_fthtml_medium-orange",
  FTHTML: "_fthtml_medium-orange",
  ftl: "_freemarker_medium-blue",
  FTL: "_freemarker_medium-blue",
  fundamental: "_text_medium-blue",
  futhark: "_futhark_dark-maroon",
  Futhark: "_futhark_dark-maroon",
  FUTHARK: "_futhark_dark-maroon",
  fxl: "_fexl_medium-cyan",
  galen: "_galen_medium-cyan",
  Galen: "_galen_medium-cyan",
  GALEN: "_galen_medium-cyan",
  "galen-t": "_galen_medium-cyan",
  gams: "_gams_dark-red",
  GAMS: "_gams_dark-red",
  "gams-lst": "_gams_dark-red",
  gap: "_gap_medium-yellow",
  GAP: "_gap_medium-yellow",
  gauss: "_gauss_medium-orange",
  GAUSS: "_gauss_medium-orange",
  gawk: "_awk_medium-red",
  GAWK: "_awk_medium-red",
  "g-code": "_binary_medium-orange",
  "G-CODE": "_binary_medium-orange",
  gdb: "_gdb_medium-green",
  GDB: "_gdb_medium-green",
  gdscript: "_godot_medium-blue",
  GDScript: "_godot_medium-blue",
  GDSCRIPT: "_godot_medium-blue",
  "generic-db": "_database_medium-green",
  genshi: "_genshi_medium-red",
  Genshi: "_genshi_medium-red",
  GENSHI: "_genshi_medium-red",
  gentoo: "_gentoo_dark-cyan",
  Gentoo: "_gentoo_dark-cyan",
  GENTOO: "_gentoo_dark-cyan",
  gerber: "_circuit-board_medium-red",
  gfm: "_markdown_medium-blue",
  GFM: "_markdown_medium-blue",
  "gfm-todotxt": "_checklist_medium-green",
  gherkin: "_cucumber_medium-green",
  GHERKIN: "_cucumber_medium-green",
  "gherkin.feature": "_cucumber_medium-green",
  git: "_git_medium-red",
  Git: "_git_medium-red",
  GIT: "_git_medium-red",
  "git-commit": "_git_medium-red",
  "git-config": "_git_medium-red",
  gitignore: "_git_medium-red",
  "git ignore": "_git_medium-red",
  "git-ignore": "_git_medium-red",
  git_ignore: "_git_medium-red",
  "git-rebase": "_git_medium-red",
  glsl: "_opengl_dark-cyan",
  GLSL: "_opengl_dark-cyan",
  glslang: "_opengl_dark-cyan",
  GLslang: "_opengl_dark-cyan",
  GLSLANG: "_opengl_dark-cyan",
  gn: "_gn_dark-blue",
  GN: "_gn_dark-blue",
  gnuplot: "_gnuplot_medium-red",
  Gnuplot: "_gnuplot_medium-red",
  GNUPLOT: "_gnuplot_medium-red",
  go: "_go_medium-blue",
  Go: "_go_medium-blue",
  GO: "_go_medium-blue",
  godot: "_godot_medium-blue",
  Godot: "_godot_medium-blue",
  GODOT: "_godot_medium-blue",
  gohtml: "_html5_dark-blue",
  GOHTML: "_html5_dark-blue",
  goldgrammar: "_bnf_medium-yellow",
  "gold grammar": "_bnf_medium-yellow",
  "gold-grammar": "_bnf_medium-yellow",
  gold_grammar: "_bnf_medium-yellow",
  GOLDGrammar: "_bnf_medium-yellow",
  "GOLD Grammar": "_bnf_medium-yellow",
  "GOLD-Grammar": "_bnf_medium-yellow",
  GOLD_Grammar: "_bnf_medium-yellow",
  GOLDGRAMMAR: "_bnf_medium-yellow",
  "GOLD GRAMMAR": "_bnf_medium-yellow",
  "GOLD-GRAMMAR": "_bnf_medium-yellow",
  GOLD_GRAMMAR: "_bnf_medium-yellow",
  goldgrm: "_bnf_medium-yellow",
  goldparser: "_bnf_medium-yellow",
  "gold parser": "_bnf_medium-yellow",
  "gold-parser": "_bnf_medium-yellow",
  gold_parser: "_bnf_medium-yellow",
  GOLDParser: "_bnf_medium-yellow",
  "GOLD Parser": "_bnf_medium-yellow",
  "GOLD-Parser": "_bnf_medium-yellow",
  GOLD_Parser: "_bnf_medium-yellow",
  GOLDPARSER: "_bnf_medium-yellow",
  "GOLD PARSER": "_bnf_medium-yellow",
  "GOLD-PARSER": "_bnf_medium-yellow",
  GOLD_PARSER: "_bnf_medium-yellow",
  golo: "_golo_medium-orange",
  Golo: "_golo_medium-orange",
  GOLO: "_golo_medium-orange",
  gosu: "_gosu_medium-blue",
  Gosu: "_gosu_medium-blue",
  GOSU: "_gosu_medium-blue",
  "gosu.0": "_gosu_medium-blue",
  "gosu.1": "_gosu_medium-blue",
  "gosu.2": "_gosu_medium-blue",
  "gosu.3": "_gosu_medium-blue",
  "gosu.4": "_gosu_medium-blue",
  "gosu.5": "_gosu_medium-blue",
  "gosu.6": "_gosu_medium-blue",
  "gosu.7": "_gosu_medium-blue",
  "gosu.8": "_gosu_medium-blue",
  "gosu.9": "_gosu_medium-blue",
  gotemplate: "_go_medium-blue",
  gpic: "_manpage_dark-green",
  GPIC: "_manpage_dark-green",
  gradle: "_gradle_medium-blue",
  Gradle: "_gradle_medium-blue",
  GRADLE: "_gradle_medium-blue",
  graphql: "_graphql_medium-pink",
  GraphQL: "_graphql_medium-pink",
  GRAPHQL: "_graphql_medium-pink",
  graphviz: "_graphviz_medium-blue",
  Graphviz: "_graphviz_medium-blue",
  GRAPHVIZ: "_graphviz_medium-blue",
  gremlin: "_image_medium-orange",
  Gremlin: "_image_medium-orange",
  GREMLIN: "_image_medium-orange",
  groff: "_manpage_dark-green",
  GROFF: "_manpage_dark-green",
  groovy: "_groovy_light-blue",
  Groovy: "_groovy_light-blue",
  GROOVY: "_groovy_light-blue",
  gsp: "_groovy_light-blue",
  GSP: "_groovy_light-blue",
  hack: "_hack_medium-orange",
  Hack: "_hack_medium-orange",
  HACK: "_hack_medium-orange",
  haml: "_haml_medium-maroon",
  Haml: "_haml_medium-maroon",
  HAML: "_haml_medium-maroon",
  hamlc: "_haml_medium-maroon",
  HAMLC: "_haml_medium-maroon",
  handlebars: "_mustache_medium-orange",
  HANDLEBARS: "_mustache_medium-orange",
  harbour: "_harbour_dark-blue",
  Harbour: "_harbour_dark-blue",
  HARBOUR: "_harbour_dark-blue",
  hashicorp: "_hashicorp_dark-purple",
  hashicorpconfigurationlanguage: "_hashicorp_dark-purple",
  "hashicorpconfiguration language": "_hashicorp_dark-purple",
  "hashicorpconfiguration-language": "_hashicorp_dark-purple",
  hashicorpconfiguration_language: "_hashicorp_dark-purple",
  "hashicorp configurationlanguage": "_hashicorp_dark-purple",
  "hashicorp configuration language": "_hashicorp_dark-purple",
  "hashicorp configuration-language": "_hashicorp_dark-purple",
  "hashicorp configuration_language": "_hashicorp_dark-purple",
  "hashicorp-configurationlanguage": "_hashicorp_dark-purple",
  "hashicorp-configuration language": "_hashicorp_dark-purple",
  "hashicorp-configuration-language": "_hashicorp_dark-purple",
  "hashicorp-configuration_language": "_hashicorp_dark-purple",
  hashicorp_configurationlanguage: "_hashicorp_dark-purple",
  "hashicorp_configuration language": "_hashicorp_dark-purple",
  "hashicorp_configuration-language": "_hashicorp_dark-purple",
  hashicorp_configuration_language: "_hashicorp_dark-purple",
  HashicorpConfigurationLanguage: "_hashicorp_dark-purple",
  "HashicorpConfiguration Language": "_hashicorp_dark-purple",
  "HashicorpConfiguration-Language": "_hashicorp_dark-purple",
  HashicorpConfiguration_Language: "_hashicorp_dark-purple",
  "Hashicorp ConfigurationLanguage": "_hashicorp_dark-purple",
  "Hashicorp Configuration Language": "_hashicorp_dark-purple",
  "Hashicorp Configuration-Language": "_hashicorp_dark-purple",
  "Hashicorp Configuration_Language": "_hashicorp_dark-purple",
  "Hashicorp-ConfigurationLanguage": "_hashicorp_dark-purple",
  "Hashicorp-Configuration Language": "_hashicorp_dark-purple",
  "Hashicorp-Configuration-Language": "_hashicorp_dark-purple",
  "Hashicorp-Configuration_Language": "_hashicorp_dark-purple",
  Hashicorp_ConfigurationLanguage: "_hashicorp_dark-purple",
  "Hashicorp_Configuration Language": "_hashicorp_dark-purple",
  "Hashicorp_Configuration-Language": "_hashicorp_dark-purple",
  Hashicorp_Configuration_Language: "_hashicorp_dark-purple",
  HASHICORPCONFIGURATIONLANGUAGE: "_hashicorp_dark-purple",
  "HASHICORPCONFIGURATION LANGUAGE": "_hashicorp_dark-purple",
  "HASHICORPCONFIGURATION-LANGUAGE": "_hashicorp_dark-purple",
  HASHICORPCONFIGURATION_LANGUAGE: "_hashicorp_dark-purple",
  "HASHICORP CONFIGURATIONLANGUAGE": "_hashicorp_dark-purple",
  "HASHICORP CONFIGURATION LANGUAGE": "_hashicorp_dark-purple",
  "HASHICORP CONFIGURATION-LANGUAGE": "_hashicorp_dark-purple",
  "HASHICORP CONFIGURATION_LANGUAGE": "_hashicorp_dark-purple",
  "HASHICORP-CONFIGURATIONLANGUAGE": "_hashicorp_dark-purple",
  "HASHICORP-CONFIGURATION LANGUAGE": "_hashicorp_dark-purple",
  "HASHICORP-CONFIGURATION-LANGUAGE": "_hashicorp_dark-purple",
  "HASHICORP-CONFIGURATION_LANGUAGE": "_hashicorp_dark-purple",
  HASHICORP_CONFIGURATIONLANGUAGE: "_hashicorp_dark-purple",
  "HASHICORP_CONFIGURATION LANGUAGE": "_hashicorp_dark-purple",
  "HASHICORP_CONFIGURATION-LANGUAGE": "_hashicorp_dark-purple",
  HASHICORP_CONFIGURATION_LANGUAGE: "_hashicorp_dark-purple",
  haskell: "_haskell_dark-blue",
  Haskell: "_haskell_dark-blue",
  HASKELL: "_haskell_dark-blue",
  haxe: "_haxe_medium-orange",
  Haxe: "_haxe_medium-orange",
  HAXE: "_haxe_medium-orange",
  "haxe.0": "_haxe_medium-orange",
  "haxe.1": "_haxe_medium-orange",
  "haxe.2": "_haxe_medium-orange",
  "haxe.3": "_haxe_medium-orange",
  "haxe.4": "_haxe_medium-orange",
  "haxe.5": "_haxe_medium-orange",
  "haxe.6": "_haxe_medium-orange",
  "haxe.7": "_haxe_medium-orange",
  "haxe.8": "_haxe_medium-orange",
  "haxe.9": "_haxe_medium-orange",
  hbs: "_mustache_medium-orange",
  HBS: "_mustache_medium-orange",
  hc: "_templeos_medium-yellow",
  hcl: "_hashicorp_dark-purple",
  hjson: "_hjson_medium-green",
  HJSON: "_hjson_medium-green",
  hlsl: "_model_medium-blue",
  HLSL: "_model_medium-blue",
  holyc: "_templeos_medium-yellow",
  HolyC: "_templeos_medium-yellow",
  HOLYC: "_templeos_medium-yellow",
  hsc2hs: "_haskell_medium-blue",
  hson: "_database_medium-orange",
  HSON: "_database_medium-orange",
  htm: "_html5_medium-orange",
  HTM: "_html5_medium-orange",
  html: "_html5_medium-blue",
  HTML: "_html5_medium-blue",
  htmlbars: "_mustache_medium-orange",
  HTMLBARS: "_mustache_medium-orange",
  "html.basic": "_html5_medium-orange",
  htmldjango: "_jinja_dark-red",
  HTMLDJANGO: "_jinja_dark-red",
  "html+django/jinja": "_jinja_dark-red",
  "HTML+DJANGO/JINJA": "_jinja_dark-red",
  "html.edge": "_edge_dark-orange",
  "html.erb": "_html5_medium-red",
  "html+jinja": "_jinja_dark-red",
  "HTML+JINJA": "_jinja_dark-red",
  "html.js": "_ejs_medium-green",
  "html.soy": "_closure-tpl_medium-blue",
  "html.spe": "_spacengine_medium-blue",
  "html.vue": "_vue_light-green",
  hy: "_hy_dark-blue",
  Hy: "_hy_dark-blue",
  HY: "_hy_dark-blue",
  hylang: "_hy_dark-blue",
  HYLANG: "_hy_dark-blue",
  i32: "_asm-intel_dark-blue",
  I32: "_asm-intel_dark-blue",
  i386: "_asm-intel_dark-blue",
  I386: "_asm-intel_dark-blue",
  i64: "_asm-intel_dark-blue",
  I64: "_asm-intel_dark-blue",
  i7: "_inform7_medium-blue",
  I7: "_inform7_medium-blue",
  ia32: "_asm-intel_dark-blue",
  "ia-32": "_asm-intel_dark-blue",
  ia_32: "_asm-intel_dark-blue",
  IA32: "_asm-intel_dark-blue",
  "IA-32": "_asm-intel_dark-blue",
  IA_32: "_asm-intel_dark-blue",
  ia32asm: "_asm-intel_dark-blue",
  "ia-32asm": "_asm-intel_dark-blue",
  ia_32asm: "_asm-intel_dark-blue",
  ia64: "_asm-intel_dark-blue",
  "ia-64": "_asm-intel_dark-blue",
  ia_64: "_asm-intel_dark-blue",
  IA64: "_asm-intel_dark-blue",
  "IA-64": "_asm-intel_dark-blue",
  IA_64: "_asm-intel_dark-blue",
  ia64asm: "_asm-intel_dark-blue",
  "ia-64asm": "_asm-intel_dark-blue",
  ia_64asm: "_asm-intel_dark-blue",
  ia86: "_asm-intel_dark-blue",
  "ia-86": "_asm-intel_dark-blue",
  ia_86: "_asm-intel_dark-blue",
  ia86asm: "_asm-intel_dark-blue",
  "ia-86asm": "_asm-intel_dark-blue",
  ia_86asm: "_asm-intel_dark-blue",
  idl: "_idl_medium-blue",
  IDL: "_idl_medium-blue",
  idris: "_idris_dark-red",
  Idris: "_idris_dark-red",
  IDRIS: "_idris_dark-red",
  ignore: "_git_medium-red",
  ignorelist: "_git_medium-red",
  "ignore list": "_git_medium-red",
  "ignore-list": "_git_medium-red",
  ignore_list: "_git_medium-red",
  IgnoreList: "_git_medium-red",
  "Ignore List": "_git_medium-red",
  "Ignore-List": "_git_medium-red",
  Ignore_List: "_git_medium-red",
  IGNORELIST: "_git_medium-red",
  "IGNORE LIST": "_git_medium-red",
  "IGNORE-LIST": "_git_medium-red",
  IGNORE_LIST: "_git_medium-red",
  image: "_image_medium-orange",
  Image: "_image_medium-orange",
  IMAGE: "_image_medium-orange",
  imba: "_imba_medium-yellow",
  Imba: "_imba_medium-yellow",
  IMBA: "_imba_medium-yellow",
  inform: "_inform7_medium-blue",
  "inform-": "_inform7_medium-blue",
  inform7: "_inform7_medium-blue",
  "inform-7": "_inform7_medium-blue",
  "inform 7": "_inform7_medium-blue",
  inform_7: "_inform7_medium-blue",
  Inform7: "_inform7_medium-blue",
  "Inform 7": "_inform7_medium-blue",
  "Inform-7": "_inform7_medium-blue",
  Inform_7: "_inform7_medium-blue",
  INFORM7: "_inform7_medium-blue",
  "INFORM 7": "_inform7_medium-blue",
  "INFORM-7": "_inform7_medium-blue",
  INFORM_7: "_inform7_medium-blue",
  ini: "_config_medium-yellow",
  "ini.npmrc": "_npm_medium-red",
  ink: "_ink_dark-blue",
  Ink: "_ink_dark-blue",
  INK: "_ink_dark-blue",
  inkle: "_ink_dark-blue",
  Inkle: "_ink_dark-blue",
  INKLE: "_ink_dark-blue",
  inno: "_inno_dark-blue",
  innosetup: "_inno_dark-blue",
  "inno setup": "_inno_dark-blue",
  "inno-setup": "_inno_dark-blue",
  inno_setup: "_inno_dark-blue",
  InnoSetup: "_inno_dark-blue",
  "Inno Setup": "_inno_dark-blue",
  "Inno-Setup": "_inno_dark-blue",
  Inno_Setup: "_inno_dark-blue",
  INNOSETUP: "_inno_dark-blue",
  "INNO SETUP": "_inno_dark-blue",
  "INNO-SETUP": "_inno_dark-blue",
  INNO_SETUP: "_inno_dark-blue",
  inputrc: "_terminal_medium-red",
  intel: "_asm-intel_dark-blue",
  Intel: "_asm-intel_dark-blue",
  INTEL: "_asm-intel_dark-blue",
  io: "_io_dark-purple",
  Io: "_io_dark-purple",
  IO: "_io_dark-purple",
  ipkg: "_idris_dark-red",
  ipynb: "_jupyter_dark-orange",
  IPYNB: "_jupyter_dark-orange",
  ipythonnotebook: "_jupyter_dark-orange",
  IPythonNotebook: "_jupyter_dark-orange",
  IPYTHONNOTEBOOK: "_jupyter_dark-orange",
  isabelle: "_isabelle_dark-red",
  Isabelle: "_isabelle_dark-red",
  ISABELLE: "_isabelle_dark-red",
  "isabelle.theory": "_isabelle_dark-red",
  isml: "_html5_medium-blue",
  ISML: "_html5_medium-blue",
  itanium: "_asm-intel_dark-blue",
  Itanium: "_asm-intel_dark-blue",
  ITANIUM: "_asm-intel_dark-blue",
  j: "_j_light-blue",
  J: "_j_light-blue",
  jade: "_jade_medium-red",
  Jade: "_jade_medium-red",
  JADE: "_jade_medium-red",
  jass: "_warcraft3_medium-red",
  java: "_java_medium-purple",
  Java: "_java_medium-purple",
  JAVA: "_java_medium-purple",
  javaproperties: "_config_medium-purple",
  "java properties": "_config_medium-purple",
  "java-properties": "_config_medium-purple",
  java_properties: "_config_medium-purple",
  javascript: "_js_medium-yellow",
  "java script": "_js_medium-yellow",
  "java-script": "_js_medium-yellow",
  java_script: "_js_medium-yellow",
  JavaScript: "_js_medium-yellow",
  "Java Script": "_js_medium-yellow",
  "Java-Script": "_js_medium-yellow",
  Java_Script: "_js_medium-yellow",
  JAVASCRIPT: "_js_medium-yellow",
  "JAVA SCRIPT": "_js_medium-yellow",
  "JAVA-SCRIPT": "_js_medium-yellow",
  JAVA_SCRIPT: "_js_medium-yellow",
  javascriptreact: "_jsx_medium-blue",
  "javascript react": "_jsx_medium-blue",
  "javascript-react": "_jsx_medium-blue",
  javascript_react: "_jsx_medium-blue",
  jflex: "_code_medium-red",
  jinja: "_jinja_dark-red",
  Jinja: "_jinja_dark-red",
  JINJA: "_jinja_dark-red",
  jison: "_jison_medium-cyan",
  Jison: "_jison_medium-cyan",
  JISON: "_jison_medium-cyan",
  jisonlex: "_jison_medium-cyan",
  "jison lex": "_jison_medium-cyan",
  "jison-lex": "_jison_medium-cyan",
  jison_lex: "_jison_medium-cyan",
  JisonLex: "_jison_medium-cyan",
  "Jison Lex": "_jison_medium-cyan",
  "Jison-Lex": "_jison_medium-cyan",
  Jison_Lex: "_jison_medium-cyan",
  JISONLEX: "_jison_medium-cyan",
  "JISON LEX": "_jison_medium-cyan",
  "JISON-LEX": "_jison_medium-cyan",
  JISON_LEX: "_jison_medium-cyan",
  jlex: "_code_medium-red",
  jolie: "_jolie_dark-pink",
  Jolie: "_jolie_dark-pink",
  JOLIE: "_jolie_dark-pink",
  joy: "_code_medium-yellow",
  jq: "_sql_medium-blue",
  jruby: "_ruby_medium-red",
  JRUBY: "_ruby_medium-red",
  js: "_js_medium-yellow",
  JS: "_js_medium-yellow",
  json: "_json_dark-blue",
  JSON: "_json_dark-blue",
  json5: "_json5_dark-yellow",
  JSON5: "_json5_dark-yellow",
  jsonc: "_json_dark-blue",
  jsoniq: "_sql_medium-blue",
  JSONiq: "_sql_medium-blue",
  JSONIQ: "_sql_medium-blue",
  jsonl: "_database_dark-orange",
  JSONL: "_database_dark-orange",
  jsonnet: "_jsonnet_dark-blue",
  Jsonnet: "_jsonnet_dark-blue",
  JSONNET: "_jsonnet_dark-blue",
  jsont: "_squarespace_dark-purple",
  "json-t": "_squarespace_dark-purple",
  json_t: "_squarespace_dark-purple",
  JSONT: "_squarespace_dark-purple",
  "JSON-T": "_squarespace_dark-purple",
  JSON_T: "_squarespace_dark-purple",
  jsontemplate: "_squarespace_dark-purple",
  "json template": "_squarespace_dark-purple",
  "json-template": "_squarespace_dark-purple",
  json_template: "_squarespace_dark-purple",
  JSONTEMPLATE: "_squarespace_dark-purple",
  "JSON TEMPLATE": "_squarespace_dark-purple",
  "JSON-TEMPLATE": "_squarespace_dark-purple",
  JSON_TEMPLATE: "_squarespace_dark-purple",
  jsonwithcomments: "_json_dark-blue",
  "jsonwith comments": "_json_dark-blue",
  "jsonwith-comments": "_json_dark-blue",
  jsonwith_comments: "_json_dark-blue",
  "json withcomments": "_json_dark-blue",
  "json with comments": "_json_dark-blue",
  "json with-comments": "_json_dark-blue",
  "json with_comments": "_json_dark-blue",
  "json-withcomments": "_json_dark-blue",
  "json-with comments": "_json_dark-blue",
  "json-with-comments": "_json_dark-blue",
  "json-with_comments": "_json_dark-blue",
  json_withcomments: "_json_dark-blue",
  "json_with comments": "_json_dark-blue",
  "json_with-comments": "_json_dark-blue",
  json_with_comments: "_json_dark-blue",
  JSONwithComments: "_json_dark-blue",
  "JSONwith Comments": "_json_dark-blue",
  "JSONwith-Comments": "_json_dark-blue",
  JSONwith_Comments: "_json_dark-blue",
  "JSON withComments": "_json_dark-blue",
  "JSON with Comments": "_json_dark-blue",
  "JSON with-Comments": "_json_dark-blue",
  "JSON with_Comments": "_json_dark-blue",
  "JSON-withComments": "_json_dark-blue",
  "JSON-with Comments": "_json_dark-blue",
  "JSON-with-Comments": "_json_dark-blue",
  "JSON-with_Comments": "_json_dark-blue",
  JSON_withComments: "_json_dark-blue",
  "JSON_with Comments": "_json_dark-blue",
  "JSON_with-Comments": "_json_dark-blue",
  JSON_with_Comments: "_json_dark-blue",
  JSONWITHCOMMENTS: "_json_dark-blue",
  "JSONWITH COMMENTS": "_json_dark-blue",
  "JSONWITH-COMMENTS": "_json_dark-blue",
  JSONWITH_COMMENTS: "_json_dark-blue",
  "JSON WITHCOMMENTS": "_json_dark-blue",
  "JSON WITH COMMENTS": "_json_dark-blue",
  "JSON WITH-COMMENTS": "_json_dark-blue",
  "JSON WITH_COMMENTS": "_json_dark-blue",
  "JSON-WITHCOMMENTS": "_json_dark-blue",
  "JSON-WITH COMMENTS": "_json_dark-blue",
  "JSON-WITH-COMMENTS": "_json_dark-blue",
  "JSON-WITH_COMMENTS": "_json_dark-blue",
  JSON_WITHCOMMENTS: "_json_dark-blue",
  "JSON_WITH COMMENTS": "_json_dark-blue",
  "JSON_WITH-COMMENTS": "_json_dark-blue",
  JSON_WITH_COMMENTS: "_json_dark-blue",
  jsp: "_html5_medium-purple",
  jsx: "_jsx_medium-blue",
  JSX: "_jsx_medium-blue",
  julia: "_julia_medium-purple",
  Julia: "_julia_medium-purple",
  JULIA: "_julia_medium-purple",
  juliamarkdown: "_markdown_medium-purple",
  "julia markdown": "_markdown_medium-purple",
  "julia-markdown": "_markdown_medium-purple",
  julia_markdown: "_markdown_medium-purple",
  juliamd: "_markdown_medium-purple",
  "julia md": "_markdown_medium-purple",
  "julia-md": "_markdown_medium-purple",
  julia_md: "_markdown_medium-purple",
  juniperjunos: "_junos_medium-cyan",
  "juniper junos": "_junos_medium-cyan",
  "juniper-junos": "_junos_medium-cyan",
  juniper_junos: "_junos_medium-cyan",
  JuniperJunos: "_junos_medium-cyan",
  "Juniper Junos": "_junos_medium-cyan",
  "Juniper-Junos": "_junos_medium-cyan",
  Juniper_Junos: "_junos_medium-cyan",
  JUNIPERJUNOS: "_junos_medium-cyan",
  "JUNIPER JUNOS": "_junos_medium-cyan",
  "JUNIPER-JUNOS": "_junos_medium-cyan",
  JUNIPER_JUNOS: "_junos_medium-cyan",
  juniperjunosconfig: "_junos_medium-cyan",
  "juniperjunos config": "_junos_medium-cyan",
  "juniperjunos-config": "_junos_medium-cyan",
  juniperjunos_config: "_junos_medium-cyan",
  "juniper junosconfig": "_junos_medium-cyan",
  "juniper junos config": "_junos_medium-cyan",
  "juniper junos-config": "_junos_medium-cyan",
  "juniper junos_config": "_junos_medium-cyan",
  "juniper-junosconfig": "_junos_medium-cyan",
  "juniper-junos config": "_junos_medium-cyan",
  "juniper-junos-config": "_junos_medium-cyan",
  "juniper-junos_config": "_junos_medium-cyan",
  juniper_junosconfig: "_junos_medium-cyan",
  "juniper_junos config": "_junos_medium-cyan",
  "juniper_junos-config": "_junos_medium-cyan",
  juniper_junos_config: "_junos_medium-cyan",
  JuniperJunosConfig: "_junos_medium-cyan",
  "JuniperJunos Config": "_junos_medium-cyan",
  "JuniperJunos-Config": "_junos_medium-cyan",
  JuniperJunos_Config: "_junos_medium-cyan",
  "Juniper JunosConfig": "_junos_medium-cyan",
  "Juniper Junos Config": "_junos_medium-cyan",
  "Juniper Junos-Config": "_junos_medium-cyan",
  "Juniper Junos_Config": "_junos_medium-cyan",
  "Juniper-JunosConfig": "_junos_medium-cyan",
  "Juniper-Junos Config": "_junos_medium-cyan",
  "Juniper-Junos-Config": "_junos_medium-cyan",
  "Juniper-Junos_Config": "_junos_medium-cyan",
  Juniper_JunosConfig: "_junos_medium-cyan",
  "Juniper_Junos Config": "_junos_medium-cyan",
  "Juniper_Junos-Config": "_junos_medium-cyan",
  Juniper_Junos_Config: "_junos_medium-cyan",
  JUNIPERJUNOSCONFIG: "_junos_medium-cyan",
  "JUNIPERJUNOS CONFIG": "_junos_medium-cyan",
  "JUNIPERJUNOS-CONFIG": "_junos_medium-cyan",
  JUNIPERJUNOS_CONFIG: "_junos_medium-cyan",
  "JUNIPER JUNOSCONFIG": "_junos_medium-cyan",
  "JUNIPER JUNOS CONFIG": "_junos_medium-cyan",
  "JUNIPER JUNOS-CONFIG": "_junos_medium-cyan",
  "JUNIPER JUNOS_CONFIG": "_junos_medium-cyan",
  "JUNIPER-JUNOSCONFIG": "_junos_medium-cyan",
  "JUNIPER-JUNOS CONFIG": "_junos_medium-cyan",
  "JUNIPER-JUNOS-CONFIG": "_junos_medium-cyan",
  "JUNIPER-JUNOS_CONFIG": "_junos_medium-cyan",
  JUNIPER_JUNOSCONFIG: "_junos_medium-cyan",
  "JUNIPER_JUNOS CONFIG": "_junos_medium-cyan",
  "JUNIPER_JUNOS-CONFIG": "_junos_medium-cyan",
  JUNIPER_JUNOS_CONFIG: "_junos_medium-cyan",
  junos: "_junos_medium-blue",
  Junos: "_junos_medium-blue",
  JUNOS: "_junos_medium-blue",
  jupyternotebook: "_jupyter_dark-orange",
  JupyterNotebook: "_jupyter_dark-orange",
  JUPYTERNOTEBOOK: "_jupyter_dark-orange",
  just: "_checklist_medium-cyan",
  JUST: "_checklist_medium-cyan",
  k4: "_kx_dark-purple",
  "kdb+": "_kx_medium-blue",
  "Kdb+": "_kx_medium-blue",
  "KDB+": "_kx_medium-blue",
  kerboscript: "_kos_dark-green",
  "kerbo script": "_kos_dark-green",
  "kerbo-script": "_kos_dark-green",
  kerbo_script: "_kos_dark-green",
  KerboScript: "_kos_dark-green",
  "Kerbo Script": "_kos_dark-green",
  "Kerbo-Script": "_kos_dark-green",
  Kerbo_Script: "_kos_dark-green",
  KERBOSCRIPT: "_kos_dark-green",
  "KERBO SCRIPT": "_kos_dark-green",
  "KERBO-SCRIPT": "_kos_dark-green",
  KERBO_SCRIPT: "_kos_dark-green",
  kicad: "_kicad_dark-green",
  "ki cad": "_kicad_dark-green",
  "ki-cad": "_kicad_dark-green",
  ki_cad: "_kicad_dark-green",
  KiCad: "_kicad_dark-green",
  "Ki Cad": "_kicad_dark-green",
  "Ki-Cad": "_kicad_dark-green",
  Ki_Cad: "_kicad_dark-green",
  KICAD: "_kicad_dark-green",
  "KI CAD": "_kicad_dark-green",
  "KI-CAD": "_kicad_dark-green",
  KI_CAD: "_kicad_dark-green",
  kivy: "_kivy_dark-maroon",
  Kivy: "_kivy_dark-maroon",
  KIVY: "_kivy_dark-maroon",
  kotlin: "_kotlin_dark-blue",
  Kotlin: "_kotlin_dark-blue",
  KOTLIN: "_kotlin_dark-blue",
  kql: "_kusto_medium-blue",
  KQL: "_kusto_medium-blue",
  krl: "_krl_medium-blue",
  KRL: "_krl_medium-blue",
  "ksh-shell": "_terminal_dark-yellow",
  kusto: "_kusto_medium-blue",
  Kusto: "_kusto_medium-blue",
  KUSTO: "_kusto_medium-blue",
  "kusto explorer": "_kusto_medium-blue",
  "Kusto Explorer": "_kusto_medium-blue",
  "KUSTO EXPLORER": "_kusto_medium-blue",
  "kusto querylanguage": "_kusto_medium-blue",
  "kusto query language": "_kusto_medium-blue",
  "kusto query-language": "_kusto_medium-blue",
  "kusto query_language": "_kusto_medium-blue",
  "Kusto QueryLanguage": "_kusto_medium-blue",
  "Kusto Query Language": "_kusto_medium-blue",
  "Kusto Query-Language": "_kusto_medium-blue",
  "Kusto Query_Language": "_kusto_medium-blue",
  "KUSTO QUERYLANGUAGE": "_kusto_medium-blue",
  "KUSTO QUERY LANGUAGE": "_kusto_medium-blue",
  "KUSTO QUERY-LANGUAGE": "_kusto_medium-blue",
  "KUSTO QUERY_LANGUAGE": "_kusto_medium-blue",
  kv: "_kivy_dark-maroon",
  "labelledbackus-naurform": "_bnf_dark-yellow",
  "labelledbackus-naur form": "_bnf_dark-yellow",
  "labelledbackus-naur-form": "_bnf_dark-yellow",
  "labelledbackus-naur_form": "_bnf_dark-yellow",
  "labelled backus-naurform": "_bnf_dark-yellow",
  "labelled backus-naur form": "_bnf_dark-yellow",
  "labelled backus-naur-form": "_bnf_dark-yellow",
  "labelled backus-naur_form": "_bnf_dark-yellow",
  "labelled-backus-naurform": "_bnf_dark-yellow",
  "labelled-backus-naur form": "_bnf_dark-yellow",
  "labelled-backus-naur-form": "_bnf_dark-yellow",
  "labelled-backus-naur_form": "_bnf_dark-yellow",
  "labelled_backus-naurform": "_bnf_dark-yellow",
  "labelled_backus-naur form": "_bnf_dark-yellow",
  "labelled_backus-naur-form": "_bnf_dark-yellow",
  "labelled_backus-naur_form": "_bnf_dark-yellow",
  "LabelledBackus-NaurForm": "_bnf_dark-yellow",
  "LabelledBackus-Naur Form": "_bnf_dark-yellow",
  "LabelledBackus-Naur-Form": "_bnf_dark-yellow",
  "LabelledBackus-Naur_Form": "_bnf_dark-yellow",
  "Labelled Backus-NaurForm": "_bnf_dark-yellow",
  "Labelled Backus-Naur Form": "_bnf_dark-yellow",
  "Labelled Backus-Naur-Form": "_bnf_dark-yellow",
  "Labelled Backus-Naur_Form": "_bnf_dark-yellow",
  "Labelled-Backus-NaurForm": "_bnf_dark-yellow",
  "Labelled-Backus-Naur Form": "_bnf_dark-yellow",
  "Labelled-Backus-Naur-Form": "_bnf_dark-yellow",
  "Labelled-Backus-Naur_Form": "_bnf_dark-yellow",
  "Labelled_Backus-NaurForm": "_bnf_dark-yellow",
  "Labelled_Backus-Naur Form": "_bnf_dark-yellow",
  "Labelled_Backus-Naur-Form": "_bnf_dark-yellow",
  "Labelled_Backus-Naur_Form": "_bnf_dark-yellow",
  "LABELLEDBACKUS-NAURFORM": "_bnf_dark-yellow",
  "LABELLEDBACKUS-NAUR FORM": "_bnf_dark-yellow",
  "LABELLEDBACKUS-NAUR-FORM": "_bnf_dark-yellow",
  "LABELLEDBACKUS-NAUR_FORM": "_bnf_dark-yellow",
  "LABELLED BACKUS-NAURFORM": "_bnf_dark-yellow",
  "LABELLED BACKUS-NAUR FORM": "_bnf_dark-yellow",
  "LABELLED BACKUS-NAUR-FORM": "_bnf_dark-yellow",
  "LABELLED BACKUS-NAUR_FORM": "_bnf_dark-yellow",
  "LABELLED-BACKUS-NAURFORM": "_bnf_dark-yellow",
  "LABELLED-BACKUS-NAUR FORM": "_bnf_dark-yellow",
  "LABELLED-BACKUS-NAUR-FORM": "_bnf_dark-yellow",
  "LABELLED-BACKUS-NAUR_FORM": "_bnf_dark-yellow",
  "LABELLED_BACKUS-NAURFORM": "_bnf_dark-yellow",
  "LABELLED_BACKUS-NAUR FORM": "_bnf_dark-yellow",
  "LABELLED_BACKUS-NAUR-FORM": "_bnf_dark-yellow",
  "LABELLED_BACKUS-NAUR_FORM": "_bnf_dark-yellow",
  laravel: "_laravel_medium-orange",
  Laravel: "_laravel_medium-orange",
  LARAVEL: "_laravel_medium-orange",
  lark: "_lark_dark-blue",
  Lark: "_lark_dark-blue",
  LARK: "_lark_dark-blue",
  lasso: "_lasso_dark-blue",
  Lasso: "_lasso_dark-blue",
  LASSO: "_lasso_dark-blue",
  lassoscript: "_lasso_dark-blue",
  LASSOSCRIPT: "_lasso_dark-blue",
  latex: "_tex_medium-blue",
  LATEX: "_tex_medium-blue",
  "latex.haskell": "_haskell_dark-blue",
  latino: "_latino_medium-blue",
  Latino: "_latino_medium-blue",
  LATINO: "_latino_medium-blue",
  latte: "_html5_medium-red",
  LATTE: "_html5_medium-red",
  lbnf: "_bnf_dark-yellow",
  lc3: "_asm_medium-green",
  "lc-3": "_asm_medium-green",
  lcov: "_text_dark-blue",
  LCOV: "_text_dark-blue",
  lean: "_lean_dark-purple",
  Lean: "_lean_dark-purple",
  LEAN: "_lean_dark-purple",
  ledger: "_graph_medium-blue",
  Ledger: "_graph_medium-blue",
  LEDGER: "_graph_medium-blue",
  less: "_css3_dark-blue",
  LESS: "_css3_dark-blue",
  lessc: "_css3_dark-blue",
  LESSC: "_css3_dark-blue",
  lesscss: "_css3_dark-blue",
  "less-css": "_css3_dark-blue",
  LESSCSS: "_css3_dark-blue",
  "LESS-CSS": "_css3_dark-blue",
  lex: "_lex_medium-cyan",
  Lex: "_lex_medium-cyan",
  LEX: "_lex_medium-cyan",
  lhaskell: "_haskell_dark-blue",
  LHASKELL: "_haskell_dark-blue",
  lhs: "_haskell_dark-blue",
  LHS: "_haskell_dark-blue",
  lilypond: "_lilypond_medium-green",
  LilyPond: "_lilypond_medium-green",
  LILYPOND: "_lilypond_medium-green",
  lisp: "_lisp_medium-red",
  Lisp: "_lisp_medium-red",
  LISP: "_lisp_medium-red",
  litcoffee: "_coffee_light-maroon",
  LITCOFFEE: "_coffee_light-maroon",
  literatehaskell: "_haskell_dark-blue",
  LiterateHaskell: "_haskell_dark-blue",
  LITERATEHASKELL: "_haskell_dark-blue",
  livescript: "_ls_medium-blue",
  "live-script": "_ls_medium-blue",
  "live script": "_ls_medium-blue",
  live_script: "_ls_medium-blue",
  LiveScript: "_ls_medium-blue",
  "Live Script": "_ls_medium-blue",
  "Live-Script": "_ls_medium-blue",
  Live_Script: "_ls_medium-blue",
  LIVESCRIPT: "_ls_medium-blue",
  "LIVE SCRIPT": "_ls_medium-blue",
  "LIVE-SCRIPT": "_ls_medium-blue",
  LIVE_SCRIPT: "_ls_medium-blue",
  llvm: "_llvm_dark-green",
  LLVM: "_llvm_dark-green",
  logos: "_mobile_dark-blue",
  Logos: "_mobile_dark-blue",
  LOGOS: "_mobile_dark-blue",
  logtalk: "_logtalk_medium-red",
  Logtalk: "_logtalk_medium-red",
  LOGTALK: "_logtalk_medium-red",
  lol: "_lolcode_dark-red",
  lolcode: "_lolcode_dark-red",
  LOLCODE: "_lolcode_dark-red",
  ls: "_ls_medium-blue",
  LS: "_ls_medium-blue",
  lsl: "_lsl_medium-cyan",
  LSL: "_lsl_medium-cyan",
  "lst-cpu12": "_asm-m68k_medium-blue",
  "lst-cpu 12": "_asm-m68k_medium-blue",
  "lst-cpu-12": "_asm-m68k_medium-blue",
  "lst-cpu_12": "_asm-m68k_medium-blue",
  "LST-CPU12": "_asm-m68k_medium-blue",
  lua: "_lua_medium-blue",
  Lua: "_lua_medium-blue",
  LUA: "_lua_medium-blue",
  m2: "_macaulay2_light-cyan",
  M2: "_macaulay2_light-cyan",
  m4: "_code_medium-red",
  M4: "_code_medium-red",
  macaulay2: "_macaulay2_light-cyan",
  Macaulay2: "_macaulay2_light-cyan",
  MACAULAY2: "_macaulay2_light-cyan",
  macruby: "_ruby_medium-red",
  MACRUBY: "_ruby_medium-red",
  mail: "_mail_medium-blue",
  "-mail": "_at_medium-red",
  Mail: "_mail_medium-blue",
  MAIL: "_mail_medium-blue",
  "-MAIL": "_at_medium-red",
  make: "_checklist_medium-yellow",
  MAKE: "_checklist_medium-yellow",
  makefile: "_checklist_medium-cyan",
  Makefile: "_checklist_medium-cyan",
  MAKEFILE: "_checklist_medium-cyan",
  mako: "_mako_dark-blue",
  Mako: "_mako_dark-blue",
  MAKO: "_mako_dark-blue",
  man: "_manpage_dark-green",
  MAN: "_manpage_dark-green",
  mandoc: "_manpage_dark-green",
  MANDOC: "_manpage_dark-green",
  manpage: "_manpage_dark-green",
  "man page": "_manpage_dark-green",
  "man-page": "_manpage_dark-green",
  man_page: "_manpage_dark-green",
  MANPAGE: "_manpage_dark-green",
  "MAN PAGE": "_manpage_dark-green",
  "MAN-PAGE": "_manpage_dark-green",
  MAN_PAGE: "_manpage_dark-green",
  map: "_sourcemap_medium-orange",
  Map: "_sourcemap_medium-orange",
  MAP: "_sourcemap_medium-orange",
  mapbox: "_mapbox_medium-cyan",
  Mapbox: "_mapbox_medium-cyan",
  MAPBOX: "_mapbox_medium-cyan",
  markdown: "_markdown_medium-purple",
  Markdown: "_markdown_medium-purple",
  MARKDOWN: "_markdown_medium-purple",
  marko: "_marko_medium-blue",
  Marko: "_marko_medium-blue",
  MARKO: "_marko_medium-blue",
  masm: "_asm-intel_dark-blue",
  MASM: "_asm-intel_dark-blue",
  mata: "_stata_dark-cyan",
  MATA: "_stata_dark-cyan",
  mathematica: "_mathematica_dark-red",
  Mathematica: "_mathematica_dark-red",
  MATHEMATICA: "_mathematica_dark-red",
  matlab: "_matlab_medium-yellow",
  MATLAB: "_matlab_medium-yellow",
  mawk: "_awk_medium-maroon",
  MAWK: "_awk_medium-maroon",
  maxscript: "_maxscript_dark-blue",
  MAXScript: "_maxscript_dark-blue",
  MAXSCRIPT: "_maxscript_dark-blue",
  mbox: "_at_medium-red",
  MBOX: "_at_medium-red",
  md: "_markdown_medium-blue",
  mdoc: "_manpage_dark-green",
  MDOC: "_manpage_dark-green",
  mediawiki: "_mediawiki_medium-yellow",
  MediaWiki: "_mediawiki_medium-yellow",
  MEDIAWIKI: "_mediawiki_medium-yellow",
  menhir: "_ocaml_dark-yellow",
  MENHIR: "_ocaml_dark-yellow",
  mercury: "_mercury_medium-cyan",
  Mercury: "_mercury_medium-cyan",
  MERCURY: "_mercury_medium-cyan",
  mermaid: "_mermaid_medium-blue",
  Mermaid: "_mermaid_medium-blue",
  MERMAID: "_mermaid_medium-blue",
  meson: "_meson_medium-green",
  Meson: "_meson_medium-green",
  MESON: "_meson_medium-green",
  metafont: "_metapost_dark-green",
  METAFONT: "_metapost_dark-green",
  metapost: "_metapost_dark-green",
  "meta post": "_metapost_dark-green",
  "meta-post": "_metapost_dark-green",
  meta_post: "_metapost_dark-green",
  MetaPost: "_metapost_dark-green",
  "Meta Post": "_metapost_dark-green",
  "Meta-Post": "_metapost_dark-green",
  Meta_Post: "_metapost_dark-green",
  METAPOST: "_metapost_dark-green",
  "META POST": "_metapost_dark-green",
  "META-POST": "_metapost_dark-green",
  META_POST: "_metapost_dark-green",
  mf: "_checklist_medium-yellow",
  MF: "_checklist_medium-yellow",
  mhtml: "_html5_medium-blue",
  MHTML: "_html5_medium-blue",
  minecraft: "_minecraft_dark-green",
  Minecraft: "_minecraft_dark-green",
  MINECRAFT: "_minecraft_dark-green",
  minizinc: "_minizinc_medium-blue",
  "mini zinc": "_minizinc_medium-blue",
  "mini-zinc": "_minizinc_medium-blue",
  mini_zinc: "_minizinc_medium-blue",
  MiniZinc: "_minizinc_medium-blue",
  "Mini Zinc": "_minizinc_medium-blue",
  "Mini-Zinc": "_minizinc_medium-blue",
  Mini_Zinc: "_minizinc_medium-blue",
  MINIZINC: "_minizinc_medium-blue",
  "MINI ZINC": "_minizinc_medium-blue",
  "MINI-ZINC": "_minizinc_medium-blue",
  MINI_ZINC: "_minizinc_medium-blue",
  mint: "_mint_medium-green",
  Mint: "_mint_medium-green",
  MINT: "_mint_medium-green",
  mirah: "_mirah_medium-blue",
  Mirah: "_mirah_medium-blue",
  MIRAH: "_mirah_medium-blue",
  miranda: "_miranda_medium-red",
  Miranda: "_miranda_medium-red",
  MIRANDA: "_miranda_medium-red",
  mirc: "_mirc_medium-red",
  mIRC: "_mirc_medium-red",
  MIRC: "_mirc_medium-red",
  mjml: "_mjml_medium-red",
  MJML: "_mjml_medium-red",
  mma: "_mathematica_dark-red",
  MMA: "_mathematica_dark-red",
  modelica: "_modelica_medium-red",
  Modelica: "_modelica_medium-red",
  MODELICA: "_modelica_medium-red",
  modelicascript: "_modelica_medium-red",
  modula2: "_modula2_medium-blue",
  "modula-2": "_modula2_medium-blue",
  "Modula-2": "_modula2_medium-blue",
  "MODULA-2": "_modula2_medium-blue",
  modula3: "_modula3_medium-blue",
  "modula-3": "_modula3_medium-red",
  "Modula-3": "_modula3_medium-red",
  "MODULA-3": "_modula3_medium-red",
  monkey: "_monkey_medium-maroon",
  Monkey: "_monkey_medium-maroon",
  MONKEY: "_monkey_medium-maroon",
  moon: "_moon_medium-yellow",
  moonscript: "_moon_medium-yellow",
  "moon script": "_moon_medium-yellow",
  "moon-script": "_moon_medium-yellow",
  moon_script: "_moon_medium-yellow",
  MoonScript: "_moon_medium-yellow",
  "Moon Script": "_moon_medium-yellow",
  "Moon-Script": "_moon_medium-yellow",
  Moon_Script: "_moon_medium-yellow",
  MOONSCRIPT: "_moon_medium-yellow",
  "MOON SCRIPT": "_moon_medium-yellow",
  "MOON-SCRIPT": "_moon_medium-yellow",
  MOON_SCRIPT: "_moon_medium-yellow",
  mq4: "_code_dark-blue",
  mq5: "_code_dark-blue",
  mrc: "_mirc_medium-red",
  mss: "_mapbox_medium-cyan",
  muse: "_amusewiki_dark-red",
  Muse: "_amusewiki_dark-red",
  MUSE: "_amusewiki_dark-red",
  mustache: "_mustache_medium-orange",
  Mustache: "_mustache_medium-orange",
  MUSTACHE: "_mustache_medium-orange",
  mzn: "_minizinc_medium-blue",
  MZN: "_minizinc_medium-blue",
  nano: "_nano_medium-blue",
  Nano: "_nano_medium-blue",
  NANO: "_nano_medium-blue",
  nanorc: "_nano_medium-blue",
  nant: "_nant_medium-orange",
  NAnt: "_nant_medium-orange",
  NANT: "_nant_medium-orange",
  "nant-build": "_nant_medium-orange",
  nasl: "_nessus_medium-cyan",
  nawk: "_awk_medium-green",
  NAWK: "_awk_medium-green",
  "ncarcommandlanguage(ncl)": "_earth_medium-green",
  "ncarcommandlanguage (ncl)": "_earth_medium-green",
  "ncarcommandlanguage-(ncl)": "_earth_medium-green",
  "ncarcommandlanguage_(ncl)": "_earth_medium-green",
  "ncarcommand language(ncl)": "_earth_medium-green",
  "ncarcommand language (ncl)": "_earth_medium-green",
  "ncarcommand language-(ncl)": "_earth_medium-green",
  "ncarcommand language_(ncl)": "_earth_medium-green",
  "ncarcommand-language(ncl)": "_earth_medium-green",
  "ncarcommand-language (ncl)": "_earth_medium-green",
  "ncarcommand-language-(ncl)": "_earth_medium-green",
  "ncarcommand-language_(ncl)": "_earth_medium-green",
  "ncarcommand_language(ncl)": "_earth_medium-green",
  "ncarcommand_language (ncl)": "_earth_medium-green",
  "ncarcommand_language-(ncl)": "_earth_medium-green",
  "ncarcommand_language_(ncl)": "_earth_medium-green",
  "ncar commandlanguage(ncl)": "_earth_medium-green",
  "ncar commandlanguage (ncl)": "_earth_medium-green",
  "ncar commandlanguage-(ncl)": "_earth_medium-green",
  "ncar commandlanguage_(ncl)": "_earth_medium-green",
  "ncar command language(ncl)": "_earth_medium-green",
  "ncar command language (ncl)": "_earth_medium-green",
  "ncar command language-(ncl)": "_earth_medium-green",
  "ncar command language_(ncl)": "_earth_medium-green",
  "ncar command-language(ncl)": "_earth_medium-green",
  "ncar command-language (ncl)": "_earth_medium-green",
  "ncar command-language-(ncl)": "_earth_medium-green",
  "ncar command-language_(ncl)": "_earth_medium-green",
  "ncar command_language(ncl)": "_earth_medium-green",
  "ncar command_language (ncl)": "_earth_medium-green",
  "ncar command_language-(ncl)": "_earth_medium-green",
  "ncar command_language_(ncl)": "_earth_medium-green",
  "ncar-commandlanguage(ncl)": "_earth_medium-green",
  "ncar-commandlanguage (ncl)": "_earth_medium-green",
  "ncar-commandlanguage-(ncl)": "_earth_medium-green",
  "ncar-commandlanguage_(ncl)": "_earth_medium-green",
  "ncar-command language(ncl)": "_earth_medium-green",
  "ncar-command language (ncl)": "_earth_medium-green",
  "ncar-command language-(ncl)": "_earth_medium-green",
  "ncar-command language_(ncl)": "_earth_medium-green",
  "ncar-command-language(ncl)": "_earth_medium-green",
  "ncar-command-language (ncl)": "_earth_medium-green",
  "ncar-command-language-(ncl)": "_earth_medium-green",
  "ncar-command-language_(ncl)": "_earth_medium-green",
  "ncar-command_language(ncl)": "_earth_medium-green",
  "ncar-command_language (ncl)": "_earth_medium-green",
  "ncar-command_language-(ncl)": "_earth_medium-green",
  "ncar-command_language_(ncl)": "_earth_medium-green",
  "ncar_commandlanguage(ncl)": "_earth_medium-green",
  "ncar_commandlanguage (ncl)": "_earth_medium-green",
  "ncar_commandlanguage-(ncl)": "_earth_medium-green",
  "ncar_commandlanguage_(ncl)": "_earth_medium-green",
  "ncar_command language(ncl)": "_earth_medium-green",
  "ncar_command language (ncl)": "_earth_medium-green",
  "ncar_command language-(ncl)": "_earth_medium-green",
  "ncar_command language_(ncl)": "_earth_medium-green",
  "ncar_command-language(ncl)": "_earth_medium-green",
  "ncar_command-language (ncl)": "_earth_medium-green",
  "ncar_command-language-(ncl)": "_earth_medium-green",
  "ncar_command-language_(ncl)": "_earth_medium-green",
  "ncar_command_language(ncl)": "_earth_medium-green",
  "ncar_command_language (ncl)": "_earth_medium-green",
  "ncar_command_language-(ncl)": "_earth_medium-green",
  "ncar_command_language_(ncl)": "_earth_medium-green",
  "NCARCommandLanguage(NCL)": "_earth_medium-green",
  "NCARCommandLanguage (NCL)": "_earth_medium-green",
  "NCARCommandLanguage-(NCL)": "_earth_medium-green",
  "NCARCommandLanguage_(NCL)": "_earth_medium-green",
  "NCARCommand Language(NCL)": "_earth_medium-green",
  "NCARCommand Language (NCL)": "_earth_medium-green",
  "NCARCommand Language-(NCL)": "_earth_medium-green",
  "NCARCommand Language_(NCL)": "_earth_medium-green",
  "NCARCommand-Language(NCL)": "_earth_medium-green",
  "NCARCommand-Language (NCL)": "_earth_medium-green",
  "NCARCommand-Language-(NCL)": "_earth_medium-green",
  "NCARCommand-Language_(NCL)": "_earth_medium-green",
  "NCARCommand_Language(NCL)": "_earth_medium-green",
  "NCARCommand_Language (NCL)": "_earth_medium-green",
  "NCARCommand_Language-(NCL)": "_earth_medium-green",
  "NCARCommand_Language_(NCL)": "_earth_medium-green",
  "NCAR CommandLanguage(NCL)": "_earth_medium-green",
  "NCAR CommandLanguage (NCL)": "_earth_medium-green",
  "NCAR CommandLanguage-(NCL)": "_earth_medium-green",
  "NCAR CommandLanguage_(NCL)": "_earth_medium-green",
  "NCAR Command Language(NCL)": "_earth_medium-green",
  "NCAR Command Language (NCL)": "_earth_medium-green",
  "NCAR Command Language-(NCL)": "_earth_medium-green",
  "NCAR Command Language_(NCL)": "_earth_medium-green",
  "NCAR Command-Language(NCL)": "_earth_medium-green",
  "NCAR Command-Language (NCL)": "_earth_medium-green",
  "NCAR Command-Language-(NCL)": "_earth_medium-green",
  "NCAR Command-Language_(NCL)": "_earth_medium-green",
  "NCAR Command_Language(NCL)": "_earth_medium-green",
  "NCAR Command_Language (NCL)": "_earth_medium-green",
  "NCAR Command_Language-(NCL)": "_earth_medium-green",
  "NCAR Command_Language_(NCL)": "_earth_medium-green",
  "NCAR-CommandLanguage(NCL)": "_earth_medium-green",
  "NCAR-CommandLanguage (NCL)": "_earth_medium-green",
  "NCAR-CommandLanguage-(NCL)": "_earth_medium-green",
  "NCAR-CommandLanguage_(NCL)": "_earth_medium-green",
  "NCAR-Command Language(NCL)": "_earth_medium-green",
  "NCAR-Command Language (NCL)": "_earth_medium-green",
  "NCAR-Command Language-(NCL)": "_earth_medium-green",
  "NCAR-Command Language_(NCL)": "_earth_medium-green",
  "NCAR-Command-Language(NCL)": "_earth_medium-green",
  "NCAR-Command-Language (NCL)": "_earth_medium-green",
  "NCAR-Command-Language-(NCL)": "_earth_medium-green",
  "NCAR-Command-Language_(NCL)": "_earth_medium-green",
  "NCAR-Command_Language(NCL)": "_earth_medium-green",
  "NCAR-Command_Language (NCL)": "_earth_medium-green",
  "NCAR-Command_Language-(NCL)": "_earth_medium-green",
  "NCAR-Command_Language_(NCL)": "_earth_medium-green",
  "NCAR_CommandLanguage(NCL)": "_earth_medium-green",
  "NCAR_CommandLanguage (NCL)": "_earth_medium-green",
  "NCAR_CommandLanguage-(NCL)": "_earth_medium-green",
  "NCAR_CommandLanguage_(NCL)": "_earth_medium-green",
  "NCAR_Command Language(NCL)": "_earth_medium-green",
  "NCAR_Command Language (NCL)": "_earth_medium-green",
  "NCAR_Command Language-(NCL)": "_earth_medium-green",
  "NCAR_Command Language_(NCL)": "_earth_medium-green",
  "NCAR_Command-Language(NCL)": "_earth_medium-green",
  "NCAR_Command-Language (NCL)": "_earth_medium-green",
  "NCAR_Command-Language-(NCL)": "_earth_medium-green",
  "NCAR_Command-Language_(NCL)": "_earth_medium-green",
  "NCAR_Command_Language(NCL)": "_earth_medium-green",
  "NCAR_Command_Language (NCL)": "_earth_medium-green",
  "NCAR_Command_Language-(NCL)": "_earth_medium-green",
  "NCAR_Command_Language_(NCL)": "_earth_medium-green",
  "NCARCOMMANDLANGUAGE(NCL)": "_earth_medium-green",
  "NCARCOMMANDLANGUAGE (NCL)": "_earth_medium-green",
  "NCARCOMMANDLANGUAGE-(NCL)": "_earth_medium-green",
  "NCARCOMMANDLANGUAGE_(NCL)": "_earth_medium-green",
  "NCARCOMMAND LANGUAGE(NCL)": "_earth_medium-green",
  "NCARCOMMAND LANGUAGE (NCL)": "_earth_medium-green",
  "NCARCOMMAND LANGUAGE-(NCL)": "_earth_medium-green",
  "NCARCOMMAND LANGUAGE_(NCL)": "_earth_medium-green",
  "NCARCOMMAND-LANGUAGE(NCL)": "_earth_medium-green",
  "NCARCOMMAND-LANGUAGE (NCL)": "_earth_medium-green",
  "NCARCOMMAND-LANGUAGE-(NCL)": "_earth_medium-green",
  "NCARCOMMAND-LANGUAGE_(NCL)": "_earth_medium-green",
  "NCARCOMMAND_LANGUAGE(NCL)": "_earth_medium-green",
  "NCARCOMMAND_LANGUAGE (NCL)": "_earth_medium-green",
  "NCARCOMMAND_LANGUAGE-(NCL)": "_earth_medium-green",
  "NCARCOMMAND_LANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR COMMANDLANGUAGE(NCL)": "_earth_medium-green",
  "NCAR COMMANDLANGUAGE (NCL)": "_earth_medium-green",
  "NCAR COMMANDLANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR COMMANDLANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR COMMAND LANGUAGE(NCL)": "_earth_medium-green",
  "NCAR COMMAND LANGUAGE (NCL)": "_earth_medium-green",
  "NCAR COMMAND LANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR COMMAND LANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR COMMAND-LANGUAGE(NCL)": "_earth_medium-green",
  "NCAR COMMAND-LANGUAGE (NCL)": "_earth_medium-green",
  "NCAR COMMAND-LANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR COMMAND-LANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR COMMAND_LANGUAGE(NCL)": "_earth_medium-green",
  "NCAR COMMAND_LANGUAGE (NCL)": "_earth_medium-green",
  "NCAR COMMAND_LANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR COMMAND_LANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR-COMMANDLANGUAGE(NCL)": "_earth_medium-green",
  "NCAR-COMMANDLANGUAGE (NCL)": "_earth_medium-green",
  "NCAR-COMMANDLANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR-COMMANDLANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR-COMMAND LANGUAGE(NCL)": "_earth_medium-green",
  "NCAR-COMMAND LANGUAGE (NCL)": "_earth_medium-green",
  "NCAR-COMMAND LANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR-COMMAND LANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR-COMMAND-LANGUAGE(NCL)": "_earth_medium-green",
  "NCAR-COMMAND-LANGUAGE (NCL)": "_earth_medium-green",
  "NCAR-COMMAND-LANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR-COMMAND-LANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR-COMMAND_LANGUAGE(NCL)": "_earth_medium-green",
  "NCAR-COMMAND_LANGUAGE (NCL)": "_earth_medium-green",
  "NCAR-COMMAND_LANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR-COMMAND_LANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR_COMMANDLANGUAGE(NCL)": "_earth_medium-green",
  "NCAR_COMMANDLANGUAGE (NCL)": "_earth_medium-green",
  "NCAR_COMMANDLANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR_COMMANDLANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR_COMMAND LANGUAGE(NCL)": "_earth_medium-green",
  "NCAR_COMMAND LANGUAGE (NCL)": "_earth_medium-green",
  "NCAR_COMMAND LANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR_COMMAND LANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR_COMMAND-LANGUAGE(NCL)": "_earth_medium-green",
  "NCAR_COMMAND-LANGUAGE (NCL)": "_earth_medium-green",
  "NCAR_COMMAND-LANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR_COMMAND-LANGUAGE_(NCL)": "_earth_medium-green",
  "NCAR_COMMAND_LANGUAGE(NCL)": "_earth_medium-green",
  "NCAR_COMMAND_LANGUAGE (NCL)": "_earth_medium-green",
  "NCAR_COMMAND_LANGUAGE-(NCL)": "_earth_medium-green",
  "NCAR_COMMAND_LANGUAGE_(NCL)": "_earth_medium-green",
  ncl: "_earth_medium-green",
  neko: "_neko_medium-orange",
  Neko: "_neko_medium-orange",
  NEKO: "_neko_medium-orange",
  neo4j: "_neo4j_medium-blue",
  Neo4J: "_neo4j_medium-blue",
  NEO4J: "_neo4j_medium-blue",
  neon: "_neon_medium-grey",
  NEON: "_neon_medium-grey",
  neosnippet: "_database_medium-green",
  nessus: "_nessus_medium-cyan",
  Nessus: "_nessus_medium-cyan",
  NESSUS: "_nessus_medium-cyan",
  newlisp: "_lisp_medium-red",
  NEWLISP: "_lisp_medium-red",
  nextflow: "_nextflow_medium-green",
  Nextflow: "_nextflow_medium-green",
  NEXTFLOW: "_nextflow_medium-green",
  nginx: "_nginx_medium-green",
  NGINX: "_nginx_medium-green",
  nginxconfigurationfile: "_nginx_medium-green",
  "nginxconfiguration file": "_nginx_medium-green",
  "nginxconfiguration-file": "_nginx_medium-green",
  nginxconfiguration_file: "_nginx_medium-green",
  "nginx configurationfile": "_nginx_medium-green",
  "nginx configuration file": "_nginx_medium-green",
  "nginx configuration-file": "_nginx_medium-green",
  "nginx configuration_file": "_nginx_medium-green",
  "nginx-configurationfile": "_nginx_medium-green",
  "nginx-configuration file": "_nginx_medium-green",
  "nginx-configuration-file": "_nginx_medium-green",
  "nginx-configuration_file": "_nginx_medium-green",
  nginx_configurationfile: "_nginx_medium-green",
  "nginx_configuration file": "_nginx_medium-green",
  "nginx_configuration-file": "_nginx_medium-green",
  nginx_configuration_file: "_nginx_medium-green",
  NGINXCONFIGURATIONFILE: "_nginx_medium-green",
  "NGINXCONFIGURATION FILE": "_nginx_medium-green",
  "NGINXCONFIGURATION-FILE": "_nginx_medium-green",
  NGINXCONFIGURATION_FILE: "_nginx_medium-green",
  "NGINX CONFIGURATIONFILE": "_nginx_medium-green",
  "NGINX CONFIGURATION FILE": "_nginx_medium-green",
  "NGINX CONFIGURATION-FILE": "_nginx_medium-green",
  "NGINX CONFIGURATION_FILE": "_nginx_medium-green",
  "NGINX-CONFIGURATIONFILE": "_nginx_medium-green",
  "NGINX-CONFIGURATION FILE": "_nginx_medium-green",
  "NGINX-CONFIGURATION-FILE": "_nginx_medium-green",
  "NGINX-CONFIGURATION_FILE": "_nginx_medium-green",
  NGINX_CONFIGURATIONFILE: "_nginx_medium-green",
  "NGINX_CONFIGURATION FILE": "_nginx_medium-green",
  "NGINX_CONFIGURATION-FILE": "_nginx_medium-green",
  NGINX_CONFIGURATION_FILE: "_nginx_medium-green",
  nickle: "_nickle_medium-grey",
  Nickle: "_nickle_medium-grey",
  NICKLE: "_nickle_medium-grey",
  nim: "_nimrod_medium-green",
  Nim: "_nimrod_medium-green",
  NIM: "_nimrod_medium-green",
  nimrod: "_nimrod_medium-green",
  Nimrod: "_nimrod_medium-green",
  NIMROD: "_nimrod_medium-green",
  ninja: "_shuriken_medium-blue",
  Ninja: "_shuriken_medium-blue",
  NINJA: "_shuriken_medium-blue",
  nit: "_nit_dark-green",
  Nit: "_nit_dark-green",
  NIT: "_nit_dark-green",
  nix: "_nix_medium-cyan",
  Nix: "_nix_medium-cyan",
  NIX: "_nix_medium-cyan",
  nixos: "_nix_medium-cyan",
  NIXOS: "_nix_medium-cyan",
  nmap: "_nmap_dark-blue",
  Nmap: "_nmap_dark-blue",
  NMAP: "_nmap_dark-blue",
  node: "_js_medium-yellow",
  NODE: "_js_medium-yellow",
  noon: "_noon_dark-grey",
  Noon: "_noon_dark-grey",
  NOON: "_noon_dark-grey",
  npm: "_npm_medium-red",
  NPM: "_npm_medium-red",
  nroff: "_manpage_dark-green",
  NROFF: "_manpage_dark-green",
  nsis: "_nsis_medium-purple",
  NSIS: "_nsis_medium-purple",
  nu: "_recycle_light-green",
  Nu: "_recycle_light-green",
  NU: "_recycle_light-green",
  nush: "_recycle_light-green",
  NUSH: "_recycle_light-green",
  nut: "_squirrel_medium-maroon",
  nvim: "_vim_medium-green",
  NVim: "_vim_medium-green",
  NVIM: "_vim_medium-green",
  nwscript: "_nwscript_dark-blue",
  NWScript: "_nwscript_dark-blue",
  NWSCRIPT: "_nwscript_dark-blue",
  nxc: "_nxc_medium-orange",
  NXC: "_nxc_medium-orange",
  o3: "_ogone_medium-grey",
  oberon: "_oberon_medium-purple",
  Oberon: "_oberon_medium-purple",
  OBERON: "_oberon_medium-purple",
  objc: "_objc_medium-blue",
  "obj c": "_objc_medium-blue",
  "obj-c": "_objc_medium-blue",
  obj_c: "_objc_medium-blue",
  "objc++": "_objc_dark-blue",
  "obj c++": "_objc_dark-blue",
  "obj-c++": "_objc_dark-blue",
  "obj_c++": "_objc_dark-blue",
  ObjC: "_objc_medium-blue",
  "Obj C": "_objc_medium-blue",
  "Obj-C": "_objc_medium-blue",
  Obj_C: "_objc_medium-blue",
  "ObjC++": "_objc_dark-blue",
  "Obj C++": "_objc_dark-blue",
  "Obj-C++": "_objc_dark-blue",
  "Obj_C++": "_objc_dark-blue",
  OBJC: "_objc_medium-blue",
  "OBJ C": "_objc_medium-blue",
  "OBJ-C": "_objc_medium-blue",
  OBJ_C: "_objc_medium-blue",
  "OBJC++": "_objc_dark-blue",
  "OBJ C++": "_objc_dark-blue",
  "OBJ-C++": "_objc_dark-blue",
  "OBJ_C++": "_objc_dark-blue",
  objcpp: "_objc_dark-blue",
  "obj cpp": "_objc_dark-blue",
  "obj-cpp": "_objc_dark-blue",
  obj_cpp: "_objc_dark-blue",
  ObjCpp: "_objc_dark-blue",
  "Obj Cpp": "_objc_dark-blue",
  "Obj-Cpp": "_objc_dark-blue",
  Obj_Cpp: "_objc_dark-blue",
  OBJCPP: "_objc_dark-blue",
  "OBJ CPP": "_objc_dark-blue",
  "OBJ-CPP": "_objc_dark-blue",
  OBJ_CPP: "_objc_dark-blue",
  objectivec: "_objc_medium-blue",
  "objective c": "_objc_medium-blue",
  "objective-c": "_objc_dark-blue",
  objective_c: "_objc_medium-blue",
  "objectivec++": "_objc_dark-blue",
  "objective c++": "_objc_dark-blue",
  "objective-c++": "_objc_dark-blue",
  "objective_c++": "_objc_dark-blue",
  ObjectiveC: "_objc_medium-blue",
  "Objective C": "_objc_medium-blue",
  "Objective-C": "_objc_dark-blue",
  Objective_C: "_objc_medium-blue",
  "ObjectiveC++": "_objc_dark-blue",
  "Objective C++": "_objc_dark-blue",
  "Objective-C++": "_objc_dark-blue",
  "Objective_C++": "_objc_dark-blue",
  OBJECTIVEC: "_objc_medium-blue",
  "OBJECTIVE C": "_objc_medium-blue",
  "OBJECTIVE-C": "_objc_dark-blue",
  OBJECTIVE_C: "_objc_medium-blue",
  "OBJECTIVEC++": "_objc_dark-blue",
  "OBJECTIVE C++": "_objc_dark-blue",
  "OBJECTIVE-C++": "_objc_dark-blue",
  "OBJECTIVE_C++": "_objc_dark-blue",
  objectivecpp: "_objc_dark-blue",
  "objective cpp": "_objc_dark-blue",
  "objective-cpp": "_objc_dark-blue",
  objective_cpp: "_objc_dark-blue",
  ObjectiveCpp: "_objc_dark-blue",
  "Objective Cpp": "_objc_dark-blue",
  "Objective-Cpp": "_objc_dark-blue",
  Objective_Cpp: "_objc_dark-blue",
  OBJECTIVECPP: "_objc_dark-blue",
  "OBJECTIVE CPP": "_objc_dark-blue",
  "OBJECTIVE-CPP": "_objc_dark-blue",
  OBJECTIVE_CPP: "_objc_dark-blue",
  "objective-j": "_objj_dark-orange",
  objectivej: "_objj_dark-orange",
  "Objective-J": "_objj_dark-orange",
  ObjectiveJ: "_objj_dark-orange",
  "OBJECTIVE-J": "_objj_dark-orange",
  OBJECTIVEJ: "_objj_dark-orange",
  objj: "_objj_dark-orange",
  "obj-j": "_objj_dark-orange",
  ObjJ: "_objj_dark-orange",
  "Obj-J": "_objj_dark-orange",
  OBJJ: "_objj_dark-orange",
  "OBJ-J": "_objj_dark-orange",
  ocaml: "_ocaml_dark-yellow",
  OCaml: "_ocaml_dark-yellow",
  OCAML: "_ocaml_dark-yellow",
  ocamllex: "_ocaml_dark-green",
  OCAMLLEX: "_ocaml_dark-green",
  octave: "_octave_medium-orange",
  Octave: "_octave_medium-orange",
  OCTAVE: "_octave_medium-orange",
  odin: "_odin_medium-blue",
  Odin: "_odin_medium-blue",
  ODIN: "_odin_medium-blue",
  ogone: "_ogone_medium-grey",
  Ogone: "_ogone_medium-grey",
  OGONE: "_ogone_medium-grey",
  ohm: "_code_dark-yellow",
  ooc: "_ooc_medium-green",
  OOC: "_ooc_medium-green",
  opa: "_opa_medium-blue",
  Opa: "_opa_medium-blue",
  OPA: "_opa_medium-blue",
  openbsd: "_openbsd_medium-orange",
  OpenBSD: "_openbsd_medium-orange",
  OPENBSD: "_openbsd_medium-orange",
  "openbsd-pkg.contents": "_openbsd_medium-orange",
  "openbsd-pkg.desc": "_openbsd_medium-orange",
  opencl: "_opencl_medium-red",
  OpenCL: "_opencl_medium-red",
  OPENCL: "_opencl_medium-red",
  openedge: "_progress_medium-green",
  OPENEDGE: "_progress_medium-green",
  openedgeabl: "_progress_medium-green",
  "openedge abl": "_progress_medium-green",
  "openedge-abl": "_progress_medium-green",
  openedge_abl: "_progress_medium-green",
  OpenEdgeABL: "_progress_medium-green",
  "OpenEdge ABL": "_progress_medium-green",
  "OpenEdge-ABL": "_progress_medium-green",
  OpenEdge_ABL: "_progress_medium-green",
  OPENEDGEABL: "_progress_medium-green",
  "OPENEDGE ABL": "_progress_medium-green",
  "OPENEDGE-ABL": "_progress_medium-green",
  OPENEDGE_ABL: "_progress_medium-green",
  openglshadinglanguage: "_opengl_dark-cyan",
  "openglshading language": "_opengl_dark-cyan",
  "openglshading-language": "_opengl_dark-cyan",
  openglshading_language: "_opengl_dark-cyan",
  "opengl shadinglanguage": "_opengl_dark-cyan",
  "opengl shading language": "_opengl_dark-cyan",
  "opengl shading-language": "_opengl_dark-cyan",
  "opengl shading_language": "_opengl_dark-cyan",
  "opengl-shadinglanguage": "_opengl_dark-cyan",
  "opengl-shading language": "_opengl_dark-cyan",
  "opengl-shading-language": "_opengl_dark-cyan",
  "opengl-shading_language": "_opengl_dark-cyan",
  opengl_shadinglanguage: "_opengl_dark-cyan",
  "opengl_shading language": "_opengl_dark-cyan",
  "opengl_shading-language": "_opengl_dark-cyan",
  opengl_shading_language: "_opengl_dark-cyan",
  OpenGLShadingLanguage: "_opengl_dark-cyan",
  "OpenGLShading Language": "_opengl_dark-cyan",
  "OpenGLShading-Language": "_opengl_dark-cyan",
  OpenGLShading_Language: "_opengl_dark-cyan",
  "OpenGL ShadingLanguage": "_opengl_dark-cyan",
  "OpenGL Shading Language": "_opengl_dark-cyan",
  "OpenGL Shading-Language": "_opengl_dark-cyan",
  "OpenGL Shading_Language": "_opengl_dark-cyan",
  "OpenGL-ShadingLanguage": "_opengl_dark-cyan",
  "OpenGL-Shading Language": "_opengl_dark-cyan",
  "OpenGL-Shading-Language": "_opengl_dark-cyan",
  "OpenGL-Shading_Language": "_opengl_dark-cyan",
  OpenGL_ShadingLanguage: "_opengl_dark-cyan",
  "OpenGL_Shading Language": "_opengl_dark-cyan",
  "OpenGL_Shading-Language": "_opengl_dark-cyan",
  OpenGL_Shading_Language: "_opengl_dark-cyan",
  OPENGLSHADINGLANGUAGE: "_opengl_dark-cyan",
  "OPENGLSHADING LANGUAGE": "_opengl_dark-cyan",
  "OPENGLSHADING-LANGUAGE": "_opengl_dark-cyan",
  OPENGLSHADING_LANGUAGE: "_opengl_dark-cyan",
  "OPENGL SHADINGLANGUAGE": "_opengl_dark-cyan",
  "OPENGL SHADING LANGUAGE": "_opengl_dark-cyan",
  "OPENGL SHADING-LANGUAGE": "_opengl_dark-cyan",
  "OPENGL SHADING_LANGUAGE": "_opengl_dark-cyan",
  "OPENGL-SHADINGLANGUAGE": "_opengl_dark-cyan",
  "OPENGL-SHADING LANGUAGE": "_opengl_dark-cyan",
  "OPENGL-SHADING-LANGUAGE": "_opengl_dark-cyan",
  "OPENGL-SHADING_LANGUAGE": "_opengl_dark-cyan",
  OPENGL_SHADINGLANGUAGE: "_opengl_dark-cyan",
  "OPENGL_SHADING LANGUAGE": "_opengl_dark-cyan",
  "OPENGL_SHADING-LANGUAGE": "_opengl_dark-cyan",
  OPENGL_SHADING_LANGUAGE: "_opengl_dark-cyan",
  openpolicyagent: "_openpolicy_medium-cyan",
  "openpolicy agent": "_openpolicy_medium-cyan",
  "openpolicy-agent": "_openpolicy_medium-cyan",
  openpolicy_agent: "_openpolicy_medium-cyan",
  "open policyagent": "_openpolicy_medium-cyan",
  "open policy agent": "_openpolicy_medium-cyan",
  "open policy-agent": "_openpolicy_medium-cyan",
  "open policy_agent": "_openpolicy_medium-cyan",
  "open-policyagent": "_openpolicy_medium-cyan",
  "open-policy agent": "_openpolicy_medium-cyan",
  "open-policy-agent": "_openpolicy_medium-cyan",
  "open-policy_agent": "_openpolicy_medium-cyan",
  open_policyagent: "_openpolicy_medium-cyan",
  "open_policy agent": "_openpolicy_medium-cyan",
  "open_policy-agent": "_openpolicy_medium-cyan",
  open_policy_agent: "_openpolicy_medium-cyan",
  OpenPolicyAgent: "_openpolicy_medium-cyan",
  "OpenPolicy Agent": "_openpolicy_medium-cyan",
  "OpenPolicy-Agent": "_openpolicy_medium-cyan",
  OpenPolicy_Agent: "_openpolicy_medium-cyan",
  "Open PolicyAgent": "_openpolicy_medium-cyan",
  "Open Policy Agent": "_openpolicy_medium-cyan",
  "Open Policy-Agent": "_openpolicy_medium-cyan",
  "Open Policy_Agent": "_openpolicy_medium-cyan",
  "Open-PolicyAgent": "_openpolicy_medium-cyan",
  "Open-Policy Agent": "_openpolicy_medium-cyan",
  "Open-Policy-Agent": "_openpolicy_medium-cyan",
  "Open-Policy_Agent": "_openpolicy_medium-cyan",
  Open_PolicyAgent: "_openpolicy_medium-cyan",
  "Open_Policy Agent": "_openpolicy_medium-cyan",
  "Open_Policy-Agent": "_openpolicy_medium-cyan",
  Open_Policy_Agent: "_openpolicy_medium-cyan",
  OPENPOLICYAGENT: "_openpolicy_medium-cyan",
  "OPENPOLICY AGENT": "_openpolicy_medium-cyan",
  "OPENPOLICY-AGENT": "_openpolicy_medium-cyan",
  OPENPOLICY_AGENT: "_openpolicy_medium-cyan",
  "OPEN POLICYAGENT": "_openpolicy_medium-cyan",
  "OPEN POLICY AGENT": "_openpolicy_medium-cyan",
  "OPEN POLICY-AGENT": "_openpolicy_medium-cyan",
  "OPEN POLICY_AGENT": "_openpolicy_medium-cyan",
  "OPEN-POLICYAGENT": "_openpolicy_medium-cyan",
  "OPEN-POLICY AGENT": "_openpolicy_medium-cyan",
  "OPEN-POLICY-AGENT": "_openpolicy_medium-cyan",
  "OPEN-POLICY_AGENT": "_openpolicy_medium-cyan",
  OPEN_POLICYAGENT: "_openpolicy_medium-cyan",
  "OPEN_POLICY AGENT": "_openpolicy_medium-cyan",
  "OPEN_POLICY-AGENT": "_openpolicy_medium-cyan",
  OPEN_POLICY_AGENT: "_openpolicy_medium-cyan",
  openqasm: "_qiskit_dark-blue",
  OpenQASM: "_qiskit_dark-blue",
  OPENQASM: "_qiskit_dark-blue",
  openscad: "_scad_medium-orange",
  OpenSCAD: "_scad_medium-orange",
  OPENSCAD: "_scad_medium-orange",
  opentype: "_database_light-blue",
  openvms: "_openvms_medium-orange",
  OpenVMS: "_openvms_medium-orange",
  OPENVMS: "_openvms_medium-orange",
  osascript: "_apple_medium-purple",
  OSASCRIPT: "_apple_medium-purple",
  ox: "_ox_medium-cyan",
  Ox: "_ox_medium-cyan",
  OX: "_ox_medium-cyan",
  oxygene: "_oxygene_medium-cyan",
  Oxygene: "_oxygene_medium-cyan",
  OXYGENE: "_oxygene_medium-cyan",
  oz: "_oz_medium-yellow",
  Oz: "_oz_medium-yellow",
  OZ: "_oz_medium-yellow",
  p4: "_p4_dark-purple",
  P4: "_p4_dark-purple",
  p8: "_pico8_medium-red",
  paket: "_package_medium-blue",
  Paket: "_package_medium-blue",
  PAKET: "_package_medium-blue",
  pan: "_pan_medium-red",
  Pan: "_pan_medium-red",
  PAN: "_pan_medium-red",
  pandoc: "_markdown_medium-blue",
  Pandoc: "_markdown_medium-blue",
  PANDOC: "_markdown_medium-blue",
  papyrus: "_papyrus_medium-green",
  Papyrus: "_papyrus_medium-green",
  PAPYRUS: "_papyrus_medium-green",
  "papyrus-assembly": "_papyrus_medium-green",
  "papyrus.skyrim": "_papyrus_medium-green",
  parrot: "_parrot_dark-blue",
  Parrot: "_parrot_dark-blue",
  PARROT: "_parrot_dark-blue",
  "parrot.pasm": "_parrot_dark-green",
  "parrot.pir": "_parrot_dark-blue",
  pascal: "_pascal_medium-purple",
  Pascal: "_pascal_medium-purple",
  PASCAL: "_pascal_medium-purple",
  pasm: "_parrot_dark-green",
  PASM: "_parrot_dark-green",
  pawn: "_pawn_medium-orange",
  PAWN: "_pawn_medium-orange",
  "pcb.board": "_kicad_dark-blue",
  "pcb.schematic": "_kicad_dark-green",
  pegcoffee: "_peg_medium-maroon",
  PEGCOFFEE: "_peg_medium-maroon",
  pegjs: "_peg_medium-maroon",
  "peg js": "_peg_medium-maroon",
  "peg-js": "_peg_medium-maroon",
  peg_js: "_peg_medium-maroon",
  PegJS: "_peg_medium-maroon",
  "Peg JS": "_peg_medium-maroon",
  "Peg-JS": "_peg_medium-maroon",
  Peg_JS: "_peg_medium-maroon",
  PEGJS: "_peg_medium-maroon",
  "PEG JS": "_peg_medium-maroon",
  "PEG-JS": "_peg_medium-maroon",
  PEG_JS: "_peg_medium-maroon",
  pep8: "_python_medium-orange",
  PEP8: "_python_medium-orange",
  perl: "_perl_medium-blue",
  Perl: "_perl_medium-blue",
  PERL: "_perl_medium-blue",
  perl6: "_perl6_medium-purple",
  Perl6: "_perl6_medium-purple",
  PERL6: "_perl6_medium-purple",
  perl6fe: "_perl6_medium-purple",
  pfaedit: "_ff_medium-orange",
  PFAEDIT: "_ff_medium-orange",
  pfm: "_markdown_medium-blue",
  pgf: "_tex_medium-purple",
  PGF: "_tex_medium-purple",
  phalcon: "_phalcon_medium-cyan",
  Phalcon: "_phalcon_medium-cyan",
  PHALCON: "_phalcon_medium-cyan",
  php: "_php_dark-blue",
  PHP: "_php_dark-blue",
  "php.blade": "_laravel_medium-orange",
  pic: "_manpage_dark-green",
  PIC: "_manpage_dark-green",
  pico8: "_pico8_medium-red",
  "pico 8": "_pico8_medium-red",
  "pico-8": "_pico8_medium-red",
  pico_8: "_pico8_medium-red",
  PICO8: "_pico8_medium-red",
  "PICO 8": "_pico8_medium-red",
  "PICO-8": "_pico8_medium-red",
  PICO_8: "_pico8_medium-red",
  pikchr: "_manpage_dark-green",
  PIKCHR: "_manpage_dark-green",
  pine: "_pinescript_medium-green",
  pinescript: "_pinescript_medium-green",
  "pine script": "_pinescript_medium-green",
  "pine-script": "_pinescript_medium-green",
  pine_script: "_pinescript_medium-green",
  PineScript: "_pinescript_medium-green",
  "Pine Script": "_pinescript_medium-green",
  "Pine-Script": "_pinescript_medium-green",
  Pine_Script: "_pinescript_medium-green",
  PINESCRIPT: "_pinescript_medium-green",
  "PINE SCRIPT": "_pinescript_medium-green",
  "PINE-SCRIPT": "_pinescript_medium-green",
  PINE_SCRIPT: "_pinescript_medium-green",
  pir: "_parrot_dark-blue",
  PIR: "_parrot_dark-blue",
  pl6: "_perl6_medium-purple",
  PL6: "_perl6_medium-purple",
  plain: "_text_medium-blue",
  plaintext: "_text_medium-blue",
  "plain text": "_text_medium-blue",
  "plain-text": "_text_medium-blue",
  plain_text: "_text_medium-blue",
  plist: "_code_dark-cyan",
  plsql: "_sql_medium-red",
  PLSQL: "_sql_medium-red",
  "plsql.oracle": "_sql_medium-red",
  pogoscript: "_pogo_medium-orange",
  "pogo script": "_pogo_medium-orange",
  "pogo-script": "_pogo_medium-orange",
  pogo_script: "_pogo_medium-orange",
  PogoScript: "_pogo_medium-orange",
  "Pogo Script": "_pogo_medium-orange",
  "Pogo-Script": "_pogo_medium-orange",
  Pogo_Script: "_pogo_medium-orange",
  POGOSCRIPT: "_pogo_medium-orange",
  "POGO SCRIPT": "_pogo_medium-orange",
  "POGO-SCRIPT": "_pogo_medium-orange",
  POGO_SCRIPT: "_pogo_medium-orange",
  pony: "_pony_light-maroon",
  Pony: "_pony_light-maroon",
  PONY: "_pony_light-maroon",
  posh: "_powershell_medium-blue",
  POSH: "_powershell_medium-blue",
  postcss: "_postcss_dark-pink",
  "post css": "_postcss_dark-pink",
  "post-css": "_postcss_dark-pink",
  post_css: "_postcss_dark-pink",
  PostCSS: "_postcss_dark-pink",
  "Post CSS": "_postcss_dark-pink",
  "Post-CSS": "_postcss_dark-pink",
  Post_CSS: "_postcss_dark-pink",
  POSTCSS: "_postcss_dark-pink",
  "POST CSS": "_postcss_dark-pink",
  "POST-CSS": "_postcss_dark-pink",
  POST_CSS: "_postcss_dark-pink",
  postscr: "_postscript_medium-red",
  POSTSCR: "_postscript_medium-red",
  postscript: "_postscript_medium-red",
  "post script": "_postscript_medium-red",
  "post-script": "_postscript_medium-red",
  post_script: "_postscript_medium-red",
  PostScript: "_postscript_medium-red",
  "Post Script": "_postscript_medium-red",
  "Post-Script": "_postscript_medium-red",
  Post_Script: "_postscript_medium-red",
  POSTSCRIPT: "_postscript_medium-red",
  "POST SCRIPT": "_postscript_medium-red",
  "POST-SCRIPT": "_postscript_medium-red",
  POST_SCRIPT: "_postscript_medium-red",
  powershell: "_powershell_medium-blue",
  "power shell": "_powershell_medium-blue",
  "power-shell": "_powershell_medium-blue",
  power_shell: "_powershell_medium-blue",
  PowerShell: "_powershell_medium-blue",
  "Power Shell": "_powershell_medium-blue",
  "Power-Shell": "_powershell_medium-blue",
  Power_Shell: "_powershell_medium-blue",
  POWERSHELL: "_powershell_medium-blue",
  "POWER SHELL": "_powershell_medium-blue",
  "POWER-SHELL": "_powershell_medium-blue",
  POWER_SHELL: "_powershell_medium-blue",
  printer: "_print_medium-orange",
  Printer: "_print_medium-orange",
  PRINTER: "_print_medium-orange",
  processing: "_processing_dark-blue",
  Processing: "_processing_dark-blue",
  PROCESSING: "_processing_dark-blue",
  progress: "_progress_medium-green",
  PROGRESS: "_progress_medium-green",
  prolog: "_prolog_medium-blue",
  Prolog: "_prolog_medium-blue",
  PROLOG: "_prolog_medium-blue",
  propellerspin: "_propeller_medium-orange",
  "propeller spin": "_propeller_medium-orange",
  "propeller-spin": "_propeller_medium-orange",
  propeller_spin: "_propeller_medium-orange",
  PropellerSpin: "_propeller_medium-orange",
  "Propeller Spin": "_propeller_medium-orange",
  "Propeller-Spin": "_propeller_medium-orange",
  Propeller_Spin: "_propeller_medium-orange",
  PROPELLERSPIN: "_propeller_medium-orange",
  "PROPELLER SPIN": "_propeller_medium-orange",
  "PROPELLER-SPIN": "_propeller_medium-orange",
  PROPELLER_SPIN: "_propeller_medium-orange",
  properties: "_config_medium-purple",
  protobuf: "_database_dark-cyan",
  PROTOBUF: "_database_dark-cyan",
  protobuftext: "_database_dark-cyan",
  PROTOBUFTEXT: "_database_dark-cyan",
  protocolbuffer: "_database_dark-cyan",
  ProtocolBuffer: "_database_dark-cyan",
  PROTOCOLBUFFER: "_database_dark-cyan",
  protocolbuffers: "_database_dark-cyan",
  ProtocolBuffers: "_database_dark-cyan",
  PROTOCOLBUFFERS: "_database_dark-cyan",
  protocolbufferstext: "_database_dark-cyan",
  ProtocolBufferstext: "_database_dark-cyan",
  PROTOCOLBUFFERSTEXT: "_database_dark-cyan",
  protocolbuffertext: "_database_dark-cyan",
  ProtocolBuffertext: "_database_dark-cyan",
  PROTOCOLBUFFERTEXT: "_database_dark-cyan",
  pug: "_pug_medium-red",
  Pug: "_pug_medium-red",
  PUG: "_pug_medium-red",
  puppet: "_puppet_medium-purple",
  Puppet: "_puppet_medium-purple",
  PUPPET: "_puppet_medium-purple",
  pure: "_pure_medium-grey",
  Pure: "_pure_medium-grey",
  PURE: "_pure_medium-grey",
  purebasic: "_purebasic_medium-red",
  PureBasic: "_purebasic_medium-red",
  PUREBASIC: "_purebasic_medium-red",
  purescript: "_purescript_dark-purple",
  "pure script": "_purescript_dark-purple",
  "pure-script": "_purescript_dark-purple",
  pure_script: "_purescript_dark-purple",
  PureScript: "_purescript_dark-purple",
  "Pure Script": "_purescript_dark-purple",
  "Pure-Script": "_purescript_dark-purple",
  Pure_Script: "_purescript_dark-purple",
  PURESCRIPT: "_purescript_dark-purple",
  "PURE SCRIPT": "_purescript_dark-purple",
  "PURE-SCRIPT": "_purescript_dark-purple",
  PURE_SCRIPT: "_purescript_dark-purple",
  pwn: "_pawn_medium-orange",
  pyret: "_pyret_dark-red",
  Pyret: "_pyret_dark-red",
  PYRET: "_pyret_dark-red",
  pyrex: "_cython_medium-orange",
  PYREX: "_cython_medium-orange",
  python: "_python_medium-pink",
  Python: "_python_medium-pink",
  PYTHON: "_python_medium-pink",
  "python.traceback": "_database_medium-orange",
  "q#": "_qsharp_dark-purple",
  q: "_kx_medium-blue",
  "Q#": "_qsharp_dark-purple",
  qasm: "_qiskit_dark-blue",
  QASM: "_qiskit_dark-blue",
  "q/kdb+": "_kx_dark-purple",
  "Q/Kdb+": "_kx_dark-purple",
  "Q/KDB+": "_kx_dark-purple",
  qml: "_qt_medium-green",
  QML: "_qt_medium-green",
  qsharp: "_qsharp_dark-purple",
  QSHARP: "_qsharp_dark-purple",
  qt: "_qt_medium-green",
  QT: "_qt_medium-green",
  quake: "_modula3_medium-red",
  QUAKE: "_modula3_medium-red",
  r: "_r_medium-blue",
  R: "_r_medium-blue",
  racket: "_racket_dark-blue",
  Racket: "_racket_dark-blue",
  RACKET: "_racket_dark-blue",
  rake: "_ruby_medium-red",
  RAKE: "_ruby_medium-red",
  raku: "_perl6_medium-purple",
  Raku: "_perl6_medium-purple",
  RAKU: "_perl6_medium-purple",
  raml: "_raml_medium-cyan",
  RAML: "_raml_medium-cyan",
  rascal: "_rascal_medium-yellow",
  Rascal: "_rascal_medium-yellow",
  RASCAL: "_rascal_medium-yellow",
  razor: "_html5_medium-red",
  RAZOR: "_html5_medium-red",
  rb: "_ruby_medium-red",
  RB: "_ruby_medium-red",
  rbx: "_ruby_medium-red",
  RBX: "_ruby_medium-red",
  rdoc: "_rdoc_medium-red",
  RDoc: "_rdoc_medium-red",
  RDOC: "_rdoc_medium-red",
  readlineconfig: "_terminal_medium-red",
  "readline config": "_terminal_medium-red",
  "readline-config": "_terminal_medium-red",
  readline_config: "_terminal_medium-red",
  ReadlineConfig: "_terminal_medium-red",
  "Readline Config": "_terminal_medium-red",
  "Readline-Config": "_terminal_medium-red",
  Readline_Config: "_terminal_medium-red",
  READLINECONFIG: "_terminal_medium-red",
  "READLINE CONFIG": "_terminal_medium-red",
  "READLINE-CONFIG": "_terminal_medium-red",
  READLINE_CONFIG: "_terminal_medium-red",
  readme: "_book_medium-red",
  Readme: "_book_medium-red",
  README: "_book_medium-red",
  reason: "_reason_medium-red",
  Reason: "_reason_medium-red",
  REASON: "_reason_medium-red",
  rebol: "_rebol_dark-green",
  Rebol: "_rebol_dark-green",
  REBOL: "_rebol_dark-green",
  "record-jar": "_database_dark-blue",
  red: "_red_medium-red",
  Red: "_red_medium-red",
  RED: "_red_medium-red",
  "red/system": "_red_medium-red",
  "RED/SYSTEM": "_red_medium-red",
  regex: "_regex_medium-green",
  regexp: "_regex_medium-green",
  "reg exp": "_regex_medium-green",
  "reg-exp": "_regex_medium-green",
  reg_exp: "_regex_medium-green",
  RegExp: "_regex_medium-green",
  "Reg Exp": "_regex_medium-green",
  "Reg-Exp": "_regex_medium-green",
  Reg_Exp: "_regex_medium-green",
  REGEXP: "_regex_medium-green",
  "REG EXP": "_regex_medium-green",
  "REG-EXP": "_regex_medium-green",
  REG_EXP: "_regex_medium-green",
  rego: "_openpolicy_medium-cyan",
  renpy: "_python_medium-pink",
  "ren'py": "_python_medium-pink",
  RenPy: "_python_medium-pink",
  "Ren'Py": "_python_medium-pink",
  RENPY: "_python_medium-pink",
  "REN'PY": "_python_medium-pink",
  rescript: "_rescript_medium-red",
  "re script": "_rescript_medium-red",
  "re-script": "_rescript_medium-red",
  re_script: "_rescript_medium-red",
  ReScript: "_rescript_medium-red",
  "Re Script": "_rescript_medium-red",
  "Re-Script": "_rescript_medium-red",
  Re_Script: "_rescript_medium-red",
  RESCRIPT: "_rescript_medium-red",
  "RE SCRIPT": "_rescript_medium-red",
  "RE-SCRIPT": "_rescript_medium-red",
  RE_SCRIPT: "_rescript_medium-red",
  rest: "_rst_dark-blue",
  REST: "_rst_dark-blue",
  restql: "_restql_dark-blue",
  restQL: "_restql_dark-blue",
  RESTQL: "_restql_dark-blue",
  restructuredtext: "_rst_dark-blue",
  reStructuredText: "_rst_dark-blue",
  RESTRUCTUREDTEXT: "_rst_dark-blue",
  rexx: "_rexx_medium-red",
  REXX: "_rexx_medium-red",
  rhino: "_rhino_medium-green",
  RHINO: "_rhino_medium-green",
  rhino3d: "_rhino_medium-green",
  Rhino3D: "_rhino_medium-green",
  RHINO3D: "_rhino_medium-green",
  ring: "_ring_medium-purple",
  Ring: "_ring_medium-purple",
  RING: "_ring_medium-purple",
  riot: "_riot_medium-red",
  riotjs: "_riot_medium-red",
  "riot js": "_riot_medium-red",
  "riot-js": "_riot_medium-red",
  riot_js: "_riot_medium-red",
  RiotJS: "_riot_medium-red",
  "Riot JS": "_riot_medium-red",
  "Riot-JS": "_riot_medium-red",
  Riot_JS: "_riot_medium-red",
  RIOTJS: "_riot_medium-red",
  "RIOT JS": "_riot_medium-red",
  "RIOT-JS": "_riot_medium-red",
  RIOT_JS: "_riot_medium-red",
  rlang: "_r_medium-blue",
  Rlang: "_r_medium-blue",
  RLANG: "_r_medium-blue",
  roff: "_manpage_dark-maroon",
  Roff: "_manpage_dark-maroon",
  ROFF: "_manpage_dark-maroon",
  rq: "_sparql_medium-blue",
  rscript: "_r_medium-blue",
  Rscript: "_r_medium-blue",
  RSCRIPT: "_r_medium-blue",
  rst: "_rst_dark-blue",
  RST: "_rst_dark-blue",
  rsync: "_rsync_dark-purple",
  RSYNC: "_rsync_dark-purple",
  rsyncd: "_rsync_dark-purple",
  "rsyncd-conf": "_rsync_dark-purple",
  "rsyncd-config": "_rsync_dark-purple",
  ruby: "_ruby_medium-red",
  Ruby: "_ruby_medium-red",
  RUBY: "_ruby_medium-red",
  runoff: "_manpage_dark-maroon",
  RUNOFF: "_manpage_dark-maroon",
  rust: "_rust_medium-maroon",
  Rust: "_rust_medium-maroon",
  RUST: "_rust_medium-maroon",
  rusthon: "_python_dark-blue",
  RUSTHON: "_python_dark-blue",
  rviz: "_model_dark-blue",
  RVIZ: "_model_dark-blue",
  sac: "_sac_medium-yellow",
  SAC: "_sac_medium-yellow",
  sage: "_sage_medium-blue",
  Sage: "_sage_medium-blue",
  SAGE: "_sage_medium-blue",
  salt: "_saltstack_medium-blue",
  Salt: "_saltstack_medium-blue",
  SALT: "_saltstack_medium-blue",
  saltstack: "_saltstack_medium-blue",
  "salt stack": "_saltstack_medium-blue",
  "salt-stack": "_saltstack_medium-blue",
  salt_stack: "_saltstack_medium-blue",
  SaltStack: "_saltstack_medium-blue",
  "Salt Stack": "_saltstack_medium-blue",
  "Salt-Stack": "_saltstack_medium-blue",
  Salt_Stack: "_saltstack_medium-blue",
  SALTSTACK: "_saltstack_medium-blue",
  "SALT STACK": "_saltstack_medium-blue",
  "SALT-STACK": "_saltstack_medium-blue",
  SALT_STACK: "_saltstack_medium-blue",
  saltstate: "_saltstack_medium-blue",
  SaltState: "_saltstack_medium-blue",
  SALTSTATE: "_saltstack_medium-blue",
  san: "_san_medium-cyan",
  San: "_san_medium-cyan",
  SAN: "_san_medium-cyan",
  sandbox: "_sandbox_dark-orange",
  Sandbox: "_sandbox_dark-orange",
  SANDBOX: "_sandbox_dark-orange",
  "sandbox profile language": "_sandbox_dark-orange",
  "Sandbox Profile Language": "_sandbox_dark-orange",
  "SANDBOX PROFILE LANGUAGE": "_sandbox_dark-orange",
  sas: "_sas_medium-blue",
  SAS: "_sas_medium-blue",
  sass: "_sass_dark-pink",
  Sass: "_sass_dark-pink",
  SASS: "_sass_dark-pink",
  sbpl: "_sandbox_dark-orange",
  SBPL: "_sandbox_dark-orange",
  scad: "_scad_medium-orange",
  scala: "_scala_medium-red",
  Scala: "_scala_medium-red",
  SCALA: "_scala_medium-red",
  scaml: "_html5_dark-red",
  SCAML: "_html5_dark-red",
  scheme: "_scheme_medium-yellow",
  Scheme: "_scheme_medium-yellow",
  SCHEME: "_scheme_medium-yellow",
  scilab: "_scilab_dark-purple",
  Scilab: "_scilab_dark-purple",
  SCILAB: "_scilab_dark-purple",
  scilla: "_scilla_medium-orange",
  Scilla: "_scilla_medium-orange",
  SCILLA: "_scilla_medium-orange",
  scribble: "_racket_dark-blue",
  SCRIBBLE: "_racket_dark-blue",
  scss: "_sass_light-pink",
  SCSS: "_sass_light-pink",
  sdbl: "_1c_dark-orange",
  sdl: "_config_medium-blue",
  sed: "_code_dark-green",
  self: "_self_dark-blue",
  Self: "_self_dark-blue",
  SELF: "_self_dark-blue",
  sfd: "_ff_dark-blue",
  sh: "_terminal_medium-purple",
  SH: "_terminal_medium-purple",
  shadercode: "_model_medium-cyan",
  shaderlab: "_unity3d_dark-blue",
  "shader lab": "_model_medium-cyan",
  "shader-lab": "_model_medium-cyan",
  shader_lab: "_model_medium-cyan",
  ShaderLab: "_model_medium-cyan",
  "Shader Lab": "_model_medium-cyan",
  "Shader-Lab": "_model_medium-cyan",
  Shader_Lab: "_model_medium-cyan",
  SHADERLAB: "_unity3d_dark-blue",
  "SHADER LAB": "_model_medium-cyan",
  "SHADER-LAB": "_model_medium-cyan",
  SHADER_LAB: "_model_medium-cyan",
  shconsole: "_terminal_medium-yellow",
  ShConsole: "_terminal_medium-yellow",
  SHCONSOLE: "_terminal_medium-yellow",
  shell: "_terminal_medium-purple",
  SHELL: "_terminal_medium-purple",
  shellcheck: "_shellcheck_light-maroon",
  "shell check": "_shellcheck_light-maroon",
  "shell-check": "_shellcheck_light-maroon",
  shell_check: "_shellcheck_light-maroon",
  ShellCheck: "_shellcheck_light-maroon",
  "Shell Check": "_shellcheck_light-maroon",
  "Shell-Check": "_shellcheck_light-maroon",
  Shell_Check: "_shellcheck_light-maroon",
  SHELLCHECK: "_shellcheck_light-maroon",
  "SHELL CHECK": "_shellcheck_light-maroon",
  "SHELL-CHECK": "_shellcheck_light-maroon",
  SHELL_CHECK: "_shellcheck_light-maroon",
  shellcheckrc: "_shellcheck_light-maroon",
  shellconsole: "_terminal_medium-yellow",
  ShellConsole: "_terminal_medium-yellow",
  SHELLCONSOLE: "_terminal_medium-yellow",
  shellscript: "_terminal_medium-purple",
  "shell-script": "_terminal_medium-purple",
  ShellScript: "_terminal_medium-purple",
  "Shell-Script": "_terminal_medium-purple",
  SHELLSCRIPT: "_terminal_medium-purple",
  "SHELL-SCRIPT": "_terminal_medium-purple",
  "shell-session": "_terminal_medium-yellow",
  shellsession: "_terminal_medium-yellow",
  ShellSession: "_terminal_medium-yellow",
  SHELLSESSION: "_terminal_medium-yellow",
  shsession: "_terminal_medium-yellow",
  ShSession: "_terminal_medium-yellow",
  SHSESSION: "_terminal_medium-yellow",
  sieve: "_filter_medium-red",
  Sieve: "_filter_medium-red",
  SIEVE: "_filter_medium-red",
  silverstripe: "_silverstripe_medium-blue",
  "silver stripe": "_silverstripe_medium-blue",
  "silver-stripe": "_silverstripe_medium-blue",
  silver_stripe: "_silverstripe_medium-blue",
  SilverStripe: "_silverstripe_medium-blue",
  "Silver Stripe": "_silverstripe_medium-blue",
  "Silver-Stripe": "_silverstripe_medium-blue",
  Silver_Stripe: "_silverstripe_medium-blue",
  SILVERSTRIPE: "_silverstripe_medium-blue",
  "SILVER STRIPE": "_silverstripe_medium-blue",
  "SILVER-STRIPE": "_silverstripe_medium-blue",
  SILVER_STRIPE: "_silverstripe_medium-blue",
  skipper: "_anchor_dark-blue",
  Skipper: "_anchor_dark-blue",
  SKIPPER: "_anchor_dark-blue",
  skylark: "_bazel_dark-blue",
  Skylark: "_bazel_dark-blue",
  SKYLARK: "_bazel_dark-blue",
  slash: "_slash_dark-blue",
  Slash: "_slash_dark-blue",
  SLASH: "_slash_dark-blue",
  slax: "_junos_medium-blue",
  SLAX: "_junos_medium-blue",
  slim: "_dashboard_medium-orange",
  SLIM: "_dashboard_medium-orange",
  smarty: "_smarty_medium-yellow",
  Smarty: "_smarty_medium-yellow",
  SMARTY: "_smarty_medium-yellow",
  smpl: "_code_medium-blue",
  SmPL: "_code_medium-blue",
  SMPL: "_code_medium-blue",
  smt: "_code_light-blue",
  snipmate: "_database_medium-green",
  snippet: "_database_medium-green",
  Snippet: "_database_medium-green",
  SNIPPET: "_database_medium-green",
  snippets: "_database_medium-green",
  snort: "_snort_light-red",
  Snort: "_snort_light-red",
  SNORT: "_snort_light-red",
  solidity: "_solidity_dark-cyan",
  Solidity: "_solidity_dark-cyan",
  SOLIDITY: "_solidity_dark-cyan",
  son: "_database_dark-green",
  SON: "_database_dark-green",
  sophia: "_sophia_dark-pink",
  Sophia: "_sophia_dark-pink",
  SOPHIA: "_sophia_dark-pink",
  sourcemod: "_clojure_medium-yellow",
  SOURCEMOD: "_clojure_medium-yellow",
  sourcepawn: "_clojure_medium-yellow",
  "source pawn": "_clojure_medium-yellow",
  "source-pawn": "_clojure_medium-yellow",
  source_pawn: "_clojure_medium-yellow",
  SourcePawn: "_clojure_medium-yellow",
  "Source Pawn": "_clojure_medium-yellow",
  "Source-Pawn": "_clojure_medium-yellow",
  Source_Pawn: "_clojure_medium-yellow",
  SOURCEPAWN: "_clojure_medium-yellow",
  "SOURCE PAWN": "_clojure_medium-yellow",
  "SOURCE-PAWN": "_clojure_medium-yellow",
  SOURCE_PAWN: "_clojure_medium-yellow",
  sp: "_clojure_medium-yellow",
  spacemacs: "_spacemacs_medium-purple",
  Spacemacs: "_spacemacs_medium-purple",
  SPACEMACS: "_spacemacs_medium-purple",
  spacengine: "_spacengine_medium-blue",
  Spacengine: "_spacengine_medium-blue",
  SPACENGINE: "_spacengine_medium-blue",
  sparql: "_sparql_medium-blue",
  SPARQL: "_sparql_medium-blue",
  spice: "_circuit-board_dark-green",
  spin: "_propeller_medium-orange",
  splus: "_r_medium-blue",
  SPLUS: "_r_medium-blue",
  spthy: "_code_medium-green",
  sqf: "_sqf_dark-maroon",
  SQF: "_sqf_dark-maroon",
  sql: "_sql_medium-orange",
  SQL: "_sql_medium-orange",
  squarespace: "_squarespace_dark-purple",
  "square space": "_squarespace_dark-purple",
  "square-space": "_squarespace_dark-purple",
  square_space: "_squarespace_dark-purple",
  SquareSpace: "_squarespace_dark-purple",
  "Square Space": "_squarespace_dark-purple",
  "Square-Space": "_squarespace_dark-purple",
  Square_Space: "_squarespace_dark-purple",
  SQUARESPACE: "_squarespace_dark-purple",
  "SQUARE SPACE": "_squarespace_dark-purple",
  "SQUARE-SPACE": "_squarespace_dark-purple",
  SQUARE_SPACE: "_squarespace_dark-purple",
  squirrel: "_squirrel_medium-maroon",
  Squirrel: "_squirrel_medium-maroon",
  SQUIRREL: "_squirrel_medium-maroon",
  srt: "_text_medium-purple",
  ss: "_silverstripe_medium-blue",
  sstemplate: "_silverstripe_medium-blue",
  stan: "_stan_medium-red",
  Stan: "_stan_medium-red",
  STAN: "_stan_medium-red",
  "standard bezier": "_postscript_medium-red",
  "Standard Bezier": "_postscript_medium-red",
  "STANDARD BEZIER": "_postscript_medium-red",
  starlark: "_bazel_dark-blue",
  Starlark: "_bazel_dark-blue",
  STARLARK: "_bazel_dark-blue",
  stata: "_stata_dark-cyan",
  Stata: "_stata_dark-cyan",
  STATA: "_stata_dark-cyan",
  stdbez: "_postscript_medium-red",
  "std bezier": "_postscript_medium-red",
  "Std Bezier": "_postscript_medium-red",
  "STD BEZIER": "_postscript_medium-red",
  stellaris: "_code_medium-blue",
  STELLARIS: "_code_medium-blue",
  stencil: "_stencil_medium-orange",
  Stencil: "_stencil_medium-orange",
  STENCIL: "_stencil_medium-orange",
  "step-file": "_model_medium-orange",
  strings: "_strings_medium-red",
  Strings: "_strings_medium-red",
  STRINGS: "_strings_medium-red",
  styled: "_nailpolish_medium-yellow",
  styledcomponent: "_nailpolish_medium-yellow",
  "styled component": "_nailpolish_medium-yellow",
  "styled-component": "_nailpolish_medium-yellow",
  styled_component: "_nailpolish_medium-yellow",
  StyledComponent: "_nailpolish_medium-yellow",
  "Styled Component": "_nailpolish_medium-yellow",
  "Styled-Component": "_nailpolish_medium-yellow",
  Styled_Component: "_nailpolish_medium-yellow",
  STYLEDCOMPONENT: "_nailpolish_medium-yellow",
  "STYLED COMPONENT": "_nailpolish_medium-yellow",
  "STYLED-COMPONENT": "_nailpolish_medium-yellow",
  STYLED_COMPONENT: "_nailpolish_medium-yellow",
  stylus: "_stylus_medium-green",
  Stylus: "_stylus_medium-green",
  STYLUS: "_stylus_medium-green",
  sugarcube: "_twine_medium-blue",
  "sugar cube": "_twine_medium-blue",
  "sugar-cube": "_twine_medium-blue",
  sugar_cube: "_twine_medium-blue",
  SugarCube: "_twine_medium-blue",
  "Sugar Cube": "_twine_medium-blue",
  "Sugar-Cube": "_twine_medium-blue",
  Sugar_Cube: "_twine_medium-blue",
  SUGARCUBE: "_twine_medium-blue",
  "SUGAR CUBE": "_twine_medium-blue",
  "SUGAR-CUBE": "_twine_medium-blue",
  SUGAR_CUBE: "_twine_medium-blue",
  sugarss: "_postcss_dark-pink",
  SUGARSS: "_postcss_dark-pink",
  supercollider: "_scd_medium-red",
  "super collider": "_scd_medium-red",
  "super-collider": "_scd_medium-red",
  super_collider: "_scd_medium-red",
  SuperCollider: "_scd_medium-red",
  "Super Collider": "_scd_medium-red",
  "Super-Collider": "_scd_medium-red",
  Super_Collider: "_scd_medium-red",
  SUPERCOLLIDER: "_scd_medium-red",
  "SUPER COLLIDER": "_scd_medium-red",
  "SUPER-COLLIDER": "_scd_medium-red",
  SUPER_COLLIDER: "_scd_medium-red",
  svelte: "_svelte_medium-orange",
  Svelte: "_svelte_medium-orange",
  SVELTE: "_svelte_medium-orange",
  svg: "_svg_dark-yellow",
  SVG: "_svg_dark-yellow",
  swift: "_swift_medium-orange",
  Swift: "_swift_medium-orange",
  SWIFT: "_swift_medium-orange",
  swig: "_html5_medium-green",
  tableofcontents: "_toc_medium-cyan",
  "tableof contents": "_toc_medium-cyan",
  "tableof-contents": "_toc_medium-cyan",
  tableof_contents: "_toc_medium-cyan",
  "table ofcontents": "_toc_medium-cyan",
  "table of contents": "_toc_medium-cyan",
  "table of-contents": "_toc_medium-cyan",
  "table of_contents": "_toc_medium-cyan",
  "table-ofcontents": "_toc_medium-cyan",
  "table-of contents": "_toc_medium-cyan",
  "table-of-contents": "_toc_medium-cyan",
  "table-of_contents": "_toc_medium-cyan",
  table_ofcontents: "_toc_medium-cyan",
  "table_of contents": "_toc_medium-cyan",
  "table_of-contents": "_toc_medium-cyan",
  table_of_contents: "_toc_medium-cyan",
  TableofContents: "_toc_medium-cyan",
  "Tableof Contents": "_toc_medium-cyan",
  "Tableof-Contents": "_toc_medium-cyan",
  Tableof_Contents: "_toc_medium-cyan",
  "Table ofContents": "_toc_medium-cyan",
  "Table of Contents": "_toc_medium-cyan",
  "Table of-Contents": "_toc_medium-cyan",
  "Table of_Contents": "_toc_medium-cyan",
  "Table-ofContents": "_toc_medium-cyan",
  "Table-of Contents": "_toc_medium-cyan",
  "Table-of-Contents": "_toc_medium-cyan",
  "Table-of_Contents": "_toc_medium-cyan",
  Table_ofContents: "_toc_medium-cyan",
  "Table_of Contents": "_toc_medium-cyan",
  "Table_of-Contents": "_toc_medium-cyan",
  Table_of_Contents: "_toc_medium-cyan",
  TABLEOFCONTENTS: "_toc_medium-cyan",
  "TABLEOF CONTENTS": "_toc_medium-cyan",
  "TABLEOF-CONTENTS": "_toc_medium-cyan",
  TABLEOF_CONTENTS: "_toc_medium-cyan",
  "TABLE OFCONTENTS": "_toc_medium-cyan",
  "TABLE OF CONTENTS": "_toc_medium-cyan",
  "TABLE OF-CONTENTS": "_toc_medium-cyan",
  "TABLE OF_CONTENTS": "_toc_medium-cyan",
  "TABLE-OFCONTENTS": "_toc_medium-cyan",
  "TABLE-OF CONTENTS": "_toc_medium-cyan",
  "TABLE-OF-CONTENTS": "_toc_medium-cyan",
  "TABLE-OF_CONTENTS": "_toc_medium-cyan",
  TABLE_OFCONTENTS: "_toc_medium-cyan",
  "TABLE_OF CONTENTS": "_toc_medium-cyan",
  "TABLE_OF-CONTENTS": "_toc_medium-cyan",
  TABLE_OF_CONTENTS: "_toc_medium-cyan",
  tamarin: "_code_medium-green",
  tasm: "_asm-intel_dark-blue",
  TASM: "_asm-intel_dark-blue",
  tcl: "_tcl_dark-orange",
  Tcl: "_tcl_dark-orange",
  TCL: "_tcl_dark-orange",
  tea: "_coffee_medium-orange",
  Tea: "_coffee_medium-orange",
  TEA: "_coffee_medium-orange",
  telegram: "_telegram_medium-blue",
  Telegram: "_telegram_medium-blue",
  TELEGRAM: "_telegram_medium-blue",
  terra: "_terraform_dark-purple",
  terraform: "_terraform_dark-purple",
  Terraform: "_terraform_dark-purple",
  TERRAFORM: "_terraform_dark-purple",
  tex: "_tex_medium-red",
  TeX: "_tex_medium-red",
  TEX: "_tex_medium-red",
  texinfo: "_tex_medium-red",
  TEXINFO: "_tex_medium-red",
  text: "_text_dark-blue",
  Text: "_text_dark-blue",
  TEXT: "_text_dark-blue",
  textile: "_textile_medium-orange",
  Textile: "_textile_medium-orange",
  TEXTILE: "_textile_medium-orange",
  textmate: "_textmate_medium-green",
  "text mate": "_textmate_medium-green",
  "text-mate": "_textmate_medium-green",
  text_mate: "_textmate_medium-green",
  TextMate: "_textmate_medium-green",
  "Text Mate": "_textmate_medium-green",
  "Text-Mate": "_textmate_medium-green",
  Text_Mate: "_textmate_medium-green",
  TEXTMATE: "_textmate_medium-green",
  "TEXT MATE": "_textmate_medium-green",
  "TEXT-MATE": "_textmate_medium-green",
  TEXT_MATE: "_textmate_medium-green",
  tikz: "_tex_medium-purple",
  TIKZ: "_tex_medium-purple",
  tl: "_telegram_medium-blue",
  tla: "_tla_medium-maroon",
  "tla+": "_tla_medium-maroon",
  "TLA+": "_tla_medium-maroon",
  tmcg: "_textmate_medium-green",
  "tm-properties": "_textmate_medium-pink",
  tmux: "_tmux_medium-green",
  TMUX: "_tmux_medium-green",
  toc: "_toc_medium-cyan",
  todotxt: "_checklist_medium-green",
  toml: "_toml_medium-green",
  TOML: "_toml_medium-green",
  tpic: "_manpage_dark-green",
  TPIC: "_manpage_dark-green",
  troff: "_manpage_dark-green",
  TROFF: "_manpage_dark-green",
  ts: "_ts_medium-blue",
  TS: "_ts_medium-blue",
  tss: "_css3_dark-red",
  TSS: "_css3_dark-red",
  tsx: "_tsx_light-blue",
  TSX: "_tsx_light-blue",
  "ttcn-3": "_ttcn3_medium-blue",
  "TTCN-3": "_ttcn3_medium-blue",
  turing: "_turing_medium-red",
  Turing: "_turing_medium-red",
  TURING: "_turing_medium-red",
  turtle: "_database_medium-cyan",
  tw: "_twine_medium-blue",
  twig: "_twig_medium-green",
  Twig: "_twig_medium-green",
  TWIG: "_twig_medium-green",
  twinescript: "_twine_medium-blue",
  "twine script": "_twine_medium-blue",
  "twine-script": "_twine_medium-blue",
  twine_script: "_twine_medium-blue",
  TwineScript: "_twine_medium-blue",
  "Twine Script": "_twine_medium-blue",
  "Twine-Script": "_twine_medium-blue",
  Twine_Script: "_twine_medium-blue",
  TWINESCRIPT: "_twine_medium-blue",
  "TWINE SCRIPT": "_twine_medium-blue",
  "TWINE-SCRIPT": "_twine_medium-blue",
  TWINE_SCRIPT: "_twine_medium-blue",
  txl: "_txl_medium-orange",
  TXL: "_txl_medium-orange",
  typelanguage: "_telegram_medium-blue",
  TypeLanguage: "_telegram_medium-blue",
  TYPELANGUAGE: "_telegram_medium-blue",
  typescript: "_ts_medium-blue",
  TypeScript: "_ts_medium-blue",
  TYPESCRIPT: "_ts_medium-blue",
  typescriptreact: "_tsx_light-blue",
  "typescript react": "_tsx_light-blue",
  "typescript-react": "_tsx_light-blue",
  typescript_react: "_tsx_light-blue",
  uc: "_unreal_medium-grey",
  "ucd.nameslist": "_unicode_medium-red",
  udiff: "_diff_medium-orange",
  UDIFF: "_diff_medium-orange",
  ultisnips: "_database_medium-green",
  unicode: "_unicode_medium-red",
  Unicode: "_unicode_medium-red",
  UNICODE: "_unicode_medium-red",
  unidata: "_unicode_medium-red",
  uniprint: "_print_medium-orange",
  Uniprint: "_print_medium-orange",
  UNIPRINT: "_print_medium-orange",
  units: "_scales_medium-green",
  Units: "_scales_medium-green",
  UNITS: "_scales_medium-green",
  "units.bsd": "_scales_medium-green",
  "units.gnu": "_scales_medium-green",
  unity3d: "_unity3d_dark-blue",
  Unity3D: "_unity3d_dark-blue",
  UNITY3D: "_unity3d_dark-blue",
  unreal: "_unreal_medium-grey",
  Unreal: "_unreal_medium-grey",
  UNREAL: "_unreal_medium-grey",
  unrealscript: "_unreal_medium-grey",
  "unreal script": "_unreal_medium-grey",
  "unreal-script": "_unreal_medium-grey",
  unreal_script: "_unreal_medium-grey",
  UnrealScript: "_unreal_medium-grey",
  "Unreal Script": "_unreal_medium-grey",
  "Unreal-Script": "_unreal_medium-grey",
  Unreal_Script: "_unreal_medium-grey",
  UNREALSCRIPT: "_unreal_medium-grey",
  "UNREAL SCRIPT": "_unreal_medium-grey",
  "UNREAL-SCRIPT": "_unreal_medium-grey",
  UNREAL_SCRIPT: "_unreal_medium-grey",
  ur: "_urweb_medium-maroon",
  Ur: "_urweb_medium-maroon",
  UR: "_urweb_medium-maroon",
  urweb: "_urweb_medium-maroon",
  "ur web": "_urweb_medium-maroon",
  "ur-web": "_urweb_medium-maroon",
  ur_web: "_urweb_medium-maroon",
  "ur/web": "_urweb_medium-maroon",
  UrWeb: "_urweb_medium-maroon",
  "Ur Web": "_urweb_medium-maroon",
  "Ur-Web": "_urweb_medium-maroon",
  Ur_Web: "_urweb_medium-maroon",
  "Ur/Web": "_urweb_medium-maroon",
  URWEB: "_urweb_medium-maroon",
  "UR WEB": "_urweb_medium-maroon",
  "UR-WEB": "_urweb_medium-maroon",
  UR_WEB: "_urweb_medium-maroon",
  "UR/WEB": "_urweb_medium-maroon",
  v: "_v_medium-blue",
  V: "_v_medium-blue",
  vala: "_vala_medium-purple",
  Vala: "_vala_medium-purple",
  VALA: "_vala_medium-purple",
  valvematerialtype: "_source_medium-blue",
  "valvematerial type": "_source_medium-blue",
  "valvematerial-type": "_source_medium-blue",
  valvematerial_type: "_source_medium-blue",
  "valve materialtype": "_source_medium-blue",
  "valve material type": "_source_medium-blue",
  "valve material-type": "_source_medium-blue",
  "valve material_type": "_source_medium-blue",
  "valve-materialtype": "_source_medium-blue",
  "valve-material type": "_source_medium-blue",
  "valve-material-type": "_source_medium-blue",
  "valve-material_type": "_source_medium-blue",
  valve_materialtype: "_source_medium-blue",
  "valve_material type": "_source_medium-blue",
  "valve_material-type": "_source_medium-blue",
  valve_material_type: "_source_medium-blue",
  ValveMaterialType: "_source_medium-blue",
  "ValveMaterial Type": "_source_medium-blue",
  "ValveMaterial-Type": "_source_medium-blue",
  ValveMaterial_Type: "_source_medium-blue",
  "Valve MaterialType": "_source_medium-blue",
  "Valve Material Type": "_source_medium-blue",
  "Valve Material-Type": "_source_medium-blue",
  "Valve Material_Type": "_source_medium-blue",
  "Valve-MaterialType": "_source_medium-blue",
  "Valve-Material Type": "_source_medium-blue",
  "Valve-Material-Type": "_source_medium-blue",
  "Valve-Material_Type": "_source_medium-blue",
  Valve_MaterialType: "_source_medium-blue",
  "Valve_Material Type": "_source_medium-blue",
  "Valve_Material-Type": "_source_medium-blue",
  Valve_Material_Type: "_source_medium-blue",
  VALVEMATERIALTYPE: "_source_medium-blue",
  "VALVEMATERIAL TYPE": "_source_medium-blue",
  "VALVEMATERIAL-TYPE": "_source_medium-blue",
  VALVEMATERIAL_TYPE: "_source_medium-blue",
  "VALVE MATERIALTYPE": "_source_medium-blue",
  "VALVE MATERIAL TYPE": "_source_medium-blue",
  "VALVE MATERIAL-TYPE": "_source_medium-blue",
  "VALVE MATERIAL_TYPE": "_source_medium-blue",
  "VALVE-MATERIALTYPE": "_source_medium-blue",
  "VALVE-MATERIAL TYPE": "_source_medium-blue",
  "VALVE-MATERIAL-TYPE": "_source_medium-blue",
  "VALVE-MATERIAL_TYPE": "_source_medium-blue",
  VALVE_MATERIALTYPE: "_source_medium-blue",
  "VALVE_MATERIAL TYPE": "_source_medium-blue",
  "VALVE_MATERIAL-TYPE": "_source_medium-blue",
  VALVE_MATERIAL_TYPE: "_source_medium-blue",
  valvesourceengine: "_source_medium-blue",
  "valvesource engine": "_source_medium-blue",
  "valvesource-engine": "_source_medium-blue",
  valvesource_engine: "_source_medium-blue",
  "valve sourceengine": "_source_medium-blue",
  "valve source engine": "_source_medium-blue",
  "valve source-engine": "_source_medium-blue",
  "valve source_engine": "_source_medium-blue",
  "valve-sourceengine": "_source_medium-blue",
  "valve-source engine": "_source_medium-blue",
  "valve-source-engine": "_source_medium-blue",
  "valve-source_engine": "_source_medium-blue",
  valve_sourceengine: "_source_medium-blue",
  "valve_source engine": "_source_medium-blue",
  "valve_source-engine": "_source_medium-blue",
  valve_source_engine: "_source_medium-blue",
  ValveSourceEngine: "_source_medium-blue",
  "ValveSource Engine": "_source_medium-blue",
  "ValveSource-Engine": "_source_medium-blue",
  ValveSource_Engine: "_source_medium-blue",
  "Valve SourceEngine": "_source_medium-blue",
  "Valve Source Engine": "_source_medium-blue",
  "Valve Source-Engine": "_source_medium-blue",
  "Valve Source_Engine": "_source_medium-blue",
  "Valve-SourceEngine": "_source_medium-blue",
  "Valve-Source Engine": "_source_medium-blue",
  "Valve-Source-Engine": "_source_medium-blue",
  "Valve-Source_Engine": "_source_medium-blue",
  Valve_SourceEngine: "_source_medium-blue",
  "Valve_Source Engine": "_source_medium-blue",
  "Valve_Source-Engine": "_source_medium-blue",
  Valve_Source_Engine: "_source_medium-blue",
  VALVESOURCEENGINE: "_source_medium-blue",
  "VALVESOURCE ENGINE": "_source_medium-blue",
  "VALVESOURCE-ENGINE": "_source_medium-blue",
  VALVESOURCE_ENGINE: "_source_medium-blue",
  "VALVE SOURCEENGINE": "_source_medium-blue",
  "VALVE SOURCE ENGINE": "_source_medium-blue",
  "VALVE SOURCE-ENGINE": "_source_medium-blue",
  "VALVE SOURCE_ENGINE": "_source_medium-blue",
  "VALVE-SOURCEENGINE": "_source_medium-blue",
  "VALVE-SOURCE ENGINE": "_source_medium-blue",
  "VALVE-SOURCE-ENGINE": "_source_medium-blue",
  "VALVE-SOURCE_ENGINE": "_source_medium-blue",
  VALVE_SOURCEENGINE: "_source_medium-blue",
  "VALVE_SOURCE ENGINE": "_source_medium-blue",
  "VALVE_SOURCE-ENGINE": "_source_medium-blue",
  VALVE_SOURCE_ENGINE: "_source_medium-blue",
  varnish: "_varnish_dark-blue",
  vash: "_html5_medium-red",
  VASH: "_html5_medium-red",
  vb: "_vs_medium-blue",
  vbnet: "_vs_medium-blue",
  "vb.net": "_vs_medium-blue",
  VBNET: "_vs_medium-blue",
  "VB.NET": "_vs_medium-blue",
  vcl: "_varnish_dark-blue",
  VCL: "_varnish_dark-blue",
  velocity: "_velocity_dark-blue",
  Velocity: "_velocity_dark-blue",
  VELOCITY: "_velocity_dark-blue",
  verilog: "_verilog_dark-green",
  Verilog: "_verilog_dark-green",
  VERILOG: "_verilog_dark-green",
  vhdl: "_vhdl_dark-green",
  VHDL: "_vhdl_dark-green",
  vim: "_vim_medium-green",
  Vim: "_vim_medium-green",
  VIM: "_vim_medium-green",
  viml: "_vim_medium-green",
  VimL: "_vim_medium-green",
  VIML: "_vim_medium-green",
  vimscript: "_vim_medium-green",
  VimScript: "_vim_medium-green",
  VIMSCRIPT: "_vim_medium-green",
  "vim-snippet": "_database_medium-green",
  virtualagc: "_asm-agc_dark-blue",
  "virtual agc": "_asm-agc_dark-blue",
  "virtual-agc": "_asm-agc_dark-blue",
  virtual_agc: "_asm-agc_dark-blue",
  VirtualAGC: "_asm-agc_dark-blue",
  "Virtual AGC": "_asm-agc_dark-blue",
  "Virtual-AGC": "_asm-agc_dark-blue",
  Virtual_AGC: "_asm-agc_dark-blue",
  VIRTUALAGC: "_asm-agc_dark-blue",
  "VIRTUAL AGC": "_asm-agc_dark-blue",
  "VIRTUAL-AGC": "_asm-agc_dark-blue",
  VIRTUAL_AGC: "_asm-agc_dark-blue",
  visualbasic: "_vs_medium-blue",
  "visual basic": "_vs_medium-blue",
  "visual-basic": "_vs_medium-blue",
  visual_basic: "_vs_medium-blue",
  VisualBasic: "_vs_medium-blue",
  "Visual Basic": "_vs_medium-blue",
  "Visual-Basic": "_vs_medium-blue",
  Visual_Basic: "_vs_medium-blue",
  VISUALBASIC: "_vs_medium-blue",
  "VISUAL BASIC": "_vs_medium-blue",
  "VISUAL-BASIC": "_vs_medium-blue",
  VISUAL_BASIC: "_vs_medium-blue",
  "visualbasic.net": "_vs_medium-blue",
  "visualbasic .net": "_vs_medium-blue",
  "visualbasic-.net": "_vs_medium-blue",
  "visualbasic_.net": "_vs_medium-blue",
  "visual basic.net": "_vs_medium-blue",
  "visual basic .net": "_vs_medium-blue",
  "visual basic-.net": "_vs_medium-blue",
  "visual basic_.net": "_vs_medium-blue",
  "visual-basic.net": "_vs_medium-blue",
  "visual-basic .net": "_vs_medium-blue",
  "visual-basic-.net": "_vs_medium-blue",
  "visual-basic_.net": "_vs_medium-blue",
  "visual_basic.net": "_vs_medium-blue",
  "visual_basic .net": "_vs_medium-blue",
  "visual_basic-.net": "_vs_medium-blue",
  "visual_basic_.net": "_vs_medium-blue",
  "VisualBasic.NET": "_vs_medium-blue",
  "VisualBasic .NET": "_vs_medium-blue",
  "VisualBasic-.NET": "_vs_medium-blue",
  "VisualBasic_.NET": "_vs_medium-blue",
  "Visual Basic.NET": "_vs_medium-blue",
  "Visual Basic .NET": "_vs_medium-blue",
  "Visual Basic-.NET": "_vs_medium-blue",
  "Visual Basic_.NET": "_vs_medium-blue",
  "Visual-Basic.NET": "_vs_medium-blue",
  "Visual-Basic .NET": "_vs_medium-blue",
  "Visual-Basic-.NET": "_vs_medium-blue",
  "Visual-Basic_.NET": "_vs_medium-blue",
  "Visual_Basic.NET": "_vs_medium-blue",
  "Visual_Basic .NET": "_vs_medium-blue",
  "Visual_Basic-.NET": "_vs_medium-blue",
  "Visual_Basic_.NET": "_vs_medium-blue",
  "VISUALBASIC.NET": "_vs_medium-blue",
  "VISUALBASIC .NET": "_vs_medium-blue",
  "VISUALBASIC-.NET": "_vs_medium-blue",
  "VISUALBASIC_.NET": "_vs_medium-blue",
  "VISUAL BASIC.NET": "_vs_medium-blue",
  "VISUAL BASIC .NET": "_vs_medium-blue",
  "VISUAL BASIC-.NET": "_vs_medium-blue",
  "VISUAL BASIC_.NET": "_vs_medium-blue",
  "VISUAL-BASIC.NET": "_vs_medium-blue",
  "VISUAL-BASIC .NET": "_vs_medium-blue",
  "VISUAL-BASIC-.NET": "_vs_medium-blue",
  "VISUAL-BASIC_.NET": "_vs_medium-blue",
  "VISUAL_BASIC.NET": "_vs_medium-blue",
  "VISUAL_BASIC .NET": "_vs_medium-blue",
  "VISUAL_BASIC-.NET": "_vs_medium-blue",
  "VISUAL_BASIC_.NET": "_vs_medium-blue",
  visualstudio: "_vs_medium-blue",
  "visual studio": "_vs_medium-blue",
  "visual-studio": "_vs_medium-blue",
  visual_studio: "_vs_medium-blue",
  VisualStudio: "_vs_medium-blue",
  "Visual Studio": "_vs_medium-blue",
  "Visual-Studio": "_vs_medium-blue",
  Visual_Studio: "_vs_medium-blue",
  VISUALSTUDIO: "_vs_medium-blue",
  "VISUAL STUDIO": "_vs_medium-blue",
  "VISUAL-STUDIO": "_vs_medium-blue",
  VISUAL_STUDIO: "_vs_medium-blue",
  vjass: "_warcraft3_medium-red",
  VJASS: "_warcraft3_medium-red",
  vmt: "_source_medium-blue",
  volt: "_phalcon_medium-cyan",
  vtt: "_webvtt_dark-blue",
  vue: "_vue_light-green",
  Vue: "_vue_light-green",
  VUE: "_vue_light-green",
  vuehtml: "_vue_light-green",
  "vue html": "_vue_light-green",
  "vue-html": "_vue_light-green",
  vue_html: "_vue_light-green",
  vyper: "_vyper_medium-grey",
  Vyper: "_vyper_medium-grey",
  VYPER: "_vyper_medium-grey",
  walt: "_walt_medium-purple",
  Walt: "_walt_medium-purple",
  WALT: "_walt_medium-purple",
  warcraftiii: "_warcraft3_medium-maroon",
  "warcraft iii": "_warcraft3_medium-maroon",
  "warcraft-iii": "_warcraft3_medium-maroon",
  warcraft_iii: "_warcraft3_medium-maroon",
  WarcraftIII: "_warcraft3_medium-maroon",
  "Warcraft III": "_warcraft3_medium-maroon",
  "Warcraft-III": "_warcraft3_medium-maroon",
  Warcraft_III: "_warcraft3_medium-maroon",
  WARCRAFTIII: "_warcraft3_medium-maroon",
  "WARCRAFT III": "_warcraft3_medium-maroon",
  "WARCRAFT-III": "_warcraft3_medium-maroon",
  WARCRAFT_III: "_warcraft3_medium-maroon",
  wasi: "_wasm_medium-blue",
  WASI: "_wasm_medium-blue",
  wasm: "_wasm_medium-blue",
  WASM: "_wasm_medium-blue",
  wast: "_wasm_medium-blue",
  WAST: "_wasm_medium-blue",
  "wavefront.mtl": "_model_dark-blue",
  "wavefront.obj": "_model_medium-red",
  wdl: "_wdl_medium-blue",
  WDL: "_wdl_medium-blue",
  webassembly: "_wasm_medium-blue",
  "web assembly": "_wasm_medium-blue",
  "web-assembly": "_wasm_medium-blue",
  web_assembly: "_wasm_medium-blue",
  WebAssembly: "_wasm_medium-blue",
  "Web Assembly": "_wasm_medium-blue",
  "Web-Assembly": "_wasm_medium-blue",
  Web_Assembly: "_wasm_medium-blue",
  WEBASSEMBLY: "_wasm_medium-blue",
  "WEB ASSEMBLY": "_wasm_medium-blue",
  "WEB-ASSEMBLY": "_wasm_medium-blue",
  WEB_ASSEMBLY: "_wasm_medium-blue",
  webvtt: "_webvtt_dark-blue",
  WebVTT: "_webvtt_dark-blue",
  WEBVTT: "_webvtt_dark-blue",
  wenyan: "_wenyan_light-orange",
  Wenyan: "_wenyan_light-orange",
  WENYAN: "_wenyan_light-orange",
  wget: "_wget_medium-purple",
  Wget: "_wget_medium-purple",
  WGET: "_wget_medium-purple",
  wgetrc: "_wget_medium-purple",
  winbatch: "_windows_medium-purple",
  WinBatch: "_windows_medium-purple",
  WINBATCH: "_windows_medium-purple",
  wlp4: "_code_medium-blue",
  WLP4: "_code_medium-blue",
  workflowdescriptionlanguage: "_wdl_medium-blue",
  "workflowdescription language": "_wdl_medium-blue",
  "workflowdescription-language": "_wdl_medium-blue",
  workflowdescription_language: "_wdl_medium-blue",
  "workflow descriptionlanguage": "_wdl_medium-blue",
  "workflow description language": "_wdl_medium-blue",
  "workflow description-language": "_wdl_medium-blue",
  "workflow description_language": "_wdl_medium-blue",
  "workflow-descriptionlanguage": "_wdl_medium-blue",
  "workflow-description language": "_wdl_medium-blue",
  "workflow-description-language": "_wdl_medium-blue",
  "workflow-description_language": "_wdl_medium-blue",
  workflow_descriptionlanguage: "_wdl_medium-blue",
  "workflow_description language": "_wdl_medium-blue",
  "workflow_description-language": "_wdl_medium-blue",
  workflow_description_language: "_wdl_medium-blue",
  WorkflowDescriptionLanguage: "_wdl_medium-blue",
  "WorkflowDescription Language": "_wdl_medium-blue",
  "WorkflowDescription-Language": "_wdl_medium-blue",
  WorkflowDescription_Language: "_wdl_medium-blue",
  "Workflow DescriptionLanguage": "_wdl_medium-blue",
  "Workflow Description Language": "_wdl_medium-blue",
  "Workflow Description-Language": "_wdl_medium-blue",
  "Workflow Description_Language": "_wdl_medium-blue",
  "Workflow-DescriptionLanguage": "_wdl_medium-blue",
  "Workflow-Description Language": "_wdl_medium-blue",
  "Workflow-Description-Language": "_wdl_medium-blue",
  "Workflow-Description_Language": "_wdl_medium-blue",
  Workflow_DescriptionLanguage: "_wdl_medium-blue",
  "Workflow_Description Language": "_wdl_medium-blue",
  "Workflow_Description-Language": "_wdl_medium-blue",
  Workflow_Description_Language: "_wdl_medium-blue",
  WORKFLOWDESCRIPTIONLANGUAGE: "_wdl_medium-blue",
  "WORKFLOWDESCRIPTION LANGUAGE": "_wdl_medium-blue",
  "WORKFLOWDESCRIPTION-LANGUAGE": "_wdl_medium-blue",
  WORKFLOWDESCRIPTION_LANGUAGE: "_wdl_medium-blue",
  "WORKFLOW DESCRIPTIONLANGUAGE": "_wdl_medium-blue",
  "WORKFLOW DESCRIPTION LANGUAGE": "_wdl_medium-blue",
  "WORKFLOW DESCRIPTION-LANGUAGE": "_wdl_medium-blue",
  "WORKFLOW DESCRIPTION_LANGUAGE": "_wdl_medium-blue",
  "WORKFLOW-DESCRIPTIONLANGUAGE": "_wdl_medium-blue",
  "WORKFLOW-DESCRIPTION LANGUAGE": "_wdl_medium-blue",
  "WORKFLOW-DESCRIPTION-LANGUAGE": "_wdl_medium-blue",
  "WORKFLOW-DESCRIPTION_LANGUAGE": "_wdl_medium-blue",
  WORKFLOW_DESCRIPTIONLANGUAGE: "_wdl_medium-blue",
  "WORKFLOW_DESCRIPTION LANGUAGE": "_wdl_medium-blue",
  "WORKFLOW_DESCRIPTION-LANGUAGE": "_wdl_medium-blue",
  WORKFLOW_DESCRIPTION_LANGUAGE: "_wdl_medium-blue",
  wurst: "_wurst_medium-maroon",
  wurstlang: "_wurst_medium-maroon",
  "wurst lang": "_wurst_medium-maroon",
  "wurst-lang": "_wurst_medium-maroon",
  wurst_lang: "_wurst_medium-maroon",
  WurstLang: "_wurst_medium-maroon",
  "Wurst Lang": "_wurst_medium-maroon",
  "Wurst-Lang": "_wurst_medium-maroon",
  Wurst_Lang: "_wurst_medium-maroon",
  WURSTLANG: "_wurst_medium-maroon",
  "WURST LANG": "_wurst_medium-maroon",
  "WURST-LANG": "_wurst_medium-maroon",
  WURST_LANG: "_wurst_medium-maroon",
  wurstscript: "_wurst_medium-maroon",
  "wurst script": "_wurst_medium-maroon",
  "wurst-script": "_wurst_medium-maroon",
  wurst_script: "_wurst_medium-maroon",
  WurstScript: "_wurst_medium-maroon",
  "Wurst Script": "_wurst_medium-maroon",
  "Wurst-Script": "_wurst_medium-maroon",
  Wurst_Script: "_wurst_medium-maroon",
  WURSTSCRIPT: "_wurst_medium-maroon",
  "WURST SCRIPT": "_wurst_medium-maroon",
  "WURST-SCRIPT": "_wurst_medium-maroon",
  WURST_SCRIPT: "_wurst_medium-maroon",
  x10: "_x10_light-maroon",
  X10: "_x10_light-maroon",
  x32: "_asm-intel_dark-blue",
  x32asm: "_asm-intel_dark-blue",
  x64: "_asm-intel_dark-blue",
  X64: "_asm-intel_dark-blue",
  x64asm: "_asm-intel_dark-blue",
  x86: "_asm-intel_dark-blue",
  X86: "_asm-intel_dark-blue",
  x8664: "_asm-intel_dark-blue",
  "x86-64": "_asm-intel_dark-blue",
  x86_64: "_asm-intel_dark-blue",
  X8664: "_asm-intel_dark-blue",
  "X86-64": "_asm-intel_dark-blue",
  X86_64: "_asm-intel_dark-blue",
  x86asm: "_asm-intel_dark-blue",
  xcompose: "_config_medium-cyan",
  XCOMPOSE: "_config_medium-cyan",
  xhtml: "_html5_medium-orange",
  XHTML: "_html5_medium-orange",
  xml: "_code_medium-blue",
  XML: "_code_medium-blue",
  "xml.ant": "_ant_dark-pink",
  "xml+genshi": "_genshi_medium-red",
  "XML+GENSHI": "_genshi_medium-red",
  "xml+kid": "_genshi_medium-red",
  "XML+KID": "_genshi_medium-red",
  xq: "_sql_dark-red",
  xquery: "_sql_dark-red",
  XQuery: "_sql_dark-red",
  XQUERY: "_sql_dark-red",
  xsl: "_code_medium-cyan",
  XSL: "_code_medium-cyan",
  xten: "_x10_light-maroon",
  XTEN: "_x10_light-maroon",
  xtend: "_xtend_dark-purple",
  Xtend: "_xtend_dark-purple",
  XTEND: "_xtend_dark-purple",
  yaml: "_yaml_medium-red",
  YAML: "_yaml_medium-red",
  yang: "_yang_medium-yellow",
  YANG: "_yang_medium-yellow",
  yara: "_yara_medium-red",
  YARA: "_yara_medium-red",
  yasnippet: "_database_medium-green",
  YASnippet: "_database_medium-green",
  YASNIPPET: "_database_medium-green",
  yml: "_yaml_medium-red",
  YML: "_yaml_medium-red",
  yodl: "_book_medium-red",
  YODL: "_book_medium-red",
  yorick: "_yorick_medium-orange",
  Yorick: "_yorick_medium-orange",
  YORICK: "_yorick_medium-orange",
  z80: "_asm-zilog_medium-yellow",
  zap: "_zork_dark-cyan",
  ZAP: "_zork_dark-cyan",
  zenscript: "_crafttweaker_medium-maroon",
  ZenScript: "_crafttweaker_medium-maroon",
  ZENSCRIPT: "_crafttweaker_medium-maroon",
  zig: "_zig_medium-orange",
  Zig: "_zig_medium-orange",
  ZIG: "_zig_medium-orange",
  zil: "_zork_dark-blue",
  ZIL: "_zork_dark-blue",
  zinc: "_warcraft3_medium-maroon",
  Zinc: "_warcraft3_medium-maroon",
  ZINC: "_warcraft3_medium-maroon",
  zorkassembly: "_zork_dark-cyan",
  "zork assembly": "_zork_dark-cyan",
  "zork-assembly": "_zork_dark-cyan",
  zork_assembly: "_zork_dark-cyan",
  ZorkAssembly: "_zork_dark-cyan",
  "Zork Assembly": "_zork_dark-cyan",
  "Zork-Assembly": "_zork_dark-cyan",
  Zork_Assembly: "_zork_dark-cyan",
  ZORKASSEMBLY: "_zork_dark-cyan",
  "ZORK ASSEMBLY": "_zork_dark-cyan",
  "ZORK-ASSEMBLY": "_zork_dark-cyan",
  ZORK_ASSEMBLY: "_zork_dark-cyan",
  zorkinterpreterlanguage: "_zork_dark-blue",
  "zorkinterpreter language": "_zork_dark-blue",
  "zorkinterpreter-language": "_zork_dark-blue",
  zorkinterpreter_language: "_zork_dark-blue",
  "zork interpreterlanguage": "_zork_dark-blue",
  "zork interpreter language": "_zork_dark-blue",
  "zork interpreter-language": "_zork_dark-blue",
  "zork interpreter_language": "_zork_dark-blue",
  "zork-interpreterlanguage": "_zork_dark-blue",
  "zork-interpreter language": "_zork_dark-blue",
  "zork-interpreter-language": "_zork_dark-blue",
  "zork-interpreter_language": "_zork_dark-blue",
  zork_interpreterlanguage: "_zork_dark-blue",
  "zork_interpreter language": "_zork_dark-blue",
  "zork_interpreter-language": "_zork_dark-blue",
  zork_interpreter_language: "_zork_dark-blue",
  ZorkInterpreterLanguage: "_zork_dark-blue",
  "ZorkInterpreter Language": "_zork_dark-blue",
  "ZorkInterpreter-Language": "_zork_dark-blue",
  ZorkInterpreter_Language: "_zork_dark-blue",
  "Zork InterpreterLanguage": "_zork_dark-blue",
  "Zork Interpreter Language": "_zork_dark-blue",
  "Zork Interpreter-Language": "_zork_dark-blue",
  "Zork Interpreter_Language": "_zork_dark-blue",
  "Zork-InterpreterLanguage": "_zork_dark-blue",
  "Zork-Interpreter Language": "_zork_dark-blue",
  "Zork-Interpreter-Language": "_zork_dark-blue",
  "Zork-Interpreter_Language": "_zork_dark-blue",
  Zork_InterpreterLanguage: "_zork_dark-blue",
  "Zork_Interpreter Language": "_zork_dark-blue",
  "Zork_Interpreter-Language": "_zork_dark-blue",
  Zork_Interpreter_Language: "_zork_dark-blue",
  ZORKINTERPRETERLANGUAGE: "_zork_dark-blue",
  "ZORKINTERPRETER LANGUAGE": "_zork_dark-blue",
  "ZORKINTERPRETER-LANGUAGE": "_zork_dark-blue",
  ZORKINTERPRETER_LANGUAGE: "_zork_dark-blue",
  "ZORK INTERPRETERLANGUAGE": "_zork_dark-blue",
  "ZORK INTERPRETER LANGUAGE": "_zork_dark-blue",
  "ZORK INTERPRETER-LANGUAGE": "_zork_dark-blue",
  "ZORK INTERPRETER_LANGUAGE": "_zork_dark-blue",
  "ZORK-INTERPRETERLANGUAGE": "_zork_dark-blue",
  "ZORK-INTERPRETER LANGUAGE": "_zork_dark-blue",
  "ZORK-INTERPRETER-LANGUAGE": "_zork_dark-blue",
  "ZORK-INTERPRETER_LANGUAGE": "_zork_dark-blue",
  ZORK_INTERPRETERLANGUAGE: "_zork_dark-blue",
  "ZORK_INTERPRETER LANGUAGE": "_zork_dark-blue",
  "ZORK_INTERPRETER-LANGUAGE": "_zork_dark-blue",
  ZORK_INTERPRETER_LANGUAGE: "_zork_dark-blue",
  zosassembler: "_asm-zilog_medium-blue",
  "z/osassembler": "_asm-zilog_medium-blue",
  zOSAssembler: "_asm-zilog_medium-blue",
  "z/OSAssembler": "_asm-zilog_medium-blue",
  ZOSASSEMBLER: "_asm-zilog_medium-blue",
  "Z/OSASSEMBLER": "_asm-zilog_medium-blue",
  zosassembly: "_asm-zilog_medium-blue",
  "z/osassembly": "_asm-zilog_medium-blue",
  zOSAssembly: "_asm-zilog_medium-blue",
  "z/OSAssembly": "_asm-zilog_medium-blue",
  ZOSASSEMBLY: "_asm-zilog_medium-blue",
  "Z/OSASSEMBLY": "_asm-zilog_medium-blue",
  zosplx: "_asm-zilog_medium-blue",
  "zospl/x": "_asm-zilog_medium-blue",
  "z/osplx": "_asm-zilog_medium-blue",
  "z/ospl/x": "_asm-zilog_medium-blue",
  zOSPLX: "_asm-zilog_medium-blue",
  "zOSPL/X": "_asm-zilog_medium-blue",
  "z/OSPLX": "_asm-zilog_medium-blue",
  "z/OSPL/X": "_asm-zilog_medium-blue",
  ZOSPLX: "_asm-zilog_medium-blue",
  "ZOSPL/X": "_asm-zilog_medium-blue",
  "Z/OSPLX": "_asm-zilog_medium-blue",
  "Z/OSPL/X": "_asm-zilog_medium-blue",
  zosplxedl: "_asm-zilog_medium-blue",
  "zospl/xedl": "_asm-zilog_medium-blue",
  "z/osplxedl": "_asm-zilog_medium-blue",
  "z/ospl/xedl": "_asm-zilog_medium-blue",
  zOSPLXEDL: "_asm-zilog_medium-blue",
  "zOSPL/XEDL": "_asm-zilog_medium-blue",
  "z/OSPLXEDL": "_asm-zilog_medium-blue",
  "z/OSPL/XEDL": "_asm-zilog_medium-blue",
  ZOSPLXEDL: "_asm-zilog_medium-blue",
  "ZOSPL/XEDL": "_asm-zilog_medium-blue",
  "Z/OSPLXEDL": "_asm-zilog_medium-blue",
  "Z/OSPL/XEDL": "_asm-zilog_medium-blue",
  zvmasm: "_asm-zilog_medium-blue",
  zvmassembler: "_asm-zilog_medium-blue",
  "z/vmassembler": "_asm-zilog_medium-blue",
  zVMAssembler: "_asm-zilog_medium-blue",
  "z/VMAssembler": "_asm-zilog_medium-blue",
  ZVMASSEMBLER: "_asm-zilog_medium-blue",
  "Z/VMASSEMBLER": "_asm-zilog_medium-blue",
  zvmassembly: "_asm-zilog_medium-blue",
  "z/vmassembly": "_asm-zilog_medium-blue",
  zVMAssembly: "_asm-zilog_medium-blue",
  "z/VMAssembly": "_asm-zilog_medium-blue",
  ZVMASSEMBLY: "_asm-zilog_medium-blue",
  "Z/VMASSEMBLY": "_asm-zilog_medium-blue",
  zvmplx: "_asm-zilog_medium-blue",
  "zvmpl/x": "_asm-zilog_medium-blue",
  "z/vmplx": "_asm-zilog_medium-blue",
  "z/vmpl/x": "_asm-zilog_medium-blue",
  zVMPLX: "_asm-zilog_medium-blue",
  "zVMPL/X": "_asm-zilog_medium-blue",
  "z/VMPLX": "_asm-zilog_medium-blue",
  "z/VMPL/X": "_asm-zilog_medium-blue",
  ZVMPLX: "_asm-zilog_medium-blue",
  "ZVMPL/X": "_asm-zilog_medium-blue",
  "Z/VMPLX": "_asm-zilog_medium-blue",
  "Z/VMPL/X": "_asm-zilog_medium-blue",
  zvmplxedl: "_asm-zilog_medium-blue",
  "zvmpl/xedl": "_asm-zilog_medium-blue",
  "z/vmplxedl": "_asm-zilog_medium-blue",
  "z/vmpl/xedl": "_asm-zilog_medium-blue",
  zVMPLXEDL: "_asm-zilog_medium-blue",
  "zVMPL/XEDL": "_asm-zilog_medium-blue",
  "z/VMPLXEDL": "_asm-zilog_medium-blue",
  "z/VMPL/XEDL": "_asm-zilog_medium-blue",
  ZVMPLXEDL: "_asm-zilog_medium-blue",
  "ZVMPL/XEDL": "_asm-zilog_medium-blue",
  "Z/VMPLXEDL": "_asm-zilog_medium-blue",
  "Z/VMPL/XEDL": "_asm-zilog_medium-blue"
}, Cs = {
  folderNames: {
    "bower-components": "_bower_medium-orange",
    bower_components: "_bower_medium-orange",
    ".buildkite": "_buildkite_medium-green",
    ".bzr": "_bazaar_dark-yellow"
  },
  fileExtensions: {
    "5c": "_nickle_dark-grey",
    acs: "_angelscript_dark-blue",
    alexignore: "_alex_dark-red",
    alexrc: "_alex_dark-pink",
    angelscript: "_angelscript_dark-blue",
    ansiweatherrc: "_sun_dark-yellow",
    auk: "_awk_dark-cyan",
    autotest: "_config-ruby_dark-red",
    aux: "_tex_dark-green",
    awk: "_awk_dark-blue",
    bats: "_test-generic_dark-grey",
    bbl: "_bibtex_dark-blue",
    bbx: "_bibtex_dark-orange",
    bib: "_bibtex_dark-yellow",
    bibtex: "_bibtex_dark-yellow",
    bs: "_bikeshed_dark-blue",
    bst: "_bibtex_dark-green",
    bzrignore: "_bazaar_dark-yellow",
    "c++": "_cpp_dark-blue",
    cas: "_casc_dark-orange",
    casc: "_casc_dark-orange",
    cbl: "_cobol_dark-blue",
    cbx: "_bibtex_dark-red",
    cc: "_cpp_dark-blue",
    ccp: "_cobol_dark-blue",
    cgt: "_bnf_dark-red",
    cirru: "_cirru_dark-pink",
    cjs: "_js_dark-green",
    "cjs.map": "_sourcemap_dark-green",
    "cjs.snap": "_jest_dark-green",
    cl2: "_clojure_dark-purple",
    "clang-format": "_llvm_dark-yellow",
    "clang-tidy": "_llvm_dark-yellow",
    clj: "_clojure_dark-blue",
    cljc: "_clojure_dark-green",
    cljs: "_cljs_dark-blue",
    cljscm: "_cljs_dark-blue",
    cljx: "_clojure_dark-red",
    cls: "_tex_dark-orange",
    cob: "_cobol_dark-blue",
    cobol: "_cobol_dark-blue",
    "c+p": "_cpp_dark-blue",
    "cp+": "_cpp_dark-blue",
    cpp: "_cpp_dark-blue",
    cpx: "_cpp_dark-blue",
    cpy: "_cobol_dark-blue",
    cross_rubies: "_config-ruby_dark-red",
    cs: "_csharp_dark-blue",
    "c+x": "_cpp_dark-blue",
    "cx+": "_cpp_dark-blue",
    cxp: "_cpp_dark-blue",
    cxx: "_cpp_dark-blue",
    cyp: "_neo4j_dark-blue",
    cypher: "_neo4j_dark-blue",
    dafny: "_dafny_medium-orange",
    dfy: "_dafny_medium-orange",
    dia: "_dia_dark-cyan",
    "doclets.yaml": "_doclets_medium-green",
    "doclets.yml": "_doclets_medium-green",
    "docz.cjs": "_docz_dark-yellow",
    "docz.config.cjs": "_docz_dark-yellow",
    "docz.config.js": "_docz_dark-yellow",
    "docz.config.json": "_docz_dark-orange",
    "docz.config.mjs": "_docz_dark-yellow",
    "docz.js": "_docz_dark-yellow",
    "docz.json": "_docz_dark-orange",
    "docz.mjs": "_docz_dark-yellow",
    "doczrc.cjs": "_docz_dark-yellow",
    "doczrc.config.cjs": "_docz_dark-yellow",
    "doczrc.config.js": "_docz_dark-yellow",
    "doczrc.config.json": "_docz_dark-orange",
    "doczrc.config.mjs": "_docz_dark-yellow",
    "doczrc.js": "_docz_dark-yellow",
    "doczrc.json": "_docz_dark-orange",
    "doczrc.mjs": "_docz_dark-yellow",
    dtx: "_tex_dark-maroon",
    dust: "_js_dark-maroon",
    dwl: "_dataweave_dark-blue",
    egt: "_bnf_dark-red",
    es: "_js_dark-yellow",
    es0: "_js_dark-yellow",
    es1: "_js_dark-yellow",
    es2: "_js_dark-yellow",
    es3: "_js_dark-yellow",
    es4: "_js_dark-yellow",
    es5: "_js_dark-yellow",
    es6: "_js_dark-yellow",
    es7: "_js_dark-yellow",
    es8: "_js_dark-yellow",
    es9: "_js_dark-yellow",
    exr: "_openexr_dark-pink",
    fla: "_animate_medium-red",
    fossil: "_fossil_dark-cyan",
    gap: "_gap_dark-yellow",
    gawk: "_awk_dark-red",
    gcx: "_grapher_dark-green",
    gdb: "_gdb_dark-green",
    gdbinit: "_gdb_dark-cyan",
    gemfile: "_bundler_dark-cyan",
    gemtest: "_config-ruby_dark-red",
    gnu: "_gnu_dark-red",
    gplv2: "_gnu_dark-red",
    gplv3: "_gnu_dark-red",
    grm: "_bnf_dark-yellow",
    "h++": "_cpp_dark-purple",
    hic: "_clojure_dark-red",
    hoerc: "_config-ruby_dark-red",
    "h+p": "_cpp_dark-purple",
    "hp+": "_cpp_dark-purple",
    hpp: "_cpp_dark-purple",
    hpx: "_cpp_dark-purple",
    huskyrc: "_husky_dark-blue",
    "huskyrc.cjs": "_husky_dark-green",
    "huskyrc.js": "_husky_dark-orange",
    "huskyrc.json": "_husky_dark-yellow",
    "huskyrc.mjs": "_husky_dark-blue",
    "huskyrc.yaml": "_husky_dark-red",
    "huskyrc.yml": "_husky_dark-red",
    "h+x": "_cpp_dark-purple",
    "hx+": "_cpp_dark-purple",
    hxp: "_cpp_dark-purple",
    hxproj: "_haxedevelop_dark-blue",
    hxx: "_cpp_dark-purple",
    inl: "_cpp_dark-red",
    ins: "_tex_dark-green",
    ipp: "_cpp_dark-orange",
    ixx: "_cpp_dark-blue",
    jake: "_jake_dark-yellow",
    jas: "_cheetah3d_dark-yellow",
    js: "_js_dark-yellow",
    _js: "_js_dark-orange",
    jsb: "_js_dark-maroon",
    jsbeautifyrc: "_config-js_dark-yellow",
    jscript: "_js_dark-red",
    jscsrc: "_config-js_dark-yellow",
    jse: "_js_dark-maroon",
    jsfl: "_as_dark-yellow",
    jshintrc: "_config-js_dark-yellow",
    jslib: "_js_dark-red",
    jsm: "_js_dark-blue",
    "js.map": "_sourcemap_dark-yellow",
    jss: "_js_dark-green",
    jsx: "_jsx_dark-blue",
    kick: "_config-ruby_dark-red",
    lat: "_latino_dark-blue",
    layout: "_sketchup-lo_dark-red",
    lbx: "_tex_dark-blue",
    ltx: "_tex_dark-blue",
    m2: "_macaulay2_dark-cyan",
    mawk: "_awk_dark-maroon",
    mdo: "_1c-alt_dark-red",
    mjs: "_js_dark-blue",
    "mjs.map": "_sourcemap_dark-blue",
    mkii: "_tex_dark-orange",
    mkiv: "_tex_dark-orange",
    mkvi: "_tex_dark-orange",
    mo: "_modelica_dark-red",
    nasl: "_nessus_dark-cyan",
    nawk: "_awk_dark-green",
    nvram: "_vmware_dark-blue",
    o3: "_ogone_dark-grey",
    ogone: "_ogone_dark-grey",
    ox: "_ox_dark-cyan",
    oxh: "_ox_dark-green",
    oxo: "_ox_dark-blue",
    oxygene: "_oxygene_dark-cyan",
    pgf: "_tex_dark-purple",
    pogo: "_pogo_dark-orange",
    "postcss.config.js": "_postcss_dark-yellow",
    postcssrc: "_postcss_dark-orange",
    "postcssrc.cjs": "_postcss_dark-orange",
    "postcssrc.js": "_postcss_dark-orange",
    "postcssrc.json": "_postcss_dark-orange",
    "postcssrc.mjs": "_postcss_dark-orange",
    "postcssrc.yaml": "_postcss_dark-orange",
    "postcssrc.yml": "_postcss_dark-orange",
    prettierrc: "_prettier_dark-cyan",
    "prettierrc.cjs": "_prettier_dark-cyan",
    "prettierrc.js": "_prettier_dark-cyan",
    "prettierrc.json": "_prettier_dark-cyan",
    "prettierrc.json5": "_prettier_dark-cyan",
    "prettierrc.mjs": "_prettier_dark-cyan",
    "prettierrc.yaml": "_prettier_dark-cyan",
    "prettierrc.yml": "_prettier_dark-cyan",
    pxg: "_image_dark-cyan",
    rbi: "_sorbet_dark-purple",
    "react.cjs": "_react_dark-blue",
    "react.js": "_react_dark-blue",
    "react.mjs": "_react_dark-blue",
    "sc.cjs": "_nailpolish_dark-green",
    "sc.jsx": "_nailpolish_dark-blue",
    "sc.mjs": "_nailpolish_dark-blue",
    sentryclirc: "_sentry_light-red",
    sequelizerc: "_sequelize_dark-blue",
    "sequelizerc.cjs": "_sequelize_dark-blue",
    "sequelizerc.js": "_sequelize_dark-blue",
    "sequelizerc.json": "_sequelize_dark-blue",
    "sequelizerc.mjs": "_sequelize_dark-blue",
    "sh-session": "_terminal_dark-yellow",
    simplecov: "_config-ruby_dark-red",
    sjs: "_js_dark-pink",
    sls: "_saltstack_dark-blue",
    sma: "_clojure_dark-yellow",
    snap: "_jest_dark-yellow",
    sp: "_clojure_dark-yellow",
    "-spec.c2hs": "_test-hs_dark-purple",
    "spec.c2hs": "_test-hs_dark-purple",
    "_spec.c2hs": "_test-hs_dark-purple",
    "-spec.cjs": "_test-js_dark-green",
    "spec.cjs": "_test-js_dark-green",
    "_spec.cjs": "_test-js_dark-green",
    "-spec.cjsx": "_test-coffee_dark-maroon",
    "spec.cjsx": "_test-coffee_dark-maroon",
    "_spec.cjsx": "_test-coffee_dark-maroon",
    "-spec.coffee": "_test-coffee_dark-maroon",
    "spec.coffee": "_test-coffee_dark-maroon",
    "_spec.coffee": "_test-coffee_dark-maroon",
    "-spec.es": "_test-js_dark-yellow",
    "spec.es": "_test-js_dark-yellow",
    "_spec.es": "_test-js_dark-yellow",
    "-spec.go": "_test-go_dark-cyan",
    "spec.go": "_test-go_dark-cyan",
    "_spec.go": "_test-go_dark-cyan",
    "-spec.hs": "_test-hs_dark-purple",
    "spec.hs": "_test-hs_dark-purple",
    "_spec.hs": "_test-hs_dark-purple",
    "-spec.hsc": "_test-hs_dark-purple",
    "spec.hsc": "_test-hs_dark-purple",
    "_spec.hsc": "_test-hs_dark-purple",
    "-spec.iced": "_test-coffee_dark-maroon",
    "spec.iced": "_test-coffee_dark-maroon",
    "_spec.iced": "_test-coffee_dark-maroon",
    "-spec.js": "_test-js_dark-yellow",
    "-spec._js": "_test-js_dark-yellow",
    "spec.js": "_test-js_dark-yellow",
    "spec._js": "_test-js_dark-yellow",
    "_spec.js": "_test-js_dark-yellow",
    "_spec._js": "_test-js_dark-yellow",
    "-spec.jsb": "_test-js_dark-yellow",
    "spec.jsb": "_test-js_dark-yellow",
    "_spec.jsb": "_test-js_dark-yellow",
    "-spec.jsm": "_test-js_dark-yellow",
    "spec.jsm": "_test-js_dark-yellow",
    "_spec.jsm": "_test-js_dark-yellow",
    "-spec.jss": "_test-js_dark-yellow",
    "spec.jss": "_test-js_dark-yellow",
    "_spec.jss": "_test-js_dark-yellow",
    "-spec.jsx": "_test-react_dark-blue",
    "spec.jsx": "_test-react_dark-blue",
    "_spec.jsx": "_test-react_dark-blue",
    "-spec.lhs": "_test-hs_dark-purple",
    "spec.lhs": "_test-hs_dark-purple",
    "_spec.lhs": "_test-hs_dark-purple",
    "-spec.litcoffee": "_test-coffee_dark-maroon",
    "spec.litcoffee": "_test-coffee_dark-maroon",
    "_spec.litcoffee": "_test-coffee_dark-maroon",
    "-spec.mjs": "_test-js_dark-blue",
    "spec.mjs": "_test-js_dark-blue",
    "_spec.mjs": "_test-js_dark-blue",
    "-spec.rb": "_test-ruby_dark-red",
    "spec.rb": "_test-ruby_dark-red",
    "_spec.rb": "_test-ruby_dark-red",
    "-spec.react.cjs": "_test-react_dark-blue",
    "spec.react.cjs": "_test-react_dark-blue",
    "_spec.react.cjs": "_test-react_dark-blue",
    "-spec.react.js": "_test-react_dark-blue",
    "spec.react.js": "_test-react_dark-blue",
    "_spec.react.js": "_test-react_dark-blue",
    "-spec.react.mjs": "_test-react_dark-blue",
    "spec.react.mjs": "_test-react_dark-blue",
    "_spec.react.mjs": "_test-react_dark-blue",
    "-spec.rs": "_test-rust_dark-maroon",
    "spec.rs": "_test-rust_dark-maroon",
    "_spec.rs": "_test-rust_dark-maroon",
    "-spec.ruby": "_test-ruby_dark-red",
    "spec.ruby": "_test-ruby_dark-red",
    "_spec.ruby": "_test-ruby_dark-red",
    "-specs.c2hs": "_test-hs_dark-purple",
    "specs.c2hs": "_test-hs_dark-purple",
    "_specs.c2hs": "_test-hs_dark-purple",
    "-specs.cjs": "_test-js_dark-green",
    "specs.cjs": "_test-js_dark-green",
    "_specs.cjs": "_test-js_dark-green",
    "-specs.cjsx": "_test-coffee_dark-maroon",
    "specs.cjsx": "_test-coffee_dark-maroon",
    "_specs.cjsx": "_test-coffee_dark-maroon",
    "-specs.coffee": "_test-coffee_dark-maroon",
    "specs.coffee": "_test-coffee_dark-maroon",
    "_specs.coffee": "_test-coffee_dark-maroon",
    "-specs.es": "_test-js_dark-yellow",
    "specs.es": "_test-js_dark-yellow",
    "_specs.es": "_test-js_dark-yellow",
    "-specs.go": "_test-go_dark-cyan",
    "specs.go": "_test-go_dark-cyan",
    "_specs.go": "_test-go_dark-cyan",
    "-specs.hs": "_test-hs_dark-purple",
    "specs.hs": "_test-hs_dark-purple",
    "_specs.hs": "_test-hs_dark-purple",
    "-specs.hsc": "_test-hs_dark-purple",
    "specs.hsc": "_test-hs_dark-purple",
    "_specs.hsc": "_test-hs_dark-purple",
    "-specs.iced": "_test-coffee_dark-maroon",
    "specs.iced": "_test-coffee_dark-maroon",
    "_specs.iced": "_test-coffee_dark-maroon",
    "-spec.sjs": "_test-js_dark-yellow",
    "-specs.js": "_test-js_dark-yellow",
    "-specs._js": "_test-js_dark-yellow",
    "spec.sjs": "_test-js_dark-yellow",
    "specs.js": "_test-js_dark-yellow",
    "specs._js": "_test-js_dark-yellow",
    "_spec.sjs": "_test-js_dark-yellow",
    "_specs.js": "_test-js_dark-yellow",
    "_specs._js": "_test-js_dark-yellow",
    "-specs.jsb": "_test-js_dark-yellow",
    "specs.jsb": "_test-js_dark-yellow",
    "_specs.jsb": "_test-js_dark-yellow",
    "-specs.jsm": "_test-js_dark-yellow",
    "specs.jsm": "_test-js_dark-yellow",
    "_specs.jsm": "_test-js_dark-yellow",
    "-specs.jss": "_test-js_dark-yellow",
    "specs.jss": "_test-js_dark-yellow",
    "_specs.jss": "_test-js_dark-yellow",
    "-specs.jsx": "_test-react_dark-blue",
    "specs.jsx": "_test-react_dark-blue",
    "_specs.jsx": "_test-react_dark-blue",
    "-specs.lhs": "_test-hs_dark-purple",
    "specs.lhs": "_test-hs_dark-purple",
    "_specs.lhs": "_test-hs_dark-purple",
    "-specs.litcoffee": "_test-coffee_dark-maroon",
    "specs.litcoffee": "_test-coffee_dark-maroon",
    "_specs.litcoffee": "_test-coffee_dark-maroon",
    "-specs.mjs": "_test-js_dark-blue",
    "specs.mjs": "_test-js_dark-blue",
    "_specs.mjs": "_test-js_dark-blue",
    "-specs.rb": "_test-ruby_dark-red",
    "specs.rb": "_test-ruby_dark-red",
    "_specs.rb": "_test-ruby_dark-red",
    "-specs.react.cjs": "_test-react_dark-blue",
    "specs.react.cjs": "_test-react_dark-blue",
    "_specs.react.cjs": "_test-react_dark-blue",
    "-specs.react.js": "_test-react_dark-blue",
    "specs.react.js": "_test-react_dark-blue",
    "_specs.react.js": "_test-react_dark-blue",
    "-specs.react.mjs": "_test-react_dark-blue",
    "specs.react.mjs": "_test-react_dark-blue",
    "_specs.react.mjs": "_test-react_dark-blue",
    "-specs.rs": "_test-rust_dark-maroon",
    "specs.rs": "_test-rust_dark-maroon",
    "_specs.rs": "_test-rust_dark-maroon",
    "-specs.ruby": "_test-ruby_dark-red",
    "specs.ruby": "_test-ruby_dark-red",
    "_specs.ruby": "_test-ruby_dark-red",
    "-specs.sjs": "_test-js_dark-yellow",
    "specs.sjs": "_test-js_dark-yellow",
    "_specs.sjs": "_test-js_dark-yellow",
    "-specs.ts": "_test-ts_dark-blue",
    "specs.ts": "_test-ts_dark-blue",
    "_specs.ts": "_test-ts_dark-blue",
    "-specs.tsx": "_test-ts_medium-blue",
    "specs.tsx": "_test-ts_medium-blue",
    "_specs.tsx": "_test-ts_medium-blue",
    "-spec.ts": "_test-ts_dark-blue",
    "spec.ts": "_test-ts_dark-blue",
    "_spec.ts": "_test-ts_dark-blue",
    "-spec.tsx": "_test-ts_medium-blue",
    "spec.tsx": "_test-ts_medium-blue",
    "_spec.tsx": "_test-ts_medium-blue",
    ssjs: "_js_dark-red",
    sty: "_tex_dark-red",
    style: "_sketchup-sb_dark-red",
    sv: "_sysverilog_dark-blue",
    svh: "_sysverilog_dark-green",
    t: "_test-perl_dark-blue",
    tcc: "_cpp_dark-red",
    "-test.c2hs": "_test-hs_dark-purple",
    "test.c2hs": "_test-hs_dark-purple",
    "_test.c2hs": "_test-hs_dark-purple",
    "-test.cjs": "_test-js_dark-green",
    "test.cjs": "_test-js_dark-green",
    "_test.cjs": "_test-js_dark-green",
    "-test.cjsx": "_test-coffee_dark-maroon",
    "test.cjsx": "_test-coffee_dark-maroon",
    "_test.cjsx": "_test-coffee_dark-maroon",
    "-test.coffee": "_test-coffee_dark-maroon",
    "test.coffee": "_test-coffee_dark-maroon",
    "_test.coffee": "_test-coffee_dark-maroon",
    "-test.es": "_test-js_dark-yellow",
    "test.es": "_test-js_dark-yellow",
    "_test.es": "_test-js_dark-yellow",
    "-test.go": "_test-go_dark-cyan",
    "test.go": "_test-go_dark-cyan",
    "_test.go": "_test-go_dark-cyan",
    "-test.hs": "_test-hs_dark-purple",
    "test.hs": "_test-hs_dark-purple",
    "_test.hs": "_test-hs_dark-purple",
    "-test.hsc": "_test-hs_dark-purple",
    "test.hsc": "_test-hs_dark-purple",
    "_test.hsc": "_test-hs_dark-purple",
    "-test.iced": "_test-coffee_dark-maroon",
    "test.iced": "_test-coffee_dark-maroon",
    "_test.iced": "_test-coffee_dark-maroon",
    "-test.js": "_test-js_dark-yellow",
    "-test._js": "_test-js_dark-yellow",
    "test.js": "_test-js_dark-yellow",
    "test._js": "_test-js_dark-yellow",
    "_test.js": "_test-js_dark-yellow",
    "_test._js": "_test-js_dark-yellow",
    "-test.jsb": "_test-js_dark-yellow",
    "test.jsb": "_test-js_dark-yellow",
    "_test.jsb": "_test-js_dark-yellow",
    "-test.jsm": "_test-js_dark-yellow",
    "test.jsm": "_test-js_dark-yellow",
    "_test.jsm": "_test-js_dark-yellow",
    "-test.jss": "_test-js_dark-yellow",
    "test.jss": "_test-js_dark-yellow",
    "_test.jss": "_test-js_dark-yellow",
    "-test.jsx": "_test-react_dark-blue",
    "test.jsx": "_test-react_dark-blue",
    "_test.jsx": "_test-react_dark-blue",
    "-test.lhs": "_test-hs_dark-purple",
    "test.lhs": "_test-hs_dark-purple",
    "_test.lhs": "_test-hs_dark-purple",
    "-test.litcoffee": "_test-coffee_dark-maroon",
    "test.litcoffee": "_test-coffee_dark-maroon",
    "_test.litcoffee": "_test-coffee_dark-maroon",
    "-test.mjs": "_test-js_dark-blue",
    "test.mjs": "_test-js_dark-blue",
    "_test.mjs": "_test-js_dark-blue",
    "-test.rb": "_test-ruby_dark-red",
    "test.rb": "_test-ruby_dark-red",
    "_test.rb": "_test-ruby_dark-red",
    "-test.react.cjs": "_test-react_dark-blue",
    "test.react.cjs": "_test-react_dark-blue",
    "_test.react.cjs": "_test-react_dark-blue",
    "-test.react.js": "_test-react_dark-blue",
    "test.react.js": "_test-react_dark-blue",
    "_test.react.js": "_test-react_dark-blue",
    "-test.react.mjs": "_test-react_dark-blue",
    "test.react.mjs": "_test-react_dark-blue",
    "_test.react.mjs": "_test-react_dark-blue",
    "-test.rs": "_test-rust_dark-maroon",
    "test.rs": "_test-rust_dark-maroon",
    "_test.rs": "_test-rust_dark-maroon",
    "-test.ruby": "_test-ruby_dark-red",
    "test.ruby": "_test-ruby_dark-red",
    "_test.ruby": "_test-ruby_dark-red",
    "-tests.c2hs": "_test-hs_dark-purple",
    "tests.c2hs": "_test-hs_dark-purple",
    "_tests.c2hs": "_test-hs_dark-purple",
    "-tests.cjs": "_test-js_dark-green",
    "tests.cjs": "_test-js_dark-green",
    "_tests.cjs": "_test-js_dark-green",
    "-tests.cjsx": "_test-coffee_dark-maroon",
    "tests.cjsx": "_test-coffee_dark-maroon",
    "_tests.cjsx": "_test-coffee_dark-maroon",
    "-tests.coffee": "_test-coffee_dark-maroon",
    "tests.coffee": "_test-coffee_dark-maroon",
    "_tests.coffee": "_test-coffee_dark-maroon",
    "-tests.es": "_test-js_dark-yellow",
    "tests.es": "_test-js_dark-yellow",
    "_tests.es": "_test-js_dark-yellow",
    "-tests.go": "_test-go_dark-cyan",
    "tests.go": "_test-go_dark-cyan",
    "_tests.go": "_test-go_dark-cyan",
    "-tests.hs": "_test-hs_dark-purple",
    "tests.hs": "_test-hs_dark-purple",
    "_tests.hs": "_test-hs_dark-purple",
    "-tests.hsc": "_test-hs_dark-purple",
    "tests.hsc": "_test-hs_dark-purple",
    "_tests.hsc": "_test-hs_dark-purple",
    "-tests.iced": "_test-coffee_dark-maroon",
    "tests.iced": "_test-coffee_dark-maroon",
    "_tests.iced": "_test-coffee_dark-maroon",
    "-test.sjs": "_test-js_dark-yellow",
    "-tests.js": "_test-js_dark-yellow",
    "-tests._js": "_test-js_dark-yellow",
    "test.sjs": "_test-js_dark-yellow",
    "tests.js": "_test-js_dark-yellow",
    "tests._js": "_test-js_dark-yellow",
    "_test.sjs": "_test-js_dark-yellow",
    "_tests.js": "_test-js_dark-yellow",
    "_tests._js": "_test-js_dark-yellow",
    "-tests.jsb": "_test-js_dark-yellow",
    "tests.jsb": "_test-js_dark-yellow",
    "_tests.jsb": "_test-js_dark-yellow",
    "-tests.jsm": "_test-js_dark-yellow",
    "tests.jsm": "_test-js_dark-yellow",
    "_tests.jsm": "_test-js_dark-yellow",
    "-tests.jss": "_test-js_dark-yellow",
    "tests.jss": "_test-js_dark-yellow",
    "_tests.jss": "_test-js_dark-yellow",
    "-tests.jsx": "_test-react_dark-blue",
    "tests.jsx": "_test-react_dark-blue",
    "_tests.jsx": "_test-react_dark-blue",
    "-tests.lhs": "_test-hs_dark-purple",
    "tests.lhs": "_test-hs_dark-purple",
    "_tests.lhs": "_test-hs_dark-purple",
    "-tests.litcoffee": "_test-coffee_dark-maroon",
    "tests.litcoffee": "_test-coffee_dark-maroon",
    "_tests.litcoffee": "_test-coffee_dark-maroon",
    "-tests.mjs": "_test-js_dark-blue",
    "tests.mjs": "_test-js_dark-blue",
    "_tests.mjs": "_test-js_dark-blue",
    "-tests.rb": "_test-ruby_dark-red",
    "tests.rb": "_test-ruby_dark-red",
    "_tests.rb": "_test-ruby_dark-red",
    "-tests.react.cjs": "_test-react_dark-blue",
    "tests.react.cjs": "_test-react_dark-blue",
    "_tests.react.cjs": "_test-react_dark-blue",
    "-tests.react.js": "_test-react_dark-blue",
    "tests.react.js": "_test-react_dark-blue",
    "_tests.react.js": "_test-react_dark-blue",
    "-tests.react.mjs": "_test-react_dark-blue",
    "tests.react.mjs": "_test-react_dark-blue",
    "_tests.react.mjs": "_test-react_dark-blue",
    "-tests.rs": "_test-rust_dark-maroon",
    "tests.rs": "_test-rust_dark-maroon",
    "_tests.rs": "_test-rust_dark-maroon",
    "-tests.ruby": "_test-ruby_dark-red",
    "tests.ruby": "_test-ruby_dark-red",
    "_tests.ruby": "_test-ruby_dark-red",
    "-tests.sjs": "_test-js_dark-yellow",
    "tests.sjs": "_test-js_dark-yellow",
    "_tests.sjs": "_test-js_dark-yellow",
    "-tests.ts": "_test-ts_dark-blue",
    "tests.ts": "_test-ts_dark-blue",
    "_tests.ts": "_test-ts_dark-blue",
    "-tests.tsx": "_test-ts_medium-blue",
    "tests.tsx": "_test-ts_medium-blue",
    "_tests.tsx": "_test-ts_medium-blue",
    "-test.ts": "_test-ts_dark-blue",
    "test.ts": "_test-ts_dark-blue",
    "_test.ts": "_test-ts_dark-blue",
    "-test.tsx": "_test-ts_medium-blue",
    "test.tsx": "_test-ts_medium-blue",
    "_test.tsx": "_test-ts_medium-blue",
    tex: "_tex_dark-blue",
    texi: "_tex_dark-red",
    texinfo: "_tex_dark-red",
    tikz: "_tex_dark-purple",
    toc: "_toc_dark-cyan",
    tpl: "_smarty_dark-yellow",
    tpp: "_cpp_dark-orange",
    txi: "_tex_dark-red",
    "unibeautifyrc.cjs": "_unibeautify_dark-orange",
    "unibeautifyrc.js": "_unibeautify_dark-orange",
    "unibeautifyrc.json": "_unibeautify_dark-orange",
    "unibeautifyrc.mjs": "_unibeautify_dark-orange",
    "unibeautifyrc.yaml": "_unibeautify_dark-yellow",
    "unibeautifyrc.yml": "_unibeautify_dark-yellow",
    units: "_scales_dark-green",
    vbox: "_virtualbox_dark-blue",
    "vbox-prev": "_virtualbox_dark-blue",
    vbox_version: "_virtualbox_dark-blue",
    vcxitems: "_vs_dark-purple",
    vh: "_sysverilog_dark-cyan",
    vmdk: "_vmware_dark-orange",
    vmss: "_vmware_dark-blue",
    vmtm: "_vmware_dark-red",
    vmx: "_vmware_dark-orange",
    vmxf: "_vmware_dark-orange",
    vrimg: "_vray_dark-grey",
    wix: "_wix_dark-maroon",
    wlt: "_wolfram_dark-orange",
    wxi: "_wix_dark-orange",
    wxl: "_wix_dark-maroon",
    xpy: "_python_dark-yellow",
    xsjs: "_js_dark-purple",
    xsjslib: "_js_dark-blue",
    yardopts: "_config-ruby_dark-red",
    zs: "_crafttweaker_dark-maroon",
    ztl: "_zbrush_dark-red"
  },
  fileNames: {
    "api-extractor-base.json": "_apiextractor_medium-blue",
    "api-extractor.json": "_apiextractor_medium-blue",
    authors: "_at_dark-red",
    berksfile: "_chef_dark-orange",
    "berksfile.lock": "_chef_dark-orange",
    "bootstrap.cjs": "_bootstrap_dark-green",
    "bootstrap.js": "_bootstrap_dark-yellow",
    "bootstrap.mjs": "_bootstrap_dark-blue",
    bowerfile: "_bower_medium-orange",
    "bower.json": "_bower_medium-orange",
    ".bowerrc": "_bower_medium-orange",
    brewfile: "_brew_dark-orange",
    "cabal-ghcjs.project": "_cabal_dark-yellow",
    "chai.coffee": "_chai_dark-red",
    "chai.es": "_chai_dark-red",
    "chai.es6": "_chai_dark-red",
    "chai.js": "_chai_dark-red",
    "chai.jsx": "_chai_dark-red",
    "chai.ts": "_chai_dark-red",
    "chai.tsx": "_chai_dark-red",
    chefignore: "_chef_dark-orange",
    "codemeta.json": "_codemeta_dark-grey",
    "codemeta.jsonld": "_codemeta_dark-grey",
    codeowners: "_at_dark-red",
    "conan.conf": "_conan_dark-blue",
    "conanfile.py": "_conan_dark-blue",
    "conanfile.txt": "_conan_dark-blue",
    "+contents": "_openbsd_dark-orange",
    "custom.bootstrap.cjs": "_bootstrap_dark-green",
    "custom.bootstrap.js": "_bootstrap_dark-yellow",
    "custom.bootstrap.mjs": "_bootstrap_dark-blue",
    "deno.json": "_deno_dark-grey",
    "deno.jsonc": "_deno_dark-grey",
    "+desc": "_openbsd_dark-orange",
    "+display": "_openbsd_dark-orange",
    "docz.cjs": "_docz_dark-yellow",
    "docz.config.cjs": "_docz_dark-yellow",
    "docz.config.js": "_docz_dark-yellow",
    "docz.config.json": "_docz_dark-orange",
    "docz.config.mjs": "_docz_dark-yellow",
    "docz.js": "_docz_dark-yellow",
    "docz.json": "_docz_dark-orange",
    "docz.mjs": "_docz_dark-yellow",
    "doczrc.cjs": "_docz_dark-yellow",
    "doczrc.config.cjs": "_docz_dark-yellow",
    "doczrc.config.js": "_docz_dark-yellow",
    "doczrc.config.json": "_docz_dark-orange",
    "doczrc.config.mjs": "_docz_dark-yellow",
    "doczrc.js": "_docz_dark-yellow",
    "doczrc.json": "_docz_dark-orange",
    "doczrc.mjs": "_docz_dark-yellow",
    ".env": "_dotenv_dark-yellow",
    "eshost-config.json": "_config-js_dark-yellow",
    ".eshost-config.json": "_config-js_dark-yellow",
    "eshost.json": "_config-js_dark-yellow",
    ".eshost.json": "_config-js_dark-yellow",
    "fabric.mod.json": "_fabric_dark-orange",
    "fuelux.cjs": "_fuelux_dark-orange",
    "fuelux.css": "_fuelux_dark-orange",
    "fuelux.js": "_fuelux_dark-orange",
    "fuelux.min.cjs": "_fuelux_dark-orange",
    "fuelux.min.css": "_fuelux_dark-orange",
    "fuelux.min.js": "_fuelux_dark-orange",
    "fuelux.min.mjs": "_fuelux_dark-orange",
    "fuelux.mjs": "_fuelux_dark-orange",
    gemfile: "_bundler_dark-blue",
    "gemfile.lock": "_bundler_dark-blue",
    "haskellconfig.json": "_config-hs_dark-purple",
    "hyphen.cs": "_tex_dark-red",
    "hyphen.den": "_tex_dark-red",
    "hyphen.det": "_tex_dark-red",
    "hyphenex.cs": "_tex_dark-red",
    "hyphenex.den": "_tex_dark-red",
    "hyphenex.det": "_tex_dark-red",
    "hyphenex.fr": "_tex_dark-red",
    "hyphenex.sv": "_tex_dark-red",
    "hyphenex.us": "_tex_dark-red",
    "hyphen.fr": "_tex_dark-red",
    "hyphen.sv": "_tex_dark-red",
    "hyphen.us": "_tex_dark-red",
    "installscript.qs": "_qt_dark-yellow",
    jakefile: "_jake_dark-maroon",
    "jasmine.0.cjs": "_jasmine_dark-purple",
    "jasmine.0.coffee": "_jasmine_dark-purple",
    "jasmine.0.js": "_jasmine_dark-purple",
    "jasmine.0.mjs": "_jasmine_dark-purple",
    "jasmine.0.ts": "_jasmine_dark-purple",
    "jasmine.1.cjs": "_jasmine_dark-purple",
    "jasmine.1.coffee": "_jasmine_dark-purple",
    "jasmine.1.js": "_jasmine_dark-purple",
    "jasmine.1.mjs": "_jasmine_dark-purple",
    "jasmine.1.ts": "_jasmine_dark-purple",
    "jasmine.2.cjs": "_jasmine_dark-purple",
    "jasmine.2.coffee": "_jasmine_dark-purple",
    "jasmine.2.js": "_jasmine_dark-purple",
    "jasmine.2.mjs": "_jasmine_dark-purple",
    "jasmine.2.ts": "_jasmine_dark-purple",
    "jasmine.3.cjs": "_jasmine_dark-purple",
    "jasmine.3.coffee": "_jasmine_dark-purple",
    "jasmine.3.js": "_jasmine_dark-purple",
    "jasmine.3.mjs": "_jasmine_dark-purple",
    "jasmine.3.ts": "_jasmine_dark-purple",
    "jasmine.4.cjs": "_jasmine_dark-purple",
    "jasmine.4.coffee": "_jasmine_dark-purple",
    "jasmine.4.js": "_jasmine_dark-purple",
    "jasmine.4.mjs": "_jasmine_dark-purple",
    "jasmine.4.ts": "_jasmine_dark-purple",
    "jasmine.5.cjs": "_jasmine_dark-purple",
    "jasmine.5.coffee": "_jasmine_dark-purple",
    "jasmine.5.js": "_jasmine_dark-purple",
    "jasmine.5.mjs": "_jasmine_dark-purple",
    "jasmine.5.ts": "_jasmine_dark-purple",
    "jasmine.6.cjs": "_jasmine_dark-purple",
    "jasmine.6.coffee": "_jasmine_dark-purple",
    "jasmine.6.js": "_jasmine_dark-purple",
    "jasmine.6.mjs": "_jasmine_dark-purple",
    "jasmine.6.ts": "_jasmine_dark-purple",
    "jasmine.7.cjs": "_jasmine_dark-purple",
    "jasmine.7.coffee": "_jasmine_dark-purple",
    "jasmine.7.js": "_jasmine_dark-purple",
    "jasmine.7.mjs": "_jasmine_dark-purple",
    "jasmine.7.ts": "_jasmine_dark-purple",
    "jasmine.8.cjs": "_jasmine_dark-purple",
    "jasmine.8.coffee": "_jasmine_dark-purple",
    "jasmine.8.js": "_jasmine_dark-purple",
    "jasmine.8.mjs": "_jasmine_dark-purple",
    "jasmine.8.ts": "_jasmine_dark-purple",
    "jasmine.9.cjs": "_jasmine_dark-purple",
    "jasmine.9.coffee": "_jasmine_dark-purple",
    "jasmine.9.js": "_jasmine_dark-purple",
    "jasmine.9.mjs": "_jasmine_dark-purple",
    "jasmine.9.ts": "_jasmine_dark-purple",
    "jasmine.a.cjs": "_jasmine_dark-purple",
    "jasmine.a.coffee": "_jasmine_dark-purple",
    "jasmine.a.js": "_jasmine_dark-purple",
    "jasmine.a.mjs": "_jasmine_dark-purple",
    "jasmine.a.ts": "_jasmine_dark-purple",
    "jasmine.b.cjs": "_jasmine_dark-purple",
    "jasmine.b.coffee": "_jasmine_dark-purple",
    "jasmine.b.js": "_jasmine_dark-purple",
    "jasmine.b.mjs": "_jasmine_dark-purple",
    "jasmine.b.ts": "_jasmine_dark-purple",
    "jasmine.c.cjs": "_jasmine_dark-purple",
    "jasmine.c.coffee": "_jasmine_dark-purple",
    "jasmine.cjs": "_jasmine_dark-purple",
    "jasmine.-.cjs": "_jasmine_dark-purple",
    "jasmine.c.js": "_jasmine_dark-purple",
    "jasmine._.cjs": "_jasmine_dark-purple",
    "jasmine.c.mjs": "_jasmine_dark-purple",
    "jasmine.coffee": "_jasmine_dark-purple",
    "jasmine.-.coffee": "_jasmine_dark-purple",
    "jasmine._.coffee": "_jasmine_dark-purple",
    "jasmine.c.ts": "_jasmine_dark-purple",
    "jasmine.d.cjs": "_jasmine_dark-purple",
    "jasmine.d.coffee": "_jasmine_dark-purple",
    "jasmine.d.js": "_jasmine_dark-purple",
    "jasmine.d.mjs": "_jasmine_dark-purple",
    "jasmine.d.ts": "_jasmine_dark-purple",
    "jasmine.e.cjs": "_jasmine_dark-purple",
    "jasmine.e.coffee": "_jasmine_dark-purple",
    "jasmine.e.js": "_jasmine_dark-purple",
    "jasmine.e.mjs": "_jasmine_dark-purple",
    "jasmine.e.ts": "_jasmine_dark-purple",
    "jasmine.f.cjs": "_jasmine_dark-purple",
    "jasmine.f.coffee": "_jasmine_dark-purple",
    "jasmine.f.js": "_jasmine_dark-purple",
    "jasmine.f.mjs": "_jasmine_dark-purple",
    "jasmine.f.ts": "_jasmine_dark-purple",
    "jasmine.g.cjs": "_jasmine_dark-purple",
    "jasmine.g.coffee": "_jasmine_dark-purple",
    "jasmine.g.js": "_jasmine_dark-purple",
    "jasmine.g.mjs": "_jasmine_dark-purple",
    "jasmine.g.ts": "_jasmine_dark-purple",
    "jasmine.h.cjs": "_jasmine_dark-purple",
    "jasmine.h.coffee": "_jasmine_dark-purple",
    "jasmine.h.js": "_jasmine_dark-purple",
    "jasmine.h.mjs": "_jasmine_dark-purple",
    "jasmine.h.ts": "_jasmine_dark-purple",
    "jasmine.i.cjs": "_jasmine_dark-purple",
    "jasmine.i.coffee": "_jasmine_dark-purple",
    "jasmine.i.js": "_jasmine_dark-purple",
    "jasmine.i.mjs": "_jasmine_dark-purple",
    "jasmine.i.ts": "_jasmine_dark-purple",
    "jasmine.j.cjs": "_jasmine_dark-purple",
    "jasmine.j.coffee": "_jasmine_dark-purple",
    "jasmine.j.js": "_jasmine_dark-purple",
    "jasmine.j.mjs": "_jasmine_dark-purple",
    "jasmine.js": "_jasmine_dark-purple",
    "jasmine.-.js": "_jasmine_dark-purple",
    "jasmine._.js": "_jasmine_dark-purple",
    "jasmine.json": "_jasmine_dark-purple",
    ".jasmine.json": "_jasmine_dark-purple",
    "jasmine.j.ts": "_jasmine_dark-purple",
    "jasmine.k.cjs": "_jasmine_dark-purple",
    "jasmine.k.coffee": "_jasmine_dark-purple",
    "jasmine.k.js": "_jasmine_dark-purple",
    "jasmine.k.mjs": "_jasmine_dark-purple",
    "jasmine.k.ts": "_jasmine_dark-purple",
    "jasmine.l.cjs": "_jasmine_dark-purple",
    "jasmine.l.coffee": "_jasmine_dark-purple",
    "jasmine.l.js": "_jasmine_dark-purple",
    "jasmine.l.mjs": "_jasmine_dark-purple",
    "jasmine.l.ts": "_jasmine_dark-purple",
    "jasmine.m.cjs": "_jasmine_dark-purple",
    "jasmine.m.coffee": "_jasmine_dark-purple",
    "jasmine.mjs": "_jasmine_dark-purple",
    "jasmine.-.mjs": "_jasmine_dark-purple",
    "jasmine.m.js": "_jasmine_dark-purple",
    "jasmine._.mjs": "_jasmine_dark-purple",
    "jasmine.m.mjs": "_jasmine_dark-purple",
    "jasmine.m.ts": "_jasmine_dark-purple",
    "jasmine.n.cjs": "_jasmine_dark-purple",
    "jasmine.n.coffee": "_jasmine_dark-purple",
    "jasmine.n.js": "_jasmine_dark-purple",
    "jasmine.n.mjs": "_jasmine_dark-purple",
    "jasmine.n.ts": "_jasmine_dark-purple",
    "jasmine.o.cjs": "_jasmine_dark-purple",
    "jasmine.o.coffee": "_jasmine_dark-purple",
    "jasmine.o.js": "_jasmine_dark-purple",
    "jasmine.o.mjs": "_jasmine_dark-purple",
    "jasmine.o.ts": "_jasmine_dark-purple",
    "jasmine.p.cjs": "_jasmine_dark-purple",
    "jasmine.p.coffee": "_jasmine_dark-purple",
    "jasmine.p.js": "_jasmine_dark-purple",
    "jasmine.p.mjs": "_jasmine_dark-purple",
    "jasmine.p.ts": "_jasmine_dark-purple",
    "jasmine.q.cjs": "_jasmine_dark-purple",
    "jasmine.q.coffee": "_jasmine_dark-purple",
    "jasmine.q.js": "_jasmine_dark-purple",
    "jasmine.q.mjs": "_jasmine_dark-purple",
    "jasmine.q.ts": "_jasmine_dark-purple",
    "jasmine.r.cjs": "_jasmine_dark-purple",
    "jasmine.r.coffee": "_jasmine_dark-purple",
    "jasmine.r.js": "_jasmine_dark-purple",
    "jasmine.r.mjs": "_jasmine_dark-purple",
    "jasmine.r.ts": "_jasmine_dark-purple",
    "jasmine.s.cjs": "_jasmine_dark-purple",
    "jasmine.s.coffee": "_jasmine_dark-purple",
    "jasmine.s.js": "_jasmine_dark-purple",
    "jasmine.s.mjs": "_jasmine_dark-purple",
    "jasmine.s.ts": "_jasmine_dark-purple",
    "jasmine.t.cjs": "_jasmine_dark-purple",
    "jasmine.t.coffee": "_jasmine_dark-purple",
    "jasmine.t.js": "_jasmine_dark-purple",
    "jasmine.t.mjs": "_jasmine_dark-purple",
    "jasmine.ts": "_jasmine_dark-purple",
    "jasmine.-.ts": "_jasmine_dark-purple",
    "jasmine._.ts": "_jasmine_dark-purple",
    "jasmine.t.ts": "_jasmine_dark-purple",
    "jasmine.u.cjs": "_jasmine_dark-purple",
    "jasmine.u.coffee": "_jasmine_dark-purple",
    "jasmine.u.js": "_jasmine_dark-purple",
    "jasmine.u.mjs": "_jasmine_dark-purple",
    "jasmine.u.ts": "_jasmine_dark-purple",
    "jasmine.v.cjs": "_jasmine_dark-purple",
    "jasmine.v.coffee": "_jasmine_dark-purple",
    "jasmine.v.js": "_jasmine_dark-purple",
    "jasmine.v.mjs": "_jasmine_dark-purple",
    "jasmine.v.ts": "_jasmine_dark-purple",
    "jasmine.w.cjs": "_jasmine_dark-purple",
    "jasmine.w.coffee": "_jasmine_dark-purple",
    "jasmine.w.js": "_jasmine_dark-purple",
    "jasmine.w.mjs": "_jasmine_dark-purple",
    "jasmine.w.ts": "_jasmine_dark-purple",
    "jasmine.x.cjs": "_jasmine_dark-purple",
    "jasmine.x.coffee": "_jasmine_dark-purple",
    "jasmine.x.js": "_jasmine_dark-purple",
    "jasmine.x.mjs": "_jasmine_dark-purple",
    "jasmine.x.ts": "_jasmine_dark-purple",
    "jasmine.y.cjs": "_jasmine_dark-purple",
    "jasmine.y.coffee": "_jasmine_dark-purple",
    "jasmine.y.js": "_jasmine_dark-purple",
    "jasmine.y.mjs": "_jasmine_dark-purple",
    "jasmine.y.ts": "_jasmine_dark-purple",
    "jasmine.z.cjs": "_jasmine_dark-purple",
    "jasmine.z.coffee": "_jasmine_dark-purple",
    "jasmine.z.js": "_jasmine_dark-purple",
    "jasmine.z.mjs": "_jasmine_dark-purple",
    "jasmine.z.ts": "_jasmine_dark-purple",
    jenkinsfile: "_jenkins_dark-red",
    "jsconfig.0.json": "_config-js_dark-yellow",
    "jsconfig.1.json": "_config-js_dark-yellow",
    "jsconfig.2.json": "_config-js_dark-yellow",
    "jsconfig.3.json": "_config-js_dark-yellow",
    "jsconfig.4.json": "_config-js_dark-yellow",
    "jsconfig.5.json": "_config-js_dark-yellow",
    "jsconfig.6.json": "_config-js_dark-yellow",
    "jsconfig.7.json": "_config-js_dark-yellow",
    "jsconfig.8.json": "_config-js_dark-yellow",
    "jsconfig.9.json": "_config-js_dark-yellow",
    "jsconfig.a.json": "_config-js_dark-yellow",
    "jsconfig.b.json": "_config-js_dark-yellow",
    "jsconfig.c.json": "_config-js_dark-yellow",
    "jsconfig.d.json": "_config-js_dark-yellow",
    "jsconfig.e.json": "_config-js_dark-yellow",
    "jsconfig.f.json": "_config-js_dark-yellow",
    "jsconfig.g.json": "_config-js_dark-yellow",
    "jsconfig.h.json": "_config-js_dark-yellow",
    "jsconfig.i.json": "_config-js_dark-yellow",
    "jsconfig.j.json": "_config-js_dark-yellow",
    "jsconfig.json": "_config-js_dark-yellow",
    "jsconfig. .json": "_config-js_dark-yellow",
    "jsconfig.!.json": "_config-js_dark-yellow",
    'jsconfig.".json': "_config-js_dark-yellow",
    "jsconfig.#.json": "_config-js_dark-yellow",
    "jsconfig.$.json": "_config-js_dark-yellow",
    "jsconfig.%.json": "_config-js_dark-yellow",
    "jsconfig.&.json": "_config-js_dark-yellow",
    "jsconfig.'.json": "_config-js_dark-yellow",
    "jsconfig.(.json": "_config-js_dark-yellow",
    "jsconfig.).json": "_config-js_dark-yellow",
    "jsconfig.*.json": "_config-js_dark-yellow",
    "jsconfig.+.json": "_config-js_dark-yellow",
    "jsconfig.,.json": "_config-js_dark-yellow",
    "jsconfig.-.json": "_config-js_dark-yellow",
    "jsconfig...json": "_config-js_dark-yellow",
    "jsconfig./.json": "_config-js_dark-yellow",
    "jsconfig.:.json": "_config-js_dark-yellow",
    "jsconfig.;.json": "_config-js_dark-yellow",
    "jsconfig.<.json": "_config-js_dark-yellow",
    "jsconfig.=.json": "_config-js_dark-yellow",
    "jsconfig.>.json": "_config-js_dark-yellow",
    "jsconfig.?.json": "_config-js_dark-yellow",
    "jsconfig.@.json": "_config-js_dark-yellow",
    "jsconfig.[.json": "_config-js_dark-yellow",
    "jsconfig.\\.json": "_config-js_dark-yellow",
    "jsconfig.].json": "_config-js_dark-yellow",
    "jsconfig.^.json": "_config-js_dark-yellow",
    "jsconfig._.json": "_config-js_dark-yellow",
    "jsconfig.`.json": "_config-js_dark-yellow",
    "jsconfig.{.json": "_config-js_dark-yellow",
    "jsconfig.|.json": "_config-js_dark-yellow",
    "jsconfig.}.json": "_config-js_dark-yellow",
    "jsconfig.~.json": "_config-js_dark-yellow",
    "jsconfig.k.json": "_config-js_dark-yellow",
    "jsconfig.l.json": "_config-js_dark-yellow",
    "jsconfig.m.json": "_config-js_dark-yellow",
    "jsconfig.n.json": "_config-js_dark-yellow",
    "jsconfig.o.json": "_config-js_dark-yellow",
    "jsconfig.p.json": "_config-js_dark-yellow",
    "jsconfig.q.json": "_config-js_dark-yellow",
    "jsconfig.r.json": "_config-js_dark-yellow",
    "jsconfig.s.json": "_config-js_dark-yellow",
    "jsconfig.t.json": "_config-js_dark-yellow",
    "jsconfig.u.json": "_config-js_dark-yellow",
    "jsconfig.v.json": "_config-js_dark-yellow",
    "jsconfig.w.json": "_config-js_dark-yellow",
    "jsconfig.x.json": "_config-js_dark-yellow",
    "jsconfig.y.json": "_config-js_dark-yellow",
    "jsconfig.z.json": "_config-js_dark-yellow",
    "jsxconfig.json": "_config-react_dark-blue",
    "lerna.json": "_lerna_dark-blue",
    "makefile.boot": "_boot_dark-green",
    "meta.json": "_cpan_dark-yellow",
    ".nowignore": "_zeit_dark-maroon",
    "now.json": "_zeit_dark-grey",
    "nyc.config.cjs": "_istanbul_dark-green",
    "nyc.config.js": "_istanbul_dark-yellow",
    "nyc.config.mjs": "_istanbul_dark-blue",
    owners: "_at_dark-red",
    ".photorec.cfg": "_photorec_dark-green",
    "pnpmfile.js": "_pnpm_dark-yellow",
    policyfile: "_chef_dark-orange",
    "policyfile.lock": "_chef_dark-orange",
    "postcss.config.cjs": "_postcss_dark-yellow",
    "postcss.config.js": "_postcss_dark-yellow",
    "postcss.config.mjs": "_postcss_dark-yellow",
    ".pre-commit.yaml": "_precommit_dark-yellow",
    ".pre-commit.yml": "_precommit_dark-yellow",
    "prettier.config.cjs": "_prettier_dark-cyan",
    "prettier.config.js": "_prettier_dark-cyan",
    "prettier.config.mjs": "_prettier_dark-cyan",
    "riemann.config": "_clojure_dark-maroon",
    "rubyconfig.json": "_config-ruby_dark-red",
    ".sassrc": "_sass_dark-yellow",
    ".sassrc.cjs": "_sass_dark-yellow",
    ".sassrc.js": "_sass_dark-yellow",
    ".sassrc.mjs": "_sass_dark-yellow",
    "shadow-cljs.edn": "_shadowcljs_dark-cyan",
    "stylelint.config.cjs": "_stylelint_dark-yellow",
    "stylelint.config.js": "_stylelint_dark-yellow",
    "stylelint.config.mjs": "_stylelint_dark-yellow",
    "test-.c2hs": "_test-hs_dark-purple",
    "test..c2hs": "_test-hs_dark-purple",
    "test_.c2hs": "_test-hs_dark-purple",
    "test-.cjs": "_test-js_dark-green",
    "test..cjs": "_test-js_dark-green",
    "test_.cjs": "_test-js_dark-green",
    "test-.cjsx": "_test-coffee_dark-maroon",
    "test_.cjsx": "_test-coffee_dark-maroon",
    "test-.coffee": "_test-coffee_dark-maroon",
    "test_.coffee": "_test-coffee_dark-maroon",
    "test-.es": "_test-js_dark-yellow",
    "test..es": "_test-js_dark-yellow",
    "test_.es": "_test-js_dark-yellow",
    "test-.go": "_test-go_dark-cyan",
    "test..go": "_test-go_dark-cyan",
    "test_.go": "_test-go_dark-cyan",
    "test-.hs": "_test-hs_dark-purple",
    "test..hs": "_test-hs_dark-purple",
    "test_.hs": "_test-hs_dark-purple",
    "test-.hsc": "_test-hs_dark-purple",
    "test..hsc": "_test-hs_dark-purple",
    "test_.hsc": "_test-hs_dark-purple",
    "test-.iced": "_test-coffee_dark-maroon",
    "test_.iced": "_test-coffee_dark-maroon",
    "test-.js": "_test-js_dark-yellow",
    "test-._js": "_test-js_dark-yellow",
    "test..js": "_test-js_dark-yellow",
    "test.._js": "_test-js_dark-yellow",
    "test_.js": "_test-js_dark-yellow",
    "test_._js": "_test-js_dark-yellow",
    "test-.jsb": "_test-js_dark-yellow",
    "test..jsb": "_test-js_dark-yellow",
    "test_.jsb": "_test-js_dark-yellow",
    "test-.jsm": "_test-js_dark-yellow",
    "test..jsm": "_test-js_dark-yellow",
    "test_.jsm": "_test-js_dark-yellow",
    "test-.jss": "_test-js_dark-yellow",
    "test..jss": "_test-js_dark-yellow",
    "test_.jss": "_test-js_dark-yellow",
    "test-.jsx": "_test-react_dark-blue",
    "test..jsx": "_test-react_dark-blue",
    "test_.jsx": "_test-react_dark-blue",
    "test-.lhs": "_test-hs_dark-purple",
    "test..lhs": "_test-hs_dark-purple",
    "test_.lhs": "_test-hs_dark-purple",
    "test-.litcoffee": "_test-coffee_dark-maroon",
    "test_.litcoffee": "_test-coffee_dark-maroon",
    "test-.mjs": "_test-js_dark-blue",
    "test..mjs": "_test-js_dark-blue",
    "test_.mjs": "_test-js_dark-blue",
    "test-.pl": "_test-perl_dark-blue",
    "test..pl": "_test-perl_dark-blue",
    "test_.pl": "_test-perl_dark-blue",
    "test-.rb": "_test-ruby_dark-red",
    "test..rb": "_test-ruby_dark-red",
    "test_.rb": "_test-ruby_dark-red",
    "test-.react.cjs": "_test-react_dark-blue",
    "test..react.cjs": "_test-react_dark-blue",
    "test_.react.cjs": "_test-react_dark-blue",
    "test-.react.js": "_test-react_dark-blue",
    "test..react.js": "_test-react_dark-blue",
    "test_.react.js": "_test-react_dark-blue",
    "test-.react.mjs": "_test-react_dark-blue",
    "test..react.mjs": "_test-react_dark-blue",
    "test_.react.mjs": "_test-react_dark-blue",
    "test-.rs": "_test-rust_dark-maroon",
    "test_.rs": "_test-rust_dark-maroon",
    "test-.ruby": "_test-ruby_dark-red",
    "test..ruby": "_test-ruby_dark-red",
    "test_.ruby": "_test-ruby_dark-red",
    "test-.sjs": "_test-js_dark-yellow",
    "test..sjs": "_test-js_dark-yellow",
    "test_.sjs": "_test-js_dark-yellow",
    "test-.ts": "_test-ts_dark-blue",
    "test..ts": "_test-ts_dark-blue",
    "test_.ts": "_test-ts_dark-blue",
    "test-.tsx": "_test-ts_medium-blue",
    "test..tsx": "_test-ts_medium-blue",
    "test_.tsx": "_test-ts_medium-blue",
    "toolchain_installscript.qs": "_qt_dark-yellow",
    "truffle.cjs": "_truffle_dark-maroon",
    ".truffle.cjs": "_truffle_dark-maroon",
    "truffle.js": "_truffle_dark-maroon",
    ".truffle.js": "_truffle_dark-maroon",
    "truffle.mjs": "_truffle_dark-maroon",
    ".truffle.mjs": "_truffle_dark-maroon",
    "tsconfig.0.json": "_config-ts_dark-blue",
    "tsconfig.1.json": "_config-ts_dark-blue",
    "tsconfig.2.json": "_config-ts_dark-blue",
    "tsconfig.3.json": "_config-ts_dark-blue",
    "tsconfig.4.json": "_config-ts_dark-blue",
    "tsconfig.5.json": "_config-ts_dark-blue",
    "tsconfig.6.json": "_config-ts_dark-blue",
    "tsconfig.7.json": "_config-ts_dark-blue",
    "tsconfig.8.json": "_config-ts_dark-blue",
    "tsconfig.9.json": "_config-ts_dark-blue",
    "tsconfig.a.json": "_config-ts_dark-blue",
    "tsconfig.b.json": "_config-ts_dark-blue",
    "tsconfig.c.json": "_config-ts_dark-blue",
    "tsconfig.d.json": "_config-ts_dark-blue",
    "tsconfig.e.json": "_config-ts_dark-blue",
    "tsconfig.f.json": "_config-ts_dark-blue",
    "tsconfig.g.json": "_config-ts_dark-blue",
    "tsconfig.h.json": "_config-ts_dark-blue",
    "tsconfig.i.json": "_config-ts_dark-blue",
    "tsconfig.j.json": "_config-ts_dark-blue",
    "tsconfig.json": "_config-ts_dark-blue",
    "tsconfig. .json": "_config-ts_dark-blue",
    "tsconfig.!.json": "_config-ts_dark-blue",
    'tsconfig.".json': "_config-ts_dark-blue",
    "tsconfig.#.json": "_config-ts_dark-blue",
    "tsconfig.$.json": "_config-ts_dark-blue",
    "tsconfig.%.json": "_config-ts_dark-blue",
    "tsconfig.&.json": "_config-ts_dark-blue",
    "tsconfig.'.json": "_config-ts_dark-blue",
    "tsconfig.(.json": "_config-ts_dark-blue",
    "tsconfig.).json": "_config-ts_dark-blue",
    "tsconfig.*.json": "_config-ts_dark-blue",
    "tsconfig.+.json": "_config-ts_dark-blue",
    "tsconfig.,.json": "_config-ts_dark-blue",
    "tsconfig.-.json": "_config-ts_dark-blue",
    "tsconfig...json": "_config-ts_dark-blue",
    "tsconfig./.json": "_config-ts_dark-blue",
    "tsconfig.:.json": "_config-ts_dark-blue",
    "tsconfig.;.json": "_config-ts_dark-blue",
    "tsconfig.<.json": "_config-ts_dark-blue",
    "tsconfig.=.json": "_config-ts_dark-blue",
    "tsconfig.>.json": "_config-ts_dark-blue",
    "tsconfig.?.json": "_config-ts_dark-blue",
    "tsconfig.@.json": "_config-ts_dark-blue",
    "tsconfig.[.json": "_config-ts_dark-blue",
    "tsconfig.\\.json": "_config-ts_dark-blue",
    "tsconfig.].json": "_config-ts_dark-blue",
    "tsconfig.^.json": "_config-ts_dark-blue",
    "tsconfig._.json": "_config-ts_dark-blue",
    "tsconfig.`.json": "_config-ts_dark-blue",
    "tsconfig.{.json": "_config-ts_dark-blue",
    "tsconfig.|.json": "_config-ts_dark-blue",
    "tsconfig.}.json": "_config-ts_dark-blue",
    "tsconfig.~.json": "_config-ts_dark-blue",
    "tsconfig.k.json": "_config-ts_dark-blue",
    "tsconfig.l.json": "_config-ts_dark-blue",
    "tsconfig.m.json": "_config-ts_dark-blue",
    "tsconfig.n.json": "_config-ts_dark-blue",
    "tsconfig.o.json": "_config-ts_dark-blue",
    "tsconfig.p.json": "_config-ts_dark-blue",
    "tsconfig.q.json": "_config-ts_dark-blue",
    "tsconfig.r.json": "_config-ts_dark-blue",
    "tsconfig.s.json": "_config-ts_dark-blue",
    "tsconfig.t.json": "_config-ts_dark-blue",
    "tsconfig.u.json": "_config-ts_dark-blue",
    "tsconfig.v.json": "_config-ts_dark-blue",
    "tsconfig.w.json": "_config-ts_dark-blue",
    "tsconfig.x.json": "_config-ts_dark-blue",
    "tsconfig.y.json": "_config-ts_dark-blue",
    "tsconfig.z.json": "_config-ts_dark-blue",
    "tslint.json": "_config-ts_dark-purple",
    "ubsan.blacklist": "_llvm_dark-red",
    "unibeautify.config.cjs": "_unibeautify_dark-orange",
    "unibeautify.config.js": "_unibeautify_dark-orange",
    "unibeautify.config.mjs": "_unibeautify_dark-orange",
    "units.dat": "_scales_dark-green",
    unitshistory: "_scales_dark-red",
    "units-history": "_scales_dark-red",
    units_history: "_scales_dark-red",
    ".unitshistory": "_scales_dark-red",
    ".units-history": "_scales_dark-red",
    ".units_history": "_scales_dark-red",
    "units.lib": "_scales_dark-green",
    unittab: "_scales_dark-green",
    ".vercelignore": "_zeit_dark-maroon",
    "vercel.json": "_zeit_dark-grey",
    "vite.config.js": "_vite_dark-yellow",
    "vite.config.ts": "_vite_dark-yellow",
    "w3c.json": "_w3c_dark-blue",
    ".zsrc.json": "_crafttweaker_dark-orange"
  }
}, Ce = {
  fonts: cs,
  file: _s,
  folder: fs,
  rootFolder: hs,
  iconDefinitions: ps,
  fileExtensions: gs,
  fileNames: bs,
  folderNames: ks,
  languageIds: vs,
  light: Cs
};
function ys(r) {
  switch (r) {
    case "./devopicons.woff2":
      return new URL("data:font/woff2;base64,", self.location).href;
    case "./file-icons.woff2":
      return new URL("data:font/woff2;base64,", self.location).href;
    case "./fontawesome.woff2":
      return new URL("data:font/woff2;base64,", self.location).href;
    case "./mfixx.woff2":
      return new URL("data:font/woff2;base64,", self.location).href;
    case "./octicons.woff2":
      return new URL("data:font/woff2;base64,", self.location).href;
  }
}
function Ss() {
  const r = Ce.fonts.map((i) => (new URL("data:font/woff2;base64,", self.location).href, `
      @font-face {
        src: url(${ys(i.src[0].path)});
        font-family: ${i.id};
        font-weight: ${i.weight};
        font-style: ${i.style};
        font-size: ${i.size};
      }
    `)).join(`
`), e = Object.keys(Ce.iconDefinitions).map((i) => {
    const n = Ce.iconDefinitions[i];
    return `
      .icon.icon${i}::before {
        padding-right: 6px;
        font-family: ${n.fontId};
        font-weight: ${n.fontWeight};
        font-size: ${n.fontSize};
        content: "${n.fontCharacter}";
        color: ${n.fontColor};
      }
    `;
  }).join(`
`), t = document.createElement("style");
  t.innerHTML = r + e, document.head.appendChild(t);
}
function ws(r, e, t, i, n) {
  const a = r.split("/").pop(), l = r.split(".").pop(), o = Ce.file, s = Ce.folder, d = Ce.rootFolder;
  if (t)
    return i ? d : n === "light" && Ce.light.folderNames[r] ? Ce.light.folderNames[r] : Ce.folderNames[r] ? Ce.folderNames[r] : s;
  if (a && Ce.fileNames[a]) {
    if (n === "light" && Ce.light.fileNames[a])
      return Ce.light.fileNames[a];
    if (Ce.fileNames[a])
      return Ce.fileNames[a];
  }
  if (Ce.languageIds[e]) {
    if (n === "light" && Ce.light.languageIds[e])
      return Ce.light.languageIds[e];
    if (Ce.languageIds[e])
      return Ce.languageIds[e];
  }
  if (l && Ce.fileExtensions[l]) {
    if (n === "light" && Ce.light.fileExtensions[l])
      return Ce.light.fileExtensions[l];
    if (Ce.fileExtensions[l])
      return Ce.fileExtensions[l];
  }
  return o;
}
function Is(r, e, t, i, n) {
  return `icon icon${ws(r, e, t, i, n)}`;
}
class Tn {
  constructor() {
  }
}
class wt extends Tn {
  constructor(e, t, i) {
    super(), this.viewId = e, this.groupId = t, this.panelId = i;
  }
}
class ur extends Tn {
  constructor(e, t) {
    super(), this.viewId = e, this.paneId = t;
  }
}
class st {
  constructor() {
  }
  static getInstance() {
    return st.INSTANCE;
  }
  hasData(e) {
    return e && e === this.proto;
  }
  clearData(e) {
    this.hasData(e) && (this.proto = void 0, this.data = void 0);
  }
  getData(e) {
    if (this.hasData(e))
      return this.data;
  }
  setData(e, t) {
    t && (this.data = e, this.proto = t);
  }
}
st.INSTANCE = new st();
function ot() {
  const r = st.getInstance();
  if (r.hasData(wt.prototype))
    return r.getData(wt.prototype)[0];
}
function or() {
  const r = st.getInstance();
  if (r.hasData(ur.prototype))
    return r.getData(ur.prototype)[0];
}
var Zt;
(function(r) {
  r.any = (...e) => (t) => {
    const i = e.map((n) => n(t));
    return {
      dispose: () => {
        i.forEach((n) => {
          n.dispose();
        });
      }
    };
  };
})(Zt || (Zt = {}));
class js {
  constructor() {
    this.events = /* @__PURE__ */ new Map();
  }
  get size() {
    return this.events.size;
  }
  add(e, t) {
    this.events.set(e, t);
  }
  delete(e) {
    this.events.delete(e);
  }
  clear() {
    this.events.clear();
  }
}
class Kr {
  static create() {
    var e;
    return new Kr((e = new Error().stack) !== null && e !== void 0 ? e : "");
  }
  constructor(e) {
    this.value = e;
  }
  print() {
    console.warn(this.value);
  }
}
class As {
  constructor(e, t) {
    this.callback = e, this.stacktrace = t;
  }
}
class Q {
  static setLeakageMonitorEnabled(e) {
    e !== Q.ENABLE_TRACKING && Q.MEMORY_LEAK_WATCHER.clear(), Q.ENABLE_TRACKING = e;
  }
  constructor(e) {
    this.options = e, this._listeners = [], this._disposed = !1;
  }
  get event() {
    return this._event || (this._event = (e) => {
      var t;
      !((t = this.options) === null || t === void 0) && t.replay && this._last !== void 0 && e(this._last);
      const i = new As(e, Q.ENABLE_TRACKING ? Kr.create() : void 0);
      return this._listeners.push(i), {
        dispose: () => {
          const n = this._listeners.indexOf(i);
          n > -1 && this._listeners.splice(n, 1);
        }
      };
    }, Q.ENABLE_TRACKING && Q.MEMORY_LEAK_WATCHER.add(this._event, Kr.create())), this._event;
  }
  fire(e) {
    this._last = e;
    for (const t of this._listeners)
      t.callback(e);
  }
  dispose() {
    this._disposed || (this._disposed = !0, this._listeners.length > 0 && (Q.ENABLE_TRACKING && queueMicrotask(() => {
      var e;
      for (const t of this._listeners)
        console.warn((e = t.stacktrace) === null || e === void 0 ? void 0 : e.print());
    }), this._listeners = []), Q.ENABLE_TRACKING && this._event && Q.MEMORY_LEAK_WATCHER.delete(this._event));
  }
}
Q.ENABLE_TRACKING = !1;
Q.MEMORY_LEAK_WATCHER = new js();
function Wt(r, e, t, i) {
  return r.addEventListener(e, t, i), {
    dispose: () => {
      r.removeEventListener(e, t, i);
    }
  };
}
function Se(r, e, t, i) {
  return r.addEventListener(e, t, i), {
    dispose: () => {
      r.removeEventListener(e, t, i);
    }
  };
}
class Es {
  constructor() {
    this._onFired = new Q(), this.onEvent = this._onFired.event;
  }
  fire() {
    this.timer && clearTimeout(this.timer), this.timer = setTimeout(() => {
      this._onFired.fire(), clearTimeout(this.timer);
    });
  }
  dispose() {
    this._onFired.dispose();
  }
}
var pr;
(function(r) {
  r.NONE = {
    dispose: () => {
    }
  };
})(pr || (pr = {}));
class pe {
  get isDisposed() {
    return this._isDisposed;
  }
  constructor(...e) {
    this._isDisposed = !1, this._disposables = e;
  }
  addDisposables(...e) {
    e.forEach((t) => this._disposables.push(t));
  }
  dispose() {
    this._disposables.forEach((e) => e.dispose()), this._isDisposed = !0;
  }
}
class Xe {
  constructor() {
    this._disposable = pr.NONE;
  }
  set value(e) {
    this._disposable && this._disposable.dispose(), this._disposable = e;
  }
  dispose() {
    this._disposable && (this._disposable.dispose(), this._disposable = pr.NONE);
  }
}
function Ke(r, e, t = {}, i = {}, n, a) {
  const l = typeof e == "string" ? t[e] : void 0, o = typeof e == "string" ? i[e] : void 0;
  if (l && o)
    throw new Error(`Cannot create '${r}'. component '${e}' registered as both a component and frameworkComponent`);
  if (o) {
    if (!n)
      throw new Error(`Cannot create '${r}' for framework component '${e}'. you must register a frameworkPanelWrapper to use framework components`);
    return n.createComponent(r, e, o);
  }
  if (!l) {
    if (a)
      return a();
    throw new Error(`Cannot create '${r}', no component '${e}' provided`);
  }
  return new l(r, e);
}
function Nn(r, e) {
  const t = new ResizeObserver((i) => {
    requestAnimationFrame(() => {
      const n = i[0];
      e(n);
    });
  });
  return t.observe(r), {
    dispose: () => {
      t.unobserve(r), t.disconnect();
    }
  };
}
const gr = (r, ...e) => {
  for (const t of e)
    r.classList.contains(t) && r.classList.remove(t);
}, si = (r, ...e) => {
  for (const t of e)
    r.classList.contains(t) || r.classList.add(t);
}, ge = (r, e, t) => {
  const i = r.classList.contains(e);
  t && !i && r.classList.add(e), !t && i && r.classList.remove(e);
};
function Gi(r, e) {
  for (; r; ) {
    if (r === e)
      return !0;
    r = r.parentNode;
  }
  return !1;
}
function Ct(r) {
  return Array.prototype.slice.call(document.getElementsByTagName(r), 0);
}
function Rn(r) {
  return new xs(r);
}
class xs extends pe {
  constructor(e) {
    super(), this._onDidFocus = new Q(), this.onDidFocus = this._onDidFocus.event, this._onDidBlur = new Q(), this.onDidBlur = this._onDidBlur.event, this.addDisposables(this._onDidFocus, this._onDidBlur);
    let t = Gi(document.activeElement, e), i = !1;
    const n = () => {
      i = !1, t || (t = !0, this._onDidFocus.fire());
    }, a = () => {
      t && (i = !0, window.setTimeout(() => {
        i && (i = !1, t = !1, this._onDidBlur.fire());
      }, 0));
    };
    this._refreshStateHandler = () => {
      Gi(document.activeElement, e) !== t && (t ? a() : n());
    }, e instanceof HTMLElement ? (this.addDisposables(Se(e, "focus", n, !0)), this.addDisposables(Se(e, "blur", a, !0))) : (this.addDisposables(Wt(e, "focus", n, !0)), this.addDisposables(Wt(e, "blur", a, !0)));
  }
  refreshState() {
    this._refreshStateHandler();
  }
}
const Pn = "dv-quasiPreventDefault";
function zs(r) {
  r[Pn] = !0;
}
function zo(r) {
  return r[Pn];
}
function ut(r) {
  if (r.length === 0)
    throw new Error("Invalid tail call");
  return [r.slice(0, r.length - 1), r[r.length - 1]];
}
function Ls(r) {
  return r.length > 0 ? r[r.length - 1] : void 0;
}
function Mn(r, e) {
  if (r.length !== e.length)
    return !1;
  for (let t = 0; t < r.length; t++)
    if (r[t] !== e[t])
      return !1;
  return !0;
}
function Ii(r, e) {
  const t = r.indexOf(e);
  t > -1 && (r.splice(t, 1), r.unshift(e));
}
function Ar(r, e) {
  const t = r.indexOf(e);
  t > -1 && (r.splice(t, 1), r.push(e));
}
function Os(r, e) {
  for (let t = 0; t < r.length; t++) {
    const i = r[t];
    if (e(i))
      return t;
  }
  return -1;
}
function Ds(r, e) {
  const t = r.findIndex((i) => i === e);
  return t > -1 ? (r.splice(t, 1), !0) : !1;
}
const xe = (r, e, t) => {
  if (e > t)
    throw new Error(`${e} > ${t} is an invalid condition`);
  return Math.min(t, Math.max(r, e));
}, so = () => {
  let r = 1;
  return { next: () => (r++).toString() };
}, Je = (r, e) => {
  const t = [];
  if (typeof e != "number" && (e = r, r = 0), r <= e)
    for (let i = r; i < e; i++)
      t.push(i);
  else
    for (let i = r; i > e; i--)
      t.push(i);
  return t;
};
class Ts {
  set size(e) {
    this._size = e;
  }
  get size() {
    return this._size;
  }
  get cachedVisibleSize() {
    return this._cachedVisibleSize;
  }
  get visible() {
    return typeof this._cachedVisibleSize > "u";
  }
  get minimumSize() {
    return this.visible ? this.view.minimumSize : 0;
  }
  get viewMinimumSize() {
    return this.view.minimumSize;
  }
  get maximumSize() {
    return this.visible ? this.view.maximumSize : 0;
  }
  get viewMaximumSize() {
    return this.view.maximumSize;
  }
  get priority() {
    return this.view.priority;
  }
  get snap() {
    return !!this.view.snap;
  }
  set enabled(e) {
    this.container.style.pointerEvents = e ? "" : "none";
  }
  constructor(e, t, i, n) {
    this.container = e, this.view = t, this.disposable = n, this._cachedVisibleSize = void 0, typeof i == "number" ? (this._size = i, this._cachedVisibleSize = void 0, e.classList.add("visible")) : (this._size = 0, this._cachedVisibleSize = i.cachedVisibleSize);
  }
  setVisible(e, t) {
    var i;
    e !== this.visible && (e ? (this.size = xe((i = this._cachedVisibleSize) !== null && i !== void 0 ? i : 0, this.viewMinimumSize, this.viewMaximumSize), this._cachedVisibleSize = void 0) : (this._cachedVisibleSize = typeof t == "number" ? t : this.size, this.size = 0), this.container.classList.toggle("visible", e), this.view.setVisible && this.view.setVisible(e));
  }
  dispose() {
    return this.disposable.dispose(), this.view;
  }
}
var ae;
(function(r) {
  r.HORIZONTAL = "HORIZONTAL", r.VERTICAL = "VERTICAL";
})(ae || (ae = {}));
var qe;
(function(r) {
  r[r.MAXIMUM = 0] = "MAXIMUM", r[r.MINIMUM = 1] = "MINIMUM", r[r.DISABLED = 2] = "DISABLED", r[r.ENABLED = 3] = "ENABLED";
})(qe || (qe = {}));
var Le;
(function(r) {
  r.Low = "low", r.High = "high", r.Normal = "normal";
})(Le || (Le = {}));
var Ue;
(function(r) {
  r.Distribute = { type: "distribute" };
  function e(i) {
    return { type: "split", index: i };
  }
  r.Split = e;
  function t(i) {
    return { type: "invisible", cachedVisibleSize: i };
  }
  r.Invisible = t;
})(Ue || (Ue = {}));
class br {
  get size() {
    return this._size;
  }
  set size(e) {
    this._size = e;
  }
  get orthogonalSize() {
    return this._orthogonalSize;
  }
  set orthogonalSize(e) {
    this._orthogonalSize = e;
  }
  get length() {
    return this.viewItems.length;
  }
  get proportions() {
    return this._proportions ? [...this._proportions] : void 0;
  }
  get orientation() {
    return this._orientation;
  }
  set orientation(e) {
    this._orientation = e;
    const t = this.size;
    this.size = this.orthogonalSize, this.orthogonalSize = t, gr(this.element, "horizontal", "vertical"), this.element.classList.add(this.orientation == ae.HORIZONTAL ? "horizontal" : "vertical");
  }
  get minimumSize() {
    return this.viewItems.reduce((e, t) => e + t.minimumSize, 0);
  }
  get maximumSize() {
    return this.length === 0 ? Number.POSITIVE_INFINITY : this.viewItems.reduce((e, t) => e + t.maximumSize, 0);
  }
  get startSnappingEnabled() {
    return this._startSnappingEnabled;
  }
  set startSnappingEnabled(e) {
    this._startSnappingEnabled !== e && (this._startSnappingEnabled = e, this.updateSashEnablement());
  }
  get endSnappingEnabled() {
    return this._endSnappingEnabled;
  }
  set endSnappingEnabled(e) {
    this._endSnappingEnabled !== e && (this._endSnappingEnabled = e, this.updateSashEnablement());
  }
  constructor(e, t) {
    this.container = e, this.viewItems = [], this.sashes = [], this._size = 0, this._orthogonalSize = 0, this.contentSize = 0, this._proportions = void 0, this._startSnappingEnabled = !0, this._endSnappingEnabled = !0, this._onDidSashEnd = new Q(), this.onDidSashEnd = this._onDidSashEnd.event, this._onDidAddView = new Q(), this.onDidAddView = this._onDidAddView.event, this._onDidRemoveView = new Q(), this.onDidRemoveView = this._onDidRemoveView.event, this.resize = (i, n, a = this.viewItems.map((p) => p.size), l, o, s = Number.NEGATIVE_INFINITY, d = Number.POSITIVE_INFINITY, h, u) => {
      if (i < 0 || i > this.viewItems.length)
        return 0;
      const p = Je(i, -1), b = Je(i + 1, this.viewItems.length);
      if (o)
        for (const N of o)
          Ii(p, N), Ii(b, N);
      if (l)
        for (const N of l)
          Ar(p, N), Ar(b, N);
      const k = p.map((N) => this.viewItems[N]), g = p.map((N) => a[N]), m = b.map((N) => this.viewItems[N]), c = b.map((N) => a[N]), _ = p.reduce((N, B) => N + this.viewItems[B].minimumSize - a[B], 0), f = p.reduce((N, B) => N + this.viewItems[B].maximumSize - a[B], 0), v = b.length === 0 ? Number.POSITIVE_INFINITY : b.reduce((N, B) => N + a[B] - this.viewItems[B].minimumSize, 0), y = b.length === 0 ? Number.NEGATIVE_INFINITY : b.reduce((N, B) => N + a[B] - this.viewItems[B].maximumSize, 0), j = Math.max(_, y), A = Math.min(v, f);
      let C = !1;
      if (h) {
        const N = this.viewItems[h.index], B = n >= h.limitDelta;
        C = B !== N.visible, N.setVisible(B, h.size);
      }
      if (!C && u) {
        const N = this.viewItems[u.index], B = n < u.limitDelta;
        C = B !== N.visible, N.setVisible(B, u.size);
      }
      if (C)
        return this.resize(i, n, a, l, o, s, d);
      const I = xe(n, j, A);
      let z = 0, P = I;
      for (let N = 0; N < k.length; N++) {
        const B = k[N], F = xe(g[N] + P, B.minimumSize, B.maximumSize), U = F - g[N];
        z += U, P -= U, B.size = F;
      }
      let L = z;
      for (let N = 0; N < m.length; N++) {
        const B = m[N], F = xe(c[N] - L, B.minimumSize, B.maximumSize), U = F - c[N];
        L += U, B.size = F;
      }
      return n;
    }, this._orientation = t.orientation, this.element = this.createContainer(), this.proportionalLayout = t.proportionalLayout === void 0 ? !0 : !!t.proportionalLayout, this.viewContainer = this.createViewContainer(), this.sashContainer = this.createSashContainer(), this.element.appendChild(this.sashContainer), this.element.appendChild(this.viewContainer), this.container.appendChild(this.element), this.style(t.styles), t.descriptor && (this._size = t.descriptor.size, t.descriptor.views.forEach((i, n) => {
      const a = i.visible === void 0 || i.visible ? i.size : {
        type: "invisible",
        cachedVisibleSize: i.size
      }, l = i.view;
      this.addView(
        l,
        a,
        n,
        !0
        // true skip layout
      );
    }), this.contentSize = this.viewItems.reduce((i, n) => i + n.size, 0), this.saveProportions());
  }
  style(e) {
    (e == null ? void 0 : e.separatorBorder) === "transparent" ? (gr(this.element, "separator-border"), this.element.style.removeProperty("--dv-separator-border")) : (si(this.element, "separator-border"), e != null && e.separatorBorder && this.element.style.setProperty("--dv-separator-border", e.separatorBorder));
  }
  isViewVisible(e) {
    if (e < 0 || e >= this.viewItems.length)
      throw new Error("Index out of bounds");
    return this.viewItems[e].visible;
  }
  setViewVisible(e, t) {
    if (e < 0 || e >= this.viewItems.length)
      throw new Error("Index out of bounds");
    ge(this.container, "visible", t);
    const i = this.viewItems[e];
    ge(this.container, "visible", t), i.setVisible(t, i.size), this.distributeEmptySpace(e), this.layoutViews(), this.saveProportions();
  }
  getViewSize(e) {
    return e < 0 || e >= this.viewItems.length ? -1 : this.viewItems[e].size;
  }
  resizeView(e, t) {
    if (e < 0 || e >= this.viewItems.length)
      return;
    const i = Je(this.viewItems.length).filter((o) => o !== e), n = [
      ...i.filter((o) => this.viewItems[o].priority === Le.Low),
      e
    ], a = i.filter((o) => this.viewItems[o].priority === Le.High), l = this.viewItems[e];
    t = Math.round(t), t = xe(t, l.minimumSize, Math.min(l.maximumSize, this._size)), l.size = t, this.relayout(n, a);
  }
  getViews() {
    return this.viewItems.map((e) => e.view);
  }
  onDidChange(e, t) {
    const i = this.viewItems.indexOf(e);
    if (i < 0 || i >= this.viewItems.length)
      return;
    t = typeof t == "number" ? t : e.size, t = xe(t, e.minimumSize, e.maximumSize), e.size = t;
    const n = Je(this.viewItems.length).filter((o) => o !== i), a = [
      ...n.filter((o) => this.viewItems[o].priority === Le.Low),
      i
    ], l = n.filter((o) => this.viewItems[o].priority === Le.High);
    this.relayout([...a, i], l);
  }
  addView(e, t = { type: "distribute" }, i = this.viewItems.length, n) {
    const a = document.createElement("div");
    a.className = "view", a.appendChild(e.element);
    let l;
    typeof t == "number" ? l = t : t.type === "split" ? l = this.getViewSize(t.index) / 2 : t.type === "invisible" ? l = { cachedVisibleSize: t.cachedVisibleSize } : l = e.minimumSize;
    const o = e.onDidChange((d) => this.onDidChange(s, d.size)), s = new Ts(a, e, l, {
      dispose: () => {
        o.dispose(), this.viewContainer.removeChild(a);
      }
    });
    if (i === this.viewItems.length ? this.viewContainer.appendChild(a) : this.viewContainer.insertBefore(a, this.viewContainer.children.item(i)), this.viewItems.splice(i, 0, s), this.viewItems.length > 1) {
      const d = document.createElement("div");
      d.className = "sash";
      const h = (p) => {
        for (const F of this.viewItems)
          F.enabled = !1;
        const b = [
          ...Ct("iframe"),
          ...Ct("webview")
        ];
        for (const F of b)
          F.style.pointerEvents = "none";
        const k = this._orientation === ae.HORIZONTAL ? p.clientX : p.clientY, g = Os(this.sashes, (F) => F.container === d), m = this.viewItems.map((F) => F.size);
        let c, _;
        const f = Je(g, -1), v = Je(g + 1, this.viewItems.length), y = f.reduce((F, U) => F + (this.viewItems[U].minimumSize - m[U]), 0), j = f.reduce((F, U) => F + (this.viewItems[U].viewMaximumSize - m[U]), 0), A = v.length === 0 ? Number.POSITIVE_INFINITY : v.reduce((F, U) => F + (m[U] - this.viewItems[U].minimumSize), 0), C = v.length === 0 ? Number.NEGATIVE_INFINITY : v.reduce((F, U) => F + (m[U] - this.viewItems[U].viewMaximumSize), 0), I = Math.max(y, C), z = Math.min(A, j), P = this.findFirstSnapIndex(f), L = this.findFirstSnapIndex(v);
        if (typeof P == "number") {
          const F = this.viewItems[P], U = Math.floor(F.viewMinimumSize / 2);
          c = {
            index: P,
            limitDelta: F.visible ? I - U : I + U,
            size: F.size
          };
        }
        if (typeof L == "number") {
          const F = this.viewItems[L], U = Math.floor(F.viewMinimumSize / 2);
          _ = {
            index: L,
            limitDelta: F.visible ? z + U : z - U,
            size: F.size
          };
        }
        const N = (F) => {
          const H = (this._orientation === ae.HORIZONTAL ? F.clientX : F.clientY) - k;
          this.resize(g, H, m, void 0, void 0, I, z, c, _), this.distributeEmptySpace(), this.layoutViews();
        }, B = () => {
          for (const F of this.viewItems)
            F.enabled = !0;
          for (const F of b)
            F.style.pointerEvents = "auto";
          this.saveProportions(), document.removeEventListener("pointermove", N), document.removeEventListener("pointerup", B), document.removeEventListener("pointercancel", B), this._onDidSashEnd.fire(void 0);
        };
        document.addEventListener("pointermove", N), document.addEventListener("pointerup", B), document.addEventListener("pointercancel", B);
      };
      d.addEventListener("pointerdown", h);
      const u = {
        container: d,
        disposable: () => {
          d.removeEventListener("pointerdown", h), this.sashContainer.removeChild(d);
        }
      };
      this.sashContainer.appendChild(d), this.sashes.push(u);
    }
    n || this.relayout([i]), !n && typeof t != "number" && t.type === "distribute" && this.distributeViewSizes(), this._onDidAddView.fire(e);
  }
  distributeViewSizes() {
    const e = [];
    let t = 0;
    for (const o of this.viewItems)
      o.maximumSize - o.minimumSize > 0 && (e.push(o), t += o.size);
    const i = Math.floor(t / e.length);
    for (const o of e)
      o.size = xe(i, o.minimumSize, o.maximumSize);
    const n = Je(this.viewItems.length), a = n.filter((o) => this.viewItems[o].priority === Le.Low), l = n.filter((o) => this.viewItems[o].priority === Le.High);
    this.relayout(a, l);
  }
  removeView(e, t, i = !1) {
    const n = this.viewItems.splice(e, 1)[0];
    if (n.dispose(), this.viewItems.length >= 1) {
      const a = Math.max(e - 1, 0);
      this.sashes.splice(a, 1)[0].disposable();
    }
    return i || this.relayout(), t && t.type === "distribute" && this.distributeViewSizes(), this._onDidRemoveView.fire(n.view), n.view;
  }
  getViewCachedVisibleSize(e) {
    if (e < 0 || e >= this.viewItems.length)
      throw new Error("Index out of bounds");
    return this.viewItems[e].cachedVisibleSize;
  }
  moveView(e, t) {
    const i = this.getViewCachedVisibleSize(e), n = typeof i > "u" ? this.getViewSize(e) : Ue.Invisible(i), a = this.removeView(e, void 0, !0);
    this.addView(a, n, t);
  }
  layout(e, t) {
    const i = Math.max(this.size, this.contentSize);
    if (this.size = e, this.orthogonalSize = t, this.proportions)
      for (let n = 0; n < this.viewItems.length; n++) {
        const a = this.viewItems[n];
        a.size = xe(Math.round(this.proportions[n] * e), a.minimumSize, a.maximumSize);
      }
    else {
      const n = Je(this.viewItems.length), a = n.filter((o) => this.viewItems[o].priority === Le.Low), l = n.filter((o) => this.viewItems[o].priority === Le.High);
      this.resize(this.viewItems.length - 1, e - i, void 0, a, l);
    }
    this.distributeEmptySpace(), this.layoutViews();
  }
  relayout(e, t) {
    const i = this.viewItems.reduce((n, a) => n + a.size, 0);
    this.resize(this.viewItems.length - 1, this._size - i, void 0, e, t), this.distributeEmptySpace(), this.layoutViews(), this.saveProportions();
  }
  distributeEmptySpace(e) {
    const t = this.viewItems.reduce((o, s) => o + s.size, 0);
    let i = this.size - t;
    const n = Je(this.viewItems.length - 1, -1), a = n.filter((o) => this.viewItems[o].priority === Le.Low), l = n.filter((o) => this.viewItems[o].priority === Le.High);
    for (const o of l)
      Ii(n, o);
    for (const o of a)
      Ar(n, o);
    typeof e == "number" && Ar(n, e);
    for (let o = 0; i !== 0 && o < n.length; o++) {
      const s = this.viewItems[n[o]], d = xe(s.size + i, s.minimumSize, s.maximumSize), h = d - s.size;
      i -= h, s.size = d;
    }
  }
  saveProportions() {
    this.proportionalLayout && this.contentSize > 0 && (this._proportions = this.viewItems.map((e) => e.size / this.contentSize));
  }
  layoutViews() {
    this.contentSize = this.viewItems.reduce((i, n) => i + n.size, 0);
    let e = 0;
    const t = [];
    this.updateSashEnablement();
    for (let i = 0; i < this.viewItems.length - 1; i++) {
      e += this.viewItems[i].size, t.push(e);
      const n = Math.min(Math.max(0, e - 2), this.size - 4);
      this._orientation === ae.HORIZONTAL && (this.sashes[i].container.style.left = `${n}px`, this.sashes[i].container.style.top = "0px"), this._orientation === ae.VERTICAL && (this.sashes[i].container.style.left = "0px", this.sashes[i].container.style.top = `${n}px`);
    }
    this.viewItems.forEach((i, n) => {
      this._orientation === ae.HORIZONTAL && (i.container.style.width = `${i.size}px`, i.container.style.left = n == 0 ? "0px" : `${t[n - 1]}px`, i.container.style.top = "", i.container.style.height = ""), this._orientation === ae.VERTICAL && (i.container.style.height = `${i.size}px`, i.container.style.top = n == 0 ? "0px" : `${t[n - 1]}px`, i.container.style.width = "", i.container.style.left = ""), i.view.layout(i.size, this._orthogonalSize);
    });
  }
  findFirstSnapIndex(e) {
    for (const t of e) {
      const i = this.viewItems[t];
      if (i.visible && i.snap)
        return t;
    }
    for (const t of e) {
      const i = this.viewItems[t];
      if (i.visible && i.maximumSize - i.minimumSize > 0)
        return;
      if (!i.visible && i.snap)
        return t;
    }
  }
  updateSashEnablement() {
    let e = !1;
    const t = this.viewItems.map((s) => e = s.size - s.minimumSize > 0 || e);
    e = !1;
    const i = this.viewItems.map((s) => e = s.maximumSize - s.size > 0 || e), n = [...this.viewItems].reverse();
    e = !1;
    const a = n.map((s) => e = s.size - s.minimumSize > 0 || e).reverse();
    e = !1;
    const l = n.map((s) => e = s.maximumSize - s.size > 0 || e).reverse();
    let o = 0;
    for (let s = 0; s < this.sashes.length; s++) {
      const d = this.sashes[s], h = this.viewItems[s];
      o += h.size;
      const u = !(t[s] && l[s + 1]), p = !(i[s] && a[s + 1]);
      if (u && p) {
        const b = Je(s, -1), k = Je(s + 1, this.viewItems.length), g = this.findFirstSnapIndex(b), m = this.findFirstSnapIndex(k), c = typeof g == "number" && !this.viewItems[g].visible, _ = typeof m == "number" && !this.viewItems[m].visible;
        c && a[s] && (o > 0 || this.startSnappingEnabled) ? this.updateSash(d, qe.MINIMUM) : _ && t[s] && (o < this.contentSize || this.endSnappingEnabled) ? this.updateSash(d, qe.MAXIMUM) : this.updateSash(d, qe.DISABLED);
      } else
        u && !p ? this.updateSash(d, qe.MINIMUM) : !u && p ? this.updateSash(d, qe.MAXIMUM) : this.updateSash(d, qe.ENABLED);
    }
  }
  updateSash(e, t) {
    ge(e.container, "disabled", t === qe.DISABLED), ge(e.container, "enabled", t === qe.ENABLED), ge(e.container, "maximum", t === qe.MAXIMUM), ge(e.container, "minimum", t === qe.MINIMUM);
  }
  createViewContainer() {
    const e = document.createElement("div");
    return e.className = "view-container", e;
  }
  createSashContainer() {
    const e = document.createElement("div");
    return e.className = "sash-container", e;
  }
  createContainer() {
    const e = document.createElement("div"), t = this._orientation === ae.HORIZONTAL ? "horizontal" : "vertical";
    return e.className = `split-view-container ${t}`, e;
  }
  dispose() {
    this._onDidSashEnd.dispose(), this._onDidAddView.dispose(), this._onDidRemoveView.dispose();
    for (let e = 0; e < this.element.children.length; e++)
      if (this.element.children.item(e) === this.element) {
        this.element.removeChild(this.element);
        break;
      }
    for (const e of this.viewItems)
      e.dispose();
    this.element.remove();
  }
}
class Lo extends pe {
  get onDidAddView() {
    return this.splitview.onDidAddView;
  }
  get onDidRemoveView() {
    return this.splitview.onDidRemoveView;
  }
  get minimumSize() {
    return this.splitview.minimumSize;
  }
  get maximumSize() {
    return this.splitview.maximumSize;
  }
  get orientation() {
    return this.splitview.orientation;
  }
  get size() {
    return this.splitview.size;
  }
  get orthogonalSize() {
    return this.splitview.orthogonalSize;
  }
  constructor(e, t) {
    var i;
    super(), this.paneItems = [], this.skipAnimation = !1, this._onDidChange = new Q(), this.onDidChange = this._onDidChange.event, this._orientation = (i = t.orientation) !== null && i !== void 0 ? i : ae.VERTICAL, this.element = document.createElement("div"), this.element.className = "pane-container", e.appendChild(this.element), this.splitview = new br(this.element, {
      orientation: this._orientation,
      proportionalLayout: !1,
      descriptor: t.descriptor
    }), this.getPanes().forEach((n) => {
      const a = new pe(n.onDidChangeExpansionState(() => {
        this.setupAnimation(), this._onDidChange.fire(void 0);
      })), l = {
        pane: n,
        disposable: {
          dispose: () => {
            a.dispose();
          }
        }
      };
      this.paneItems.push(l), n.orthogonalSize = this.splitview.orthogonalSize;
    }), this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {
      this._onDidChange.fire(void 0);
    }), this.splitview.onDidAddView(() => {
      this._onDidChange.fire();
    }), this.splitview.onDidRemoveView(() => {
      this._onDidChange.fire();
    }));
  }
  addPane(e, t, i = this.splitview.length, n = !1) {
    const a = e.onDidChangeExpansionState(() => {
      this.setupAnimation(), this._onDidChange.fire(void 0);
    }), l = {
      pane: e,
      disposable: {
        dispose: () => {
          a.dispose();
        }
      }
    };
    this.paneItems.splice(i, 0, l), e.orthogonalSize = this.splitview.orthogonalSize, this.splitview.addView(e, t, i, n);
  }
  getViewSize(e) {
    return this.splitview.getViewSize(e);
  }
  getPanes() {
    return this.splitview.getViews();
  }
  removePane(e, t = { skipDispose: !1 }) {
    const i = this.paneItems.splice(e, 1)[0];
    return this.splitview.removeView(e), t.skipDispose || (i.disposable.dispose(), i.pane.dispose()), i;
  }
  moveView(e, t) {
    if (e === t)
      return;
    const i = this.removePane(e, { skipDispose: !0 });
    this.skipAnimation = !0;
    try {
      this.addPane(i.pane, i.pane.size, t, !1);
    } finally {
      this.skipAnimation = !1;
    }
  }
  layout(e, t) {
    this.splitview.layout(e, t);
  }
  setupAnimation() {
    this.skipAnimation || (this.animationTimer && (clearTimeout(this.animationTimer), this.animationTimer = void 0), si(this.element, "animated"), this.animationTimer = setTimeout(() => {
      this.animationTimer = void 0, gr(this.element, "animated");
    }, 200));
  }
  dispose() {
    super.dispose(), this.animationTimer && (clearTimeout(this.animationTimer), this.animationTimer = void 0), this.paneItems.forEach((e) => {
      e.disposable.dispose(), e.pane.dispose();
    }), this.paneItems = [], this.splitview.dispose(), this.element.remove();
  }
}
class He {
  get minimumWidth() {
    return this.view.minimumWidth;
  }
  get maximumWidth() {
    return this.view.maximumWidth;
  }
  get minimumHeight() {
    return this.view.minimumHeight;
  }
  get maximumHeight() {
    return this.view.maximumHeight;
  }
  get priority() {
    return this.view.priority;
  }
  get snap() {
    return this.view.snap;
  }
  get minimumSize() {
    return this.orientation === ae.HORIZONTAL ? this.minimumHeight : this.minimumWidth;
  }
  get maximumSize() {
    return this.orientation === ae.HORIZONTAL ? this.maximumHeight : this.maximumWidth;
  }
  get minimumOrthogonalSize() {
    return this.orientation === ae.HORIZONTAL ? this.minimumWidth : this.minimumHeight;
  }
  get maximumOrthogonalSize() {
    return this.orientation === ae.HORIZONTAL ? this.maximumWidth : this.maximumHeight;
  }
  get orthogonalSize() {
    return this._orthogonalSize;
  }
  get size() {
    return this._size;
  }
  get element() {
    return this.view.element;
  }
  get width() {
    return this.orientation === ae.HORIZONTAL ? this.orthogonalSize : this.size;
  }
  get height() {
    return this.orientation === ae.HORIZONTAL ? this.size : this.orthogonalSize;
  }
  constructor(e, t, i, n = 0) {
    this.view = e, this.orientation = t, this._onDidChange = new Q(), this.onDidChange = this._onDidChange.event, this._orthogonalSize = i, this._size = n, this._disposable = this.view.onDidChange((a) => {
      a ? this._onDidChange.fire({
        size: this.orientation === ae.VERTICAL ? a.width : a.height,
        orthogonalSize: this.orientation === ae.VERTICAL ? a.height : a.width
      }) : this._onDidChange.fire({});
    });
  }
  setVisible(e) {
    this.view.setVisible && (this.view.setVisible(e), this._onDidChange.fire({}));
  }
  layout(e, t) {
    this._size = e, this._orthogonalSize = t, this.view.layout(this.width, this.height);
  }
  dispose() {
    this._onDidChange.dispose(), this._disposable.dispose();
  }
}
class Ne extends pe {
  get width() {
    return this.orientation === ae.HORIZONTAL ? this.size : this.orthogonalSize;
  }
  get height() {
    return this.orientation === ae.HORIZONTAL ? this.orthogonalSize : this.size;
  }
  get minimumSize() {
    return this.children.length === 0 ? 0 : Math.max(...this.children.map((e) => e.minimumOrthogonalSize));
  }
  get maximumSize() {
    return Math.min(...this.children.map((e) => e.maximumOrthogonalSize));
  }
  get minimumOrthogonalSize() {
    return this.splitview.minimumSize;
  }
  get maximumOrthogonalSize() {
    return this.splitview.maximumSize;
  }
  get orthogonalSize() {
    return this._orthogonalSize;
  }
  get size() {
    return this._size;
  }
  get minimumWidth() {
    return this.orientation === ae.HORIZONTAL ? this.minimumOrthogonalSize : this.minimumSize;
  }
  get minimumHeight() {
    return this.orientation === ae.HORIZONTAL ? this.minimumSize : this.minimumOrthogonalSize;
  }
  get maximumWidth() {
    return this.orientation === ae.HORIZONTAL ? this.maximumOrthogonalSize : this.maximumSize;
  }
  get maximumHeight() {
    return this.orientation === ae.HORIZONTAL ? this.maximumSize : this.maximumOrthogonalSize;
  }
  get priority() {
    if (this.children.length === 0)
      return Le.Normal;
    const e = this.children.map((t) => typeof t.priority > "u" ? Le.Normal : t.priority);
    return e.some((t) => t === Le.High) ? Le.High : e.some((t) => t === Le.Low) ? Le.Low : Le.Normal;
  }
  constructor(e, t, i, n, a, l) {
    if (super(), this.orientation = e, this.proportionalLayout = t, this.styles = i, this._childrenDisposable = pr.NONE, this.children = [], this._onDidChange = new Q(), this.onDidChange = this._onDidChange.event, this._orthogonalSize = a, this._size = n, this.element = document.createElement("div"), this.element.className = "branch-node", !l)
      this.splitview = new br(this.element, {
        orientation: this.orientation,
        proportionalLayout: t,
        styles: i
      }), this.splitview.layout(this.size, this.orthogonalSize);
    else {
      const o = {
        views: l.map((s) => ({
          view: s.node,
          size: s.node.size,
          visible: s.node instanceof He && s.visible !== void 0 ? s.visible : !0
        })),
        size: this.orthogonalSize
      };
      this.children = l.map((s) => s.node), this.splitview = new br(this.element, {
        orientation: this.orientation,
        descriptor: o,
        proportionalLayout: t,
        styles: i
      });
    }
    this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {
      this._onDidChange.fire({});
    })), this.setupChildrenEvents();
  }
  setVisible(e) {
    for (const t of this.children)
      t.setVisible(e);
  }
  isChildVisible(e) {
    if (e < 0 || e >= this.children.length)
      throw new Error("Invalid index");
    return this.splitview.isViewVisible(e);
  }
  setChildVisible(e, t) {
    if (e < 0 || e >= this.children.length)
      throw new Error("Invalid index");
    this.splitview.isViewVisible(e) !== t && this.splitview.setViewVisible(e, t);
  }
  moveChild(e, t) {
    if (e === t)
      return;
    if (e < 0 || e >= this.children.length)
      throw new Error("Invalid from index");
    e < t && t--, this.splitview.moveView(e, t);
    const i = this._removeChild(e);
    this._addChild(i, t);
  }
  getChildSize(e) {
    if (e < 0 || e >= this.children.length)
      throw new Error("Invalid index");
    return this.splitview.getViewSize(e);
  }
  resizeChild(e, t) {
    if (e < 0 || e >= this.children.length)
      throw new Error("Invalid index");
    this.splitview.resizeView(e, t);
  }
  layout(e, t) {
    this._size = t, this._orthogonalSize = e, this.splitview.layout(t, e);
  }
  addChild(e, t, i, n) {
    if (i < 0 || i > this.children.length)
      throw new Error("Invalid index");
    this.splitview.addView(e, t, i, n), this._addChild(e, i);
  }
  getChildCachedVisibleSize(e) {
    if (e < 0 || e >= this.children.length)
      throw new Error("Invalid index");
    return this.splitview.getViewCachedVisibleSize(e);
  }
  removeChild(e, t) {
    if (e < 0 || e >= this.children.length)
      throw new Error("Invalid index");
    return this.splitview.removeView(e, t), this._removeChild(e);
  }
  _addChild(e, t) {
    this.children.splice(t, 0, e), this.setupChildrenEvents();
  }
  _removeChild(e) {
    const [t] = this.children.splice(e, 1);
    return this.setupChildrenEvents(), t;
  }
  setupChildrenEvents() {
    this._childrenDisposable.dispose(), this._childrenDisposable = Zt.any(...this.children.map((e) => e.onDidChange))((e) => {
      this._onDidChange.fire({ size: e.orthogonalSize });
    });
  }
  dispose() {
    this._childrenDisposable.dispose(), this.splitview.dispose(), this.children.forEach((e) => e.dispose()), super.dispose();
  }
}
function Hi(r, e) {
  if (r instanceof He)
    return r;
  if (r instanceof Ne)
    return Hi(r.children[e ? r.children.length - 1 : 0], e);
  throw new Error("invalid node");
}
function Vi(r, e, t) {
  if (r instanceof Ne) {
    const i = new Ne(lt(r.orientation), r.proportionalLayout, r.styles, e, t);
    let n = 0;
    for (let a = r.children.length - 1; a >= 0; a--) {
      const l = r.children[a], o = l instanceof Ne ? l.orthogonalSize : l.size;
      let s = r.size === 0 ? 0 : Math.round(e * o / r.size);
      n += s, a === 0 && (s += e - n), i.addChild(Vi(l, t, s), s, 0, !0);
    }
    return i;
  } else
    return new He(r.view, lt(r.orientation), t);
}
function Ns(r) {
  const e = r.parentElement;
  if (!e)
    throw new Error("Invalid grid element");
  let t = e.firstElementChild, i = 0;
  for (; t !== r && t !== e.lastElementChild && t; )
    t = t.nextElementSibling, i++;
  return i;
}
function Ae(r) {
  const e = r.parentElement;
  if (!e)
    throw new Error("Invalid grid element");
  if (/\bgrid-view\b/.test(e.className))
    return [];
  const t = Ns(e), i = e.parentElement.parentElement.parentElement;
  return [...Ae(i), t];
}
function rt(r, e, t) {
  const i = Ps(r, e), n = Rs(t);
  if (i === n) {
    const [a, l] = ut(e);
    let o = l;
    return (t === "right" || t === "bottom") && (o += 1), [...a, o];
  } else {
    const a = t === "right" || t === "bottom" ? 1 : 0;
    return [...e, a];
  }
}
function Rs(r) {
  return r === "top" || r === "bottom" ? ae.VERTICAL : ae.HORIZONTAL;
}
function Ps(r, e) {
  return e.length % 2 === 0 ? lt(r) : r;
}
const lt = (r) => r === ae.HORIZONTAL ? ae.VERTICAL : ae.HORIZONTAL;
function Ms(r) {
  return !!r.children;
}
const Fn = (r, e) => {
  const t = e === ae.VERTICAL ? r.box.width : r.box.height;
  return Ms(r) ? {
    type: "branch",
    data: r.children.map((i) => Fn(i, lt(e))),
    size: t
  } : typeof r.cachedVisibleSize == "number" ? {
    type: "leaf",
    data: r.view.toJSON(),
    size: r.cachedVisibleSize,
    visible: !1
  } : { type: "leaf", data: r.view.toJSON(), size: t };
};
class Fs {
  get length() {
    return this._root ? this._root.children.length : 0;
  }
  get orientation() {
    return this.root.orientation;
  }
  set orientation(e) {
    if (this.root.orientation === e)
      return;
    const { size: t, orthogonalSize: i } = this.root;
    this.root = Vi(this.root, i, t), this.root.layout(t, i);
  }
  get width() {
    return this.root.width;
  }
  get height() {
    return this.root.height;
  }
  get minimumWidth() {
    return this.root.minimumWidth;
  }
  get minimumHeight() {
    return this.root.minimumHeight;
  }
  get maximumWidth() {
    return this.root.maximumHeight;
  }
  get maximumHeight() {
    return this.root.maximumHeight;
  }
  serialize() {
    return {
      root: Fn(this.getView(), this.orientation),
      width: this.width,
      height: this.height,
      orientation: this.orientation
    };
  }
  dispose() {
    this.disposable.dispose(), this._onDidChange.dispose(), this.root.dispose(), this.element.remove();
  }
  clear() {
    const e = this.root.orientation;
    this.root = new Ne(e, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);
  }
  deserialize(e, t) {
    const i = e.orientation, n = i === ae.VERTICAL ? e.height : e.width;
    this._deserialize(e.root, i, t, n);
  }
  _deserialize(e, t, i, n) {
    this.root = this._deserializeNode(e, t, i, n);
  }
  _deserializeNode(e, t, i, n) {
    let a;
    if (e.type === "branch") {
      const o = e.data.map((s) => ({
        node: this._deserializeNode(s, lt(t), i, e.size),
        visible: s.visible
      }));
      a = new Ne(
        t,
        this.proportionalLayout,
        this.styles,
        e.size,
        // <- orthogonal size - flips at each depth
        n,
        // <- size - flips at each depth
        o
      );
    } else
      a = new He(i.fromJSON(e), t, n, e.size);
    return a;
  }
  get root() {
    return this._root;
  }
  set root(e) {
    const t = this._root;
    t && (t.dispose(), this.element.removeChild(t.element)), this._root = e, this.element.appendChild(this._root.element), this.disposable.value = this._root.onDidChange((i) => {
      this._onDidChange.fire(i);
    });
  }
  /**
   * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node
   * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node
   */
  insertOrthogonalSplitviewAtRoot() {
    if (!this._root)
      return;
    const e = this.root;
    if (e.element.remove(), this._root = new Ne(lt(e.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size), e.children.length !== 0)
      if (e.children.length === 1) {
        const t = e.children[0];
        e.removeChild(0).dispose(), e.dispose(), this._root.addChild(
          /**
           * the child node will have the same orientation as the new root since
           * we are removing the inbetween node.
           * the entire 'tree' must be flipped recursively to ensure that the orientation
           * flips at each level
           */
          Vi(t, t.orthogonalSize, t.size),
          Ue.Distribute,
          0
        );
      } else
        this._root.addChild(e, Ue.Distribute, 0);
    this.element.appendChild(this._root.element), this.disposable.value = this._root.onDidChange((t) => {
      this._onDidChange.fire(t);
    });
  }
  next(e) {
    return this.progmaticSelect(e);
  }
  previous(e) {
    return this.progmaticSelect(e, !0);
  }
  getView(e) {
    const t = e ? this.getNode(e)[1] : this.root;
    return this._getViews(t, this.orientation);
  }
  _getViews(e, t, i) {
    const n = { height: e.height, width: e.width };
    if (e instanceof He)
      return { box: n, view: e.view, cachedVisibleSize: i };
    const a = [];
    for (let l = 0; l < e.children.length; l++) {
      const o = e.children[l], s = e.getChildCachedVisibleSize(l);
      a.push(this._getViews(o, lt(t), s));
    }
    return { box: n, children: a };
  }
  progmaticSelect(e, t = !1) {
    const [i, n] = this.getNode(e);
    if (!(n instanceof He))
      throw new Error("invalid location");
    for (let a = i.length - 1; a > -1; a--) {
      const l = i[a], o = e[a] || 0;
      if (t ? o - 1 > -1 : o + 1 < l.children.length)
        return Hi(l.children[t ? o - 1 : o + 1], t);
    }
    return Hi(this.root, t);
  }
  constructor(e, t, i) {
    this.proportionalLayout = e, this.styles = t, this.disposable = new Xe(), this._onDidChange = new Q(), this.onDidChange = this._onDidChange.event, this.element = document.createElement("div"), this.element.className = "grid-view", this.root = new Ne(i, e, t, 0, 0);
  }
  isViewVisible(e) {
    const [t, i] = ut(e), [, n] = this.getNode(t);
    if (!(n instanceof Ne))
      throw new Error("Invalid from location");
    return n.isChildVisible(i);
  }
  setViewVisible(e, t) {
    const [i, n] = ut(e), [, a] = this.getNode(i);
    if (!(a instanceof Ne))
      throw new Error("Invalid from location");
    a.setChildVisible(n, t);
  }
  moveView(e, t, i) {
    const [, n] = this.getNode(e);
    if (!(n instanceof Ne))
      throw new Error("Invalid location");
    n.moveChild(t, i);
  }
  addView(e, t, i) {
    const [n, a] = ut(i), [l, o] = this.getNode(n);
    if (o instanceof Ne) {
      const s = new He(e, lt(o.orientation), o.orthogonalSize);
      o.addChild(s, t, a);
    } else {
      const [s, ...d] = [...l].reverse(), [h, ...u] = [...n].reverse();
      let p = 0;
      const b = s.getChildCachedVisibleSize(h);
      typeof b == "number" && (p = Ue.Invisible(b)), s.removeChild(h).dispose();
      const g = new Ne(o.orientation, this.proportionalLayout, this.styles, o.size, o.orthogonalSize);
      s.addChild(g, o.size, h);
      const m = new He(o.view, s.orientation, o.size);
      g.addChild(m, p, 0), typeof t != "number" && t.type === "split" && (t = { type: "split", index: 0 });
      const c = new He(e, s.orientation, o.size);
      g.addChild(c, t, a);
    }
  }
  remove(e, t) {
    const i = Ae(e.element);
    return this.removeView(i, t);
  }
  removeView(e, t) {
    const [i, n] = ut(e), [a, l] = this.getNode(i);
    if (!(l instanceof Ne))
      throw new Error("Invalid location");
    const o = l.children[n];
    if (!(o instanceof He))
      throw new Error("Invalid location");
    if (l.removeChild(n, t), o.dispose(), l.children.length !== 1)
      return o.view;
    const s = l.children[0];
    if (a.length === 0)
      return s instanceof He || (l.removeChild(0, t), this.root = s), o.view;
    const [d, ...h] = [...a].reverse(), [u, ...p] = [...i].reverse(), b = l.isChildVisible(0);
    l.removeChild(0, t);
    const k = d.children.map((g, m) => d.getChildSize(m));
    if (d.removeChild(u, t).dispose(), s instanceof Ne) {
      k.splice(u, 1, ...s.children.map((g) => g.size));
      for (let g = 0; g < s.children.length; g++) {
        const m = s.children[g];
        d.addChild(m, m.size, u + g);
      }
      for (; s.children.length > 0; )
        s.removeChild(0);
    } else {
      const g = new He(s.view, lt(s.orientation), s.size), m = b ? s.orthogonalSize : Ue.Invisible(s.orthogonalSize);
      d.addChild(g, m, u);
    }
    s.dispose();
    for (let g = 0; g < k.length; g++)
      d.resizeChild(g, k[g]);
    return o.view;
  }
  layout(e, t) {
    const [i, n] = this.root.orientation === ae.HORIZONTAL ? [t, e] : [e, t];
    this.root.layout(i, n);
  }
  getNode(e, t = this.root, i = []) {
    if (e.length === 0)
      return [i, t];
    if (!(t instanceof Ne))
      throw new Error("Invalid location");
    const [n, ...a] = e;
    if (n < 0 || n >= t.children.length)
      throw new Error("Invalid location");
    const l = t.children[n];
    return i.push(t), this.getNode(a, l, i);
  }
}
class Bn {
  get minimumSize() {
    return this.component.minimumSize;
  }
  get maximumSize() {
    return this.component.maximumSize;
  }
  get height() {
    return this.component.height;
  }
  get width() {
    return this.component.width;
  }
  get length() {
    return this.component.length;
  }
  get orientation() {
    return this.component.orientation;
  }
  get panels() {
    return this.component.panels;
  }
  get onDidLayoutFromJSON() {
    return this.component.onDidLayoutFromJSON;
  }
  get onDidLayoutChange() {
    return this.component.onDidLayoutChange;
  }
  get onDidAddView() {
    return this.component.onDidAddView;
  }
  get onDidRemoveView() {
    return this.component.onDidRemoveView;
  }
  constructor(e) {
    this.component = e;
  }
  updateOptions(e) {
    this.component.updateOptions(e);
  }
  removePanel(e, t) {
    this.component.removePanel(e, t);
  }
  focus() {
    this.component.focus();
  }
  getPanel(e) {
    return this.component.getPanel(e);
  }
  layout(e, t) {
    return this.component.layout(e, t);
  }
  addPanel(e) {
    return this.component.addPanel(e);
  }
  movePanel(e, t) {
    this.component.movePanel(e, t);
  }
  fromJSON(e) {
    this.component.fromJSON(e);
  }
  toJSON() {
    return this.component.toJSON();
  }
  clear() {
    this.component.clear();
  }
}
class Jt {
  get minimumSize() {
    return this.component.minimumSize;
  }
  get maximumSize() {
    return this.component.maximumSize;
  }
  get height() {
    return this.component.height;
  }
  get width() {
    return this.component.width;
  }
  get panels() {
    return this.component.panels;
  }
  get onDidLayoutChange() {
    return this.component.onDidLayoutChange;
  }
  get onDidLayoutFromJSON() {
    return this.component.onDidLayoutFromJSON;
  }
  get onDidAddView() {
    return this.component.onDidAddView;
  }
  get onDidRemoveView() {
    return this.component.onDidRemoveView;
  }
  get onDidDrop() {
    const e = new Q(), t = this.component.onDidDrop((i) => {
      e.fire(Object.assign(Object.assign({}, i), { api: this }));
    });
    return e.dispose = () => {
      t.dispose(), e.dispose();
    }, e.event;
  }
  constructor(e) {
    this.component = e;
  }
  removePanel(e) {
    this.component.removePanel(e);
  }
  getPanel(e) {
    return this.component.getPanel(e);
  }
  movePanel(e, t) {
    this.component.movePanel(e, t);
  }
  focus() {
    this.component.focus();
  }
  layout(e, t) {
    this.component.layout(e, t);
  }
  addPanel(e) {
    return this.component.addPanel(e);
  }
  fromJSON(e) {
    this.component.fromJSON(e);
  }
  toJSON() {
    return this.component.toJSON();
  }
  clear() {
    this.component.clear();
  }
}
class Un {
  get minimumHeight() {
    return this.component.minimumHeight;
  }
  get maximumHeight() {
    return this.component.maximumHeight;
  }
  get minimumWidth() {
    return this.component.minimumWidth;
  }
  get maximumWidth() {
    return this.component.maximumWidth;
  }
  get width() {
    return this.component.width;
  }
  get height() {
    return this.component.height;
  }
  get onDidLayoutChange() {
    return this.component.onDidLayoutChange;
  }
  get onDidAddPanel() {
    return this.component.onDidAddGroup;
  }
  get onDidRemovePanel() {
    return this.component.onDidRemoveGroup;
  }
  get onDidActivePanelChange() {
    return this.component.onDidActiveGroupChange;
  }
  get onDidLayoutFromJSON() {
    return this.component.onDidLayoutFromJSON;
  }
  get panels() {
    return this.component.groups;
  }
  get orientation() {
    return this.component.orientation;
  }
  set orientation(e) {
    this.component.updateOptions({ orientation: e });
  }
  constructor(e) {
    this.component = e;
  }
  focus() {
    this.component.focus();
  }
  layout(e, t, i = !1) {
    this.component.layout(e, t, i);
  }
  addPanel(e) {
    return this.component.addPanel(e);
  }
  removePanel(e, t) {
    this.component.removePanel(e, t);
  }
  movePanel(e, t) {
    this.component.movePanel(e, t);
  }
  getPanel(e) {
    return this.component.getPanel(e);
  }
  fromJSON(e) {
    return this.component.fromJSON(e);
  }
  toJSON() {
    return this.component.toJSON();
  }
  clear() {
    this.component.clear();
  }
}
class yt {
  get id() {
    return this.component.id;
  }
  get width() {
    return this.component.width;
  }
  get height() {
    return this.component.height;
  }
  get minimumHeight() {
    return this.component.minimumHeight;
  }
  get maximumHeight() {
    return this.component.maximumHeight;
  }
  get minimumWidth() {
    return this.component.minimumWidth;
  }
  get maximumWidth() {
    return this.component.maximumWidth;
  }
  get size() {
    return this.component.size;
  }
  get totalPanels() {
    return this.component.totalPanels;
  }
  get onDidActiveGroupChange() {
    return this.component.onDidActiveGroupChange;
  }
  get onDidAddGroup() {
    return this.component.onDidAddGroup;
  }
  get onDidRemoveGroup() {
    return this.component.onDidRemoveGroup;
  }
  get onDidActivePanelChange() {
    return this.component.onDidActivePanelChange;
  }
  get onDidAddPanel() {
    return this.component.onDidAddPanel;
  }
  get onDidRemovePanel() {
    return this.component.onDidRemovePanel;
  }
  get onDidLayoutFromJSON() {
    return this.component.onDidLayoutFromJSON;
  }
  get onDidLayoutChange() {
    return this.component.onDidLayoutChange;
  }
  get onDidDrop() {
    return this.component.onDidDrop;
  }
  get onWillDragGroup() {
    return this.component.onWillDragGroup;
  }
  get onWillDragPanel() {
    return this.component.onWillDragPanel;
  }
  get panels() {
    return this.component.panels;
  }
  get groups() {
    return this.component.groups;
  }
  get activePanel() {
    return this.component.activePanel;
  }
  get activeGroup() {
    return this.component.activeGroup;
  }
  constructor(e) {
    this.component = e;
  }
  focus() {
    this.component.focus();
  }
  getPanel(e) {
    return this.component.getGroupPanel(e);
  }
  layout(e, t, i = !1) {
    this.component.layout(e, t, i);
  }
  addPanel(e) {
    return this.component.addPanel(e);
  }
  removePanel(e) {
    this.component.removePanel(e);
  }
  addGroup(e) {
    return this.component.addGroup(e);
  }
  moveToNext(e) {
    this.component.moveToNext(e);
  }
  moveToPrevious(e) {
    this.component.moveToPrevious(e);
  }
  closeAllGroups() {
    return this.component.closeAllGroups();
  }
  removeGroup(e) {
    this.component.removeGroup(e);
  }
  getGroup(e) {
    return this.component.getPanel(e);
  }
  addFloatingGroup(e, t) {
    return this.component.addFloatingGroup(e, t);
  }
  fromJSON(e) {
    this.component.fromJSON(e);
  }
  toJSON() {
    return this.component.toJSON();
  }
  clear() {
    this.component.clear();
  }
}
class Bs extends pe {
  constructor(e, t) {
    super(), this.element = e, this.callbacks = t, this.target = null, this.registerListeners();
  }
  registerListeners() {
    this.addDisposables(Se(this.element, "dragenter", (e) => {
      this.target = e.target, this.callbacks.onDragEnter(e);
    }, !0)), this.addDisposables(Se(this.element, "dragover", (e) => {
      e.preventDefault(), this.callbacks.onDragOver && this.callbacks.onDragOver(e);
    }, !0)), this.addDisposables(Se(this.element, "dragleave", (e) => {
      this.target === e.target && (this.target = null, this.callbacks.onDragLeave(e));
    })), this.addDisposables(Se(this.element, "dragend", (e) => {
      this.target = null, this.callbacks.onDragEnd(e);
    })), this.addDisposables(Se(this.element, "drop", (e) => {
      this.callbacks.onDrop(e);
    }));
  }
}
function Us(r, e) {
  return typeof r == "number" ? r : e;
}
function Oo(r) {
  switch (r) {
    case "above":
      return "top";
    case "below":
      return "bottom";
    case "left":
      return "left";
    case "right":
      return "right";
    case "within":
      return "center";
    default:
      throw new Error(`invalid direction '${r}'`);
  }
}
class pt extends pe {
  get state() {
    return this._state;
  }
  constructor(e, t) {
    super(), this.element = e, this.options = t, this._onDrop = new Q(), this.onDrop = this._onDrop.event, this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones), this.addDisposables(this._onDrop, new Bs(this.element, {
      onDragEnter: () => {
      },
      onDragOver: (i) => {
        if (this._acceptedTargetZonesSet.size === 0) {
          this.removeDropTarget();
          return;
        }
        const n = this.element.clientWidth, a = this.element.clientHeight;
        if (n === 0 || a === 0)
          return;
        const l = i.currentTarget.getBoundingClientRect(), o = i.clientX - l.left, s = i.clientY - l.top, d = this.calculateQuadrant(this._acceptedTargetZonesSet, o, s, n, a);
        if (this.isAlreadyUsed(i) || d === null) {
          this.removeDropTarget();
          return;
        }
        if (typeof this.options.canDisplayOverlay == "boolean") {
          if (!this.options.canDisplayOverlay) {
            this.removeDropTarget();
            return;
          }
        } else if (!this.options.canDisplayOverlay(i, d)) {
          this.removeDropTarget();
          return;
        }
        this.markAsUsed(i), this.targetElement || (this.targetElement = document.createElement("div"), this.targetElement.className = "drop-target-dropzone", this.overlayElement = document.createElement("div"), this.overlayElement.className = "drop-target-selection", this._state = "center", this.targetElement.appendChild(this.overlayElement), this.element.classList.add("drop-target"), this.element.append(this.targetElement)), this.toggleClasses(d, n, a), this.setState(d);
      },
      onDragLeave: () => {
        this.removeDropTarget();
      },
      onDragEnd: () => {
        this.removeDropTarget();
      },
      onDrop: (i) => {
        i.preventDefault();
        const n = this._state;
        this.removeDropTarget(), n && (i.stopPropagation(), this._onDrop.fire({ position: n, nativeEvent: i }));
      }
    }));
  }
  setTargetZones(e) {
    this._acceptedTargetZonesSet = new Set(e);
  }
  dispose() {
    this.removeDropTarget(), super.dispose();
  }
  /**
   * Add a property to the event object for other potential listeners to check
   */
  markAsUsed(e) {
    e[pt.USED_EVENT_ID] = !0;
  }
  /**
   * Check is the event has already been used by another instance od DropTarget
   */
  isAlreadyUsed(e) {
    const t = e[pt.USED_EVENT_ID];
    return typeof t == "boolean" && t;
  }
  toggleClasses(e, t, i) {
    var n, a, l, o;
    if (!this.overlayElement)
      return;
    const s = t < 100, d = i < 100, h = e === "left", u = e === "right", p = e === "top", b = e === "bottom", k = !s && u, g = !s && h, m = !d && p, c = !d && b;
    let _ = 0.5;
    ((a = (n = this.options.overlayModel) === null || n === void 0 ? void 0 : n.size) === null || a === void 0 ? void 0 : a.type) === "percentage" && (_ = xe(this.options.overlayModel.size.value, 0, 100) / 100), ((o = (l = this.options.overlayModel) === null || l === void 0 ? void 0 : l.size) === null || o === void 0 ? void 0 : o.type) === "pixels" && ((k || g) && (_ = xe(0, this.options.overlayModel.size.value, t) / t), (m || c) && (_ = xe(0, this.options.overlayModel.size.value, i) / i));
    const f = (1 - _) / 2, v = _;
    let y;
    k ? y = `translateX(${100 * f}%) scaleX(${v})` : g ? y = `translateX(-${100 * f}%) scaleX(${v})` : m ? y = `translateY(-${100 * f}%) scaleY(${v})` : c ? y = `translateY(${100 * f}%) scaleY(${v})` : y = "", this.overlayElement.style.transform = y, ge(this.overlayElement, "small-right", s && u), ge(this.overlayElement, "small-left", s && h), ge(this.overlayElement, "small-top", d && p), ge(this.overlayElement, "small-bottom", d && b);
  }
  setState(e) {
    switch (e) {
      case "top":
        this._state = "top";
        break;
      case "left":
        this._state = "left";
        break;
      case "bottom":
        this._state = "bottom";
        break;
      case "right":
        this._state = "right";
        break;
      case "center":
        this._state = "center";
        break;
    }
  }
  calculateQuadrant(e, t, i, n, a) {
    var l, o, s, d, h, u;
    const p = ((l = this.options.overlayModel) === null || l === void 0 ? void 0 : l.activationSize) === void 0 || ((s = (o = this.options.overlayModel) === null || o === void 0 ? void 0 : o.activationSize) === null || s === void 0 ? void 0 : s.type) === "percentage", b = Us((u = (h = (d = this.options) === null || d === void 0 ? void 0 : d.overlayModel) === null || h === void 0 ? void 0 : h.activationSize) === null || u === void 0 ? void 0 : u.value, 20);
    return p ? Ws(e, t, i, n, a, b) : qs(e, t, i, n, a, b);
  }
  removeDropTarget() {
    this.targetElement && (this._state = void 0, this.element.removeChild(this.targetElement), this.targetElement = void 0, this.overlayElement = void 0, this.element.classList.remove("drop-target"));
  }
}
pt.USED_EVENT_ID = "__dockview_droptarget_event_is_used__";
function Ws(r, e, t, i, n, a) {
  const l = 100 * e / i, o = 100 * t / n;
  return r.has("left") && l < a ? "left" : r.has("right") && l > 100 - a ? "right" : r.has("top") && o < a ? "top" : r.has("bottom") && o > 100 - a ? "bottom" : r.has("center") ? "center" : null;
}
function qs(r, e, t, i, n, a) {
  return r.has("left") && e < a ? "left" : r.has("right") && e > i - a ? "right" : r.has("top") && t < a ? "top" : r.has("bottom") && t > n - a ? "bottom" : r.has("center") ? "center" : null;
}
class Gs extends pe {
  get element() {
    return this._element;
  }
  constructor() {
    super(), this.disposable = new Xe(), this._onDidFocus = new Q(), this.onDidFocus = this._onDidFocus.event, this._onDidBlur = new Q(), this.onDidBlur = this._onDidBlur.event, this._element = document.createElement("div"), this._element.className = "content-container", this._element.tabIndex = -1, this.addDisposables(this._onDidFocus, this._onDidBlur);
  }
  show() {
    this.element.style.display = "";
  }
  hide() {
    this.element.style.display = "none";
  }
  openPanel(e) {
    var t;
    if (this.panel === e)
      return;
    this.panel && (!((t = this.panel.view) === null || t === void 0) && t.content && this._element.removeChild(this.panel.view.content.element), this.panel = void 0), this.panel = e;
    const i = new pe();
    if (this.panel.view) {
      const n = this.panel.view.content.onDidFocus, a = this.panel.view.content.onDidBlur, l = Rn(this._element);
      i.addDisposables(l, l.onDidFocus(() => this._onDidFocus.fire()), l.onDidBlur(() => this._onDidBlur.fire())), n && i.addDisposables(n(() => this._onDidFocus.fire())), a && i.addDisposables(a(() => this._onDidBlur.fire())), this._element.appendChild(this.panel.view.content.element);
    }
    this.disposable.value = i;
  }
  layout(e, t) {
  }
  closePanel() {
    var e, t, i;
    !((i = (t = (e = this.panel) === null || e === void 0 ? void 0 : e.view) === null || t === void 0 ? void 0 : t.content) === null || i === void 0) && i.element && (this._element.removeChild(this.panel.view.content.element), this.panel = void 0);
  }
  dispose() {
    this.disposable.dispose(), super.dispose();
  }
}
var Yt;
(function(r) {
  r[r.Tab = 0] = "Tab", r[r.Panel = 1] = "Panel", r[r.TabContainer = 2] = "TabContainer", r[r.Edge = 3] = "Edge";
})(Yt || (Yt = {}));
class lo extends pe {
  constructor(e) {
    super(), this.el = e, this.dataDisposable = new Xe(), this.pointerEventsDisposable = new Xe(), this._onDragStart = new Q(), this.onDragStart = this._onDragStart.event, this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable), this.configure();
  }
  isCancelled(e) {
    return !1;
  }
  configure() {
    this.addDisposables(this._onDragStart, Se(this.el, "dragstart", (e) => {
      if (e.defaultPrevented || this.isCancelled(e)) {
        e.preventDefault();
        return;
      }
      const t = [
        ...Ct("iframe"),
        ...Ct("webview")
      ];
      this.pointerEventsDisposable.value = {
        dispose: () => {
          for (const i of t)
            i.style.pointerEvents = "auto";
        }
      };
      for (const i of t)
        i.style.pointerEvents = "none";
      this.el.classList.add("dv-dragged"), setTimeout(() => this.el.classList.remove("dv-dragged"), 0), this.dataDisposable.value = this.getData(e), this._onDragStart.fire(e), e.dataTransfer && (e.dataTransfer.effectAllowed = "move", e.dataTransfer.items.length > 0 || e.dataTransfer.setData("text/plain", "__dockview_internal_drag_event__"));
    }), Se(this.el, "dragend", () => {
      this.pointerEventsDisposable.dispose(), this.dataDisposable.dispose();
    }));
  }
}
class Hs extends lo {
  constructor(e, t, i, n) {
    super(e), this.accessor = t, this.group = i, this.panel = n, this.panelTransfer = st.getInstance();
  }
  getData(e) {
    return this.panelTransfer.setData([new wt(this.accessor.id, this.group.id, this.panel.id)], wt.prototype), {
      dispose: () => {
        this.panelTransfer.clearData(wt.prototype);
      }
    };
  }
}
class Vs extends pe {
  get element() {
    return this._element;
  }
  constructor(e, t, i) {
    super(), this.panel = e, this.accessor = t, this.group = i, this.content = void 0, this._onChanged = new Q(), this.onChanged = this._onChanged.event, this._onDropped = new Q(), this.onDrop = this._onDropped.event, this._onDragStart = new Q(), this.onDragStart = this._onDragStart.event, this._element = document.createElement("div"), this._element.className = "tab", this._element.tabIndex = 0, this._element.draggable = !0, ge(this.element, "inactive-tab", !0);
    const n = new Hs(this._element, this.accessor, this.group, this.panel);
    this.droptarget = new pt(this._element, {
      acceptedTargetZones: ["center"],
      canDisplayOverlay: (a, l) => {
        if (this.group.locked)
          return !1;
        const o = ot();
        return o && this.accessor.id === o.viewId ? o.panelId === null && o.groupId === this.group.id ? !1 : this.panel.id !== o.panelId : this.group.model.canDisplayOverlay(a, l, Yt.Tab);
      }
    }), this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, n.onDragStart((a) => {
      this._onDragStart.fire(a);
    }), n, Se(this._element, "mousedown", (a) => {
      a.defaultPrevented || this._onChanged.fire(a);
    }), this.droptarget.onDrop((a) => {
      this._onDropped.fire(a);
    }), this.droptarget);
  }
  setActive(e) {
    ge(this.element, "active-tab", e), ge(this.element, "inactive-tab", !e);
  }
  setContent(e) {
    this.content && this._element.removeChild(this.content.element), this.content = e, this._element.appendChild(this.content.element);
  }
  dispose() {
    super.dispose();
  }
}
function Ks(r, e) {
  si(e, "dv-dragged"), document.body.appendChild(e), r.setDragImage(e, 0, 0), setTimeout(() => {
    gr(e, "dv-dragged"), e.remove();
  }, 0);
}
class Xs extends lo {
  constructor(e, t, i) {
    super(e), this.accessor = t, this.group = i, this.panelTransfer = st.getInstance(), this.addDisposables(Se(e, "mousedown", (n) => {
      n.shiftKey && zs(n);
    }, !0));
  }
  isCancelled(e) {
    return !!(this.group.api.isFloating && !e.shiftKey);
  }
  getData(e) {
    const t = e.dataTransfer;
    this.panelTransfer.setData([new wt(this.accessor.id, this.group.id, null)], wt.prototype);
    const i = window.getComputedStyle(this.el), n = i.getPropertyValue("--dv-activegroup-visiblepanel-tab-background-color"), a = i.getPropertyValue("--dv-activegroup-visiblepanel-tab-color");
    if (t) {
      const l = document.createElement("div");
      l.style.backgroundColor = n, l.style.color = a, l.style.padding = "2px 8px", l.style.height = "24px", l.style.fontSize = "11px", l.style.lineHeight = "20px", l.style.borderRadius = "12px", l.style.position = "absolute", l.textContent = `Multiple Panels (${this.group.size})`, Ks(t, l);
    }
    return {
      dispose: () => {
        this.panelTransfer.clearData(wt.prototype);
      }
    };
  }
}
class Zs extends pe {
  get element() {
    return this._element;
  }
  constructor(e, t) {
    super(), this.accessor = e, this.group = t, this._onDrop = new Q(), this.onDrop = this._onDrop.event, this._onDragStart = new Q(), this.onDragStart = this._onDragStart.event, this._element = document.createElement("div"), this._element.className = "void-container", this._element.tabIndex = 0, this._element.draggable = !0, this.addDisposables(this._onDrop, this._onDragStart, Se(this._element, "click", () => {
      this.accessor.doSetGroupActive(this.group);
    }));
    const i = new Xs(this._element, e, t);
    this.voidDropTarget = new pt(this._element, {
      acceptedTargetZones: ["center"],
      canDisplayOverlay: (n, a) => {
        var l;
        const o = ot();
        return o && this.accessor.id === o.viewId ? o.panelId === null && o.groupId === this.group.id ? !1 : ((l = Ls(this.group.panels)) === null || l === void 0 ? void 0 : l.id) !== o.panelId : t.model.canDisplayOverlay(n, a, Yt.Panel);
      }
    }), this.addDisposables(i, i.onDragStart((n) => {
      this._onDragStart.fire(n);
    }), this.voidDropTarget.onDrop((n) => {
      this._onDrop.fire(n);
    }), this.voidDropTarget);
  }
}
class Js extends pe {
  get panels() {
    return this.tabs.map((e) => e.value.panel.id);
  }
  get size() {
    return this.tabs.length;
  }
  get hidden() {
    return this._hidden;
  }
  set hidden(e) {
    this._hidden = e, this.element.style.display = e ? "none" : "";
  }
  show() {
    this.hidden || (this.element.style.display = "");
  }
  hide() {
    this._element.style.display = "none";
  }
  setRightActionsElement(e) {
    this.rightActions !== e && (this.rightActions && (this.rightActions.remove(), this.rightActions = void 0), e && (this.rightActionsContainer.appendChild(e), this.rightActions = e));
  }
  setLeftActionsElement(e) {
    this.leftActions !== e && (this.leftActions && (this.leftActions.remove(), this.leftActions = void 0), e && (this.leftActionsContainer.appendChild(e), this.leftActions = e));
  }
  setPrefixActionsElement(e) {
    this.preActions !== e && (this.preActions && (this.preActions.remove(), this.preActions = void 0), e && (this.preActionsContainer.appendChild(e), this.preActions = e));
  }
  get element() {
    return this._element;
  }
  isActive(e) {
    return this.selectedIndex > -1 && this.tabs[this.selectedIndex].value === e;
  }
  indexOf(e) {
    return this.tabs.findIndex((t) => t.value.panel.id === e);
  }
  constructor(e, t) {
    super(), this.accessor = e, this.group = t, this.tabs = [], this.selectedIndex = -1, this._hidden = !1, this._onDrop = new Q(), this.onDrop = this._onDrop.event, this._onTabDragStart = new Q(), this.onTabDragStart = this._onTabDragStart.event, this._onGroupDragStart = new Q(), this.onGroupDragStart = this._onGroupDragStart.event, this.addDisposables(this._onDrop, this._onTabDragStart, this._onGroupDragStart), this._element = document.createElement("div"), this._element.className = "tabs-and-actions-container", ge(this._element, "dv-full-width-single-tab", this.accessor.options.singleTabMode === "fullwidth"), this.addDisposables(this.accessor.onDidAddPanel((i) => {
      i.api.group === this.group && ge(this._element, "dv-single-tab", this.size === 1);
    }), this.accessor.onDidRemovePanel((i) => {
      i.api.group === this.group && ge(this._element, "dv-single-tab", this.size === 1);
    })), this.rightActionsContainer = document.createElement("div"), this.rightActionsContainer.className = "right-actions-container", this.leftActionsContainer = document.createElement("div"), this.leftActionsContainer.className = "left-actions-container", this.preActionsContainer = document.createElement("div"), this.preActionsContainer.className = "pre-actions-container", this.tabContainer = document.createElement("div"), this.tabContainer.className = "tabs-container", this.voidContainer = new Zs(this.accessor, this.group), this._element.appendChild(this.preActionsContainer), this._element.appendChild(this.tabContainer), this._element.appendChild(this.leftActionsContainer), this._element.appendChild(this.voidContainer.element), this._element.appendChild(this.rightActionsContainer), this.addDisposables(this.voidContainer, this.voidContainer.onDragStart((i) => {
      this._onGroupDragStart.fire({
        nativeEvent: i,
        group: this.group
      });
    }), this.voidContainer.onDrop((i) => {
      this._onDrop.fire({
        event: i.nativeEvent,
        index: this.tabs.length
      });
    }), Se(this.voidContainer.element, "mousedown", (i) => {
      if (!this.accessor.options.disableFloatingGroups && i.shiftKey && !this.group.api.isFloating) {
        i.preventDefault();
        const { top: a, left: l } = this.element.getBoundingClientRect(), { top: o, left: s } = this.accessor.element.getBoundingClientRect();
        this.accessor.addFloatingGroup(this.group, {
          x: l - s + 20,
          y: a - o + 20
        }, { inDragMode: !0 });
      }
    }), Se(this.tabContainer, "mousedown", (i) => {
      if (i.defaultPrevented)
        return;
      i.button === 0 && this.accessor.doSetGroupActive(this.group);
    }));
  }
  setActive(e) {
  }
  addTab(e, t = this.tabs.length) {
    if (t < 0 || t > this.tabs.length)
      throw new Error("invalid location");
    this.tabContainer.insertBefore(e.value.element, this.tabContainer.children[t]), this.tabs = [
      ...this.tabs.slice(0, t),
      e,
      ...this.tabs.slice(t)
    ], this.selectedIndex < 0 && (this.selectedIndex = t);
  }
  delete(e) {
    const t = this.tabs.findIndex((l) => l.value.panel.id === e), i = this.tabs.splice(t, 1)[0], { value: n, disposable: a } = i;
    a.dispose(), n.dispose(), n.element.remove();
  }
  setActivePanel(e) {
    this.tabs.forEach((t) => {
      const i = e.id === t.value.panel.id;
      t.value.setActive(i);
    });
  }
  openPanel(e, t = this.tabs.length) {
    var i;
    if (this.tabs.find((o) => o.value.panel.id === e.id))
      return;
    const n = new Vs(e, this.accessor, this.group);
    if (!(!((i = e.view) === null || i === void 0) && i.tab))
      throw new Error("invalid header component");
    n.setContent(e.view.tab);
    const a = new pe(n.onDragStart((o) => {
      this._onTabDragStart.fire({ nativeEvent: o, panel: e });
    }), n.onChanged((o) => {
      var s;
      const d = !this.accessor.options.disableFloatingGroups, h = this.group.api.isFloating && this.size === 1;
      if (d && !h && o.shiftKey) {
        o.preventDefault();
        const b = this.accessor.getGroupPanel(n.panel.id), { top: k, left: g } = n.element.getBoundingClientRect(), { top: m, left: c } = this.accessor.element.getBoundingClientRect();
        this.accessor.addFloatingGroup(b, {
          x: g - c,
          y: k - m
        }, { inDragMode: !0 });
        return;
      }
      const u = e.id === ((s = this.group.model.activePanel) === null || s === void 0 ? void 0 : s.id) && this.group.model.isContentFocused;
      !(o.button === 0) || o.defaultPrevented || this.group.model.openPanel(e, {
        skipFocus: u
      });
    }), n.onDrop((o) => {
      this._onDrop.fire({
        event: o.nativeEvent,
        index: this.tabs.findIndex((s) => s.value === n)
      });
    })), l = { value: n, disposable: a };
    this.addTab(l, t);
  }
  closePanel(e) {
    this.delete(e.id);
  }
  dispose() {
    super.dispose();
    for (const { value: e, disposable: t } of this.tabs)
      t.dispose(), e.dispose();
    this.tabs = [];
  }
}
class Ys extends pe {
  get element() {
    throw new Error("not supported");
  }
  get activePanel() {
    return this._activePanel;
  }
  get locked() {
    return this._locked;
  }
  set locked(e) {
    this._locked = e, ge(this.container, "locked-groupview", e === "no-drop-target" || e);
  }
  get isActive() {
    return this._isGroupActive;
  }
  get panels() {
    return this._panels;
  }
  get size() {
    return this._panels.length;
  }
  get isEmpty() {
    return this._panels.length === 0;
  }
  get hasWatermark() {
    return !!(this.watermark && this.container.contains(this.watermark.element));
  }
  get header() {
    return this.tabsContainer;
  }
  get isContentFocused() {
    return document.activeElement ? Gi(document.activeElement, this.contentContainer.element) : !1;
  }
  get isFloating() {
    return this._isFloating;
  }
  set isFloating(e) {
    this._isFloating = e, this.dropTarget.setTargetZones(e ? ["center"] : ["top", "bottom", "left", "right", "center"]), ge(this.container, "dv-groupview-floating", e), this.groupPanel.api._onDidFloatingStateChange.fire({
      isFloating: this.isFloating
    });
  }
  constructor(e, t, i, n, a) {
    super(), this.container = e, this.accessor = t, this.id = i, this.options = n, this.groupPanel = a, this._isGroupActive = !1, this._locked = !1, this._isFloating = !1, this.mostRecentlyUsed = [], this._onDidChange = new Q(), this.onDidChange = this._onDidChange.event, this._width = 0, this._height = 0, this._panels = [], this._onMove = new Q(), this.onMove = this._onMove.event, this._onDidDrop = new Q(), this.onDidDrop = this._onDidDrop.event, this._onTabDragStart = new Q(), this.onTabDragStart = this._onTabDragStart.event, this._onGroupDragStart = new Q(), this.onGroupDragStart = this._onGroupDragStart.event, this._onDidAddPanel = new Q(), this.onDidAddPanel = this._onDidAddPanel.event, this._onDidRemovePanel = new Q(), this.onDidRemovePanel = this._onDidRemovePanel.event, this._onDidActivePanelChange = new Q(), this.onDidActivePanelChange = this._onDidActivePanelChange.event, ge(this.container, "groupview", !0), this.tabsContainer = new Js(this.accessor, this.groupPanel), this.contentContainer = new Gs(), this.dropTarget = new pt(this.contentContainer.element, {
      acceptedTargetZones: ["top", "bottom", "left", "right", "center"],
      canDisplayOverlay: (l, o) => {
        if (this.locked === "no-drop-target" || this.locked && o === "center")
          return !1;
        const s = ot();
        return !s && l.shiftKey && !this.isFloating ? !1 : s && s.viewId === this.accessor.id ? s.groupId === this.id && (o === "center" || s.panelId === null) ? !1 : !(this._panels.length === 1 && s.groupId === this.id) : this.canDisplayOverlay(l, o, Yt.Panel);
      }
    }), e.append(this.tabsContainer.element, this.contentContainer.element), this.header.hidden = !!n.hideHeader, this.locked = n.locked || !1, this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this.tabsContainer.onTabDragStart((l) => {
      this._onTabDragStart.fire(l);
    }), this.tabsContainer.onGroupDragStart((l) => {
      this._onGroupDragStart.fire(l);
    }), this.tabsContainer.onDrop((l) => {
      this.handleDropEvent(l.event, "center", l.index);
    }), this.contentContainer.onDidFocus(() => {
      this.accessor.doSetGroupActive(this.groupPanel, !0);
    }), this.contentContainer.onDidBlur(() => {
    }), this.dropTarget.onDrop((l) => {
      this.handleDropEvent(l.nativeEvent, l.position);
    }), this._onMove, this._onDidChange, this._onDidDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange);
  }
  initialize() {
    var e, t;
    !((e = this.options) === null || e === void 0) && e.panels && this.options.panels.forEach((i) => {
      this.doAddPanel(i);
    }), !((t = this.options) === null || t === void 0) && t.activePanel && this.openPanel(this.options.activePanel), this.setActive(this.isActive, !0, !0), this.updateContainer(), this.accessor.options.createRightHeaderActionsElement && (this._rightHeaderActions = this.accessor.options.createRightHeaderActionsElement(this.groupPanel), this.addDisposables(this._rightHeaderActions), this._rightHeaderActions.init({
      containerApi: new yt(this.accessor),
      api: this.groupPanel.api
    }), this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element)), this.accessor.options.createLeftHeaderActionsElement && (this._leftHeaderActions = this.accessor.options.createLeftHeaderActionsElement(this.groupPanel), this.addDisposables(this._leftHeaderActions), this._leftHeaderActions.init({
      containerApi: new yt(this.accessor),
      api: this.groupPanel.api
    }), this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element)), this.accessor.options.createPrefixHeaderActionsElement && (this._prefixHeaderActions = this.accessor.options.createPrefixHeaderActionsElement(this.groupPanel), this.addDisposables(this._prefixHeaderActions), this._prefixHeaderActions.init({
      containerApi: new yt(this.accessor),
      api: this.groupPanel.api
    }), this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element));
  }
  indexOf(e) {
    return this.tabsContainer.indexOf(e.id);
  }
  toJSON() {
    var e;
    const t = {
      views: this.tabsContainer.panels,
      activeView: (e = this._activePanel) === null || e === void 0 ? void 0 : e.id,
      id: this.id
    };
    return this.locked !== !1 && (t.locked = this.locked), this.header.hidden && (t.hideHeader = !0), t;
  }
  moveToNext(e) {
    e || (e = {}), e.panel || (e.panel = this.activePanel);
    const t = e.panel ? this.panels.indexOf(e.panel) : -1;
    let i;
    if (t < this.panels.length - 1)
      i = t + 1;
    else if (!e.suppressRoll)
      i = 0;
    else
      return;
    this.openPanel(this.panels[i]);
  }
  moveToPrevious(e) {
    if (e || (e = {}), e.panel || (e.panel = this.activePanel), !e.panel)
      return;
    const t = this.panels.indexOf(e.panel);
    let i;
    if (t > 0)
      i = t - 1;
    else if (!e.suppressRoll)
      i = this.panels.length - 1;
    else
      return;
    this.openPanel(this.panels[i]);
  }
  containsPanel(e) {
    return this.panels.includes(e);
  }
  init(e) {
  }
  update(e) {
  }
  focus() {
    var e, t;
    (t = (e = this._activePanel) === null || e === void 0 ? void 0 : e.focus) === null || t === void 0 || t.call(e);
  }
  openPanel(e, t = {}) {
    (typeof t.index != "number" || t.index > this.panels.length) && (t.index = this.panels.length);
    const i = !!t.skipSetPanelActive, n = !!t.skipSetGroupActive;
    if (e.updateParentGroup(this.groupPanel, !0), this._activePanel === e) {
      n || this.accessor.doSetGroupActive(this.groupPanel);
      return;
    }
    this.doAddPanel(e, t.index, i), i || this.doSetActivePanel(e), n || this.accessor.doSetGroupActive(this.groupPanel, !!t.skipFocus), this.updateContainer();
  }
  removePanel(e) {
    const t = typeof e == "string" ? e : e.id, i = this._panels.find((n) => n.id === t);
    if (!i)
      throw new Error("invalid operation");
    return this._removePanel(i);
  }
  closeAllPanels() {
    if (this.panels.length > 0) {
      const e = [...this.panels];
      for (const t of e)
        this.doClose(t);
    } else
      this.accessor.removeGroup(this.groupPanel);
  }
  closePanel(e) {
    this.doClose(e);
  }
  doClose(e) {
    this.accessor.removePanel(e);
  }
  isPanelActive(e) {
    return this._activePanel === e;
  }
  updateActions(e) {
    this.tabsContainer.setRightActionsElement(e);
  }
  setActive(e, t = !1, i = !1) {
    var n, a, l, o;
    if (!i && this.isActive === e) {
      t || (a = (n = this._activePanel) === null || n === void 0 ? void 0 : n.focus) === null || a === void 0 || a.call(n);
      return;
    }
    this._isGroupActive = e, ge(this.container, "active-group", e), ge(this.container, "inactive-group", !e), this.tabsContainer.setActive(this.isActive), !this._activePanel && this.panels.length > 0 && this.doSetActivePanel(this.panels[0]), this.updateContainer(), e && (t || (o = (l = this._activePanel) === null || l === void 0 ? void 0 : l.focus) === null || o === void 0 || o.call(l));
  }
  layout(e, t) {
    var i;
    this._width = e, this._height = t, this.contentContainer.layout(this._width, this._height), !((i = this._activePanel) === null || i === void 0) && i.layout && this._activePanel.layout(this._width, this._height);
  }
  _removePanel(e) {
    const t = this._activePanel === e;
    if (this.doRemovePanel(e), t && this.panels.length > 0) {
      const i = this.mostRecentlyUsed[0];
      this.openPanel(i);
    }
    return this._activePanel && this.panels.length === 0 && this.doSetActivePanel(void 0), this.updateContainer(), e;
  }
  doRemovePanel(e) {
    const t = this.panels.indexOf(e);
    this._activePanel === e && this.contentContainer.closePanel(), this.tabsContainer.delete(e.id), this._panels.splice(t, 1), this.mostRecentlyUsed.includes(e) && this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(e), 1), this._onDidRemovePanel.fire({ panel: e });
  }
  doAddPanel(e, t = this.panels.length, i = !1) {
    const a = this._panels.indexOf(e) > -1;
    this.tabsContainer.openPanel(e, t), i || this.contentContainer.openPanel(e), this.tabsContainer.show(), this.contentContainer.show(), !a && (this.updateMru(e), this.panels.splice(t, 0, e), this._onDidAddPanel.fire({ panel: e }));
  }
  doSetActivePanel(e) {
    this._activePanel = e, e && (this.tabsContainer.setActivePanel(e), e.layout(this._width, this._height), this.updateMru(e), this._onDidActivePanelChange.fire({ panel: e }));
  }
  updateMru(e) {
    this.mostRecentlyUsed.includes(e) && this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(e), 1), this.mostRecentlyUsed = [e, ...this.mostRecentlyUsed];
  }
  updateContainer() {
    var e, t;
    if (ge(this.container, "empty", this.isEmpty), this.panels.forEach((i) => i.updateParentGroup(this.groupPanel, this.isActive)), this.isEmpty && !this.watermark) {
      const i = this.accessor.createWatermarkComponent();
      i.init({
        containerApi: new yt(this.accessor),
        group: this.groupPanel
      }), this.watermark = i, Se(this.watermark.element, "click", () => {
        this.isActive || this.accessor.doSetGroupActive(this.groupPanel);
      }), this.tabsContainer.hide(), this.contentContainer.element.appendChild(this.watermark.element), this.watermark.updateParentGroup(this.groupPanel, !0);
    }
    !this.isEmpty && this.watermark && (this.watermark.element.remove(), (t = (e = this.watermark).dispose) === null || t === void 0 || t.call(e), this.watermark = void 0, this.tabsContainer.show());
  }
  canDisplayOverlay(e, t, i) {
    return this.accessor.options.showDndOverlay ? this.accessor.options.showDndOverlay({
      nativeEvent: e,
      target: i,
      group: this.accessor.getPanel(this.id),
      position: t,
      getData: ot
    }) : !1;
  }
  handleDropEvent(e, t, i) {
    if (this.locked === "no-drop-target")
      return;
    const n = ot();
    if (n && n.viewId === this.accessor.id) {
      if (n.panelId === null) {
        const { groupId: d } = n;
        this._onMove.fire({
          target: t,
          groupId: d,
          index: i
        });
        return;
      }
      if (this.tabsContainer.indexOf(n.panelId) !== -1 && this.tabsContainer.size === 1)
        return;
      const { groupId: l, panelId: o } = n;
      if (this.id === l && !t && this.tabsContainer.indexOf(o) === i)
        return;
      this._onMove.fire({
        target: t,
        groupId: n.groupId,
        itemId: n.panelId,
        index: i
      });
    } else
      this._onDidDrop.fire({
        nativeEvent: e,
        position: t,
        index: i,
        getData: () => ot()
      });
  }
  dispose() {
    var e, t, i;
    super.dispose(), (e = this.watermark) === null || e === void 0 || e.element.remove(), (i = (t = this.watermark) === null || t === void 0 ? void 0 : t.dispose) === null || i === void 0 || i.call(t);
    for (const n of this.panels)
      n.dispose();
    this.dropTarget.dispose(), this.tabsContainer.dispose(), this.contentContainer.dispose();
  }
}
class mo extends pe {
  get element() {
    return this._element;
  }
  constructor(e) {
    super(), e ? this._element = e : (this._element = document.createElement("div"), this._element.style.height = "100%", this._element.style.width = "100%", this._element.className = "dv-resizable-container"), this.addDisposables(Nn(this._element, (t) => {
      if (this.isDisposed || !document.body.contains(this._element))
        return;
      const { width: i, height: n } = t.contentRect;
      this.layout(i, n);
    }));
  }
}
const Qs = so();
function Xr(r) {
  switch (r) {
    case "left":
      return "left";
    case "right":
      return "right";
    case "above":
      return "top";
    case "below":
      return "bottom";
    case "within":
    default:
      return "center";
  }
}
class Wn extends mo {
  get id() {
    return this._id;
  }
  get size() {
    return this._groups.size;
  }
  get groups() {
    return Array.from(this._groups.values()).map((e) => e.value);
  }
  get width() {
    return this.gridview.width;
  }
  get height() {
    return this.gridview.height;
  }
  get minimumHeight() {
    return this.gridview.minimumHeight;
  }
  get maximumHeight() {
    return this.gridview.maximumHeight;
  }
  get minimumWidth() {
    return this.gridview.minimumWidth;
  }
  get maximumWidth() {
    return this.gridview.maximumWidth;
  }
  get activeGroup() {
    return this._activeGroup;
  }
  constructor(e) {
    super(e.parentElement), this._id = Qs.next(), this._groups = /* @__PURE__ */ new Map(), this._onDidLayoutChange = new Q(), this.onDidLayoutChange = this._onDidLayoutChange.event, this._onDidRemoveGroup = new Q(), this.onDidRemoveGroup = this._onDidRemoveGroup.event, this._onDidAddGroup = new Q(), this.onDidAddGroup = this._onDidAddGroup.event, this._onDidActiveGroupChange = new Q(), this.onDidActiveGroupChange = this._onDidActiveGroupChange.event, this._bufferOnDidLayoutChange = new Es(), this.gridview = new Fs(!!e.proportionalLayout, e.styles, e.orientation), this.element.appendChild(this.gridview.element), this.layout(0, 0, !0), this.addDisposables(this.gridview.onDidChange(() => {
      this._bufferOnDidLayoutChange.fire();
    }), Zt.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {
      this._bufferOnDidLayoutChange.fire();
    }), this._bufferOnDidLayoutChange.onEvent(() => {
      this._onDidLayoutChange.fire();
    }), this._bufferOnDidLayoutChange);
  }
  setVisible(e, t) {
    this.gridview.setViewVisible(Ae(e.element), t), this._onDidLayoutChange.fire();
  }
  isVisible(e) {
    return this.gridview.isViewVisible(Ae(e.element));
  }
  doAddGroup(e, t = [0], i) {
    this.gridview.addView(e, i ?? Ue.Distribute, t), this._onDidAddGroup.fire(e), this.doSetGroupActive(e);
  }
  doRemoveGroup(e, t) {
    if (!this._groups.has(e.id))
      throw new Error("invalid operation");
    const i = this._groups.get(e.id), n = this.gridview.remove(e, Ue.Distribute);
    if (i && !(t != null && t.skipDispose) && (i.disposable.dispose(), i.value.dispose(), this._groups.delete(e.id)), this._onDidRemoveGroup.fire(e), !(t != null && t.skipActive) && this._activeGroup === e) {
      const a = Array.from(this._groups.values());
      this.doSetGroupActive(a.length > 0 ? a[0].value : void 0);
    }
    return n;
  }
  getPanel(e) {
    var t;
    return (t = this._groups.get(e)) === null || t === void 0 ? void 0 : t.value;
  }
  doSetGroupActive(e, t) {
    var i, n, a;
    this._activeGroup !== e && (this._activeGroup && (this._activeGroup.setActive(!1), t || (n = (i = this._activeGroup).focus) === null || n === void 0 || n.call(i)), e && (e.setActive(!0), t || (a = e.focus) === null || a === void 0 || a.call(e)), this._activeGroup = e, this._onDidActiveGroupChange.fire(e));
  }
  removeGroup(e) {
    this.doRemoveGroup(e);
  }
  moveToNext(e) {
    var t;
    if (e || (e = {}), !e.group) {
      if (!this.activeGroup)
        return;
      e.group = this.activeGroup;
    }
    const i = Ae(e.group.element), n = (t = this.gridview.next(i)) === null || t === void 0 ? void 0 : t.view;
    this.doSetGroupActive(n);
  }
  moveToPrevious(e) {
    var t;
    if (e || (e = {}), !e.group) {
      if (!this.activeGroup)
        return;
      e.group = this.activeGroup;
    }
    const i = Ae(e.group.element), n = (t = this.gridview.previous(i)) === null || t === void 0 ? void 0 : t.view;
    this.doSetGroupActive(n);
  }
  layout(e, t, i) {
    (i || e !== this.width || t !== this.height) && (this.gridview.element.style.height = `${t}px`, this.gridview.element.style.width = `${e}px`, this.gridview.layout(e, t));
  }
  dispose() {
    this._onDidActiveGroupChange.dispose(), this._onDidAddGroup.dispose(), this._onDidRemoveGroup.dispose(), this._onDidLayoutChange.dispose();
    for (const e of this.groups)
      e.dispose();
    this.gridview.dispose(), super.dispose();
  }
}
class qn extends pe {
  //
  get isFocused() {
    return this._isFocused;
  }
  get isActive() {
    return this._isActive;
  }
  get isVisible() {
    return this._isVisible;
  }
  get width() {
    return this._width;
  }
  get height() {
    return this._height;
  }
  constructor(e) {
    super(), this.id = e, this._isFocused = !1, this._isActive = !1, this._isVisible = !0, this._width = 0, this._height = 0, this.panelUpdatesDisposable = new Xe(), this._onDidDimensionChange = new Q({
      replay: !0
    }), this.onDidDimensionsChange = this._onDidDimensionChange.event, this._onDidChangeFocus = new Q({
      replay: !0
    }), this.onDidFocusChange = this._onDidChangeFocus.event, this._onFocusEvent = new Q(), this.onFocusEvent = this._onFocusEvent.event, this._onDidVisibilityChange = new Q({
      replay: !0
    }), this.onDidVisibilityChange = this._onDidVisibilityChange.event, this._onVisibilityChange = new Q(), this.onVisibilityChange = this._onVisibilityChange.event, this._onDidActiveChange = new Q({
      replay: !0
    }), this.onDidActiveChange = this._onDidActiveChange.event, this._onActiveChange = new Q(), this.onActiveChange = this._onActiveChange.event, this._onUpdateParameters = new Q(), this.onUpdateParameters = this._onUpdateParameters.event, this.addDisposables(this.onDidFocusChange((t) => {
      this._isFocused = t.isFocused;
    }), this.onDidActiveChange((t) => {
      this._isActive = t.isActive;
    }), this.onDidVisibilityChange((t) => {
      this._isVisible = t.isVisible;
    }), this.onDidDimensionsChange((t) => {
      this._width = t.width, this._height = t.height;
    }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this._onUpdateParameters);
  }
  initialize(e) {
    this.panelUpdatesDisposable.value = this._onUpdateParameters.event((t) => {
      e.update({
        params: t
      });
    });
  }
  setVisible(e) {
    this._onVisibilityChange.fire({ isVisible: e });
  }
  setActive() {
    this._onActiveChange.fire();
  }
  updateParameters(e) {
    this._onUpdateParameters.fire(e);
  }
  dispose() {
    super.dispose();
  }
}
class Gn extends qn {
  //
  constructor(e) {
    super(e), this._onDidConstraintsChangeInternal = new Q(), this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event, this._onDidConstraintsChange = new Q({
      replay: !0
    }), this.onDidConstraintsChange = this._onDidConstraintsChange.event, this._onDidSizeChange = new Q(), this.onDidSizeChange = this._onDidSizeChange.event, this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);
  }
  setConstraints(e) {
    this._onDidConstraintsChangeInternal.fire(e);
  }
  setSize(e) {
    this._onDidSizeChange.fire(e);
  }
}
class $s extends Gn {
  set pane(e) {
    this._pane = e;
  }
  constructor(e) {
    super(e), this._onDidExpansionChange = new Q({
      replay: !0
    }), this.onDidExpansionChange = this._onDidExpansionChange.event, this._onMouseEnter = new Q({}), this.onMouseEnter = this._onMouseEnter.event, this._onMouseLeave = new Q({}), this.onMouseLeave = this._onMouseLeave.event, this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);
  }
  setExpanded(e) {
    var t;
    (t = this._pane) === null || t === void 0 || t.setExpanded(e);
  }
  get isExpanded() {
    var e;
    return !!(!((e = this._pane) === null || e === void 0) && e.isExpanded());
  }
}
class uo extends pe {
  get element() {
    return this._element;
  }
  get width() {
    return this._width;
  }
  get height() {
    return this._height;
  }
  get params() {
    var e;
    return (e = this._params) === null || e === void 0 ? void 0 : e.params;
  }
  constructor(e, t, i) {
    super(), this.id = e, this.component = t, this.api = i, this._height = 0, this._width = 0, this._element = document.createElement("div"), this._element.tabIndex = -1, this._element.style.outline = "none", this._element.style.height = "100%", this._element.style.width = "100%", this._element.style.overflow = "hidden";
    const n = Rn(this._element);
    this.addDisposables(this.api, n.onDidFocus(() => {
      this.api._onDidChangeFocus.fire({ isFocused: !0 });
    }), n.onDidBlur(() => {
      this.api._onDidChangeFocus.fire({ isFocused: !1 });
    }), n);
  }
  focus() {
    this.api._onFocusEvent.fire();
  }
  layout(e, t) {
    this._width = e, this._height = t, this.api._onDidDimensionChange.fire({ width: e, height: t }), this.part && this._params && this.part.update(this._params.params);
  }
  init(e) {
    this._params = e, this.part = this.getComponent();
  }
  update(e) {
    var t, i;
    this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (t = this._params) === null || t === void 0 ? void 0 : t.params), e.params) });
    for (const n of Object.keys(e.params))
      e.params[n] === void 0 && delete this._params.params[n];
    (i = this.part) === null || i === void 0 || i.update({ params: this._params.params });
  }
  toJSON() {
    var e, t;
    const i = (t = (e = this._params) === null || e === void 0 ? void 0 : e.params) !== null && t !== void 0 ? t : {};
    return {
      id: this.id,
      component: this.component,
      params: Object.keys(i).length > 0 ? i : void 0
    };
  }
  dispose() {
    var e;
    this.api.dispose(), (e = this.part) === null || e === void 0 || e.dispose(), super.dispose();
  }
}
class ed extends uo {
  set orientation(e) {
    this._orientation = e;
  }
  get orientation() {
    return this._orientation;
  }
  get minimumSize() {
    const e = this.headerSize, i = this.isExpanded() ? this._minimumBodySize : 0;
    return e + i;
  }
  get maximumSize() {
    const e = this.headerSize, i = this.isExpanded() ? this._maximumBodySize : 0;
    return e + i;
  }
  get size() {
    return this._size;
  }
  get orthogonalSize() {
    return this._orthogonalSize;
  }
  set orthogonalSize(e) {
    this._orthogonalSize = e;
  }
  get minimumBodySize() {
    return this._minimumBodySize;
  }
  set minimumBodySize(e) {
    this._minimumBodySize = typeof e == "number" ? e : 0;
  }
  get maximumBodySize() {
    return this._maximumBodySize;
  }
  set maximumBodySize(e) {
    this._maximumBodySize = typeof e == "number" ? e : Number.POSITIVE_INFINITY;
  }
  get headerVisible() {
    return this._headerVisible;
  }
  set headerVisible(e) {
    this._headerVisible = e, this.header.style.display = e ? "" : "none";
  }
  constructor(e, t, i, n, a, l) {
    super(e, t, new $s(e)), this.headerComponent = i, this._onDidChangeExpansionState = new Q({ replay: !0 }), this.onDidChangeExpansionState = this._onDidChangeExpansionState.event, this._onDidChange = new Q(), this.onDidChange = this._onDidChange.event, this.headerSize = 22, this._orthogonalSize = 0, this._size = 0, this._minimumBodySize = 100, this._maximumBodySize = Number.POSITIVE_INFINITY, this._isExpanded = !1, this.expandedSize = 0, this.api.pane = this, this.api.initialize(this), this._isExpanded = a, this._headerVisible = l, this._onDidChangeExpansionState.fire(this.isExpanded()), this._orientation = n, this.element.classList.add("pane"), this.addDisposables(this.api.onDidSizeChange((o) => {
      this._onDidChange.fire({ size: o.size });
    }), Se(this.element, "mouseenter", (o) => {
      this.api._onMouseEnter.fire(o);
    }), Se(this.element, "mouseleave", (o) => {
      this.api._onMouseLeave.fire(o);
    })), this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((o) => {
      this.api._onDidExpansionChange.fire({
        isExpanded: o
      });
    }), this.api.onDidFocusChange((o) => {
      this.header && (o.isFocused ? si(this.header, "focused") : gr(this.header, "focused"));
    })), this.renderOnce();
  }
  setVisible(e) {
    this.api._onDidVisibilityChange.fire({ isVisible: e });
  }
  setActive(e) {
    this.api._onDidActiveChange.fire({ isActive: e });
  }
  isExpanded() {
    return this._isExpanded;
  }
  setExpanded(e) {
    this._isExpanded !== e && (this._isExpanded = e, e ? (this.animationTimer && clearTimeout(this.animationTimer), this.body && this.element.appendChild(this.body)) : this.animationTimer = setTimeout(() => {
      var t;
      (t = this.body) === null || t === void 0 || t.remove();
    }, 200), this._onDidChange.fire(e ? { size: this.width } : {}), this._onDidChangeExpansionState.fire(e));
  }
  layout(e, t) {
    this._size = e, this._orthogonalSize = t;
    const [i, n] = this.orientation === ae.HORIZONTAL ? [e, t] : [t, e];
    this.isExpanded() && (this.expandedSize = i), super.layout(i, n);
  }
  init(e) {
    var t, i;
    super.init(e), typeof e.minimumBodySize == "number" && (this.minimumBodySize = e.minimumBodySize), typeof e.maximumBodySize == "number" && (this.maximumBodySize = e.maximumBodySize), this.bodyPart = this.getBodyComponent(), this.headerPart = this.getHeaderComponent(), this.bodyPart.init(Object.assign(Object.assign({}, e), { api: this.api })), this.headerPart.init(Object.assign(Object.assign({}, e), { api: this.api })), (t = this.body) === null || t === void 0 || t.append(this.bodyPart.element), (i = this.header) === null || i === void 0 || i.append(this.headerPart.element), typeof e.isExpanded == "boolean" && this.setExpanded(e.isExpanded);
  }
  toJSON() {
    const e = this._params;
    return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: e.title });
  }
  renderOnce() {
    this.header = document.createElement("div"), this.header.tabIndex = 0, this.header.className = "pane-header", this.header.style.height = `${this.headerSize}px`, this.header.style.lineHeight = `${this.headerSize}px`, this.header.style.minHeight = `${this.headerSize}px`, this.header.style.maxHeight = `${this.headerSize}px`, this.element.appendChild(this.header), this.body = document.createElement("div"), this.body.className = "pane-body", this.element.appendChild(this.body);
  }
  // TODO slightly hacky by-pass of the component to create a body and header component
  getComponent() {
    return {
      update: (e) => {
        var t, i;
        (t = this.bodyPart) === null || t === void 0 || t.update({ params: e }), (i = this.headerPart) === null || i === void 0 || i.update({ params: e });
      },
      dispose: () => {
        var e, t;
        (e = this.bodyPart) === null || e === void 0 || e.dispose(), (t = this.headerPart) === null || t === void 0 || t.dispose();
      }
    };
  }
}
class td extends ed {
  constructor(e, t, i, n, a, l, o) {
    super(t, i, n, a, l, !0), this.accessor = e, this._onDidDrop = new Q(), this.onDidDrop = this._onDidDrop.event, o || this.initDragFeatures();
  }
  initDragFeatures() {
    if (!this.header)
      return;
    const e = this.id, t = this.accessor.id;
    this.header.draggable = !0, this.handler = new class extends lo {
      getData() {
        return st.getInstance().setData([new ur(t, e)], ur.prototype), {
          dispose: () => {
            st.getInstance().clearData(ur.prototype);
          }
        };
      }
    }(this.header), this.target = new pt(this.element, {
      acceptedTargetZones: ["top", "bottom"],
      overlayModel: {
        activationSize: { type: "percentage", value: 50 }
      },
      canDisplayOverlay: (i) => {
        const n = or();
        return n && n.paneId !== this.id && n.viewId === this.accessor.id ? !0 : this.accessor.options.showDndOverlay ? this.accessor.options.showDndOverlay({
          nativeEvent: i,
          getData: or,
          panel: this
        }) : !1;
      }
    }), this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((i) => {
      this.onDrop(i);
    }));
  }
  onDrop(e) {
    const t = or();
    if (!t || t.viewId !== this.accessor.id) {
      this._onDidDrop.fire(Object.assign(Object.assign({}, e), { panel: this, api: new Jt(this.accessor), getData: or }));
      return;
    }
    const i = this._params.containerApi, n = t.paneId, a = i.getPanel(n);
    if (!a) {
      this._onDidDrop.fire(Object.assign(Object.assign({}, e), { panel: this, getData: or, api: new Jt(this.accessor) }));
      return;
    }
    const l = i.panels, o = l.indexOf(a);
    let s = i.panels.indexOf(this);
    (e.position === "left" || e.position === "top") && (s = Math.max(0, s - 1)), (e.position === "right" || e.position === "bottom") && (o > s && s++, s = Math.min(l.length - 1, s)), i.movePanel(o, s);
  }
}
class co extends qn {
  constructor(e, t) {
    super(e), this._onDidConstraintsChangeInternal = new Q(), this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event, this._onDidConstraintsChange = new Q({
      replay: !0
    }), this.onDidConstraintsChange = this._onDidConstraintsChange.event, this._onDidSizeChange = new Q(), this.onDidSizeChange = this._onDidSizeChange.event, this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange), t && this.initialize(t);
  }
  setConstraints(e) {
    this._onDidConstraintsChangeInternal.fire(e);
  }
  setSize(e) {
    this._onDidSizeChange.fire(e);
  }
}
class Hn extends uo {
  get priority() {
    return this._priority;
  }
  get snap() {
    return this._snap;
  }
  get minimumWidth() {
    const e = typeof this._minimumWidth == "function" ? this._minimumWidth() : this._minimumWidth;
    return e !== this._evaluatedMinimumWidth && (this._evaluatedMinimumWidth = e, this.updateConstraints()), e;
  }
  get minimumHeight() {
    const e = typeof this._minimumHeight == "function" ? this._minimumHeight() : this._minimumHeight;
    return e !== this._evaluatedMinimumHeight && (this._evaluatedMinimumHeight = e, this.updateConstraints()), e;
  }
  get maximumHeight() {
    const e = typeof this._maximumHeight == "function" ? this._maximumHeight() : this._maximumHeight;
    return e !== this._evaluatedMaximumHeight && (this._evaluatedMaximumHeight = e, this.updateConstraints()), e;
  }
  get maximumWidth() {
    const e = typeof this._maximumWidth == "function" ? this._maximumWidth() : this._maximumWidth;
    return e !== this._evaluatedMaximumWidth && (this._evaluatedMaximumWidth = e, this.updateConstraints()), e;
  }
  get isActive() {
    return this.api.isActive;
  }
  constructor(e, t, i, n) {
    super(e, t, n ?? new co(e)), this._evaluatedMinimumWidth = 0, this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER, this._evaluatedMinimumHeight = 0, this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER, this._minimumWidth = 0, this._minimumHeight = 0, this._maximumWidth = Number.MAX_SAFE_INTEGER, this._maximumHeight = Number.MAX_SAFE_INTEGER, this._snap = !1, this._onDidChange = new Q(), this.onDidChange = this._onDidChange.event, typeof (i == null ? void 0 : i.minimumWidth) == "number" && (this._minimumWidth = i.minimumWidth), typeof (i == null ? void 0 : i.maximumWidth) == "number" && (this._maximumWidth = i.maximumWidth), typeof (i == null ? void 0 : i.minimumHeight) == "number" && (this._minimumHeight = i.minimumHeight), typeof (i == null ? void 0 : i.maximumHeight) == "number" && (this._maximumHeight = i.maximumHeight), this.api.initialize(this), this.addDisposables(this.api.onVisibilityChange((a) => {
      const { isVisible: l } = a, { accessor: o } = this._params;
      o.setVisible(this, l);
    }), this.api.onActiveChange(() => {
      const { accessor: a } = this._params;
      a.setActive(this);
    }), this.api.onDidConstraintsChangeInternal((a) => {
      (typeof a.minimumWidth == "number" || typeof a.minimumWidth == "function") && (this._minimumWidth = a.minimumWidth), (typeof a.minimumHeight == "number" || typeof a.minimumHeight == "function") && (this._minimumHeight = a.minimumHeight), (typeof a.maximumWidth == "number" || typeof a.maximumWidth == "function") && (this._maximumWidth = a.maximumWidth), (typeof a.maximumHeight == "number" || typeof a.maximumHeight == "function") && (this._maximumHeight = a.maximumHeight);
    }), this.api.onDidSizeChange((a) => {
      this._onDidChange.fire({
        height: a.height,
        width: a.width
      });
    }), this._onDidChange);
  }
  setVisible(e) {
    this.api._onDidVisibilityChange.fire({ isVisible: e });
  }
  setActive(e) {
    this.api._onDidActiveChange.fire({ isActive: e });
  }
  init(e) {
    e.maximumHeight && (this._maximumHeight = e.maximumHeight), e.minimumHeight && (this._minimumHeight = e.minimumHeight), e.maximumWidth && (this._maximumWidth = e.maximumWidth), e.minimumWidth && (this._minimumWidth = e.minimumWidth), this._priority = e.priority, this._snap = !!e.snap, super.init(e), typeof e.isVisible == "boolean" && this.setVisible(e.isVisible);
  }
  updateConstraints() {
    this.api._onDidConstraintsChange.fire({
      minimumWidth: this._evaluatedMinimumWidth,
      maximumWidth: this._evaluatedMaximumWidth,
      minimumHeight: this._evaluatedMinimumHeight,
      maximumHeight: this._evaluatedMaximumHeight
    });
  }
  toJSON() {
    const e = super.toJSON(), t = (n) => n === Number.MAX_SAFE_INTEGER ? void 0 : n, i = (n) => n <= 0 ? void 0 : n;
    return Object.assign(Object.assign({}, e), { minimumHeight: i(this.minimumHeight), maximumHeight: t(this.maximumHeight), minimumWidth: i(this.minimumWidth), maximumWidth: t(this.maximumWidth), snap: this.snap, priority: this.priority });
  }
}
class rd extends co {
  get isFloating() {
    if (!this._group)
      throw new Error("DockviewGroupPanelApiImpl not initialized");
    return this._group.model.isFloating;
  }
  constructor(e, t) {
    super(e), this.accessor = t, this._onDidFloatingStateChange = new Q(), this.onDidFloatingStateChange = this._onDidFloatingStateChange.event, this.addDisposables(this._onDidFloatingStateChange);
  }
  moveTo(e) {
    var t;
    if (!this._group)
      throw new Error("DockviewGroupPanelApiImpl not initialized");
    this.accessor.moveGroupOrPanel(e.group, this._group.id, void 0, (t = e.position) !== null && t !== void 0 ? t : "center");
  }
  initialize(e) {
    this._group = e;
  }
}
class id extends Hn {
  get panels() {
    return this._model.panels;
  }
  get activePanel() {
    return this._model.activePanel;
  }
  get size() {
    return this._model.size;
  }
  get model() {
    return this._model;
  }
  get locked() {
    return this._model.locked;
  }
  set locked(e) {
    this._model.locked = e;
  }
  get header() {
    return this._model.header;
  }
  constructor(e, t, i) {
    super(t, "groupview_default", {
      minimumHeight: 100,
      minimumWidth: 100
    }, new rd(t, e)), this.api.initialize(this), this._model = new Ys(this.element, e, t, i, this);
  }
  initialize() {
    this._model.initialize();
  }
  setActive(e) {
    super.setActive(e), this.model.setActive(e);
  }
  layout(e, t) {
    super.layout(e, t), this.model.layout(e, t);
  }
  getComponent() {
    return this._model;
  }
  toJSON() {
    return this.model.toJSON();
  }
}
function od(r) {
  return !!r.referencePanel;
}
function nd(r) {
  return !!r.referenceGroup;
}
function ad(r) {
  return !!r.referencePanel;
}
function sd(r) {
  return !!r.referenceGroup;
}
class dd extends co {
  get title() {
    return this.panel.title;
  }
  get isGroupActive() {
    var e;
    return !!(!((e = this.group) === null || e === void 0) && e.isActive);
  }
  set group(e) {
    const t = this.isGroupActive;
    this._group = e, this._onDidGroupChange.fire(), this._group && (this.disposable.value = this._group.api.onDidActiveChange(() => {
      this._onDidActiveGroupChange.fire();
    }), this.isGroupActive !== t && this._onDidActiveGroupChange.fire());
  }
  get group() {
    return this._group;
  }
  constructor(e, t, i) {
    super(e.id), this.panel = e, this.accessor = i, this._onDidTitleChange = new Q(), this.onDidTitleChange = this._onDidTitleChange.event, this._onDidActiveGroupChange = new Q(), this.onDidActiveGroupChange = this._onDidActiveGroupChange.event, this._onDidGroupChange = new Q(), this.onDidGroupChange = this._onDidGroupChange.event, this.disposable = new Xe(), this.initialize(e), this._group = t, this.addDisposables(this.disposable, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange);
  }
  moveTo(e) {
    var t;
    this.accessor.moveGroupOrPanel(e.group, this._group.id, this.panel.id, (t = e.position) !== null && t !== void 0 ? t : "center", e.index);
  }
  setTitle(e) {
    this.panel.setTitle(e);
  }
  close() {
    this.group.model.closePanel(this.panel);
  }
}
class Ki extends pe {
  get params() {
    return this._params;
  }
  get title() {
    return this._title;
  }
  get group() {
    return this._group;
  }
  constructor(e, t, i, n, a) {
    super(), this.id = e, this.containerApi = i, this.view = a, this._group = n, this.api = new dd(this, this._group, t), this.addDisposables(this.api.onActiveChange(() => {
      t.setActivePanel(this);
    }), this.api.onDidSizeChange((l) => {
      this.group.api.setSize(l);
    }));
  }
  init(e) {
    this._params = e.params, this.view.init(Object.assign(Object.assign({}, e), { api: this.api, containerApi: this.containerApi })), this.setTitle(e.title);
  }
  focus() {
    this.api._onFocusEvent.fire();
  }
  toJSON() {
    return {
      id: this.id,
      contentComponent: this.view.contentComponent,
      tabComponent: this.view.tabComponent,
      params: Object.keys(this._params || {}).length > 0 ? this._params : void 0,
      title: this.title
    };
  }
  setTitle(e) {
    e !== this.title && (this._title = e, this.view.update({
      params: {
        params: this._params,
        title: this.title
      }
    }), this.api._onDidTitleChange.fire({ title: e }));
  }
  update(e) {
    this._params = Object.assign(Object.assign({}, this._params || {}), e.params);
    for (const t of Object.keys(e.params))
      e.params[t] === void 0 && delete this._params[t];
    this.view.update({
      params: {
        params: this._params,
        title: this.title
      }
    });
  }
  updateParentGroup(e, t) {
    this._group = e, this.api.group = e;
    const i = this._group.model.isPanelActive(this);
    this.api._onDidActiveChange.fire({
      isActive: t && i
    }), this.api._onDidVisibilityChange.fire({
      isVisible: i
    }), this.view.updateParentGroup(this._group, this._group.model.isPanelActive(this));
  }
  layout(e, t) {
    this.api._onDidDimensionChange.fire({
      width: e,
      height: t
    }), this.view.layout(e, t);
  }
  dispose() {
    this.api.dispose(), this.view.dispose();
  }
}
const _o = (r) => {
  const e = document.createElementNS("http://www.w3.org/2000/svg", "svg");
  e.setAttributeNS(null, "height", r.height), e.setAttributeNS(null, "width", r.width), e.setAttributeNS(null, "viewBox", r.viewbox), e.setAttributeNS(null, "aria-hidden", "false"), e.setAttributeNS(null, "focusable", "false"), e.classList.add("dockview-svg");
  const t = document.createElementNS("http://www.w3.org/2000/svg", "path");
  return t.setAttributeNS(null, "d", r.path), e.appendChild(t), e;
}, Vn = () => _o({
  width: "11",
  height: "11",
  viewbox: "0 0 28 28",
  path: "M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z"
}), ld = () => _o({
  width: "11",
  height: "11",
  viewbox: "0 0 24 15",
  path: "M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z"
}), md = () => _o({
  width: "11",
  height: "11",
  viewbox: "0 0 15 25",
  path: "M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z"
});
class ji extends pe {
  get element() {
    return this._element;
  }
  constructor() {
    super(), this.params = {}, this._element = document.createElement("div"), this._element.className = "default-tab", this._content = document.createElement("div"), this._content.className = "tab-content", this._actionContainer = document.createElement("div"), this._actionContainer.className = "action-container", this._list = document.createElement("ul"), this._list.className = "tab-list", this.action = document.createElement("div"), this.action.className = "tab-action", this.action.appendChild(Vn()), this._element.appendChild(this._content), this._element.appendChild(this._actionContainer), this._actionContainer.appendChild(this._list), this._list.appendChild(this.action), this.addDisposables(Se(this._actionContainer, "mousedown", (e) => {
      e.preventDefault();
    })), this.render();
  }
  update(e) {
    this.params = Object.assign(Object.assign({}, this.params), e.params), this.render();
  }
  focus() {
  }
  init(e) {
    this.params = e, this._content.textContent = e.title, Se(this.action, "click", (t) => {
      t.preventDefault(), this.params.api.close();
    });
  }
  onGroupChange(e) {
    this.render();
  }
  onPanelVisibleChange(e) {
    this.render();
  }
  layout(e, t) {
  }
  render() {
    this._content.textContent !== this.params.title && (this._content.textContent = this.params.title);
  }
}
class Kn {
  get content() {
    return this._content;
  }
  get tab() {
    return this._tab;
  }
  constructor(e, t, i, n) {
    this.accessor = e, this.id = t, this.contentComponent = i, this.tabComponent = n, this._group = null, this._isPanelVisible = null, this._content = this.createContentComponent(this.id, i), this._tab = this.createTabComponent(this.id, n);
  }
  init(e) {
    this.content.init(Object.assign(Object.assign({}, e), { tab: this.tab })), this.tab.init(e);
  }
  updateParentGroup(e, t) {
    e !== this._group && (this._group = e, this._content.onGroupChange && this._content.onGroupChange(e), this._tab.onGroupChange && this._tab.onGroupChange(e)), t !== this._isPanelVisible && (this._isPanelVisible = t, this._content.onPanelVisibleChange && this._content.onPanelVisibleChange(t), this._tab.onPanelVisibleChange && this._tab.onPanelVisibleChange(t));
  }
  layout(e, t) {
    var i, n;
    (n = (i = this.content).layout) === null || n === void 0 || n.call(i, e, t);
  }
  update(e) {
    var t, i, n, a;
    (i = (t = this.content).update) === null || i === void 0 || i.call(t, e), (a = (n = this.tab).update) === null || a === void 0 || a.call(n, e);
  }
  dispose() {
    var e, t, i, n;
    (t = (e = this.content).dispose) === null || t === void 0 || t.call(e), (n = (i = this.tab).dispose) === null || n === void 0 || n.call(i);
  }
  createContentComponent(e, t) {
    var i;
    return Ke(e, t, this.accessor.options.components || {}, this.accessor.options.frameworkComponents, (i = this.accessor.options.frameworkComponentFactory) === null || i === void 0 ? void 0 : i.content);
  }
  createTabComponent(e, t) {
    var i, n;
    return t ? Ke(e, t, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (i = this.accessor.options.frameworkComponentFactory) === null || i === void 0 ? void 0 : i.tab, () => new ji()) : this.accessor.options.defaultTabComponent ? Ke(e, this.accessor.options.defaultTabComponent, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (n = this.accessor.options.frameworkComponentFactory) === null || n === void 0 ? void 0 : n.tab, () => new ji()) : new ji();
  }
}
class ud {
  constructor(e) {
    this.layout = e;
  }
  fromJSON(e, t) {
    var i;
    const n = e.id, a = e.params, l = e.title, o = e.view, s = o ? o.content.id : e.contentComponent || "unknown", d = o ? (i = o.tab) === null || i === void 0 ? void 0 : i.id : e.tabComponent, h = new Kn(this.layout, n, s, d), u = new Ki(n, this.layout, new yt(this.layout), t, h);
    return u.init({
      title: l || n,
      params: a || {}
    }), u;
  }
}
let cd = class extends pe {
  get element() {
    return this._element;
  }
  constructor() {
    super(), this._element = document.createElement("div"), this._element.className = "watermark";
    const e = document.createElement("div");
    e.className = "watermark-title";
    const t = document.createElement("span");
    t.style.flexGrow = "1";
    const i = document.createElement("div");
    i.className = "watermark-content", this._element.appendChild(e), this._element.appendChild(i);
    const n = document.createElement("div");
    n.className = "actions-container";
    const a = document.createElement("div");
    a.className = "close-action", a.appendChild(Vn()), n.appendChild(a), e.appendChild(t), e.appendChild(n), this.addDisposables(Se(a, "click", (l) => {
      var o;
      l.preventDefault(), this._group && ((o = this._api) === null || o === void 0 || o.removeGroup(this._group));
    }));
  }
  update(e) {
  }
  focus() {
  }
  layout(e, t) {
  }
  init(e) {
    this._api = e.containerApi, this.render();
  }
  updateParentGroup(e, t) {
    this._group = e, this.render();
  }
  dispose() {
    super.dispose();
  }
  render() {
    const e = !!(this._api && this._api.size <= 1);
    ge(this.element, "has-actions", e);
  }
};
const Do = (() => {
  let r = null;
  function e(t) {
    r !== t && r !== null && ge(r, "dv-bring-to-front", !1), ge(t, "dv-bring-to-front", !0), r = t;
  }
  return e;
})();
class St extends pe {
  set minimumInViewportWidth(e) {
    this.options.minimumInViewportWidth = e;
  }
  set minimumInViewportHeight(e) {
    this.options.minimumInViewportHeight = e;
  }
  constructor(e) {
    super(), this.options = e, this._element = document.createElement("div"), this._onDidChange = new Q(), this.onDidChange = this._onDidChange.event, this._onDidChangeEnd = new Q(), this.onDidChangeEnd = this._onDidChangeEnd.event, this.addDisposables(this._onDidChange, this._onDidChangeEnd), this._element.className = "dv-resize-container", this.setupResize("top"), this.setupResize("bottom"), this.setupResize("left"), this.setupResize("right"), this.setupResize("topleft"), this.setupResize("topright"), this.setupResize("bottomleft"), this.setupResize("bottomright"), this._element.appendChild(this.options.content), this.options.container.appendChild(this._element), this.setBounds({
      height: this.options.height,
      width: this.options.width,
      top: this.options.top,
      left: this.options.left
    });
  }
  setBounds(e = {}) {
    typeof e.height == "number" && (this._element.style.height = `${e.height}px`), typeof e.width == "number" && (this._element.style.width = `${e.width}px`), typeof e.top == "number" && (this._element.style.top = `${e.top}px`), typeof e.left == "number" && (this._element.style.left = `${e.left}px`);
    const t = this.options.container.getBoundingClientRect(), i = this._element.getBoundingClientRect(), n = Math.max(0, this.getMinimumWidth(i.width)), a = typeof this.options.minimumInViewportHeight == "number" ? Math.max(0, this.getMinimumHeight(i.height)) : 0, l = xe(i.left - t.left, -n, Math.max(0, t.width - i.width + n)), o = xe(i.top - t.top, -a, Math.max(0, t.height - i.height + a));
    this._element.style.left = `${l}px`, this._element.style.top = `${o}px`, this._onDidChange.fire();
  }
  toJSON() {
    const e = this.options.container.getBoundingClientRect(), t = this._element.getBoundingClientRect();
    return {
      top: t.top - e.top,
      left: t.left - e.left,
      width: t.width,
      height: t.height
    };
  }
  setupDrag(e, t = { inDragMode: !1 }) {
    const i = new Xe(), n = () => {
      let a = null;
      const l = [
        ...Ct("iframe"),
        ...Ct("webview")
      ];
      for (const o of l)
        o.style.pointerEvents = "none";
      i.value = new pe({
        dispose: () => {
          for (const o of l)
            o.style.pointerEvents = "auto";
        }
      }, Wt(window, "mousemove", (o) => {
        const s = this.options.container.getBoundingClientRect(), d = o.clientX - s.left, h = o.clientY - s.top;
        ge(this._element, "dv-resize-container-dragging", !0);
        const u = this._element.getBoundingClientRect();
        a === null && (a = {
          x: o.clientX - u.left,
          y: o.clientY - u.top
        });
        const p = Math.max(0, this.getMinimumWidth(u.width)), b = Math.max(0, this.options.minimumInViewportHeight ? this.getMinimumHeight(u.height) : 0), k = xe(d - a.x, -p, Math.max(0, s.width - u.width + p)), g = xe(h - a.y, -b, Math.max(0, s.height - u.height + b));
        this.setBounds({ top: g, left: k });
      }), Wt(window, "mouseup", () => {
        ge(this._element, "dv-resize-container-dragging", !1), i.dispose(), this._onDidChangeEnd.fire();
      }));
    };
    this.addDisposables(i, Se(e, "mousedown", (a) => {
      if (a.defaultPrevented) {
        a.preventDefault();
        return;
      }
      zo(a) || n();
    }), Se(this.options.content, "mousedown", (a) => {
      a.defaultPrevented || zo(a) || a.shiftKey && n();
    }), Se(this.options.content, "mousedown", () => {
      Do(this._element);
    }, !0)), Do(this._element), t.inDragMode && n();
  }
  setupResize(e) {
    const t = document.createElement("div");
    t.className = `dv-resize-handle-${e}`, this._element.appendChild(t);
    const i = new Xe();
    this.addDisposables(i, Se(t, "mousedown", (n) => {
      n.preventDefault();
      let a = null;
      const l = [
        ...Ct("iframe"),
        ...Ct("webview")
      ];
      for (const o of l)
        o.style.pointerEvents = "none";
      i.value = new pe(Wt(window, "mousemove", (o) => {
        const s = this.options.container.getBoundingClientRect(), d = this._element.getBoundingClientRect(), h = o.clientY - s.top, u = o.clientX - s.left;
        a === null && (a = {
          originalY: h,
          originalHeight: d.height,
          originalX: u,
          originalWidth: d.width
        });
        let p, b, k, g;
        const m = () => {
          p = xe(h, -Number.MAX_VALUE, a.originalY + a.originalHeight > s.height ? this.getMinimumHeight(s.height) : Math.max(0, a.originalY + a.originalHeight - St.MINIMUM_HEIGHT)), b = a.originalY + a.originalHeight - p;
        }, c = () => {
          p = a.originalY - a.originalHeight, b = xe(h - p, p < 0 && typeof this.options.minimumInViewportHeight == "number" ? -p + this.options.minimumInViewportHeight : St.MINIMUM_HEIGHT, Number.MAX_VALUE);
        }, _ = () => {
          k = xe(u, -Number.MAX_VALUE, a.originalX + a.originalWidth > s.width ? this.getMinimumWidth(s.width) : Math.max(0, a.originalX + a.originalWidth - St.MINIMUM_WIDTH)), g = a.originalX + a.originalWidth - k;
        }, f = () => {
          k = a.originalX - a.originalWidth, g = xe(u - k, k < 0 && typeof this.options.minimumInViewportWidth == "number" ? -k + this.options.minimumInViewportWidth : St.MINIMUM_WIDTH, Number.MAX_VALUE);
        };
        switch (e) {
          case "top":
            m();
            break;
          case "bottom":
            c();
            break;
          case "left":
            _();
            break;
          case "right":
            f();
            break;
          case "topleft":
            m(), _();
            break;
          case "topright":
            m(), f();
            break;
          case "bottomleft":
            c(), _();
            break;
          case "bottomright":
            c(), f();
            break;
        }
        this.setBounds({ height: b, width: g, top: p, left: k });
      }), {
        dispose: () => {
          for (const o of l)
            o.style.pointerEvents = "auto";
        }
      }, Wt(window, "mouseup", () => {
        i.dispose(), this._onDidChangeEnd.fire();
      }));
    }));
  }
  getMinimumWidth(e) {
    return typeof this.options.minimumInViewportWidth == "number" ? e - this.options.minimumInViewportWidth : 0;
  }
  getMinimumHeight(e) {
    return typeof this.options.minimumInViewportHeight == "number" ? e - this.options.minimumInViewportHeight : e;
  }
  dispose() {
    this._element.remove(), super.dispose();
  }
}
St.MINIMUM_HEIGHT = 20;
St.MINIMUM_WIDTH = 20;
class _d extends pe {
  constructor(e, t) {
    super(), this.group = e, this.overlay = t, this.addDisposables(t);
  }
  position(e) {
    this.overlay.setBounds(e);
  }
}
const Er = 100;
class fd extends Wn {
  get orientation() {
    return this.gridview.orientation;
  }
  get totalPanels() {
    return this.panels.length;
  }
  get panels() {
    return this.groups.flatMap((e) => e.panels);
  }
  get options() {
    return this._options;
  }
  get activePanel() {
    const e = this.activeGroup;
    if (e)
      return e.activePanel;
  }
  constructor(e) {
    super({
      proportionalLayout: !0,
      orientation: e.orientation || ae.HORIZONTAL,
      styles: e.styles,
      parentElement: e.parentElement
    }), this.nextGroupId = so(), this._deserializer = new ud(this), this.watermark = null, this._onWillDragPanel = new Q(), this.onWillDragPanel = this._onWillDragPanel.event, this._onWillDragGroup = new Q(), this.onWillDragGroup = this._onWillDragGroup.event, this._onDidDrop = new Q(), this.onDidDrop = this._onDidDrop.event, this._onDidRemovePanel = new Q(), this.onDidRemovePanel = this._onDidRemovePanel.event, this._onDidAddPanel = new Q(), this.onDidAddPanel = this._onDidAddPanel.event, this._onDidLayoutFromJSON = new Q(), this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event, this._onDidActivePanelChange = new Q(), this.onDidActivePanelChange = this._onDidActivePanelChange.event, this.floatingGroups = [], ge(this.gridview.element, "dv-dockview", !0), this.addDisposables(this._onWillDragPanel, this._onWillDragGroup, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, Zt.any(this.onDidAddGroup, this.onDidRemoveGroup)(() => {
      this.updateWatermark();
    }), Zt.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {
      this._bufferOnDidLayoutChange.fire();
    })), this._options = e, this.options.components || (this.options.components = {}), this.options.frameworkComponents || (this.options.frameworkComponents = {}), this.options.frameworkTabComponents || (this.options.frameworkTabComponents = {}), this.options.tabComponents || (this.options.tabComponents = {}), !this.options.watermarkComponent && !this.options.watermarkFrameworkComponent && (this.options.watermarkComponent = cd);
    const t = new pt(this.element, {
      canDisplayOverlay: (i, n) => {
        const a = ot();
        return a ? a.viewId !== this.id ? !1 : n === "center" ? this.gridview.length === 0 : !0 : this.options.showDndOverlay ? n === "center" && this.gridview.length !== 0 ? !1 : this.options.showDndOverlay({
          nativeEvent: i,
          position: n,
          target: Yt.Edge,
          getData: ot
        }) : !1;
      },
      acceptedTargetZones: ["top", "bottom", "left", "right", "center"],
      overlayModel: {
        activationSize: { type: "pixels", value: 10 },
        size: { type: "pixels", value: 20 }
      }
    });
    this.addDisposables(t.onDrop((i) => {
      const n = ot();
      n ? this.moveGroupOrPanel(this.orthogonalize(i.position), n.groupId, n.panelId || void 0, "center") : this._onDidDrop.fire(Object.assign(Object.assign({}, i), { api: this._api, group: null, getData: ot }));
    }), t), this._api = new yt(this), this.updateWatermark();
  }
  addFloatingGroup(e, t, i) {
    var n, a, l, o, s, d;
    let h;
    e instanceof Ki ? (h = this.createGroup(), this.removePanel(e, {
      removeEmptyGroup: !0,
      skipDispose: !0
    }), h.model.openPanel(e)) : (h = e, typeof (i == null ? void 0 : i.skipRemoveGroup) == "boolean" && i.skipRemoveGroup || this.doRemoveGroup(e, { skipDispose: !0 })), h.model.isFloating = !0;
    const u = typeof (t == null ? void 0 : t.x) == "number" ? Math.max(t.x, 0) : 100, p = typeof (t == null ? void 0 : t.y) == "number" ? Math.max(t.y, 0) : 100, b = new St({
      container: this.gridview.element,
      content: h.element,
      height: (n = t == null ? void 0 : t.height) !== null && n !== void 0 ? n : 300,
      width: (a = t == null ? void 0 : t.width) !== null && a !== void 0 ? a : 300,
      left: u,
      top: p,
      minimumInViewportWidth: this.options.floatingGroupBounds === "boundedWithinViewport" ? void 0 : (o = (l = this.options.floatingGroupBounds) === null || l === void 0 ? void 0 : l.minimumWidthWithinViewport) !== null && o !== void 0 ? o : Er,
      minimumInViewportHeight: this.options.floatingGroupBounds === "boundedWithinViewport" ? void 0 : (d = (s = this.options.floatingGroupBounds) === null || s === void 0 ? void 0 : s.minimumHeightWithinViewport) !== null && d !== void 0 ? d : Er
    }), k = h.element.querySelector(".void-container");
    if (!k)
      throw new Error("failed to find drag handle");
    b.setupDrag(k, {
      inDragMode: typeof (i == null ? void 0 : i.inDragMode) == "boolean" ? i.inDragMode : !1
    });
    const g = new _d(h, b), m = Nn(h.element, (c) => {
      const { width: _, height: f } = c.contentRect;
      h.layout(_, f);
    });
    g.addDisposables(b.onDidChange(() => {
      h.layout(h.height, h.width);
    }), b.onDidChangeEnd(() => {
      this._bufferOnDidLayoutChange.fire();
    }), h.onDidChange((c) => {
      b.setBounds({
        height: c == null ? void 0 : c.height,
        width: c == null ? void 0 : c.width
      });
    }), {
      dispose: () => {
        m.dispose(), h.model.isFloating = !1, Ds(this.floatingGroups, g), this.updateWatermark();
      }
    }), this.floatingGroups.push(g), this.updateWatermark();
  }
  orthogonalize(e) {
    switch (e) {
      case "top":
      case "bottom":
        this.gridview.orientation === ae.HORIZONTAL && this.gridview.insertOrthogonalSplitviewAtRoot();
        break;
      case "left":
      case "right":
        this.gridview.orientation === ae.VERTICAL && this.gridview.insertOrthogonalSplitviewAtRoot();
        break;
    }
    switch (e) {
      case "top":
      case "left":
      case "center":
        return this.createGroupAtLocation([0]);
      case "bottom":
      case "right":
        return this.createGroupAtLocation([this.gridview.length]);
      default:
        throw new Error(`unsupported position ${e}`);
    }
  }
  updateOptions(e) {
    var t, i;
    const n = typeof e.orientation == "string" && this.gridview.orientation !== e.orientation, a = e.floatingGroupBounds !== void 0 && e.floatingGroupBounds !== this.options.floatingGroupBounds;
    if (this._options = Object.assign(Object.assign({}, this.options), e), n && (this.gridview.orientation = e.orientation), a)
      for (const l of this.floatingGroups) {
        switch (this.options.floatingGroupBounds) {
          case "boundedWithinViewport":
            l.overlay.minimumInViewportHeight = void 0, l.overlay.minimumInViewportWidth = void 0;
            break;
          case void 0:
            l.overlay.minimumInViewportHeight = Er, l.overlay.minimumInViewportWidth = Er;
            break;
          default:
            l.overlay.minimumInViewportHeight = (t = this.options.floatingGroupBounds) === null || t === void 0 ? void 0 : t.minimumHeightWithinViewport, l.overlay.minimumInViewportWidth = (i = this.options.floatingGroupBounds) === null || i === void 0 ? void 0 : i.minimumWidthWithinViewport;
        }
        l.overlay.setBounds({});
      }
    this.layout(this.gridview.width, this.gridview.height, !0);
  }
  layout(e, t, i) {
    if (super.layout(e, t, i), this.floatingGroups)
      for (const n of this.floatingGroups)
        n.overlay.setBounds();
  }
  focus() {
    var e;
    (e = this.activeGroup) === null || e === void 0 || e.focus();
  }
  getGroupPanel(e) {
    return this.panels.find((t) => t.id === e);
  }
  setActivePanel(e) {
    this.doSetGroupActive(e.group), e.group.model.openPanel(e);
  }
  moveToNext(e = {}) {
    var t;
    if (!e.group) {
      if (!this.activeGroup)
        return;
      e.group = this.activeGroup;
    }
    if (e.includePanel && e.group && e.group.activePanel !== e.group.panels[e.group.panels.length - 1]) {
      e.group.model.moveToNext({ suppressRoll: !0 });
      return;
    }
    const i = Ae(e.group.element), n = (t = this.gridview.next(i)) === null || t === void 0 ? void 0 : t.view;
    this.doSetGroupActive(n);
  }
  moveToPrevious(e = {}) {
    var t;
    if (!e.group) {
      if (!this.activeGroup)
        return;
      e.group = this.activeGroup;
    }
    if (e.includePanel && e.group && e.group.activePanel !== e.group.panels[0]) {
      e.group.model.moveToPrevious({ suppressRoll: !0 });
      return;
    }
    const i = Ae(e.group.element), n = (t = this.gridview.previous(i)) === null || t === void 0 ? void 0 : t.view;
    n && this.doSetGroupActive(n);
  }
  /**
   * Serialize the current state of the layout
   *
   * @returns A JSON respresentation of the layout
   */
  toJSON() {
    var e;
    const t = this.gridview.serialize(), i = this.panels.reduce((l, o) => (l[o.id] = o.toJSON(), l), {}), n = this.floatingGroups.map((l) => ({
      data: l.group.toJSON(),
      position: l.overlay.toJSON()
    })), a = {
      grid: t,
      panels: i,
      activeGroup: (e = this.activeGroup) === null || e === void 0 ? void 0 : e.id
    };
    return n.length > 0 && (a.floatingGroups = n), a;
  }
  fromJSON(e) {
    var t;
    if (this.clear(), typeof e != "object" || e === null)
      throw new Error("serialized layout must be a non-null object");
    const { grid: i, panels: n, activeGroup: a } = e;
    if (i.root.type !== "branch" || !Array.isArray(i.root.data))
      throw new Error("root must be of type branch");
    try {
      const l = this.width, o = this.height, s = (h) => {
        const { id: u, locked: p, hideHeader: b, views: k, activeView: g } = h;
        if (typeof u != "string")
          throw new Error("group id must be of type string");
        const m = this.createGroup({
          id: u,
          locked: !!p,
          hideHeader: !!b
        }), c = [];
        for (const _ of k) {
          const f = this._deserializer.fromJSON(n[_], m);
          c.push(f);
        }
        this._onDidAddGroup.fire(m);
        for (let _ = 0; _ < k.length; _++) {
          const f = c[_], v = typeof g == "string" && g === f.id;
          m.model.openPanel(f, {
            skipSetPanelActive: !v,
            skipSetGroupActive: !0
          });
        }
        return !m.activePanel && m.panels.length > 0 && m.model.openPanel(m.panels[m.panels.length - 1], {
          skipSetGroupActive: !0
        }), m;
      };
      this.gridview.deserialize(i, {
        fromJSON: (h) => s(h.data)
      }), this.layout(l, o, !0);
      const d = (t = e.floatingGroups) !== null && t !== void 0 ? t : [];
      for (const h of d) {
        const { data: u, position: p } = h, b = s(u);
        this.addFloatingGroup(b, {
          x: p.left,
          y: p.top,
          height: p.height,
          width: p.width
        }, { skipRemoveGroup: !0, inDragMode: !1 });
      }
      for (const h of this.floatingGroups)
        h.overlay.setBounds();
      if (typeof a == "string") {
        const h = this.getPanel(a);
        h && this.doSetGroupActive(h);
      }
    } catch (l) {
      for (const o of this.groups)
        for (const s of o.panels)
          this.removePanel(s, {
            removeEmptyGroup: !1,
            skipDispose: !1
          });
      for (const o of this.groups)
        o.dispose(), this._groups.delete(o.id), this._onDidRemoveGroup.fire(o);
      for (const o of [...this.floatingGroups])
        o.dispose();
      throw this.clear(), l;
    }
    this._onDidLayoutFromJSON.fire();
  }
  clear() {
    const e = Array.from(this._groups.values()).map((n) => n.value), t = !!this.activeGroup, i = !!this.activePanel;
    for (const n of e)
      this.removeGroup(n, { skipActive: !0 });
    t && this.doSetGroupActive(void 0), i && this._onDidActivePanelChange.fire(void 0), this.gridview.clear();
  }
  closeAllGroups() {
    for (const e of this._groups.entries()) {
      const [t, i] = e;
      i.value.model.closeAllPanels();
    }
  }
  addPanel(e) {
    var t, i;
    if (this.panels.find((l) => l.id === e.id))
      throw new Error(`panel with id ${e.id} already exists`);
    let n;
    if (e.position && e.floating)
      throw new Error("you can only provide one of: position, floating as arguments to .addPanel(...)");
    if (e.position)
      if (od(e.position)) {
        const l = typeof e.position.referencePanel == "string" ? this.getGroupPanel(e.position.referencePanel) : e.position.referencePanel;
        if (!l)
          throw new Error(`referencePanel ${e.position.referencePanel} does not exist`);
        n = this.findGroup(l);
      } else if (nd(e.position)) {
        if (n = typeof e.position.referenceGroup == "string" ? (t = this._groups.get(e.position.referenceGroup)) === null || t === void 0 ? void 0 : t.value : e.position.referenceGroup, !n)
          throw new Error(`referencePanel ${e.position.referenceGroup} does not exist`);
      } else {
        const l = this.orthogonalize(Oo(e.position.direction)), o = this.createPanel(e, l);
        return l.model.openPanel(o), o;
      }
    else
      n = this.activeGroup;
    let a;
    if (n) {
      const l = Xr(((i = e.position) === null || i === void 0 ? void 0 : i.direction) || "within");
      if (e.floating) {
        const o = this.createGroup();
        a = this.createPanel(e, o), o.model.openPanel(a);
        const s = typeof e.floating == "object" && e.floating !== null ? e.floating : {};
        this.addFloatingGroup(o, s, {
          inDragMode: !1,
          skipRemoveGroup: !0
        });
      } else if (n.api.isFloating || l === "center")
        a = this.createPanel(e, n), n.model.openPanel(a);
      else {
        const o = Ae(n.element), s = rt(this.gridview.orientation, o, l), d = this.createGroupAtLocation(s);
        a = this.createPanel(e, d), d.model.openPanel(a);
      }
    } else if (e.floating) {
      const l = this.createGroup();
      a = this.createPanel(e, l), l.model.openPanel(a);
      const o = typeof e.floating == "object" && e.floating !== null ? e.floating : {};
      this.addFloatingGroup(l, o, {
        inDragMode: !1,
        skipRemoveGroup: !0
      });
    } else {
      const l = this.createGroupAtLocation();
      a = this.createPanel(e, l), l.model.openPanel(a);
    }
    return a;
  }
  removePanel(e, t = {
    removeEmptyGroup: !0,
    skipDispose: !1
  }) {
    const i = e.group;
    if (!i)
      throw new Error(`cannot remove panel ${e.id}. it's missing a group.`);
    i.model.removePanel(e), t.skipDispose || e.dispose(), i.size === 0 && t.removeEmptyGroup && this.removeGroup(i);
  }
  createWatermarkComponent() {
    var e;
    return Ke("watermark-id", "watermark-name", this.options.watermarkComponent ? { "watermark-name": this.options.watermarkComponent } : {}, this.options.watermarkFrameworkComponent ? { "watermark-name": this.options.watermarkFrameworkComponent } : {}, (e = this.options.frameworkComponentFactory) === null || e === void 0 ? void 0 : e.watermark);
  }
  updateWatermark() {
    var e, t;
    if (this.groups.filter((i) => !i.api.isFloating).length === 0) {
      if (!this.watermark) {
        this.watermark = this.createWatermarkComponent(), this.watermark.init({
          containerApi: new yt(this)
        });
        const i = document.createElement("div");
        i.className = "dv-watermark-container", i.appendChild(this.watermark.element), this.gridview.element.appendChild(i);
      }
    } else
      this.watermark && (this.watermark.element.parentElement.remove(), (t = (e = this.watermark).dispose) === null || t === void 0 || t.call(e), this.watermark = null);
  }
  addGroup(e) {
    var t;
    const i = this.createGroup();
    if (e) {
      let n;
      if (ad(e)) {
        const s = typeof e.referencePanel == "string" ? this.panels.find((d) => d.id === e.referencePanel) : e.referencePanel;
        if (!s)
          throw new Error(`reference panel ${e.referencePanel} does not exist`);
        if (n = this.findGroup(s), !n)
          throw new Error(`reference group for reference panel ${e.referencePanel} does not exist`);
      } else if (sd(e)) {
        if (n = typeof e.referenceGroup == "string" ? (t = this._groups.get(e.referenceGroup)) === null || t === void 0 ? void 0 : t.value : e.referenceGroup, !n)
          throw new Error(`reference group ${e.referenceGroup} does not exist`);
      } else
        return this.orthogonalize(Oo(e.direction));
      const a = Xr(e.direction || "within"), l = Ae(n.element), o = rt(this.gridview.orientation, l, a);
      return this.doAddGroup(i, o), i;
    } else
      return this.doAddGroup(i), i;
  }
  removeGroup(e, t) {
    var i;
    const n = [...e.panels];
    for (const a of n)
      this.removePanel(a, {
        removeEmptyGroup: !1,
        skipDispose: (i = t == null ? void 0 : t.skipDispose) !== null && i !== void 0 ? i : !1
      });
    this.doRemoveGroup(e, t);
  }
  doRemoveGroup(e, t) {
    const i = this.floatingGroups.find((n) => n.group === e);
    return i ? (t != null && t.skipDispose || (i.group.dispose(), this._groups.delete(e.id)), i.dispose(), i.group) : super.doRemoveGroup(e, t);
  }
  moveGroupOrPanel(e, t, i, n, a) {
    var l;
    const o = t ? (l = this._groups.get(t)) === null || l === void 0 ? void 0 : l.value : void 0;
    if (i === void 0) {
      o && this.moveGroup(o, e, n);
      return;
    }
    if (!n || n === "center") {
      const s = (o == null ? void 0 : o.model.removePanel(i)) || this.panels.find((d) => d.id === i);
      if (!s)
        throw new Error(`No panel with id ${i}`);
      (o == null ? void 0 : o.model.size) === 0 && this.doRemoveGroup(o), e.model.openPanel(s, {
        index: a
      });
    } else {
      const s = Ae(e.element), d = rt(this.gridview.orientation, s, n);
      if (o && o.size < 2) {
        const [h, u] = ut(d);
        if (!this.floatingGroups.find((m) => m.group === o)) {
          const m = Ae(o.element), [c, _] = ut(m);
          Mn(c, h) && this.gridview.moveView(c, _, u);
        }
        const b = this.doRemoveGroup(o, {
          skipActive: !0,
          skipDispose: !0
        }), k = Ae(e.element), g = rt(this.gridview.orientation, k, n);
        this.doAddGroup(b, g);
      } else {
        const h = (o == null ? void 0 : o.model.removePanel(i)) || this.panels.find((b) => b.id === i);
        if (!h)
          throw new Error(`No panel with id ${i}`);
        const u = rt(this.gridview.orientation, s, n);
        this.createGroupAtLocation(u).model.openPanel(h);
      }
    }
  }
  moveGroup(e, t, i) {
    if (e)
      if (!i || i === "center") {
        const n = e.activePanel, a = [...e.panels].map((l) => e.model.removePanel(l.id));
        (e == null ? void 0 : e.model.size) === 0 && this.doRemoveGroup(e);
        for (const l of a)
          t.model.openPanel(l, {
            skipSetPanelActive: l !== n
          });
      } else {
        const n = this.floatingGroups.find((o) => o.group === e);
        n ? n.dispose() : this.gridview.removeView(Ae(e.element));
        const a = Ae(t.element), l = rt(this.gridview.orientation, a, i);
        this.gridview.addView(e, Ue.Distribute, l);
      }
  }
  doSetGroupActive(e, t) {
    var i, n;
    const a = this._activeGroup === e;
    super.doSetGroupActive(e, t), !a && (!((i = this._activeGroup) === null || i === void 0) && i.activePanel) && this._onDidActivePanelChange.fire((n = this._activeGroup) === null || n === void 0 ? void 0 : n.activePanel);
  }
  createGroup(e) {
    e || (e = {});
    let t = e == null ? void 0 : e.id;
    if (t && this._groups.has(e.id) && (console.warn(`Duplicate group id ${e == null ? void 0 : e.id}. reassigning group id to avoid errors`), t = void 0), !t)
      for (t = this.nextGroupId.next(); this._groups.has(t); )
        t = this.nextGroupId.next();
    const i = new id(this, t, e);
    if (i.init({ params: {}, accessor: null }), !this._groups.has(i.id)) {
      const n = new pe(i.model.onTabDragStart((a) => {
        this._onWillDragPanel.fire(a);
      }), i.model.onGroupDragStart((a) => {
        this._onWillDragGroup.fire(a);
      }), i.model.onMove((a) => {
        const { groupId: l, itemId: o, target: s, index: d } = a;
        this.moveGroupOrPanel(i, l, o, s, d);
      }), i.model.onDidDrop((a) => {
        this._onDidDrop.fire(Object.assign(Object.assign({}, a), { api: this._api, group: i }));
      }), i.model.onDidAddPanel((a) => {
        this._onDidAddPanel.fire(a.panel);
      }), i.model.onDidRemovePanel((a) => {
        this._onDidRemovePanel.fire(a.panel);
      }), i.model.onDidActivePanelChange((a) => {
        this._onDidActivePanelChange.fire(a.panel);
      }));
      this._groups.set(i.id, { value: i, disposable: n });
    }
    return i.initialize(), i;
  }
  createPanel(e, t) {
    const i = e.component, n = e.tabComponent || this.options.defaultTabComponent, a = new Kn(this, e.id, i, n), l = new Ki(e.id, this, this._api, t, a);
    return l.init({
      title: e.title || e.id,
      params: (e == null ? void 0 : e.params) || {}
    }), l;
  }
  createGroupAtLocation(e = [0]) {
    const t = this.createGroup();
    return this.doAddGroup(t, e), t;
  }
  findGroup(e) {
    var t;
    return (t = Array.from(this._groups.values()).find((i) => i.value.model.containsPanel(e))) === null || t === void 0 ? void 0 : t.value;
  }
}
class hd extends Wn {
  get orientation() {
    return this.gridview.orientation;
  }
  set orientation(e) {
    this.gridview.orientation = e;
  }
  get options() {
    return this._options;
  }
  get deserializer() {
    return this._deserializer;
  }
  set deserializer(e) {
    this._deserializer = e;
  }
  constructor(e) {
    super({
      parentElement: e.parentElement,
      proportionalLayout: e.proportionalLayout,
      orientation: e.orientation,
      styles: e.styles
    }), this._onDidLayoutfromJSON = new Q(), this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event, this._options = e, this.options.components || (this.options.components = {}), this.options.frameworkComponents || (this.options.frameworkComponents = {});
  }
  updateOptions(e) {
    const t = typeof e.orientation == "string" && this.gridview.orientation !== e.orientation;
    this._options = Object.assign(Object.assign({}, this.options), e), t && (this.gridview.orientation = e.orientation), this.layout(this.gridview.width, this.gridview.height, !0);
  }
  removePanel(e) {
    this.removeGroup(e);
  }
  /**
   * Serialize the current state of the layout
   *
   * @returns A JSON respresentation of the layout
   */
  toJSON() {
    var e;
    return {
      grid: this.gridview.serialize(),
      activePanel: (e = this.activeGroup) === null || e === void 0 ? void 0 : e.id
    };
  }
  setVisible(e, t) {
    this.gridview.setViewVisible(Ae(e.element), t);
  }
  setActive(e) {
    this._groups.forEach((t, i) => {
      t.value.setActive(e === t.value);
    });
  }
  focus() {
    var e;
    (e = this.activeGroup) === null || e === void 0 || e.focus();
  }
  fromJSON(e) {
    this.clear();
    const { grid: t, activePanel: i } = e;
    try {
      const n = [], a = this.width, l = this.height;
      if (this.gridview.deserialize(t, {
        fromJSON: (o) => {
          const { data: s } = o, d = Ke(s.id, s.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory ? {
            createComponent: this.options.frameworkComponentFactory.createComponent
          } : void 0);
          return n.push(() => d.init({
            params: s.params,
            minimumWidth: s.minimumWidth,
            maximumWidth: s.maximumWidth,
            minimumHeight: s.minimumHeight,
            maximumHeight: s.maximumHeight,
            priority: s.priority,
            snap: !!s.snap,
            accessor: this,
            isVisible: o.visible
          })), this._onDidAddGroup.fire(d), this.registerPanel(d), d;
        }
      }), this.layout(a, l, !0), n.forEach((o) => o()), typeof i == "string") {
        const o = this.getPanel(i);
        o && this.doSetGroupActive(o);
      }
    } catch (n) {
      for (const a of this.groups)
        a.dispose(), this._groups.delete(a.id), this._onDidRemoveGroup.fire(a);
      throw this.clear(), n;
    }
    this._onDidLayoutfromJSON.fire();
  }
  clear() {
    const e = this.activeGroup, t = Array.from(this._groups.values());
    for (const i of t)
      i.disposable.dispose(), this.doRemoveGroup(i.value, { skipActive: !0 });
    e && this.doSetGroupActive(void 0), this.gridview.clear();
  }
  movePanel(e, t) {
    var i;
    let n;
    const a = this.gridview.remove(e), l = (i = this._groups.get(t.reference)) === null || i === void 0 ? void 0 : i.value;
    if (!l)
      throw new Error(`reference group ${t.reference} does not exist`);
    const o = Xr(t.direction);
    if (o === "center")
      throw new Error(`${o} not supported as an option`);
    {
      const s = Ae(l.element);
      n = rt(this.gridview.orientation, s, o);
    }
    this.doAddGroup(a, n, t.size);
  }
  addPanel(e) {
    var t, i;
    let n = e.location || [0];
    if (!((t = e.position) === null || t === void 0) && t.referencePanel) {
      const l = (i = this._groups.get(e.position.referencePanel)) === null || i === void 0 ? void 0 : i.value;
      if (!l)
        throw new Error(`reference group ${e.position.referencePanel} does not exist`);
      const o = Xr(e.position.direction);
      if (o === "center")
        throw new Error(`${o} not supported as an option`);
      {
        const s = Ae(l.element);
        n = rt(this.gridview.orientation, s, o);
      }
    }
    const a = Ke(e.id, e.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory ? {
      createComponent: this.options.frameworkComponentFactory.createComponent
    } : void 0);
    return a.init({
      params: e.params || {},
      minimumWidth: e.minimumWidth,
      maximumWidth: e.maximumWidth,
      minimumHeight: e.minimumHeight,
      maximumHeight: e.maximumHeight,
      priority: e.priority,
      snap: !!e.snap,
      accessor: this,
      isVisible: !0
    }), this.registerPanel(a), this.doAddGroup(a, n, e.size), a;
  }
  registerPanel(e) {
    const t = new pe(e.api.onDidFocusChange((i) => {
      i.isFocused && this._groups.forEach((n) => {
        const a = n.value;
        a !== e ? a.setActive(!1) : a.setActive(!0);
      });
    }));
    this._groups.set(e.id, {
      value: e,
      disposable: t
    });
  }
  moveGroup(e, t, i) {
    const n = this.getPanel(t);
    if (!n)
      throw new Error("invalid operation");
    const a = Ae(e.element), l = rt(this.gridview.orientation, a, i), [o, s] = ut(l), d = Ae(n.element), [h, u] = ut(d);
    if (Mn(h, o)) {
      this.gridview.moveView(h, u, s);
      return;
    }
    const p = this.doRemoveGroup(n, {
      skipActive: !0,
      skipDispose: !0
    }), b = Ae(e.element), k = rt(this.gridview.orientation, b, i);
    this.doAddGroup(p, k);
  }
  removeGroup(e) {
    super.removeGroup(e);
  }
  dispose() {
    super.dispose(), this._onDidLayoutfromJSON.dispose();
  }
}
class pd extends mo {
  get panels() {
    return this.splitview.getViews();
  }
  get options() {
    return this._options;
  }
  get length() {
    return this._panels.size;
  }
  get orientation() {
    return this.splitview.orientation;
  }
  get splitview() {
    return this._splitview;
  }
  set splitview(e) {
    this._splitview = e, this._splitviewChangeDisposable.value = new pe(this._splitview.onDidSashEnd(() => {
      this._onDidLayoutChange.fire(void 0);
    }), this._splitview.onDidAddView((t) => this._onDidAddView.fire(t)), this._splitview.onDidRemoveView((t) => this._onDidRemoveView.fire(t)));
  }
  get minimumSize() {
    return this.splitview.minimumSize;
  }
  get maximumSize() {
    return this.splitview.maximumSize;
  }
  get height() {
    return this.splitview.orientation === ae.HORIZONTAL ? this.splitview.orthogonalSize : this.splitview.size;
  }
  get width() {
    return this.splitview.orientation === ae.HORIZONTAL ? this.splitview.size : this.splitview.orthogonalSize;
  }
  constructor(e) {
    super(e.parentElement), this._splitviewChangeDisposable = new Xe(), this._panels = /* @__PURE__ */ new Map(), this._onDidLayoutfromJSON = new Q(), this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event, this._onDidAddView = new Q(), this.onDidAddView = this._onDidAddView.event, this._onDidRemoveView = new Q(), this.onDidRemoveView = this._onDidRemoveView.event, this._onDidLayoutChange = new Q(), this.onDidLayoutChange = this._onDidLayoutChange.event, this._options = e, e.components || (e.components = {}), e.frameworkComponents || (e.frameworkComponents = {}), this.splitview = new br(this.element, e), this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);
  }
  updateOptions(e) {
    const t = typeof e.orientation == "string" && this.options.orientation !== e.orientation;
    this._options = Object.assign(Object.assign({}, this.options), e), t && (this.splitview.orientation = e.orientation), this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);
  }
  focus() {
    var e;
    (e = this._activePanel) === null || e === void 0 || e.focus();
  }
  movePanel(e, t) {
    this.splitview.moveView(e, t);
  }
  setVisible(e, t) {
    const i = this.panels.indexOf(e);
    this.splitview.setViewVisible(i, t);
  }
  setActive(e, t) {
    this._activePanel = e, this.panels.filter((i) => i !== e).forEach((i) => {
      i.api._onDidActiveChange.fire({ isActive: !1 }), t || i.focus();
    }), e.api._onDidActiveChange.fire({ isActive: !0 }), t || e.focus();
  }
  removePanel(e, t) {
    const i = this._panels.get(e.id);
    if (!i)
      throw new Error(`unknown splitview panel ${e.id}`);
    i.dispose(), this._panels.delete(e.id);
    const n = this.panels.findIndex((o) => o === e);
    this.splitview.removeView(n, t).dispose();
    const l = this.panels;
    l.length > 0 && this.setActive(l[l.length - 1]);
  }
  getPanel(e) {
    return this.panels.find((t) => t.id === e);
  }
  addPanel(e) {
    if (this._panels.has(e.id))
      throw new Error(`panel ${e.id} already exists`);
    const t = Ke(e.id, e.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper ? {
      createComponent: this.options.frameworkWrapper.createComponent
    } : void 0);
    t.orientation = this.splitview.orientation, t.init({
      params: e.params || {},
      minimumSize: e.minimumSize,
      maximumSize: e.maximumSize,
      snap: e.snap,
      priority: e.priority,
      accessor: this
    });
    const i = typeof e.size == "number" ? e.size : Ue.Distribute, n = typeof e.index == "number" ? e.index : void 0;
    return this.splitview.addView(t, i, n), this.doAddView(t), this.setActive(t), t;
  }
  layout(e, t) {
    const [i, n] = this.splitview.orientation === ae.HORIZONTAL ? [e, t] : [t, e];
    this.splitview.layout(i, n);
  }
  doAddView(e) {
    const t = e.api.onDidFocusChange((i) => {
      i.isFocused && this.setActive(e, !0);
    });
    this._panels.set(e.id, t);
  }
  toJSON() {
    var e;
    return {
      views: this.splitview.getViews().map((i, n) => ({
        size: this.splitview.getViewSize(n),
        data: i.toJSON(),
        snap: !!i.snap,
        priority: i.priority
      })),
      activeView: (e = this._activePanel) === null || e === void 0 ? void 0 : e.id,
      size: this.splitview.size,
      orientation: this.splitview.orientation
    };
  }
  fromJSON(e) {
    this.clear();
    const { views: t, orientation: i, size: n, activeView: a } = e, l = [], o = this.width, s = this.height;
    if (this.splitview = new br(this.element, {
      orientation: i,
      proportionalLayout: this.options.proportionalLayout,
      descriptor: {
        size: n,
        views: t.map((d) => {
          const h = d.data;
          if (this._panels.has(h.id))
            throw new Error(`panel ${h.id} already exists`);
          const u = Ke(h.id, h.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper ? {
            createComponent: this.options.frameworkWrapper.createComponent
          } : void 0);
          return l.push(() => {
            u.init({
              params: h.params || {},
              minimumSize: h.minimumSize,
              maximumSize: h.maximumSize,
              snap: d.snap,
              priority: d.priority,
              accessor: this
            });
          }), u.orientation = i, this.doAddView(u), setTimeout(() => {
            this._onDidAddView.fire(u);
          }, 0), { size: d.size, view: u };
        })
      }
    }), this.layout(o, s), l.forEach((d) => d()), typeof a == "string") {
      const d = this.getPanel(a);
      d && this.setActive(d);
    }
    this._onDidLayoutfromJSON.fire();
  }
  clear() {
    for (const e of this._panels.values())
      e.dispose();
    for (this._panels.clear(); this.splitview.length > 0; )
      this.splitview.removeView(0, Ue.Distribute, !0).dispose();
  }
  dispose() {
    for (const t of this._panels.values())
      t.dispose();
    this._panels.clear();
    const e = this.splitview.getViews();
    this._splitviewChangeDisposable.dispose(), this.splitview.dispose();
    for (const t of e)
      t.dispose();
    super.dispose();
  }
}
class To extends pe {
  get element() {
    return this._element;
  }
  constructor() {
    super(), this._expandedIcon = ld(), this._collapsedIcon = md(), this.disposable = new Xe(), this.apiRef = { api: null }, this._element = document.createElement("div"), this.element.className = "default-header", this._content = document.createElement("span"), this._expander = document.createElement("div"), this._expander.className = "dockview-pane-header-icon", this.element.appendChild(this._expander), this.element.appendChild(this._content), this.addDisposables(Se(this._element, "click", () => {
      var e;
      (e = this.apiRef.api) === null || e === void 0 || e.setExpanded(!this.apiRef.api.isExpanded);
    }));
  }
  init(e) {
    this.apiRef.api = e.api, this._content.textContent = e.title, this.updateIcon(), this.disposable.value = e.api.onDidExpansionChange(() => {
      this.updateIcon();
    });
  }
  updateIcon() {
    var e;
    const t = !!(!((e = this.apiRef.api) === null || e === void 0) && e.isExpanded);
    ge(this._expander, "collapsed", !t), t ? (this._expander.contains(this._collapsedIcon) && this._collapsedIcon.remove(), this._expander.contains(this._expandedIcon) || this._expander.appendChild(this._expandedIcon)) : (this._expander.contains(this._expandedIcon) && this._expandedIcon.remove(), this._expander.contains(this._collapsedIcon) || this._expander.appendChild(this._collapsedIcon));
  }
  update(e) {
  }
  dispose() {
    this.disposable.dispose(), super.dispose();
  }
}
const gd = so();
class No extends td {
  constructor(e) {
    super(e.accessor, e.id, e.component, e.headerComponent, e.orientation, e.isExpanded, e.disableDnd), this.options = e;
  }
  getBodyComponent() {
    return this.options.body;
  }
  getHeaderComponent() {
    return this.options.header;
  }
}
class bd extends mo {
  get id() {
    return this._id;
  }
  get panels() {
    return this.paneview.getPanes();
  }
  set paneview(e) {
    this._paneview = e, this._disposable.value = new pe(this._paneview.onDidChange(() => {
      this._onDidLayoutChange.fire(void 0);
    }), this._paneview.onDidAddView((t) => this._onDidAddView.fire(t)), this._paneview.onDidRemoveView((t) => this._onDidRemoveView.fire(t)));
  }
  get paneview() {
    return this._paneview;
  }
  get minimumSize() {
    return this.paneview.minimumSize;
  }
  get maximumSize() {
    return this.paneview.maximumSize;
  }
  get height() {
    return this.paneview.orientation === ae.HORIZONTAL ? this.paneview.orthogonalSize : this.paneview.size;
  }
  get width() {
    return this.paneview.orientation === ae.HORIZONTAL ? this.paneview.size : this.paneview.orthogonalSize;
  }
  get options() {
    return this._options;
  }
  constructor(e) {
    super(e.parentElement), this._id = gd.next(), this._disposable = new Xe(), this._viewDisposables = /* @__PURE__ */ new Map(), this._onDidLayoutfromJSON = new Q(), this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event, this._onDidLayoutChange = new Q(), this.onDidLayoutChange = this._onDidLayoutChange.event, this._onDidDrop = new Q(), this.onDidDrop = this._onDidDrop.event, this._onDidAddView = new Q(), this.onDidAddView = this._onDidAddView.event, this._onDidRemoveView = new Q(), this.onDidRemoveView = this._onDidRemoveView.event, this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView), this._options = e, e.components || (e.components = {}), e.frameworkComponents || (e.frameworkComponents = {}), this.paneview = new Lo(this.element, {
      // only allow paneview in the vertical orientation for now
      orientation: ae.VERTICAL
    }), this.addDisposables(this._disposable);
  }
  focus() {
  }
  updateOptions(e) {
    this._options = Object.assign(Object.assign({}, this.options), e);
  }
  addPanel(e) {
    const t = Ke(e.id, e.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper ? {
      createComponent: this.options.frameworkWrapper.body.createComponent
    } : void 0);
    let i;
    e.headerComponent ? i = Ke(e.id, e.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper ? {
      createComponent: this.options.frameworkWrapper.header.createComponent
    } : void 0) : i = new To();
    const n = new No({
      id: e.id,
      component: e.component,
      headerComponent: e.headerComponent,
      header: i,
      body: t,
      orientation: ae.VERTICAL,
      isExpanded: !!e.isExpanded,
      disableDnd: !!this.options.disableDnd,
      accessor: this
    });
    this.doAddPanel(n);
    const a = typeof e.size == "number" ? e.size : Ue.Distribute, l = typeof e.index == "number" ? e.index : void 0;
    return n.init({
      params: e.params || {},
      minimumBodySize: e.minimumBodySize,
      maximumBodySize: e.maximumBodySize,
      isExpanded: e.isExpanded,
      title: e.title,
      containerApi: new Jt(this)
    }), this.paneview.addPane(n, a, l), n.orientation = this.paneview.orientation, n;
  }
  removePanel(e) {
    const i = this.panels.findIndex((n) => n === e);
    this.paneview.removePane(i), this.doRemovePanel(e);
  }
  movePanel(e, t) {
    this.paneview.moveView(e, t);
  }
  getPanel(e) {
    return this.panels.find((t) => t.id === e);
  }
  layout(e, t) {
    const [i, n] = this.paneview.orientation === ae.HORIZONTAL ? [e, t] : [t, e];
    this.paneview.layout(i, n);
  }
  toJSON() {
    const e = (n) => n === Number.MAX_SAFE_INTEGER || n === Number.POSITIVE_INFINITY ? void 0 : n, t = (n) => n <= 0 ? void 0 : n;
    return {
      views: this.paneview.getPanes().map((n, a) => ({
        size: this.paneview.getViewSize(a),
        data: n.toJSON(),
        minimumSize: t(n.minimumBodySize),
        maximumSize: e(n.maximumBodySize),
        expanded: n.isExpanded()
      })),
      size: this.paneview.size
    };
  }
  fromJSON(e) {
    this.clear();
    const { views: t, size: i } = e, n = [], a = this.width, l = this.height;
    this.paneview = new Lo(this.element, {
      orientation: ae.VERTICAL,
      descriptor: {
        size: i,
        views: t.map((o) => {
          const s = o.data, d = Ke(s.id, s.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper ? {
            createComponent: this.options.frameworkWrapper.body.createComponent
          } : void 0);
          let h;
          s.headerComponent ? h = Ke(s.id, s.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper ? {
            createComponent: this.options.frameworkWrapper.header.createComponent
          } : void 0) : h = new To();
          const u = new No({
            id: s.id,
            component: s.component,
            headerComponent: s.headerComponent,
            header: h,
            body: d,
            orientation: ae.VERTICAL,
            isExpanded: !!o.expanded,
            disableDnd: !!this.options.disableDnd,
            accessor: this
          });
          return this.doAddPanel(u), n.push(() => {
            u.init({
              params: s.params || {},
              minimumBodySize: o.minimumSize,
              maximumBodySize: o.maximumSize,
              title: s.title,
              isExpanded: !!o.expanded,
              containerApi: new Jt(this)
            }), u.orientation = this.paneview.orientation;
          }), setTimeout(() => {
            this._onDidAddView.fire(u);
          }, 0), { size: o.size, view: u };
        })
      }
    }), this.layout(a, l), n.forEach((o) => o()), this._onDidLayoutfromJSON.fire();
  }
  clear() {
    for (const [e, t] of this._viewDisposables.entries())
      t.dispose();
    this._viewDisposables.clear(), this.paneview.dispose();
  }
  doAddPanel(e) {
    const t = e.onDidDrop((i) => {
      this._onDidDrop.fire(i);
    });
    this._viewDisposables.set(e.id, t);
  }
  doRemovePanel(e) {
    const t = this._viewDisposables.get(e.id);
    t && (t.dispose(), this._viewDisposables.delete(e.id));
  }
  dispose() {
    super.dispose();
    for (const [e, t] of this._viewDisposables.entries())
      t.dispose();
    this._viewDisposables.clear(), this.paneview.dispose();
  }
}
class kd extends uo {
  get priority() {
    return this._priority;
  }
  set orientation(e) {
    this._orientation = e;
  }
  get orientation() {
    return this._orientation;
  }
  get minimumSize() {
    const e = typeof this._minimumSize == "function" ? this._minimumSize() : this._minimumSize;
    return e !== this._evaluatedMinimumSize && (this._evaluatedMinimumSize = e, this.updateConstraints()), e;
  }
  get maximumSize() {
    const e = typeof this._maximumSize == "function" ? this._maximumSize() : this._maximumSize;
    return e !== this._evaluatedMaximumSize && (this._evaluatedMaximumSize = e, this.updateConstraints()), e;
  }
  get snap() {
    return this._snap;
  }
  constructor(e, t) {
    super(e, t, new Gn(e)), this._evaluatedMinimumSize = 0, this._evaluatedMaximumSize = Number.POSITIVE_INFINITY, this._minimumSize = 0, this._maximumSize = Number.POSITIVE_INFINITY, this._snap = !1, this._onDidChange = new Q(), this.onDidChange = this._onDidChange.event, this.api.initialize(this), this.addDisposables(this._onDidChange, this.api.onVisibilityChange((i) => {
      const { isVisible: n } = i, { accessor: a } = this._params;
      a.setVisible(this, n);
    }), this.api.onActiveChange(() => {
      const { accessor: i } = this._params;
      i.setActive(this);
    }), this.api.onDidConstraintsChangeInternal((i) => {
      (typeof i.minimumSize == "number" || typeof i.minimumSize == "function") && (this._minimumSize = i.minimumSize), (typeof i.maximumSize == "number" || typeof i.maximumSize == "function") && (this._maximumSize = i.maximumSize), this.updateConstraints();
    }), this.api.onDidSizeChange((i) => {
      this._onDidChange.fire({ size: i.size });
    }));
  }
  setVisible(e) {
    this.api._onDidVisibilityChange.fire({ isVisible: e });
  }
  setActive(e) {
    this.api._onDidActiveChange.fire({ isActive: e });
  }
  layout(e, t) {
    const [i, n] = this.orientation === ae.HORIZONTAL ? [e, t] : [t, e];
    super.layout(i, n);
  }
  init(e) {
    super.init(e), this._priority = e.priority, e.minimumSize && (this._minimumSize = e.minimumSize), e.maximumSize && (this._maximumSize = e.maximumSize), e.snap && (this._snap = e.snap);
  }
  toJSON() {
    const e = (i) => i === Number.MAX_SAFE_INTEGER || i === Number.POSITIVE_INFINITY ? void 0 : i, t = (i) => i <= 0 ? void 0 : i;
    return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: t(this.minimumSize), maximumSize: e(this.maximumSize) });
  }
  updateConstraints() {
    this.api._onDidConstraintsChange.fire({
      maximumSize: this._evaluatedMaximumSize,
      minimumSize: this._evaluatedMinimumSize
    });
  }
}
var At, ye, Ai, Ro, Qt = 0, Xn = [], Ur = [], Po = re.__b, Mo = re.__r, Fo = re.diffed, Bo = re.__c, Uo = re.unmount;
function er(r, e) {
  re.__h && re.__h(ye, r, Qt || e), Qt = 0;
  var t = ye.__H || (ye.__H = { __: [], __h: [] });
  return r >= t.__.length && t.__.push({ __V: Ur }), t.__[r];
}
function he(r) {
  return Qt = 1, Zn(Yn, r);
}
function Zn(r, e, t) {
  var i = er(At++, 2);
  if (i.t = r, !i.__c && (i.__ = [t ? t(e) : Yn(void 0, e), function(o) {
    var s = i.__N ? i.__N[0] : i.__[0], d = i.t(s, o);
    s !== d && (i.__N = [d, i.__[1]], i.__c.setState({}));
  }], i.__c = ye, !ye.u)) {
    var n = function(o, s, d) {
      if (!i.__c.__H)
        return !0;
      var h = i.__c.__H.__.filter(function(p) {
        return p.__c;
      });
      if (h.every(function(p) {
        return !p.__N;
      }))
        return !a || a.call(this, o, s, d);
      var u = !1;
      return h.forEach(function(p) {
        if (p.__N) {
          var b = p.__[0];
          p.__ = p.__N, p.__N = void 0, b !== p.__[0] && (u = !0);
        }
      }), !(!u && i.__c.props === o) && (!a || a.call(this, o, s, d));
    };
    ye.u = !0;
    var a = ye.shouldComponentUpdate, l = ye.componentWillUpdate;
    ye.componentWillUpdate = function(o, s, d) {
      if (this.__e) {
        var h = a;
        a = void 0, n(o, s, d), a = h;
      }
      l && l.call(this, o, s, d);
    }, ye.shouldComponentUpdate = n;
  }
  return i.__N || i.__;
}
function se(r, e) {
  var t = er(At++, 3);
  !re.__s && fo(t.__H, e) && (t.__ = r, t.i = e, ye.__H.__h.push(t));
}
function di(r, e) {
  var t = er(At++, 4);
  !re.__s && fo(t.__H, e) && (t.__ = r, t.i = e, ye.__h.push(t));
}
function oe(r) {
  return Qt = 5, ze(function() {
    return { current: r };
  }, []);
}
function xt(r, e, t) {
  Qt = 6, di(function() {
    return typeof r == "function" ? (r(e()), function() {
      return r(null);
    }) : r ? (r.current = e(), function() {
      return r.current = null;
    }) : void 0;
  }, t == null ? t : t.concat(r));
}
function ze(r, e) {
  var t = er(At++, 7);
  return fo(t.__H, e) ? (t.__V = r(), t.i = e, t.__h = r, t.__V) : t.__;
}
function me(r, e) {
  return Qt = 8, ze(function() {
    return r;
  }, e);
}
function tr(r) {
  var e = ye.context[r.__c], t = er(At++, 9);
  return t.c = r, e ? (t.__ == null && (t.__ = !0, e.sub(ye)), e.props.value) : r.__;
}
function Jn(r, e) {
  re.useDebugValue && re.useDebugValue(e ? e(r) : r);
}
function vd() {
  var r = er(At++, 11);
  if (!r.__) {
    for (var e = ye.__v; e !== null && !e.__m && e.__ !== null; )
      e = e.__;
    var t = e.__m || (e.__m = [0, 0]);
    r.__ = "P" + t[0] + "-" + t[1]++;
  }
  return r.__;
}
function Cd() {
  for (var r; r = Xn.shift(); )
    if (r.__P && r.__H)
      try {
        r.__H.__h.forEach(Wr), r.__H.__h.forEach(Xi), r.__H.__h = [];
      } catch (e) {
        r.__H.__h = [], re.__e(e, r.__v);
      }
}
re.__b = function(r) {
  ye = null, Po && Po(r);
}, re.__r = function(r) {
  Mo && Mo(r), At = 0;
  var e = (ye = r.__c).__H;
  e && (Ai === ye ? (e.__h = [], ye.__h = [], e.__.forEach(function(t) {
    t.__N && (t.__ = t.__N), t.__V = Ur, t.__N = t.i = void 0;
  })) : (e.__h.forEach(Wr), e.__h.forEach(Xi), e.__h = [], At = 0)), Ai = ye;
}, re.diffed = function(r) {
  Fo && Fo(r);
  var e = r.__c;
  e && e.__H && (e.__H.__h.length && (Xn.push(e) !== 1 && Ro === re.requestAnimationFrame || ((Ro = re.requestAnimationFrame) || yd)(Cd)), e.__H.__.forEach(function(t) {
    t.i && (t.__H = t.i), t.__V !== Ur && (t.__ = t.__V), t.i = void 0, t.__V = Ur;
  })), Ai = ye = null;
}, re.__c = function(r, e) {
  e.some(function(t) {
    try {
      t.__h.forEach(Wr), t.__h = t.__h.filter(function(i) {
        return !i.__ || Xi(i);
      });
    } catch (i) {
      e.some(function(n) {
        n.__h && (n.__h = []);
      }), e = [], re.__e(i, t.__v);
    }
  }), Bo && Bo(r, e);
}, re.unmount = function(r) {
  Uo && Uo(r);
  var e, t = r.__c;
  t && t.__H && (t.__H.__.forEach(function(i) {
    try {
      Wr(i);
    } catch (n) {
      e = n;
    }
  }), t.__H = void 0, e && re.__e(e, t.__v));
};
var Wo = typeof requestAnimationFrame == "function";
function yd(r) {
  var e, t = function() {
    clearTimeout(i), Wo && cancelAnimationFrame(e), setTimeout(r);
  }, i = setTimeout(t, 100);
  Wo && (e = requestAnimationFrame(t));
}
function Wr(r) {
  var e = ye, t = r.__c;
  typeof t == "function" && (r.__c = void 0, t()), ye = e;
}
function Xi(r) {
  var e = ye;
  r.__c = r.__(), ye = e;
}
function fo(r, e) {
  return !r || r.length !== e.length || e.some(function(t, i) {
    return t !== r[i];
  });
}
function Yn(r, e) {
  return typeof e == "function" ? e(r) : e;
}
function Qn(r, e) {
  for (var t in e)
    r[t] = e[t];
  return r;
}
function Zi(r, e) {
  for (var t in r)
    if (t !== "__source" && !(t in e))
      return !0;
  for (var i in e)
    if (i !== "__source" && r[i] !== e[i])
      return !0;
  return !1;
}
function Ei(r, e) {
  return r === e && (r !== 0 || 1 / r == 1 / e) || r != r && e != e;
}
function Ji(r) {
  this.props = r;
}
function li(r, e) {
  function t(n) {
    var a = this.props.ref, l = a == n.ref;
    return !l && a && (a.call ? a(null) : a.current = null), e ? !e(this.props, n) || !l : Zi(this.props, n);
  }
  function i(n) {
    return this.shouldComponentUpdate = t, ne(r, n);
  }
  return i.displayName = "Memo(" + (r.displayName || r.name) + ")", i.prototype.isReactComponent = !0, i.__f = !0, i;
}
(Ji.prototype = new nt()).isPureReactComponent = !0, Ji.prototype.shouldComponentUpdate = function(r, e) {
  return Zi(this.props, r) || Zi(this.state, e);
};
var qo = re.__b;
re.__b = function(r) {
  r.type && r.type.__f && r.ref && (r.props.ref = r.ref, r.ref = null), qo && qo(r);
};
var Sd = typeof Symbol < "u" && Symbol.for && Symbol.for("react.forward_ref") || 3911;
function Qe(r) {
  function e(t) {
    var i = Qn({}, t);
    return delete i.ref, r(i, t.ref || null);
  }
  return e.$$typeof = Sd, e.render = e, e.prototype.isReactComponent = e.__f = !0, e.displayName = "ForwardRef(" + (r.displayName || r.name) + ")", e;
}
var Go = function(r, e) {
  return r == null ? null : _t(_t(r).map(e));
}, wd = { map: Go, forEach: Go, count: function(r) {
  return r ? _t(r).length : 0;
}, only: function(r) {
  var e = _t(r);
  if (e.length !== 1)
    throw "Children.only";
  return e[0];
}, toArray: _t }, Id = re.__e;
re.__e = function(r, e, t, i) {
  if (r.then) {
    for (var n, a = e; a = a.__; )
      if ((n = a.__c) && n.__c)
        return e.__e == null && (e.__e = t.__e, e.__k = t.__k), n.__c(r, e);
  }
  Id(r, e, t, i);
};
var Ho = re.unmount;
function $n(r, e, t) {
  return r && (r.__c && r.__c.__H && (r.__c.__H.__.forEach(function(i) {
    typeof i.__c == "function" && i.__c();
  }), r.__c.__H = null), (r = Qn({}, r)).__c != null && (r.__c.__P === t && (r.__c.__P = e), r.__c = null), r.__k = r.__k && r.__k.map(function(i) {
    return $n(i, e, t);
  })), r;
}
function ea(r, e, t) {
  return r && t && (r.__v = null, r.__k = r.__k && r.__k.map(function(i) {
    return ea(i, e, t);
  }), r.__c && r.__c.__P === e && (r.__e && t.insertBefore(r.__e, r.__d), r.__c.__e = !0, r.__c.__P = t)), r;
}
function qr() {
  this.__u = 0, this.t = null, this.__b = null;
}
function ta(r) {
  var e = r.__.__c;
  return e && e.__a && e.__a(r);
}
function jd(r) {
  var e, t, i;
  function n(a) {
    if (e || (e = r()).then(function(l) {
      t = l.default || l;
    }, function(l) {
      i = l;
    }), i)
      throw i;
    if (!t)
      throw e;
    return ne(t, a);
  }
  return n.displayName = "Lazy", n.__f = !0, n;
}
function dr() {
  this.u = null, this.o = null;
}
re.unmount = function(r) {
  var e = r.__c;
  e && e.__R && e.__R(), e && r.__h === !0 && (r.type = null), Ho && Ho(r);
}, (qr.prototype = new nt()).__c = function(r, e) {
  var t = e.__c, i = this;
  i.t == null && (i.t = []), i.t.push(t);
  var n = ta(i.__v), a = !1, l = function() {
    a || (a = !0, t.__R = null, n ? n(o) : o());
  };
  t.__R = l;
  var o = function() {
    if (!--i.__u) {
      if (i.state.__a) {
        var d = i.state.__a;
        i.__v.__k[0] = ea(d, d.__c.__P, d.__c.__O);
      }
      var h;
      for (i.setState({ __a: i.__b = null }); h = i.t.pop(); )
        h.forceUpdate();
    }
  }, s = e.__h === !0;
  i.__u++ || s || i.setState({ __a: i.__b = i.__v.__k[0] }), r.then(l, l);
}, qr.prototype.componentWillUnmount = function() {
  this.t = [];
}, qr.prototype.render = function(r, e) {
  if (this.__b) {
    if (this.__v.__k) {
      var t = document.createElement("div"), i = this.__v.__k[0].__c;
      this.__v.__k[0] = $n(this.__b, t, i.__O = i.__P);
    }
    this.__b = null;
  }
  var n = e.__a && ne(at, null, r.fallback);
  return n && (n.__h = null), [ne(at, null, e.__a ? null : r.children), n];
};
var Vo = function(r, e, t) {
  if (++t[1] === t[0] && r.o.delete(e), r.props.revealOrder && (r.props.revealOrder[0] !== "t" || !r.o.size))
    for (t = r.u; t; ) {
      for (; t.length > 3; )
        t.pop()();
      if (t[1] < t[0])
        break;
      r.u = t = t[2];
    }
};
function Ad(r) {
  return this.getChildContext = function() {
    return r.context;
  }, r.children;
}
function Ed(r) {
  var e = this, t = r.i;
  e.componentWillUnmount = function() {
    jt(null, e.l), e.l = null, e.i = null;
  }, e.i && e.i !== t && e.componentWillUnmount(), e.l || (e.i = t, e.l = { nodeType: 1, parentNode: t, childNodes: [], appendChild: function(i) {
    this.childNodes.push(i), e.i.appendChild(i);
  }, insertBefore: function(i, n) {
    this.childNodes.push(i), e.i.appendChild(i);
  }, removeChild: function(i) {
    this.childNodes.splice(this.childNodes.indexOf(i) >>> 1, 1), e.i.removeChild(i);
  } }), jt(ne(Ad, { context: e.context }, r.__v), e.l);
}
function ra(r, e) {
  var t = ne(Ed, { __v: r, i: e });
  return t.containerInfo = e, t;
}
(dr.prototype = new nt()).__a = function(r) {
  var e = this, t = ta(e.__v), i = e.o.get(r);
  return i[0]++, function(n) {
    var a = function() {
      e.props.revealOrder ? (i.push(n), Vo(e, r, i)) : n();
    };
    t ? t(a) : a();
  };
}, dr.prototype.render = function(r) {
  this.u = null, this.o = /* @__PURE__ */ new Map();
  var e = _t(r.children);
  r.revealOrder && r.revealOrder[0] === "b" && e.reverse();
  for (var t = e.length; t--; )
    this.o.set(e[t], this.u = [1, 0, this.u]);
  return r.children;
}, dr.prototype.componentDidUpdate = dr.prototype.componentDidMount = function() {
  var r = this;
  this.o.forEach(function(e, t) {
    Vo(r, t, e);
  });
};
var ia = typeof Symbol < "u" && Symbol.for && Symbol.for("react.element") || 60103, xd = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/, zd = /^on(Ani|Tra|Tou|BeforeInp|Compo)/, Ld = /[A-Z0-9]/g, Od = typeof document < "u", Dd = function(r) {
  return (typeof Symbol < "u" && typeof Symbol() == "symbol" ? /fil|che|rad/ : /fil|che|ra/).test(r);
};
function Td(r, e, t) {
  return e.__k == null && (e.textContent = ""), jt(r, e), typeof t == "function" && t(), r ? r.__c : null;
}
function Nd(r, e, t) {
  return no(r, e), typeof t == "function" && t(), r ? r.__c : null;
}
nt.prototype.isReactComponent = {}, ["componentWillMount", "componentWillReceiveProps", "componentWillUpdate"].forEach(function(r) {
  Object.defineProperty(nt.prototype, r, { configurable: !0, get: function() {
    return this["UNSAFE_" + r];
  }, set: function(e) {
    Object.defineProperty(this, r, { configurable: !0, writable: !0, value: e });
  } });
});
var Ko = re.event;
function Rd() {
}
function Pd() {
  return this.cancelBubble;
}
function Md() {
  return this.defaultPrevented;
}
re.event = function(r) {
  return Ko && (r = Ko(r)), r.persist = Rd, r.isPropagationStopped = Pd, r.isDefaultPrevented = Md, r.nativeEvent = r;
};
var ho, Fd = { enumerable: !1, configurable: !0, get: function() {
  return this.class;
} }, Xo = re.vnode;
re.vnode = function(r) {
  typeof r.type == "string" && function(e) {
    var t = e.props, i = e.type, n = {};
    for (var a in t) {
      var l = t[a];
      if (!(a === "value" && "defaultValue" in t && l == null || Od && a === "children" && i === "noscript" || a === "class" || a === "className")) {
        var o = a.toLowerCase();
        a === "defaultValue" && "value" in t && t.value == null ? a = "value" : a === "download" && l === !0 ? l = "" : o === "ondoubleclick" ? a = "ondblclick" : o !== "onchange" || i !== "input" && i !== "textarea" || Dd(t.type) ? o === "onfocus" ? a = "onfocusin" : o === "onblur" ? a = "onfocusout" : zd.test(a) ? a = o : i.indexOf("-") === -1 && xd.test(a) ? a = a.replace(Ld, "-$&").toLowerCase() : l === null && (l = void 0) : o = a = "oninput", o === "oninput" && n[a = o] && (a = "oninputCapture"), n[a] = l;
      }
    }
    i == "select" && n.multiple && Array.isArray(n.value) && (n.value = _t(t.children).forEach(function(s) {
      s.props.selected = n.value.indexOf(s.props.value) != -1;
    })), i == "select" && n.defaultValue != null && (n.value = _t(t.children).forEach(function(s) {
      s.props.selected = n.multiple ? n.defaultValue.indexOf(s.props.value) != -1 : n.defaultValue == s.props.value;
    })), t.class && !t.className ? (n.class = t.class, Object.defineProperty(n, "className", Fd)) : (t.className && !t.class || t.class && t.className) && (n.class = n.className = t.className), e.props = n;
  }(r), r.$$typeof = ia, Xo && Xo(r);
};
var Zo = re.__r;
re.__r = function(r) {
  Zo && Zo(r), ho = r.__c;
};
var Jo = re.diffed;
re.diffed = function(r) {
  Jo && Jo(r);
  var e = r.props, t = r.__e;
  t != null && r.type === "textarea" && "value" in e && e.value !== t.value && (t.value = e.value == null ? "" : e.value), ho = null;
};
var Bd = { ReactCurrentDispatcher: { current: { readContext: function(r) {
  return ho.__n[r.__c].props.value;
} } } };
function Ud(r) {
  return ne.bind(null, r);
}
function mi(r) {
  return !!r && r.$$typeof === ia;
}
function Wd(r) {
  return mi(r) && r.type === at;
}
function qd(r) {
  return mi(r) ? ao.apply(null, arguments) : r;
}
function Gd(r) {
  return !!r.__k && (jt(null, r), !0);
}
function Hd(r) {
  return r && (r.base || r.nodeType === 1 && r) || null;
}
var Vd = function(r, e) {
  return r(e);
}, Kd = function(r, e) {
  return r(e);
}, Xd = at;
function oa(r) {
  r();
}
function Zd(r) {
  return r;
}
function Jd() {
  return [!1, oa];
}
var Yd = di, Qd = mi;
function $d(r, e) {
  var t = e(), i = he({ h: { __: t, v: e } }), n = i[0].h, a = i[1];
  return di(function() {
    n.__ = t, n.v = e, Ei(n.__, e()) || a({ h: n });
  }, [r, t, e]), se(function() {
    return Ei(n.__, n.v()) || a({ h: n }), r(function() {
      Ei(n.__, n.v()) || a({ h: n });
    });
  }, [r]), t;
}
var ce = { useState: he, useId: vd, useReducer: Zn, useEffect: se, useLayoutEffect: di, useInsertionEffect: Yd, useTransition: Jd, useDeferredValue: Zd, useSyncExternalStore: $d, startTransition: oa, useRef: oe, useImperativeHandle: xt, useMemo: ze, useCallback: me, useContext: tr, useDebugValue: Jn, version: "17.0.2", Children: wd, render: Td, hydrate: Nd, unmountComponentAtNode: Gd, createPortal: ra, createElement: ne, createContext: Et, createFactory: Ud, cloneElement: qd, createRef: as, Fragment: at, isValidElement: mi, isElement: Qd, isFragment: Wd, findDOMNode: Hd, Component: nt, PureComponent: Ji, memo: li, forwardRef: Qe, flushSync: Kd, unstable_batchedUpdates: Vd, StrictMode: Xd, Suspense: qr, SuspenseList: dr, lazy: jd, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: Bd };
const na = (r, e) => {
  const [t, i] = he(), n = oe(r.componentProps);
  return xt(e, () => ({
    update: (a) => {
      n.current = Object.assign(Object.assign({}, n.current), a), i(Date.now());
    }
  }), []), ne(r.component, n.current);
};
na.displayName = "DockviewReactJsBridge";
const el = (() => {
  let r = 1;
  return { next: () => `dockview_react_portal_key_${(r++).toString()}` };
})(), tl = Et({});
class Pt {
  constructor(e, t, i, n, a) {
    this.parent = e, this.portalStore = t, this.component = i, this.parameters = n, this.context = a, this._initialProps = {}, this.disposed = !1, this.createPortal();
  }
  update(e) {
    if (this.disposed)
      throw new Error("invalid operation: resource is already disposed");
    this.componentInstance ? this.componentInstance.update(e) : this._initialProps = Object.assign(Object.assign({}, this._initialProps), e);
  }
  createPortal() {
    if (this.disposed)
      throw new Error("invalid operation: resource is already disposed");
    if (typeof this.component != "function")
      throw new Error("Invalid Operation. dockview only supports React Functional Components.");
    const e = ne(Qe(na), {
      component: this.component,
      componentProps: this.parameters,
      ref: (n) => {
        this.componentInstance = n, Object.keys(this._initialProps).length > 0 && (this.componentInstance.update(this._initialProps), this._initialProps = {});
      }
    }), t = this.context ? ne(tl.Provider, { value: this.context }, e) : e, i = ra(t, this.parent, el.next());
    this.ref = {
      portal: i,
      disposable: this.portalStore.addPortal(i)
    };
  }
  dispose() {
    var e;
    (e = this.ref) === null || e === void 0 || e.disposable.dispose(), this.disposed = !0;
  }
}
const ui = () => {
  const [r, e] = he([]);
  Jn(`Portal count: ${r.length}`);
  const t = me((i) => {
    e((a) => [...a, i]);
    let n = !1;
    return {
      dispose: () => {
        if (n)
          throw new Error("invalid operation: resource already disposed");
        n = !0, e((a) => a.filter((l) => l !== i));
      }
    };
  }, []);
  return [r, t];
};
class rl {
  get element() {
    return this._element;
  }
  constructor(e, t, i) {
    this.id = e, this.component = t, this.reactPortalStore = i, this._onDidFocus = new Q(), this.onDidFocus = this._onDidFocus.event, this._onDidBlur = new Q(), this.onDidBlur = this._onDidBlur.event, this._element = document.createElement("div"), this._element.className = "dockview-react-part";
  }
  focus() {
  }
  init(e) {
    this.part = new Pt(this.element, this.reactPortalStore, this.component, {
      params: e.params,
      api: e.api,
      containerApi: e.containerApi
    });
  }
  update(e) {
    var t;
    (t = this.part) === null || t === void 0 || t.update(e.params);
  }
  layout(e, t) {
  }
  dispose() {
    var e;
    this._onDidFocus.dispose(), this._onDidBlur.dispose(), (e = this.part) === null || e === void 0 || e.dispose();
  }
}
class il {
  get element() {
    return this._element;
  }
  constructor(e, t, i) {
    this.id = e, this.component = t, this.reactPortalStore = i, this._element = document.createElement("div"), this._element.className = "dockview-react-part";
  }
  focus() {
  }
  init(e) {
    this.part = new Pt(this.element, this.reactPortalStore, this.component, {
      params: e.params,
      api: e.api,
      containerApi: e.containerApi
    });
  }
  update(e) {
    var t;
    (t = this.part) === null || t === void 0 || t.update(e.params);
  }
  layout(e, t) {
  }
  dispose() {
    var e;
    (e = this.part) === null || e === void 0 || e.dispose();
  }
}
class ol {
  get element() {
    return this._element;
  }
  constructor(e, t, i) {
    this.id = e, this.component = t, this.reactPortalStore = i, this._element = document.createElement("div"), this._element.className = "dockview-react-part";
  }
  init(e) {
    this.part = new Pt(this.element, this.reactPortalStore, this.component, {
      group: e.group,
      containerApi: e.containerApi,
      close: () => {
        e.group && e.containerApi.removeGroup(e.group);
      }
    });
  }
  focus() {
  }
  update(e) {
    var t, i;
    this.parameters && (this.parameters.params = e.params), (t = this.part) === null || t === void 0 || t.update({ params: ((i = this.parameters) === null || i === void 0 ? void 0 : i.params) || {} });
  }
  layout(e, t) {
  }
  updateParentGroup(e, t) {
  }
  dispose() {
    var e;
    (e = this.part) === null || e === void 0 || e.dispose();
  }
}
class nl {
  get element() {
    return this._element;
  }
  get part() {
    return this._part;
  }
  get group() {
    return this._group;
  }
  constructor(e, t, i) {
    this.component = e, this.reactPortalStore = t, this._group = i, this.mutableDisposable = new Xe(), this._element = document.createElement("div"), this._element.className = "dockview-react-part";
  }
  focus() {
  }
  init(e) {
    this.mutableDisposable.value = new pe(this._group.model.onDidAddPanel(() => {
      this.updatePanels();
    }), this._group.model.onDidRemovePanel(() => {
      this.updatePanels();
    }), this._group.model.onDidActivePanelChange(() => {
      this.updateActivePanel();
    }), e.api.onDidActiveChange(() => {
      this.updateGroupActive();
    })), this._part = new Pt(this.element, this.reactPortalStore, this.component, {
      api: e.api,
      containerApi: e.containerApi,
      panels: this._group.model.panels,
      activePanel: this._group.model.activePanel,
      isGroupActive: this._group.api.isActive,
      group: this._group
    });
  }
  update(e) {
    var t;
    (t = this._part) === null || t === void 0 || t.update(e.params);
  }
  dispose() {
    var e;
    this.mutableDisposable.dispose(), (e = this._part) === null || e === void 0 || e.dispose();
  }
  updatePanels() {
    this.update({ params: { panels: this._group.model.panels } });
  }
  updateActivePanel() {
    this.update({
      params: {
        activePanel: this._group.model.activePanel
      }
    });
  }
  updateGroupActive() {
    this.update({
      params: {
        isGroupActive: this._group.api.isActive
      }
    });
  }
}
function Ft(r, e) {
  return r ? (t) => new nl(r, e, t) : void 0;
}
const xr = "props.defaultTabComponent", aa = Qe((r, e) => {
  const t = oe(null), i = oe(), [n, a] = ui();
  return xt(e, () => t.current, []), se(() => {
    if (!t.current)
      return () => {
      };
    const l = {
      content: {
        createComponent: (u, p, b) => new rl(p, b, {
          addPortal: a
        })
      },
      tab: {
        createComponent: (u, p, b) => new il(p, b, {
          addPortal: a
        })
      },
      watermark: {
        createComponent: (u, p, b) => new ol(p, b, {
          addPortal: a
        })
      }
    }, o = r.tabComponents || {};
    r.defaultTabComponent && (o[xr] = r.defaultTabComponent);
    const s = new fd({
      parentElement: t.current,
      frameworkComponentFactory: l,
      frameworkComponents: r.components,
      frameworkTabComponents: o,
      watermarkFrameworkComponent: r.watermarkComponent,
      defaultTabComponent: r.defaultTabComponent ? xr : void 0,
      styles: r.hideBorders ? { separatorBorder: "transparent" } : void 0,
      showDndOverlay: r.showDndOverlay,
      createLeftHeaderActionsElement: Ft(r.leftHeaderActionsComponent, { addPortal: a }),
      createRightHeaderActionsElement: Ft(r.rightHeaderActionsComponent, { addPortal: a }),
      createPrefixHeaderActionsElement: Ft(r.prefixHeaderActionsComponent, { addPortal: a }),
      singleTabMode: r.singleTabMode,
      disableFloatingGroups: r.disableFloatingGroups,
      floatingGroupBounds: r.floatingGroupBounds
    }), { clientWidth: d, clientHeight: h } = t.current;
    return s.layout(d, h), r.onReady && r.onReady({ api: new yt(s) }), i.current = s, () => {
      s.dispose();
    };
  }, []), se(() => {
    if (!i.current)
      return () => {
      };
    const l = i.current.onDidDrop((o) => {
      r.onDidDrop && r.onDidDrop(o);
    });
    return () => {
      l.dispose();
    };
  }, [r.onDidDrop]), se(() => {
    i.current && i.current.updateOptions({
      frameworkComponents: r.components
    });
  }, [r.components]), se(() => {
    i.current && i.current.updateOptions({
      floatingGroupBounds: r.floatingGroupBounds
    });
  }, [r.floatingGroupBounds]), se(() => {
    i.current && i.current.updateOptions({
      watermarkFrameworkComponent: r.watermarkComponent
    });
  }, [r.watermarkComponent]), se(() => {
    i.current && i.current.updateOptions({
      showDndOverlay: r.showDndOverlay
    });
  }, [r.showDndOverlay]), se(() => {
    i.current && i.current.updateOptions({
      frameworkTabComponents: r.tabComponents
    });
  }, [r.tabComponents]), se(() => {
    i.current && i.current.updateOptions({
      disableFloatingGroups: r.disableFloatingGroups
    });
  }, [r.disableFloatingGroups]), se(() => {
    if (!i.current)
      return;
    const l = r.tabComponents || {};
    r.defaultTabComponent && (l[xr] = r.defaultTabComponent), i.current.updateOptions({
      defaultTabComponent: r.defaultTabComponent ? xr : void 0,
      frameworkTabComponents: l
    });
  }, [r.defaultTabComponent]), se(() => {
    i.current && i.current.updateOptions({
      createRightHeaderActionsElement: Ft(r.rightHeaderActionsComponent, { addPortal: a })
    });
  }, [r.rightHeaderActionsComponent]), se(() => {
    i.current && i.current.updateOptions({
      createLeftHeaderActionsElement: Ft(r.leftHeaderActionsComponent, { addPortal: a })
    });
  }, [r.leftHeaderActionsComponent]), se(() => {
    i.current && i.current.updateOptions({
      createPrefixHeaderActionsElement: Ft(r.prefixHeaderActionsComponent, { addPortal: a })
    });
  }, [r.prefixHeaderActionsComponent]), ne("div", { className: r.className, style: { height: "100%", width: "100%" }, ref: t }, n);
});
aa.displayName = "DockviewComponent";
globalThis && globalThis.__rest;
class al extends kd {
  constructor(e, t, i, n) {
    super(e, t), this.reactComponent = i, this.reactPortalStore = n;
  }
  getComponent() {
    var e;
    return new Pt(this.element, this.reactPortalStore, this.reactComponent, {
      params: ((e = this._params) === null || e === void 0 ? void 0 : e.params) || {},
      api: this.api,
      containerApi: new Bn(this._params.accessor)
    });
  }
}
const sl = Qe((r, e) => {
  const t = oe(null), i = oe(), [n, a] = ui();
  return xt(e, () => t.current, []), se(() => {
    const l = new pd({
      parentElement: t.current,
      orientation: r.orientation || ae.HORIZONTAL,
      frameworkComponents: r.components,
      frameworkWrapper: {
        createComponent: (d, h, u) => new al(d, h, u, {
          addPortal: a
        })
      },
      proportionalLayout: typeof r.proportionalLayout == "boolean" ? r.proportionalLayout : !0,
      styles: r.hideBorders ? { separatorBorder: "transparent" } : void 0
    }), { clientWidth: o, clientHeight: s } = t.current;
    return l.layout(o, s), r.onReady && r.onReady({ api: new Bn(l) }), i.current = l, () => {
      l.dispose();
    };
  }, []), se(() => {
    i.current && i.current.updateOptions({
      frameworkComponents: r.components
    });
  }, [r.components]), ne("div", { className: r.className, style: { height: "100%", width: "100%" }, ref: t }, n);
});
sl.displayName = "SplitviewComponent";
class dl extends Hn {
  constructor(e, t, i, n) {
    super(e, t), this.reactComponent = i, this.reactPortalStore = n;
  }
  getComponent() {
    var e;
    return new Pt(this.element, this.reactPortalStore, this.reactComponent, {
      params: ((e = this._params) === null || e === void 0 ? void 0 : e.params) || {},
      api: this.api,
      containerApi: new Un(this._params.accessor)
    });
  }
}
const sa = Qe((r, e) => {
  const t = oe(null), i = oe(), [n, a] = ui();
  return xt(e, () => t.current, []), se(() => {
    if (!t.current)
      return () => {
      };
    const l = new hd({
      parentElement: t.current,
      proportionalLayout: typeof r.proportionalLayout == "boolean" ? r.proportionalLayout : !0,
      orientation: r.orientation || ae.HORIZONTAL,
      frameworkComponents: r.components,
      frameworkComponentFactory: {
        createComponent: (d, h, u) => new dl(d, h, u, {
          addPortal: a
        })
      },
      styles: r.hideBorders ? { separatorBorder: "transparent" } : void 0
    }), { clientWidth: o, clientHeight: s } = t.current;
    return l.layout(o, s), r.onReady && r.onReady({ api: new Un(l) }), i.current = l, () => {
      l.dispose();
    };
  }, []), se(() => {
    i.current && i.current.updateOptions({
      frameworkComponents: r.components
    });
  }, [r.components]), ne("div", { className: r.className, style: { height: "100%", width: "100%" }, ref: t }, n);
});
sa.displayName = "GridviewComponent";
class ll {
  get element() {
    return this._element;
  }
  constructor(e, t, i) {
    this.id = e, this.component = t, this.reactPortalStore = i, this._element = document.createElement("div"), this._element.style.height = "100%", this._element.style.width = "100%";
  }
  init(e) {
    this.part = new Pt(this.element, this.reactPortalStore, this.component, {
      params: e.params,
      api: e.api,
      title: e.title,
      containerApi: e.containerApi
    });
  }
  toJSON() {
    return {
      id: this.id
    };
  }
  update(e) {
    var t;
    (t = this.part) === null || t === void 0 || t.update(e.params);
  }
  dispose() {
    var e;
    (e = this.part) === null || e === void 0 || e.dispose();
  }
}
const da = Qe((r, e) => {
  const t = oe(null), i = oe(), [n, a] = ui();
  return xt(e, () => t.current, []), se(() => {
    const l = (u, p, b) => new ll(u, b, {
      addPortal: a
    }), o = new bd({
      parentElement: t.current,
      frameworkComponents: r.components,
      components: {},
      headerComponents: {},
      disableDnd: r.disableDnd,
      headerframeworkComponents: r.headerComponents,
      frameworkWrapper: {
        header: {
          createComponent: l
        },
        body: {
          createComponent: l
        }
      },
      showDndOverlay: r.showDndOverlay
    }), s = new Jt(o), { clientWidth: d, clientHeight: h } = t.current;
    return o.layout(d, h), r.onReady && r.onReady({ api: s }), i.current = o, () => {
      o.dispose();
    };
  }, []), se(() => {
    i.current && i.current.updateOptions({
      frameworkComponents: r.components
    });
  }, [r.components]), se(() => {
    i.current && i.current.updateOptions({
      headerframeworkComponents: r.headerComponents
    });
  }, [r.headerComponents]), se(() => {
    if (!i.current)
      return () => {
      };
    const l = i.current, o = l.onDidDrop((s) => {
      r.onDidDrop && r.onDidDrop(Object.assign(Object.assign({}, s), { api: new Jt(l) }));
    });
    return () => {
      o.dispose();
    };
  }, [r.onDidDrop]), se(() => {
    i.current && i.current.updateOptions({
      showDndOverlay: r.showDndOverlay
    });
  }, [r.showDndOverlay]), ne("div", { className: r.className, style: { height: "100%", width: "100%" }, ref: t }, n);
});
da.displayName = "PaneviewComponent";
function ml(r, e, t) {
  return e in r ? Object.defineProperty(r, e, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : r[e] = t, r;
}
function Yo(r, e) {
  var t = Object.keys(r);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(r);
    e && (i = i.filter(function(n) {
      return Object.getOwnPropertyDescriptor(r, n).enumerable;
    })), t.push.apply(t, i);
  }
  return t;
}
function Qo(r) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Yo(Object(t), !0).forEach(function(i) {
      ml(r, i, t[i]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(t)) : Yo(Object(t)).forEach(function(i) {
      Object.defineProperty(r, i, Object.getOwnPropertyDescriptor(t, i));
    });
  }
  return r;
}
function ul(r, e) {
  if (r == null)
    return {};
  var t = {}, i = Object.keys(r), n, a;
  for (a = 0; a < i.length; a++)
    n = i[a], !(e.indexOf(n) >= 0) && (t[n] = r[n]);
  return t;
}
function cl(r, e) {
  if (r == null)
    return {};
  var t = ul(r, e), i, n;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(r);
    for (n = 0; n < a.length; n++)
      i = a[n], !(e.indexOf(i) >= 0) && Object.prototype.propertyIsEnumerable.call(r, i) && (t[i] = r[i]);
  }
  return t;
}
function _l(r, e) {
  return fl(r) || hl(r, e) || pl(r, e) || gl();
}
function fl(r) {
  if (Array.isArray(r))
    return r;
}
function hl(r, e) {
  if (!(typeof Symbol > "u" || !(Symbol.iterator in Object(r)))) {
    var t = [], i = !0, n = !1, a = void 0;
    try {
      for (var l = r[Symbol.iterator](), o; !(i = (o = l.next()).done) && (t.push(o.value), !(e && t.length === e)); i = !0)
        ;
    } catch (s) {
      n = !0, a = s;
    } finally {
      try {
        !i && l.return != null && l.return();
      } finally {
        if (n)
          throw a;
      }
    }
    return t;
  }
}
function pl(r, e) {
  if (r) {
    if (typeof r == "string")
      return $o(r, e);
    var t = Object.prototype.toString.call(r).slice(8, -1);
    if (t === "Object" && r.constructor && (t = r.constructor.name), t === "Map" || t === "Set")
      return Array.from(r);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return $o(r, e);
  }
}
function $o(r, e) {
  (e == null || e > r.length) && (e = r.length);
  for (var t = 0, i = new Array(e); t < e; t++)
    i[t] = r[t];
  return i;
}
function gl() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function bl(r, e, t) {
  return e in r ? Object.defineProperty(r, e, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : r[e] = t, r;
}
function en(r, e) {
  var t = Object.keys(r);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(r);
    e && (i = i.filter(function(n) {
      return Object.getOwnPropertyDescriptor(r, n).enumerable;
    })), t.push.apply(t, i);
  }
  return t;
}
function tn(r) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2 ? en(Object(t), !0).forEach(function(i) {
      bl(r, i, t[i]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(t)) : en(Object(t)).forEach(function(i) {
      Object.defineProperty(r, i, Object.getOwnPropertyDescriptor(t, i));
    });
  }
  return r;
}
function kl() {
  for (var r = arguments.length, e = new Array(r), t = 0; t < r; t++)
    e[t] = arguments[t];
  return function(i) {
    return e.reduceRight(function(n, a) {
      return a(n);
    }, i);
  };
}
function lr(r) {
  return function e() {
    for (var t = this, i = arguments.length, n = new Array(i), a = 0; a < i; a++)
      n[a] = arguments[a];
    return n.length >= r.length ? r.apply(this, n) : function() {
      for (var l = arguments.length, o = new Array(l), s = 0; s < l; s++)
        o[s] = arguments[s];
      return e.apply(t, [].concat(n, o));
    };
  };
}
function Zr(r) {
  return {}.toString.call(r).includes("Object");
}
function vl(r) {
  return !Object.keys(r).length;
}
function kr(r) {
  return typeof r == "function";
}
function Cl(r, e) {
  return Object.prototype.hasOwnProperty.call(r, e);
}
function yl(r, e) {
  return Zr(e) || It("changeType"), Object.keys(e).some(function(t) {
    return !Cl(r, t);
  }) && It("changeField"), e;
}
function Sl(r) {
  kr(r) || It("selectorType");
}
function wl(r) {
  kr(r) || Zr(r) || It("handlerType"), Zr(r) && Object.values(r).some(function(e) {
    return !kr(e);
  }) && It("handlersType");
}
function Il(r) {
  r || It("initialIsRequired"), Zr(r) || It("initialType"), vl(r) && It("initialContent");
}
function jl(r, e) {
  throw new Error(r[e] || r.default);
}
var Al = {
  initialIsRequired: "initial state is required",
  initialType: "initial state should be an object",
  initialContent: "initial state shouldn't be an empty object",
  handlerType: "handler should be an object or a function",
  handlersType: "all handlers should be a functions",
  selectorType: "selector should be a function",
  changeType: "provided value of changes should be an object",
  changeField: 'it seams you want to change a field in the state which is not specified in the "initial" state',
  default: "an unknown error accured in `state-local` package"
}, It = lr(jl)(Al), zr = {
  changes: yl,
  selector: Sl,
  handler: wl,
  initial: Il
};
function El(r) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  zr.initial(r), zr.handler(e);
  var t = {
    current: r
  }, i = lr(Ll)(t, e), n = lr(zl)(t), a = lr(zr.changes)(r), l = lr(xl)(t);
  function o() {
    var d = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function(h) {
      return h;
    };
    return zr.selector(d), d(t.current);
  }
  function s(d) {
    kl(i, n, a, l)(d);
  }
  return [o, s];
}
function xl(r, e) {
  return kr(e) ? e(r.current) : e;
}
function zl(r, e) {
  return r.current = tn(tn({}, r.current), e), e;
}
function Ll(r, e, t) {
  return kr(e) ? e(r.current) : Object.keys(t).forEach(function(i) {
    var n;
    return (n = e[i]) === null || n === void 0 ? void 0 : n.call(e, r.current[i]);
  }), t;
}
var Ol = {
  create: El
}, Dl = {
  paths: {
    vs: "https://cdn.jsdelivr.net/npm/monaco-editor@0.43.0/min/vs"
  }
};
function Tl(r) {
  return function e() {
    for (var t = this, i = arguments.length, n = new Array(i), a = 0; a < i; a++)
      n[a] = arguments[a];
    return n.length >= r.length ? r.apply(this, n) : function() {
      for (var l = arguments.length, o = new Array(l), s = 0; s < l; s++)
        o[s] = arguments[s];
      return e.apply(t, [].concat(n, o));
    };
  };
}
function Nl(r) {
  return {}.toString.call(r).includes("Object");
}
function Rl(r) {
  return r || rn("configIsRequired"), Nl(r) || rn("configType"), r.urls ? (Pl(), {
    paths: {
      vs: r.urls.monacoBase
    }
  }) : r;
}
function Pl() {
  console.warn(la.deprecation);
}
function Ml(r, e) {
  throw new Error(r[e] || r.default);
}
var la = {
  configIsRequired: "the configuration object is required",
  configType: "the configuration object should be an object",
  default: "an unknown error accured in `@monaco-editor/loader` package",
  deprecation: `Deprecation warning!
    You are using deprecated way of configuration.

    Instead of using
      monaco.config({ urls: { monacoBase: '...' } })
    use
      monaco.config({ paths: { vs: '...' } })

    For more please check the link https://github.com/suren-atoyan/monaco-loader#config
  `
}, rn = Tl(Ml)(la), Fl = {
  config: Rl
}, Bl = function() {
  for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
    t[i] = arguments[i];
  return function(n) {
    return t.reduceRight(function(a, l) {
      return l(a);
    }, n);
  };
};
function ma(r, e) {
  return Object.keys(e).forEach(function(t) {
    e[t] instanceof Object && r[t] && Object.assign(e[t], ma(r[t], e[t]));
  }), Qo(Qo({}, r), e);
}
var Ul = {
  type: "cancelation",
  msg: "operation is manually canceled"
};
function xi(r) {
  var e = !1, t = new Promise(function(i, n) {
    r.then(function(a) {
      return e ? n(Ul) : i(a);
    }), r.catch(n);
  });
  return t.cancel = function() {
    return e = !0;
  }, t;
}
var Wl = Ol.create({
  config: Dl,
  isInitialized: !1,
  resolve: null,
  reject: null,
  monaco: null
}), ua = _l(Wl, 2), Cr = ua[0], ci = ua[1];
function ql(r) {
  var e = Fl.config(r), t = e.monaco, i = cl(e, ["monaco"]);
  ci(function(n) {
    return {
      config: ma(n.config, i),
      monaco: t
    };
  });
}
function Gl() {
  var r = Cr(function(e) {
    var t = e.monaco, i = e.isInitialized, n = e.resolve;
    return {
      monaco: t,
      isInitialized: i,
      resolve: n
    };
  });
  if (!r.isInitialized) {
    if (ci({
      isInitialized: !0
    }), r.monaco)
      return r.resolve(r.monaco), xi(zi);
    if (window.monaco && window.monaco.editor)
      return ca(window.monaco), r.resolve(window.monaco), xi(zi);
    Bl(Hl, Kl)(Xl);
  }
  return xi(zi);
}
function Hl(r) {
  return document.body.appendChild(r);
}
function Vl(r) {
  var e = document.createElement("script");
  return r && (e.src = r), e;
}
function Kl(r) {
  var e = Cr(function(i) {
    var n = i.config, a = i.reject;
    return {
      config: n,
      reject: a
    };
  }), t = Vl("".concat(e.config.paths.vs, "/loader.js"));
  return t.onload = function() {
    return r();
  }, t.onerror = e.reject, t;
}
function Xl() {
  var r = Cr(function(t) {
    var i = t.config, n = t.resolve, a = t.reject;
    return {
      config: i,
      resolve: n,
      reject: a
    };
  }), e = window.require;
  e.config(r.config), e(["vs/editor/editor.main"], function(t) {
    ca(t), r.resolve(t);
  }, function(t) {
    r.reject(t);
  });
}
function ca(r) {
  Cr().monaco || ci({
    monaco: r
  });
}
function Zl() {
  return Cr(function(r) {
    var e = r.monaco;
    return e;
  });
}
var zi = new Promise(function(r, e) {
  return ci({
    resolve: r,
    reject: e
  });
}), Jr = {
  config: ql,
  init: Gl,
  __getMonacoInstance: Zl
}, Jl = { wrapper: { display: "flex", position: "relative", textAlign: "initial" }, fullWidth: { width: "100%" }, hide: { display: "none" } }, Li = Jl, Yl = { container: { display: "flex", height: "100%", width: "100%", justifyContent: "center", alignItems: "center" } }, Ql = Yl;
function $l({ children: r }) {
  return ce.createElement("div", { style: Ql.container }, r);
}
var em = $l, tm = em;
function rm({ width: r, height: e, isEditorReady: t, loading: i, _ref: n, className: a, wrapperProps: l }) {
  return ce.createElement("section", { style: { ...Li.wrapper, width: r, height: e }, ...l }, !t && ce.createElement(tm, null, i), ce.createElement("div", { ref: n, style: { ...Li.fullWidth, ...!t && Li.hide }, className: a }));
}
var im = rm, _a = li(im);
function om(r) {
  se(r, []);
}
var po = om;
function nm(r, e, t = !0) {
  let i = oe(!0);
  se(i.current || !t ? () => {
    i.current = !1;
  } : r, e);
}
var Be = nm;
function cr() {
}
function qt(r, e, t, i) {
  return am(r, i) || sm(r, e, t, i);
}
function am(r, e) {
  return r.editor.getModel(fa(r, e));
}
function sm(r, e, t, i) {
  return r.editor.createModel(e, t, i ? fa(r, i) : void 0);
}
function fa(r, e) {
  return r.Uri.parse(e);
}
function dm({ original: r, modified: e, language: t, originalLanguage: i, modifiedLanguage: n, originalModelPath: a, modifiedModelPath: l, keepCurrentOriginalModel: o = !1, keepCurrentModifiedModel: s = !1, theme: d = "light", loading: h = "Loading...", options: u = {}, height: p = "100%", width: b = "100%", className: k, wrapperProps: g = {}, beforeMount: m = cr, onMount: c = cr }) {
  let [_, f] = he(!1), [v, y] = he(!0), j = oe(null), A = oe(null), C = oe(null), I = oe(c), z = oe(m), P = oe(!1);
  po(() => {
    let F = Jr.init();
    return F.then((U) => (A.current = U) && y(!1)).catch((U) => (U == null ? void 0 : U.type) !== "cancelation" && console.error("Monaco initialization: error:", U)), () => j.current ? B() : F.cancel();
  }), Be(() => {
    if (j.current && A.current) {
      let F = j.current.getOriginalEditor(), U = qt(A.current, r || "", i || t || "text", a || "");
      U !== F.getModel() && F.setModel(U);
    }
  }, [a], _), Be(() => {
    if (j.current && A.current) {
      let F = j.current.getModifiedEditor(), U = qt(A.current, e || "", n || t || "text", l || "");
      U !== F.getModel() && F.setModel(U);
    }
  }, [l], _), Be(() => {
    let F = j.current.getModifiedEditor();
    F.getOption(A.current.editor.EditorOption.readOnly) ? F.setValue(e || "") : e !== F.getValue() && (F.executeEdits("", [{ range: F.getModel().getFullModelRange(), text: e || "", forceMoveMarkers: !0 }]), F.pushUndoStop());
  }, [e], _), Be(() => {
    var F, U;
    (U = (F = j.current) == null ? void 0 : F.getModel()) == null || U.original.setValue(r || "");
  }, [r], _), Be(() => {
    let { original: F, modified: U } = j.current.getModel();
    A.current.editor.setModelLanguage(F, i || t || "text"), A.current.editor.setModelLanguage(U, n || t || "text");
  }, [t, i, n], _), Be(() => {
    var F;
    (F = A.current) == null || F.editor.setTheme(d);
  }, [d], _), Be(() => {
    var F;
    (F = j.current) == null || F.updateOptions(u);
  }, [u], _);
  let L = me(() => {
    var H;
    if (!A.current)
      return;
    z.current(A.current);
    let F = qt(A.current, r || "", i || t || "text", a || ""), U = qt(A.current, e || "", n || t || "text", l || "");
    (H = j.current) == null || H.setModel({ original: F, modified: U });
  }, [t, e, n, r, i, a, l]), N = me(() => {
    var F;
    !P.current && C.current && (j.current = A.current.editor.createDiffEditor(C.current, { automaticLayout: !0, ...u }), L(), (F = A.current) == null || F.editor.setTheme(d), f(!0), P.current = !0);
  }, [u, d, L]);
  se(() => {
    _ && I.current(j.current, A.current);
  }, [_]), se(() => {
    !v && !_ && N();
  }, [v, _, N]);
  function B() {
    var U, H, x, O;
    let F = (U = j.current) == null ? void 0 : U.getModel();
    o || ((H = F == null ? void 0 : F.original) == null || H.dispose()), s || ((x = F == null ? void 0 : F.modified) == null || x.dispose()), (O = j.current) == null || O.dispose();
  }
  return ce.createElement(_a, { width: b, height: p, isEditorReady: _, loading: h, _ref: C, className: k, wrapperProps: g });
}
var lm = dm;
li(lm);
function mm() {
  let [r, e] = he(Jr.__getMonacoInstance());
  return po(() => {
    let t;
    return r || (t = Jr.init(), t.then((i) => {
      e(i);
    })), () => t == null ? void 0 : t.cancel();
  }), r;
}
var um = mm;
function cm(r) {
  let e = oe();
  return se(() => {
    e.current = r;
  }, [r]), e.current;
}
var _m = cm, Lr = /* @__PURE__ */ new Map();
function fm({ defaultValue: r, defaultLanguage: e, defaultPath: t, value: i, language: n, path: a, theme: l = "light", line: o, loading: s = "Loading...", options: d = {}, overrideServices: h = {}, saveViewState: u = !0, keepCurrentModel: p = !1, width: b = "100%", height: k = "100%", className: g, wrapperProps: m = {}, beforeMount: c = cr, onMount: _ = cr, onChange: f, onValidate: v = cr }) {
  let [y, j] = he(!1), [A, C] = he(!0), I = oe(null), z = oe(null), P = oe(null), L = oe(_), N = oe(c), B = oe(), F = oe(i), U = _m(a), H = oe(!1), x = oe(!1);
  po(() => {
    let R = Jr.init();
    return R.then((G) => (I.current = G) && C(!1)).catch((G) => (G == null ? void 0 : G.type) !== "cancelation" && console.error("Monaco initialization: error:", G)), () => z.current ? T() : R.cancel();
  }), Be(() => {
    var G, V, ee, Y;
    let R = qt(I.current, r || i || "", e || n || "", a || t || "");
    R !== ((G = z.current) == null ? void 0 : G.getModel()) && (u && Lr.set(U, (V = z.current) == null ? void 0 : V.saveViewState()), (ee = z.current) == null || ee.setModel(R), u && ((Y = z.current) == null || Y.restoreViewState(Lr.get(a))));
  }, [a], y), Be(() => {
    var R;
    (R = z.current) == null || R.updateOptions(d);
  }, [d], y), Be(() => {
    !z.current || i === void 0 || (z.current.getOption(I.current.editor.EditorOption.readOnly) ? z.current.setValue(i) : i !== z.current.getValue() && (x.current = !0, z.current.executeEdits("", [{ range: z.current.getModel().getFullModelRange(), text: i, forceMoveMarkers: !0 }]), z.current.pushUndoStop(), x.current = !1));
  }, [i], y), Be(() => {
    var G, V;
    let R = (G = z.current) == null ? void 0 : G.getModel();
    R && n && ((V = I.current) == null || V.editor.setModelLanguage(R, n));
  }, [n], y), Be(() => {
    var R;
    o !== void 0 && ((R = z.current) == null || R.revealLine(o));
  }, [o], y), Be(() => {
    var R;
    (R = I.current) == null || R.editor.setTheme(l);
  }, [l], y);
  let O = me(() => {
    var R;
    if (!(!P.current || !I.current) && !H.current) {
      N.current(I.current);
      let G = a || t, V = qt(I.current, i || r || "", e || n || "", G || "");
      z.current = (R = I.current) == null ? void 0 : R.editor.create(P.current, { model: V, automaticLayout: !0, ...d }, h), u && z.current.restoreViewState(Lr.get(G)), I.current.editor.setTheme(l), o !== void 0 && z.current.revealLine(o), j(!0), H.current = !0;
    }
  }, [r, e, t, i, n, a, d, h, u, l, o]);
  se(() => {
    y && L.current(z.current, I.current);
  }, [y]), se(() => {
    !A && !y && O();
  }, [A, y, O]), F.current = i, se(() => {
    var R, G;
    y && f && ((R = B.current) == null || R.dispose(), B.current = (G = z.current) == null ? void 0 : G.onDidChangeModelContent((V) => {
      x.current || f(z.current.getValue(), V);
    }));
  }, [y, f]), se(() => {
    if (y) {
      let R = I.current.editor.onDidChangeMarkers((G) => {
        var ee;
        let V = (ee = z.current.getModel()) == null ? void 0 : ee.uri;
        if (V && G.find((Y) => Y.path === V.path)) {
          let Y = I.current.editor.getModelMarkers({ resource: V });
          v == null || v(Y);
        }
      });
      return () => {
        R == null || R.dispose();
      };
    }
    return () => {
    };
  }, [y, v]);
  function T() {
    var R, G;
    (R = B.current) == null || R.dispose(), p ? u && Lr.set(a, z.current.saveViewState()) : (G = z.current.getModel()) == null || G.dispose(), z.current.dispose();
  }
  return ce.createElement(_a, { width: b, height: k, isEditorReady: y, loading: s, _ref: P, className: g, wrapperProps: m });
}
var hm = fm, pm = li(hm), gm = pm, ie = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function bm(r) {
  return r && r.__esModule && Object.prototype.hasOwnProperty.call(r, "default") ? r.default : r;
}
var ha = {}, _i = {}, fi = {}, hi = {};
Object.defineProperty(hi, "__esModule", { value: !0 });
hi.DummySourceCache = void 0;
var km = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getFile = function(e) {
      return Promise.resolve(void 0);
    }, r.prototype.isFileAvailable = function(e) {
      return Promise.resolve(!1);
    }, r.prototype.storeFile = function(e, t) {
      return Promise.resolve(void 0);
    }, r.prototype.clear = function() {
      return Promise.resolve(void 0);
    }, r;
  }()
);
hi.DummySourceCache = km;
var yr = {}, Oi = ie && ie.__awaiter || function(r, e, t, i) {
  function n(a) {
    return a instanceof t ? a : new t(function(l) {
      l(a);
    });
  }
  return new (t || (t = Promise))(function(a, l) {
    function o(h) {
      try {
        d(i.next(h));
      } catch (u) {
        l(u);
      }
    }
    function s(h) {
      try {
        d(i.throw(h));
      } catch (u) {
        l(u);
      }
    }
    function d(h) {
      h.done ? a(h.value) : n(h.value).then(o, s);
    }
    d((i = i.apply(r, e || [])).next());
  });
}, Di = ie && ie.__generator || function(r, e) {
  var t = { label: 0, sent: function() {
    if (a[0] & 1)
      throw a[1];
    return a[1];
  }, trys: [], ops: [] }, i, n, a, l;
  return l = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol == "function" && (l[Symbol.iterator] = function() {
    return this;
  }), l;
  function o(d) {
    return function(h) {
      return s([d, h]);
    };
  }
  function s(d) {
    if (i)
      throw new TypeError("Generator is already executing.");
    for (; l && (l = 0, d[0] && (t = 0)), t; )
      try {
        if (i = 1, n && (a = d[0] & 2 ? n.return : d[0] ? n.throw || ((a = n.return) && a.call(n), 0) : n.next) && !(a = a.call(n, d[1])).done)
          return a;
        switch (n = 0, a && (d = [d[0] & 2, a.value]), d[0]) {
          case 0:
          case 1:
            a = d;
            break;
          case 4:
            return t.label++, { value: d[1], done: !1 };
          case 5:
            t.label++, n = d[1], d = [0];
            continue;
          case 7:
            d = t.ops.pop(), t.trys.pop();
            continue;
          default:
            if (a = t.trys, !(a = a.length > 0 && a[a.length - 1]) && (d[0] === 6 || d[0] === 2)) {
              t = 0;
              continue;
            }
            if (d[0] === 3 && (!a || d[1] > a[0] && d[1] < a[3])) {
              t.label = d[1];
              break;
            }
            if (d[0] === 6 && t.label < a[1]) {
              t.label = a[1], a = d;
              break;
            }
            if (a && t.label < a[2]) {
              t.label = a[2], t.ops.push(d);
              break;
            }
            a[2] && t.ops.pop(), t.trys.pop();
            continue;
        }
        d = e.call(r, t);
      } catch (h) {
        d = [6, h], n = 0;
      } finally {
        i = a = 0;
      }
    if (d[0] & 5)
      throw d[1];
    return { value: d[0] ? d[1] : void 0, done: !0 };
  }
};
Object.defineProperty(yr, "__esModule", { value: !0 });
yr.UnpkgSourceResolver = void 0;
var vm = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.resolvePackageJson = function(e, t, i) {
      return Oi(this, void 0, void 0, function() {
        return Di(this, function(n) {
          switch (n.label) {
            case 0:
              return [4, this.resolveFile("https://unpkg.com/".concat(e).concat(t ? "@".concat(t) : "").concat(i ? "/".concat(i) : "", "/package.json"))];
            case 1:
              return [2, n.sent()];
          }
        });
      });
    }, r.prototype.resolveSourceFile = function(e, t, i) {
      return Oi(this, void 0, void 0, function() {
        return Di(this, function(n) {
          switch (n.label) {
            case 0:
              return [4, this.resolveFile("https://unpkg.com/".concat(e).concat(t ? "@".concat(t) : "", "/").concat(i))];
            case 1:
              return [2, n.sent()];
          }
        });
      });
    }, r.prototype.resolveFile = function(e) {
      return Oi(this, void 0, void 0, function() {
        var t;
        return Di(this, function(i) {
          switch (i.label) {
            case 0:
              return [4, fetch(e, { method: "GET" })];
            case 1:
              return t = i.sent(), t.ok ? [4, t.text()] : [3, 3];
            case 2:
              return [2, i.sent()];
            case 3:
              if (t.status === 404)
                return [2, ""];
              throw Error("Error other than 404 while fetching from Unpkg at ".concat(e));
            case 4:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, r;
  }()
);
yr.UnpkgSourceResolver = vm;
var pi = {}, gi = {}, Cm = {}, bi = {};
bi.byteLength = wm;
bi.toByteArray = jm;
bi.fromByteArray = xm;
var it = [], Ve = [], ym = typeof Uint8Array < "u" ? Uint8Array : Array, Ti = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var Bt = 0, Sm = Ti.length; Bt < Sm; ++Bt)
  it[Bt] = Ti[Bt], Ve[Ti.charCodeAt(Bt)] = Bt;
Ve["-".charCodeAt(0)] = 62;
Ve["_".charCodeAt(0)] = 63;
function pa(r) {
  var e = r.length;
  if (e % 4 > 0)
    throw new Error("Invalid string. Length must be a multiple of 4");
  var t = r.indexOf("=");
  t === -1 && (t = e);
  var i = t === e ? 0 : 4 - t % 4;
  return [t, i];
}
function wm(r) {
  var e = pa(r), t = e[0], i = e[1];
  return (t + i) * 3 / 4 - i;
}
function Im(r, e, t) {
  return (e + t) * 3 / 4 - t;
}
function jm(r) {
  var e, t = pa(r), i = t[0], n = t[1], a = new ym(Im(r, i, n)), l = 0, o = n > 0 ? i - 4 : i, s;
  for (s = 0; s < o; s += 4)
    e = Ve[r.charCodeAt(s)] << 18 | Ve[r.charCodeAt(s + 1)] << 12 | Ve[r.charCodeAt(s + 2)] << 6 | Ve[r.charCodeAt(s + 3)], a[l++] = e >> 16 & 255, a[l++] = e >> 8 & 255, a[l++] = e & 255;
  return n === 2 && (e = Ve[r.charCodeAt(s)] << 2 | Ve[r.charCodeAt(s + 1)] >> 4, a[l++] = e & 255), n === 1 && (e = Ve[r.charCodeAt(s)] << 10 | Ve[r.charCodeAt(s + 1)] << 4 | Ve[r.charCodeAt(s + 2)] >> 2, a[l++] = e >> 8 & 255, a[l++] = e & 255), a;
}
function Am(r) {
  return it[r >> 18 & 63] + it[r >> 12 & 63] + it[r >> 6 & 63] + it[r & 63];
}
function Em(r, e, t) {
  for (var i, n = [], a = e; a < t; a += 3)
    i = (r[a] << 16 & 16711680) + (r[a + 1] << 8 & 65280) + (r[a + 2] & 255), n.push(Am(i));
  return n.join("");
}
function xm(r) {
  for (var e, t = r.length, i = t % 3, n = [], a = 16383, l = 0, o = t - i; l < o; l += a)
    n.push(Em(r, l, l + a > o ? o : l + a));
  return i === 1 ? (e = r[t - 1], n.push(
    it[e >> 2] + it[e << 4 & 63] + "=="
  )) : i === 2 && (e = (r[t - 2] << 8) + r[t - 1], n.push(
    it[e >> 10] + it[e >> 4 & 63] + it[e << 2 & 63] + "="
  )), n.join("");
}
var go = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
go.read = function(r, e, t, i, n) {
  var a, l, o = n * 8 - i - 1, s = (1 << o) - 1, d = s >> 1, h = -7, u = t ? n - 1 : 0, p = t ? -1 : 1, b = r[e + u];
  for (u += p, a = b & (1 << -h) - 1, b >>= -h, h += o; h > 0; a = a * 256 + r[e + u], u += p, h -= 8)
    ;
  for (l = a & (1 << -h) - 1, a >>= -h, h += i; h > 0; l = l * 256 + r[e + u], u += p, h -= 8)
    ;
  if (a === 0)
    a = 1 - d;
  else {
    if (a === s)
      return l ? NaN : (b ? -1 : 1) * (1 / 0);
    l = l + Math.pow(2, i), a = a - d;
  }
  return (b ? -1 : 1) * l * Math.pow(2, a - i);
};
go.write = function(r, e, t, i, n, a) {
  var l, o, s, d = a * 8 - n - 1, h = (1 << d) - 1, u = h >> 1, p = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, b = i ? 0 : a - 1, k = i ? 1 : -1, g = e < 0 || e === 0 && 1 / e < 0 ? 1 : 0;
  for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (o = isNaN(e) ? 1 : 0, l = h) : (l = Math.floor(Math.log(e) / Math.LN2), e * (s = Math.pow(2, -l)) < 1 && (l--, s *= 2), l + u >= 1 ? e += p / s : e += p * Math.pow(2, 1 - u), e * s >= 2 && (l++, s /= 2), l + u >= h ? (o = 0, l = h) : l + u >= 1 ? (o = (e * s - 1) * Math.pow(2, n), l = l + u) : (o = e * Math.pow(2, u - 1) * Math.pow(2, n), l = 0)); n >= 8; r[t + b] = o & 255, b += k, o /= 256, n -= 8)
    ;
  for (l = l << n | o, d += n; d > 0; r[t + b] = l & 255, b += k, l /= 256, d -= 8)
    ;
  r[t + b - k] |= g * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(r) {
  var e = bi, t = go, i = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  r.Buffer = o, r.SlowBuffer = _, r.INSPECT_MAX_BYTES = 50;
  var n = 2147483647;
  r.kMaxLength = n, o.TYPED_ARRAY_SUPPORT = a(), !o.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function a() {
    try {
      var D = new Uint8Array(1), S = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(S, Uint8Array.prototype), Object.setPrototypeOf(D, S), D.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(o.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (o.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(o.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (o.isBuffer(this))
        return this.byteOffset;
    }
  });
  function l(D) {
    if (D > n)
      throw new RangeError('The value "' + D + '" is invalid for option "size"');
    var S = new Uint8Array(D);
    return Object.setPrototypeOf(S, o.prototype), S;
  }
  function o(D, S, w) {
    if (typeof D == "number") {
      if (typeof S == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return u(D);
    }
    return s(D, S, w);
  }
  o.poolSize = 8192;
  function s(D, S, w) {
    if (typeof D == "string")
      return p(D, S);
    if (ArrayBuffer.isView(D))
      return k(D);
    if (D == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof D
      );
    if (ue(D, ArrayBuffer) || D && ue(D.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (ue(D, SharedArrayBuffer) || D && ue(D.buffer, SharedArrayBuffer)))
      return g(D, S, w);
    if (typeof D == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    var M = D.valueOf && D.valueOf();
    if (M != null && M !== D)
      return o.from(M, S, w);
    var q = m(D);
    if (q)
      return q;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof D[Symbol.toPrimitive] == "function")
      return o.from(
        D[Symbol.toPrimitive]("string"),
        S,
        w
      );
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof D
    );
  }
  o.from = function(D, S, w) {
    return s(D, S, w);
  }, Object.setPrototypeOf(o.prototype, Uint8Array.prototype), Object.setPrototypeOf(o, Uint8Array);
  function d(D) {
    if (typeof D != "number")
      throw new TypeError('"size" argument must be of type number');
    if (D < 0)
      throw new RangeError('The value "' + D + '" is invalid for option "size"');
  }
  function h(D, S, w) {
    return d(D), D <= 0 ? l(D) : S !== void 0 ? typeof w == "string" ? l(D).fill(S, w) : l(D).fill(S) : l(D);
  }
  o.alloc = function(D, S, w) {
    return h(D, S, w);
  };
  function u(D) {
    return d(D), l(D < 0 ? 0 : c(D) | 0);
  }
  o.allocUnsafe = function(D) {
    return u(D);
  }, o.allocUnsafeSlow = function(D) {
    return u(D);
  };
  function p(D, S) {
    if ((typeof S != "string" || S === "") && (S = "utf8"), !o.isEncoding(S))
      throw new TypeError("Unknown encoding: " + S);
    var w = f(D, S) | 0, M = l(w), q = M.write(D, S);
    return q !== w && (M = M.slice(0, q)), M;
  }
  function b(D) {
    for (var S = D.length < 0 ? 0 : c(D.length) | 0, w = l(S), M = 0; M < S; M += 1)
      w[M] = D[M] & 255;
    return w;
  }
  function k(D) {
    if (ue(D, Uint8Array)) {
      var S = new Uint8Array(D);
      return g(S.buffer, S.byteOffset, S.byteLength);
    }
    return b(D);
  }
  function g(D, S, w) {
    if (S < 0 || D.byteLength < S)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (D.byteLength < S + (w || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    var M;
    return S === void 0 && w === void 0 ? M = new Uint8Array(D) : w === void 0 ? M = new Uint8Array(D, S) : M = new Uint8Array(D, S, w), Object.setPrototypeOf(M, o.prototype), M;
  }
  function m(D) {
    if (o.isBuffer(D)) {
      var S = c(D.length) | 0, w = l(S);
      return w.length === 0 || D.copy(w, 0, 0, S), w;
    }
    if (D.length !== void 0)
      return typeof D.length != "number" || je(D.length) ? l(0) : b(D);
    if (D.type === "Buffer" && Array.isArray(D.data))
      return b(D.data);
  }
  function c(D) {
    if (D >= n)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + n.toString(16) + " bytes");
    return D | 0;
  }
  function _(D) {
    return +D != D && (D = 0), o.alloc(+D);
  }
  o.isBuffer = function(S) {
    return S != null && S._isBuffer === !0 && S !== o.prototype;
  }, o.compare = function(S, w) {
    if (ue(S, Uint8Array) && (S = o.from(S, S.offset, S.byteLength)), ue(w, Uint8Array) && (w = o.from(w, w.offset, w.byteLength)), !o.isBuffer(S) || !o.isBuffer(w))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (S === w)
      return 0;
    for (var M = S.length, q = w.length, Z = 0, $ = Math.min(M, q); Z < $; ++Z)
      if (S[Z] !== w[Z]) {
        M = S[Z], q = w[Z];
        break;
      }
    return M < q ? -1 : q < M ? 1 : 0;
  }, o.isEncoding = function(S) {
    switch (String(S).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, o.concat = function(S, w) {
    if (!Array.isArray(S))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (S.length === 0)
      return o.alloc(0);
    var M;
    if (w === void 0)
      for (w = 0, M = 0; M < S.length; ++M)
        w += S[M].length;
    var q = o.allocUnsafe(w), Z = 0;
    for (M = 0; M < S.length; ++M) {
      var $ = S[M];
      if (ue($, Uint8Array))
        Z + $.length > q.length ? o.from($).copy(q, Z) : Uint8Array.prototype.set.call(
          q,
          $,
          Z
        );
      else if (o.isBuffer($))
        $.copy(q, Z);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      Z += $.length;
    }
    return q;
  };
  function f(D, S) {
    if (o.isBuffer(D))
      return D.length;
    if (ArrayBuffer.isView(D) || ue(D, ArrayBuffer))
      return D.byteLength;
    if (typeof D != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof D
      );
    var w = D.length, M = arguments.length > 2 && arguments[2] === !0;
    if (!M && w === 0)
      return 0;
    for (var q = !1; ; )
      switch (S) {
        case "ascii":
        case "latin1":
        case "binary":
          return w;
        case "utf8":
        case "utf-8":
          return W(D).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return w * 2;
        case "hex":
          return w >>> 1;
        case "base64":
          return le(D).length;
        default:
          if (q)
            return M ? -1 : W(D).length;
          S = ("" + S).toLowerCase(), q = !0;
      }
  }
  o.byteLength = f;
  function v(D, S, w) {
    var M = !1;
    if ((S === void 0 || S < 0) && (S = 0), S > this.length || ((w === void 0 || w > this.length) && (w = this.length), w <= 0) || (w >>>= 0, S >>>= 0, w <= S))
      return "";
    for (D || (D = "utf8"); ; )
      switch (D) {
        case "hex":
          return O(this, S, w);
        case "utf8":
        case "utf-8":
          return B(this, S, w);
        case "ascii":
          return H(this, S, w);
        case "latin1":
        case "binary":
          return x(this, S, w);
        case "base64":
          return N(this, S, w);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return T(this, S, w);
        default:
          if (M)
            throw new TypeError("Unknown encoding: " + D);
          D = (D + "").toLowerCase(), M = !0;
      }
  }
  o.prototype._isBuffer = !0;
  function y(D, S, w) {
    var M = D[S];
    D[S] = D[w], D[w] = M;
  }
  o.prototype.swap16 = function() {
    var S = this.length;
    if (S % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (var w = 0; w < S; w += 2)
      y(this, w, w + 1);
    return this;
  }, o.prototype.swap32 = function() {
    var S = this.length;
    if (S % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (var w = 0; w < S; w += 4)
      y(this, w, w + 3), y(this, w + 1, w + 2);
    return this;
  }, o.prototype.swap64 = function() {
    var S = this.length;
    if (S % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (var w = 0; w < S; w += 8)
      y(this, w, w + 7), y(this, w + 1, w + 6), y(this, w + 2, w + 5), y(this, w + 3, w + 4);
    return this;
  }, o.prototype.toString = function() {
    var S = this.length;
    return S === 0 ? "" : arguments.length === 0 ? B(this, 0, S) : v.apply(this, arguments);
  }, o.prototype.toLocaleString = o.prototype.toString, o.prototype.equals = function(S) {
    if (!o.isBuffer(S))
      throw new TypeError("Argument must be a Buffer");
    return this === S ? !0 : o.compare(this, S) === 0;
  }, o.prototype.inspect = function() {
    var S = "", w = r.INSPECT_MAX_BYTES;
    return S = this.toString("hex", 0, w).replace(/(.{2})/g, "$1 ").trim(), this.length > w && (S += " ... "), "<Buffer " + S + ">";
  }, i && (o.prototype[i] = o.prototype.inspect), o.prototype.compare = function(S, w, M, q, Z) {
    if (ue(S, Uint8Array) && (S = o.from(S, S.offset, S.byteLength)), !o.isBuffer(S))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof S
      );
    if (w === void 0 && (w = 0), M === void 0 && (M = S ? S.length : 0), q === void 0 && (q = 0), Z === void 0 && (Z = this.length), w < 0 || M > S.length || q < 0 || Z > this.length)
      throw new RangeError("out of range index");
    if (q >= Z && w >= M)
      return 0;
    if (q >= Z)
      return -1;
    if (w >= M)
      return 1;
    if (w >>>= 0, M >>>= 0, q >>>= 0, Z >>>= 0, this === S)
      return 0;
    for (var $ = Z - q, de = M - w, fe = Math.min($, de), _e = this.slice(q, Z), Ie = S.slice(w, M), be = 0; be < fe; ++be)
      if (_e[be] !== Ie[be]) {
        $ = _e[be], de = Ie[be];
        break;
      }
    return $ < de ? -1 : de < $ ? 1 : 0;
  };
  function j(D, S, w, M, q) {
    if (D.length === 0)
      return -1;
    if (typeof w == "string" ? (M = w, w = 0) : w > 2147483647 ? w = 2147483647 : w < -2147483648 && (w = -2147483648), w = +w, je(w) && (w = q ? 0 : D.length - 1), w < 0 && (w = D.length + w), w >= D.length) {
      if (q)
        return -1;
      w = D.length - 1;
    } else if (w < 0)
      if (q)
        w = 0;
      else
        return -1;
    if (typeof S == "string" && (S = o.from(S, M)), o.isBuffer(S))
      return S.length === 0 ? -1 : A(D, S, w, M, q);
    if (typeof S == "number")
      return S = S & 255, typeof Uint8Array.prototype.indexOf == "function" ? q ? Uint8Array.prototype.indexOf.call(D, S, w) : Uint8Array.prototype.lastIndexOf.call(D, S, w) : A(D, [S], w, M, q);
    throw new TypeError("val must be string, number or Buffer");
  }
  function A(D, S, w, M, q) {
    var Z = 1, $ = D.length, de = S.length;
    if (M !== void 0 && (M = String(M).toLowerCase(), M === "ucs2" || M === "ucs-2" || M === "utf16le" || M === "utf-16le")) {
      if (D.length < 2 || S.length < 2)
        return -1;
      Z = 2, $ /= 2, de /= 2, w /= 2;
    }
    function fe(Mt, Ze) {
      return Z === 1 ? Mt[Ze] : Mt.readUInt16BE(Ze * Z);
    }
    var _e;
    if (q) {
      var Ie = -1;
      for (_e = w; _e < $; _e++)
        if (fe(D, _e) === fe(S, Ie === -1 ? 0 : _e - Ie)) {
          if (Ie === -1 && (Ie = _e), _e - Ie + 1 === de)
            return Ie * Z;
        } else
          Ie !== -1 && (_e -= _e - Ie), Ie = -1;
    } else
      for (w + de > $ && (w = $ - de), _e = w; _e >= 0; _e--) {
        for (var be = !0, Fe = 0; Fe < de; Fe++)
          if (fe(D, _e + Fe) !== fe(S, Fe)) {
            be = !1;
            break;
          }
        if (be)
          return _e;
      }
    return -1;
  }
  o.prototype.includes = function(S, w, M) {
    return this.indexOf(S, w, M) !== -1;
  }, o.prototype.indexOf = function(S, w, M) {
    return j(this, S, w, M, !0);
  }, o.prototype.lastIndexOf = function(S, w, M) {
    return j(this, S, w, M, !1);
  };
  function C(D, S, w, M) {
    w = Number(w) || 0;
    var q = D.length - w;
    M ? (M = Number(M), M > q && (M = q)) : M = q;
    var Z = S.length;
    M > Z / 2 && (M = Z / 2);
    for (var $ = 0; $ < M; ++$) {
      var de = parseInt(S.substr($ * 2, 2), 16);
      if (je(de))
        return $;
      D[w + $] = de;
    }
    return $;
  }
  function I(D, S, w, M) {
    return te(W(S, D.length - w), D, w, M);
  }
  function z(D, S, w, M) {
    return te(K(S), D, w, M);
  }
  function P(D, S, w, M) {
    return te(le(S), D, w, M);
  }
  function L(D, S, w, M) {
    return te(X(S, D.length - w), D, w, M);
  }
  o.prototype.write = function(S, w, M, q) {
    if (w === void 0)
      q = "utf8", M = this.length, w = 0;
    else if (M === void 0 && typeof w == "string")
      q = w, M = this.length, w = 0;
    else if (isFinite(w))
      w = w >>> 0, isFinite(M) ? (M = M >>> 0, q === void 0 && (q = "utf8")) : (q = M, M = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    var Z = this.length - w;
    if ((M === void 0 || M > Z) && (M = Z), S.length > 0 && (M < 0 || w < 0) || w > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    q || (q = "utf8");
    for (var $ = !1; ; )
      switch (q) {
        case "hex":
          return C(this, S, w, M);
        case "utf8":
        case "utf-8":
          return I(this, S, w, M);
        case "ascii":
        case "latin1":
        case "binary":
          return z(this, S, w, M);
        case "base64":
          return P(this, S, w, M);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return L(this, S, w, M);
        default:
          if ($)
            throw new TypeError("Unknown encoding: " + q);
          q = ("" + q).toLowerCase(), $ = !0;
      }
  }, o.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function N(D, S, w) {
    return S === 0 && w === D.length ? e.fromByteArray(D) : e.fromByteArray(D.slice(S, w));
  }
  function B(D, S, w) {
    w = Math.min(D.length, w);
    for (var M = [], q = S; q < w; ) {
      var Z = D[q], $ = null, de = Z > 239 ? 4 : Z > 223 ? 3 : Z > 191 ? 2 : 1;
      if (q + de <= w) {
        var fe, _e, Ie, be;
        switch (de) {
          case 1:
            Z < 128 && ($ = Z);
            break;
          case 2:
            fe = D[q + 1], (fe & 192) === 128 && (be = (Z & 31) << 6 | fe & 63, be > 127 && ($ = be));
            break;
          case 3:
            fe = D[q + 1], _e = D[q + 2], (fe & 192) === 128 && (_e & 192) === 128 && (be = (Z & 15) << 12 | (fe & 63) << 6 | _e & 63, be > 2047 && (be < 55296 || be > 57343) && ($ = be));
            break;
          case 4:
            fe = D[q + 1], _e = D[q + 2], Ie = D[q + 3], (fe & 192) === 128 && (_e & 192) === 128 && (Ie & 192) === 128 && (be = (Z & 15) << 18 | (fe & 63) << 12 | (_e & 63) << 6 | Ie & 63, be > 65535 && be < 1114112 && ($ = be));
        }
      }
      $ === null ? ($ = 65533, de = 1) : $ > 65535 && ($ -= 65536, M.push($ >>> 10 & 1023 | 55296), $ = 56320 | $ & 1023), M.push($), q += de;
    }
    return U(M);
  }
  var F = 4096;
  function U(D) {
    var S = D.length;
    if (S <= F)
      return String.fromCharCode.apply(String, D);
    for (var w = "", M = 0; M < S; )
      w += String.fromCharCode.apply(
        String,
        D.slice(M, M += F)
      );
    return w;
  }
  function H(D, S, w) {
    var M = "";
    w = Math.min(D.length, w);
    for (var q = S; q < w; ++q)
      M += String.fromCharCode(D[q] & 127);
    return M;
  }
  function x(D, S, w) {
    var M = "";
    w = Math.min(D.length, w);
    for (var q = S; q < w; ++q)
      M += String.fromCharCode(D[q]);
    return M;
  }
  function O(D, S, w) {
    var M = D.length;
    (!S || S < 0) && (S = 0), (!w || w < 0 || w > M) && (w = M);
    for (var q = "", Z = S; Z < w; ++Z)
      q += Te[D[Z]];
    return q;
  }
  function T(D, S, w) {
    for (var M = D.slice(S, w), q = "", Z = 0; Z < M.length - 1; Z += 2)
      q += String.fromCharCode(M[Z] + M[Z + 1] * 256);
    return q;
  }
  o.prototype.slice = function(S, w) {
    var M = this.length;
    S = ~~S, w = w === void 0 ? M : ~~w, S < 0 ? (S += M, S < 0 && (S = 0)) : S > M && (S = M), w < 0 ? (w += M, w < 0 && (w = 0)) : w > M && (w = M), w < S && (w = S);
    var q = this.subarray(S, w);
    return Object.setPrototypeOf(q, o.prototype), q;
  };
  function R(D, S, w) {
    if (D % 1 !== 0 || D < 0)
      throw new RangeError("offset is not uint");
    if (D + S > w)
      throw new RangeError("Trying to access beyond buffer length");
  }
  o.prototype.readUintLE = o.prototype.readUIntLE = function(S, w, M) {
    S = S >>> 0, w = w >>> 0, M || R(S, w, this.length);
    for (var q = this[S], Z = 1, $ = 0; ++$ < w && (Z *= 256); )
      q += this[S + $] * Z;
    return q;
  }, o.prototype.readUintBE = o.prototype.readUIntBE = function(S, w, M) {
    S = S >>> 0, w = w >>> 0, M || R(S, w, this.length);
    for (var q = this[S + --w], Z = 1; w > 0 && (Z *= 256); )
      q += this[S + --w] * Z;
    return q;
  }, o.prototype.readUint8 = o.prototype.readUInt8 = function(S, w) {
    return S = S >>> 0, w || R(S, 1, this.length), this[S];
  }, o.prototype.readUint16LE = o.prototype.readUInt16LE = function(S, w) {
    return S = S >>> 0, w || R(S, 2, this.length), this[S] | this[S + 1] << 8;
  }, o.prototype.readUint16BE = o.prototype.readUInt16BE = function(S, w) {
    return S = S >>> 0, w || R(S, 2, this.length), this[S] << 8 | this[S + 1];
  }, o.prototype.readUint32LE = o.prototype.readUInt32LE = function(S, w) {
    return S = S >>> 0, w || R(S, 4, this.length), (this[S] | this[S + 1] << 8 | this[S + 2] << 16) + this[S + 3] * 16777216;
  }, o.prototype.readUint32BE = o.prototype.readUInt32BE = function(S, w) {
    return S = S >>> 0, w || R(S, 4, this.length), this[S] * 16777216 + (this[S + 1] << 16 | this[S + 2] << 8 | this[S + 3]);
  }, o.prototype.readIntLE = function(S, w, M) {
    S = S >>> 0, w = w >>> 0, M || R(S, w, this.length);
    for (var q = this[S], Z = 1, $ = 0; ++$ < w && (Z *= 256); )
      q += this[S + $] * Z;
    return Z *= 128, q >= Z && (q -= Math.pow(2, 8 * w)), q;
  }, o.prototype.readIntBE = function(S, w, M) {
    S = S >>> 0, w = w >>> 0, M || R(S, w, this.length);
    for (var q = w, Z = 1, $ = this[S + --q]; q > 0 && (Z *= 256); )
      $ += this[S + --q] * Z;
    return Z *= 128, $ >= Z && ($ -= Math.pow(2, 8 * w)), $;
  }, o.prototype.readInt8 = function(S, w) {
    return S = S >>> 0, w || R(S, 1, this.length), this[S] & 128 ? (255 - this[S] + 1) * -1 : this[S];
  }, o.prototype.readInt16LE = function(S, w) {
    S = S >>> 0, w || R(S, 2, this.length);
    var M = this[S] | this[S + 1] << 8;
    return M & 32768 ? M | 4294901760 : M;
  }, o.prototype.readInt16BE = function(S, w) {
    S = S >>> 0, w || R(S, 2, this.length);
    var M = this[S + 1] | this[S] << 8;
    return M & 32768 ? M | 4294901760 : M;
  }, o.prototype.readInt32LE = function(S, w) {
    return S = S >>> 0, w || R(S, 4, this.length), this[S] | this[S + 1] << 8 | this[S + 2] << 16 | this[S + 3] << 24;
  }, o.prototype.readInt32BE = function(S, w) {
    return S = S >>> 0, w || R(S, 4, this.length), this[S] << 24 | this[S + 1] << 16 | this[S + 2] << 8 | this[S + 3];
  }, o.prototype.readFloatLE = function(S, w) {
    return S = S >>> 0, w || R(S, 4, this.length), t.read(this, S, !0, 23, 4);
  }, o.prototype.readFloatBE = function(S, w) {
    return S = S >>> 0, w || R(S, 4, this.length), t.read(this, S, !1, 23, 4);
  }, o.prototype.readDoubleLE = function(S, w) {
    return S = S >>> 0, w || R(S, 8, this.length), t.read(this, S, !0, 52, 8);
  }, o.prototype.readDoubleBE = function(S, w) {
    return S = S >>> 0, w || R(S, 8, this.length), t.read(this, S, !1, 52, 8);
  };
  function G(D, S, w, M, q, Z) {
    if (!o.isBuffer(D))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (S > q || S < Z)
      throw new RangeError('"value" argument is out of bounds');
    if (w + M > D.length)
      throw new RangeError("Index out of range");
  }
  o.prototype.writeUintLE = o.prototype.writeUIntLE = function(S, w, M, q) {
    if (S = +S, w = w >>> 0, M = M >>> 0, !q) {
      var Z = Math.pow(2, 8 * M) - 1;
      G(this, S, w, M, Z, 0);
    }
    var $ = 1, de = 0;
    for (this[w] = S & 255; ++de < M && ($ *= 256); )
      this[w + de] = S / $ & 255;
    return w + M;
  }, o.prototype.writeUintBE = o.prototype.writeUIntBE = function(S, w, M, q) {
    if (S = +S, w = w >>> 0, M = M >>> 0, !q) {
      var Z = Math.pow(2, 8 * M) - 1;
      G(this, S, w, M, Z, 0);
    }
    var $ = M - 1, de = 1;
    for (this[w + $] = S & 255; --$ >= 0 && (de *= 256); )
      this[w + $] = S / de & 255;
    return w + M;
  }, o.prototype.writeUint8 = o.prototype.writeUInt8 = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 1, 255, 0), this[w] = S & 255, w + 1;
  }, o.prototype.writeUint16LE = o.prototype.writeUInt16LE = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 2, 65535, 0), this[w] = S & 255, this[w + 1] = S >>> 8, w + 2;
  }, o.prototype.writeUint16BE = o.prototype.writeUInt16BE = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 2, 65535, 0), this[w] = S >>> 8, this[w + 1] = S & 255, w + 2;
  }, o.prototype.writeUint32LE = o.prototype.writeUInt32LE = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 4, 4294967295, 0), this[w + 3] = S >>> 24, this[w + 2] = S >>> 16, this[w + 1] = S >>> 8, this[w] = S & 255, w + 4;
  }, o.prototype.writeUint32BE = o.prototype.writeUInt32BE = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 4, 4294967295, 0), this[w] = S >>> 24, this[w + 1] = S >>> 16, this[w + 2] = S >>> 8, this[w + 3] = S & 255, w + 4;
  }, o.prototype.writeIntLE = function(S, w, M, q) {
    if (S = +S, w = w >>> 0, !q) {
      var Z = Math.pow(2, 8 * M - 1);
      G(this, S, w, M, Z - 1, -Z);
    }
    var $ = 0, de = 1, fe = 0;
    for (this[w] = S & 255; ++$ < M && (de *= 256); )
      S < 0 && fe === 0 && this[w + $ - 1] !== 0 && (fe = 1), this[w + $] = (S / de >> 0) - fe & 255;
    return w + M;
  }, o.prototype.writeIntBE = function(S, w, M, q) {
    if (S = +S, w = w >>> 0, !q) {
      var Z = Math.pow(2, 8 * M - 1);
      G(this, S, w, M, Z - 1, -Z);
    }
    var $ = M - 1, de = 1, fe = 0;
    for (this[w + $] = S & 255; --$ >= 0 && (de *= 256); )
      S < 0 && fe === 0 && this[w + $ + 1] !== 0 && (fe = 1), this[w + $] = (S / de >> 0) - fe & 255;
    return w + M;
  }, o.prototype.writeInt8 = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 1, 127, -128), S < 0 && (S = 255 + S + 1), this[w] = S & 255, w + 1;
  }, o.prototype.writeInt16LE = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 2, 32767, -32768), this[w] = S & 255, this[w + 1] = S >>> 8, w + 2;
  }, o.prototype.writeInt16BE = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 2, 32767, -32768), this[w] = S >>> 8, this[w + 1] = S & 255, w + 2;
  }, o.prototype.writeInt32LE = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 4, 2147483647, -2147483648), this[w] = S & 255, this[w + 1] = S >>> 8, this[w + 2] = S >>> 16, this[w + 3] = S >>> 24, w + 4;
  }, o.prototype.writeInt32BE = function(S, w, M) {
    return S = +S, w = w >>> 0, M || G(this, S, w, 4, 2147483647, -2147483648), S < 0 && (S = 4294967295 + S + 1), this[w] = S >>> 24, this[w + 1] = S >>> 16, this[w + 2] = S >>> 8, this[w + 3] = S & 255, w + 4;
  };
  function V(D, S, w, M, q, Z) {
    if (w + M > D.length)
      throw new RangeError("Index out of range");
    if (w < 0)
      throw new RangeError("Index out of range");
  }
  function ee(D, S, w, M, q) {
    return S = +S, w = w >>> 0, q || V(D, S, w, 4), t.write(D, S, w, M, 23, 4), w + 4;
  }
  o.prototype.writeFloatLE = function(S, w, M) {
    return ee(this, S, w, !0, M);
  }, o.prototype.writeFloatBE = function(S, w, M) {
    return ee(this, S, w, !1, M);
  };
  function Y(D, S, w, M, q) {
    return S = +S, w = w >>> 0, q || V(D, S, w, 8), t.write(D, S, w, M, 52, 8), w + 8;
  }
  o.prototype.writeDoubleLE = function(S, w, M) {
    return Y(this, S, w, !0, M);
  }, o.prototype.writeDoubleBE = function(S, w, M) {
    return Y(this, S, w, !1, M);
  }, o.prototype.copy = function(S, w, M, q) {
    if (!o.isBuffer(S))
      throw new TypeError("argument should be a Buffer");
    if (M || (M = 0), !q && q !== 0 && (q = this.length), w >= S.length && (w = S.length), w || (w = 0), q > 0 && q < M && (q = M), q === M || S.length === 0 || this.length === 0)
      return 0;
    if (w < 0)
      throw new RangeError("targetStart out of bounds");
    if (M < 0 || M >= this.length)
      throw new RangeError("Index out of range");
    if (q < 0)
      throw new RangeError("sourceEnd out of bounds");
    q > this.length && (q = this.length), S.length - w < q - M && (q = S.length - w + M);
    var Z = q - M;
    return this === S && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(w, M, q) : Uint8Array.prototype.set.call(
      S,
      this.subarray(M, q),
      w
    ), Z;
  }, o.prototype.fill = function(S, w, M, q) {
    if (typeof S == "string") {
      if (typeof w == "string" ? (q = w, w = 0, M = this.length) : typeof M == "string" && (q = M, M = this.length), q !== void 0 && typeof q != "string")
        throw new TypeError("encoding must be a string");
      if (typeof q == "string" && !o.isEncoding(q))
        throw new TypeError("Unknown encoding: " + q);
      if (S.length === 1) {
        var Z = S.charCodeAt(0);
        (q === "utf8" && Z < 128 || q === "latin1") && (S = Z);
      }
    } else
      typeof S == "number" ? S = S & 255 : typeof S == "boolean" && (S = Number(S));
    if (w < 0 || this.length < w || this.length < M)
      throw new RangeError("Out of range index");
    if (M <= w)
      return this;
    w = w >>> 0, M = M === void 0 ? this.length : M >>> 0, S || (S = 0);
    var $;
    if (typeof S == "number")
      for ($ = w; $ < M; ++$)
        this[$] = S;
    else {
      var de = o.isBuffer(S) ? S : o.from(S, q), fe = de.length;
      if (fe === 0)
        throw new TypeError('The value "' + S + '" is invalid for argument "value"');
      for ($ = 0; $ < M - w; ++$)
        this[$ + w] = de[$ % fe];
    }
    return this;
  };
  var J = /[^+/0-9A-Za-z-_]/g;
  function E(D) {
    if (D = D.split("=")[0], D = D.trim().replace(J, ""), D.length < 2)
      return "";
    for (; D.length % 4 !== 0; )
      D = D + "=";
    return D;
  }
  function W(D, S) {
    S = S || 1 / 0;
    for (var w, M = D.length, q = null, Z = [], $ = 0; $ < M; ++$) {
      if (w = D.charCodeAt($), w > 55295 && w < 57344) {
        if (!q) {
          if (w > 56319) {
            (S -= 3) > -1 && Z.push(239, 191, 189);
            continue;
          } else if ($ + 1 === M) {
            (S -= 3) > -1 && Z.push(239, 191, 189);
            continue;
          }
          q = w;
          continue;
        }
        if (w < 56320) {
          (S -= 3) > -1 && Z.push(239, 191, 189), q = w;
          continue;
        }
        w = (q - 55296 << 10 | w - 56320) + 65536;
      } else
        q && (S -= 3) > -1 && Z.push(239, 191, 189);
      if (q = null, w < 128) {
        if ((S -= 1) < 0)
          break;
        Z.push(w);
      } else if (w < 2048) {
        if ((S -= 2) < 0)
          break;
        Z.push(
          w >> 6 | 192,
          w & 63 | 128
        );
      } else if (w < 65536) {
        if ((S -= 3) < 0)
          break;
        Z.push(
          w >> 12 | 224,
          w >> 6 & 63 | 128,
          w & 63 | 128
        );
      } else if (w < 1114112) {
        if ((S -= 4) < 0)
          break;
        Z.push(
          w >> 18 | 240,
          w >> 12 & 63 | 128,
          w >> 6 & 63 | 128,
          w & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return Z;
  }
  function K(D) {
    for (var S = [], w = 0; w < D.length; ++w)
      S.push(D.charCodeAt(w) & 255);
    return S;
  }
  function X(D, S) {
    for (var w, M, q, Z = [], $ = 0; $ < D.length && !((S -= 2) < 0); ++$)
      w = D.charCodeAt($), M = w >> 8, q = w % 256, Z.push(q), Z.push(M);
    return Z;
  }
  function le(D) {
    return e.toByteArray(E(D));
  }
  function te(D, S, w, M) {
    for (var q = 0; q < M && !(q + w >= S.length || q >= D.length); ++q)
      S[q + w] = D[q];
    return q;
  }
  function ue(D, S) {
    return D instanceof S || D != null && D.constructor != null && D.constructor.name != null && D.constructor.name === S.name;
  }
  function je(D) {
    return D !== D;
  }
  var Te = function() {
    for (var D = "0123456789abcdef", S = new Array(256), w = 0; w < 16; ++w)
      for (var M = w * 16, q = 0; q < 16; ++q)
        S[M + q] = D[w] + D[q];
    return S;
  }();
})(Cm);
var ga = { exports: {} }, Ee = ga.exports = {}, et, tt;
function Yi() {
  throw new Error("setTimeout has not been defined");
}
function Qi() {
  throw new Error("clearTimeout has not been defined");
}
(function() {
  try {
    typeof setTimeout == "function" ? et = setTimeout : et = Yi;
  } catch {
    et = Yi;
  }
  try {
    typeof clearTimeout == "function" ? tt = clearTimeout : tt = Qi;
  } catch {
    tt = Qi;
  }
})();
function ba(r) {
  if (et === setTimeout)
    return setTimeout(r, 0);
  if ((et === Yi || !et) && setTimeout)
    return et = setTimeout, setTimeout(r, 0);
  try {
    return et(r, 0);
  } catch {
    try {
      return et.call(null, r, 0);
    } catch {
      return et.call(this, r, 0);
    }
  }
}
function zm(r) {
  if (tt === clearTimeout)
    return clearTimeout(r);
  if ((tt === Qi || !tt) && clearTimeout)
    return tt = clearTimeout, clearTimeout(r);
  try {
    return tt(r);
  } catch {
    try {
      return tt.call(null, r);
    } catch {
      return tt.call(this, r);
    }
  }
}
var ct = [], Kt = !1, Rt, Gr = -1;
function Lm() {
  !Kt || !Rt || (Kt = !1, Rt.length ? ct = Rt.concat(ct) : Gr = -1, ct.length && ka());
}
function ka() {
  if (!Kt) {
    var r = ba(Lm);
    Kt = !0;
    for (var e = ct.length; e; ) {
      for (Rt = ct, ct = []; ++Gr < e; )
        Rt && Rt[Gr].run();
      Gr = -1, e = ct.length;
    }
    Rt = null, Kt = !1, zm(r);
  }
}
Ee.nextTick = function(r) {
  var e = new Array(arguments.length - 1);
  if (arguments.length > 1)
    for (var t = 1; t < arguments.length; t++)
      e[t - 1] = arguments[t];
  ct.push(new va(r, e)), ct.length === 1 && !Kt && ba(ka);
};
function va(r, e) {
  this.fun = r, this.array = e;
}
va.prototype.run = function() {
  this.fun.apply(null, this.array);
};
Ee.title = "browser";
Ee.browser = !0;
Ee.env = {};
Ee.argv = [];
Ee.version = "";
Ee.versions = {};
function gt() {
}
Ee.on = gt;
Ee.addListener = gt;
Ee.once = gt;
Ee.off = gt;
Ee.removeListener = gt;
Ee.removeAllListeners = gt;
Ee.emit = gt;
Ee.prependListener = gt;
Ee.prependOnceListener = gt;
Ee.listeners = function(r) {
  return [];
};
Ee.binding = function(r) {
  throw new Error("process.binding is not supported");
};
Ee.cwd = function() {
  return "/";
};
Ee.chdir = function(r) {
  throw new Error("process.chdir is not supported");
};
Ee.umask = function() {
  return 0;
};
var Om = ga.exports;
const Dm = /* @__PURE__ */ bm(Om);
var Tm = function(r) {
  function e() {
    var i = this || self;
    return delete r.prototype.__magic__, i;
  }
  if (typeof globalThis == "object")
    return globalThis;
  if (this)
    return e();
  r.defineProperty(r.prototype, "__magic__", {
    configurable: !0,
    get: e
  });
  var t = __magic__;
  return t;
}(Object), y_ = Tm;
function $e(r) {
  if (typeof r != "string")
    throw new TypeError("Path must be a string. Received " + JSON.stringify(r));
}
function on(r, e) {
  for (var t = "", i = 0, n = -1, a = 0, l, o = 0; o <= r.length; ++o) {
    if (o < r.length)
      l = r.charCodeAt(o);
    else {
      if (l === 47)
        break;
      l = 47;
    }
    if (l === 47) {
      if (!(n === o - 1 || a === 1))
        if (n !== o - 1 && a === 2) {
          if (t.length < 2 || i !== 2 || t.charCodeAt(t.length - 1) !== 46 || t.charCodeAt(t.length - 2) !== 46) {
            if (t.length > 2) {
              var s = t.lastIndexOf("/");
              if (s !== t.length - 1) {
                s === -1 ? (t = "", i = 0) : (t = t.slice(0, s), i = t.length - 1 - t.lastIndexOf("/")), n = o, a = 0;
                continue;
              }
            } else if (t.length === 2 || t.length === 1) {
              t = "", i = 0, n = o, a = 0;
              continue;
            }
          }
          e && (t.length > 0 ? t += "/.." : t = "..", i = 2);
        } else
          t.length > 0 ? t += "/" + r.slice(n + 1, o) : t = r.slice(n + 1, o), i = o - n - 1;
      n = o, a = 0;
    } else
      l === 46 && a !== -1 ? ++a : a = -1;
  }
  return t;
}
function Nm(r, e) {
  var t = e.dir || e.root, i = e.base || (e.name || "") + (e.ext || "");
  return t ? t === e.root ? t + i : t + r + i : i;
}
var Xt = {
  // path.resolve([from ...], to)
  resolve: function() {
    for (var e = "", t = !1, i, n = arguments.length - 1; n >= -1 && !t; n--) {
      var a;
      n >= 0 ? a = arguments[n] : (i === void 0 && (i = Dm.cwd()), a = i), $e(a), a.length !== 0 && (e = a + "/" + e, t = a.charCodeAt(0) === 47);
    }
    return e = on(e, !t), t ? e.length > 0 ? "/" + e : "/" : e.length > 0 ? e : ".";
  },
  normalize: function(e) {
    if ($e(e), e.length === 0)
      return ".";
    var t = e.charCodeAt(0) === 47, i = e.charCodeAt(e.length - 1) === 47;
    return e = on(e, !t), e.length === 0 && !t && (e = "."), e.length > 0 && i && (e += "/"), t ? "/" + e : e;
  },
  isAbsolute: function(e) {
    return $e(e), e.length > 0 && e.charCodeAt(0) === 47;
  },
  join: function() {
    if (arguments.length === 0)
      return ".";
    for (var e, t = 0; t < arguments.length; ++t) {
      var i = arguments[t];
      $e(i), i.length > 0 && (e === void 0 ? e = i : e += "/" + i);
    }
    return e === void 0 ? "." : Xt.normalize(e);
  },
  relative: function(e, t) {
    if ($e(e), $e(t), e === t || (e = Xt.resolve(e), t = Xt.resolve(t), e === t))
      return "";
    for (var i = 1; i < e.length && e.charCodeAt(i) === 47; ++i)
      ;
    for (var n = e.length, a = n - i, l = 1; l < t.length && t.charCodeAt(l) === 47; ++l)
      ;
    for (var o = t.length, s = o - l, d = a < s ? a : s, h = -1, u = 0; u <= d; ++u) {
      if (u === d) {
        if (s > d) {
          if (t.charCodeAt(l + u) === 47)
            return t.slice(l + u + 1);
          if (u === 0)
            return t.slice(l + u);
        } else
          a > d && (e.charCodeAt(i + u) === 47 ? h = u : u === 0 && (h = 0));
        break;
      }
      var p = e.charCodeAt(i + u), b = t.charCodeAt(l + u);
      if (p !== b)
        break;
      p === 47 && (h = u);
    }
    var k = "";
    for (u = i + h + 1; u <= n; ++u)
      (u === n || e.charCodeAt(u) === 47) && (k.length === 0 ? k += ".." : k += "/..");
    return k.length > 0 ? k + t.slice(l + h) : (l += h, t.charCodeAt(l) === 47 && ++l, t.slice(l));
  },
  _makeLong: function(e) {
    return e;
  },
  dirname: function(e) {
    if ($e(e), e.length === 0)
      return ".";
    for (var t = e.charCodeAt(0), i = t === 47, n = -1, a = !0, l = e.length - 1; l >= 1; --l)
      if (t = e.charCodeAt(l), t === 47) {
        if (!a) {
          n = l;
          break;
        }
      } else
        a = !1;
    return n === -1 ? i ? "/" : "." : i && n === 1 ? "//" : e.slice(0, n);
  },
  basename: function(e, t) {
    if (t !== void 0 && typeof t != "string")
      throw new TypeError('"ext" argument must be a string');
    $e(e);
    var i = 0, n = -1, a = !0, l;
    if (t !== void 0 && t.length > 0 && t.length <= e.length) {
      if (t.length === e.length && t === e)
        return "";
      var o = t.length - 1, s = -1;
      for (l = e.length - 1; l >= 0; --l) {
        var d = e.charCodeAt(l);
        if (d === 47) {
          if (!a) {
            i = l + 1;
            break;
          }
        } else
          s === -1 && (a = !1, s = l + 1), o >= 0 && (d === t.charCodeAt(o) ? --o === -1 && (n = l) : (o = -1, n = s));
      }
      return i === n ? n = s : n === -1 && (n = e.length), e.slice(i, n);
    } else {
      for (l = e.length - 1; l >= 0; --l)
        if (e.charCodeAt(l) === 47) {
          if (!a) {
            i = l + 1;
            break;
          }
        } else
          n === -1 && (a = !1, n = l + 1);
      return n === -1 ? "" : e.slice(i, n);
    }
  },
  extname: function(e) {
    $e(e);
    for (var t = -1, i = 0, n = -1, a = !0, l = 0, o = e.length - 1; o >= 0; --o) {
      var s = e.charCodeAt(o);
      if (s === 47) {
        if (!a) {
          i = o + 1;
          break;
        }
        continue;
      }
      n === -1 && (a = !1, n = o + 1), s === 46 ? t === -1 ? t = o : l !== 1 && (l = 1) : t !== -1 && (l = -1);
    }
    return t === -1 || n === -1 || // We saw a non-dot character immediately before the dot
    l === 0 || // The (right-most) trimmed path component is exactly '..'
    l === 1 && t === n - 1 && t === i + 1 ? "" : e.slice(t, n);
  },
  format: function(e) {
    if (e === null || typeof e != "object")
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof e);
    return Nm("/", e);
  },
  parse: function(e) {
    $e(e);
    var t = { root: "", dir: "", base: "", ext: "", name: "" };
    if (e.length === 0)
      return t;
    var i = e.charCodeAt(0), n = i === 47, a;
    n ? (t.root = "/", a = 1) : a = 0;
    for (var l = -1, o = 0, s = -1, d = !0, h = e.length - 1, u = 0; h >= a; --h) {
      if (i = e.charCodeAt(h), i === 47) {
        if (!d) {
          o = h + 1;
          break;
        }
        continue;
      }
      s === -1 && (d = !1, s = h + 1), i === 46 ? l === -1 ? l = h : u !== 1 && (u = 1) : l !== -1 && (u = -1);
    }
    return l === -1 || s === -1 || // We saw a non-dot character immediately before the dot
    u === 0 || // The (right-most) trimmed path component is exactly '..'
    u === 1 && l === s - 1 && l === o + 1 ? s !== -1 && (o === 0 && n ? t.base = t.name = e.slice(1, s) : t.base = t.name = e.slice(o, s)) : (o === 0 && n ? (t.name = e.slice(1, l), t.base = e.slice(1, s)) : (t.name = e.slice(o, l), t.base = e.slice(o, s)), t.ext = e.slice(l, s)), o > 0 ? t.dir = e.slice(0, o - 1) : n && (t.dir = "/"), t;
  },
  sep: "/",
  delimiter: ":",
  win32: null,
  posix: null
};
Xt.posix = Xt;
var ki = Xt, Rm = ie && ie.__createBinding || (Object.create ? function(r, e, t, i) {
  i === void 0 && (i = t);
  var n = Object.getOwnPropertyDescriptor(e, t);
  (!n || ("get" in n ? !e.__esModule : n.writable || n.configurable)) && (n = { enumerable: !0, get: function() {
    return e[t];
  } }), Object.defineProperty(r, i, n);
} : function(r, e, t, i) {
  i === void 0 && (i = t), r[i] = e[t];
}), Pm = ie && ie.__setModuleDefault || (Object.create ? function(r, e) {
  Object.defineProperty(r, "default", { enumerable: !0, value: e });
} : function(r, e) {
  r.default = e;
}), Mm = ie && ie.__importStar || function(r) {
  if (r && r.__esModule)
    return r;
  var e = {};
  if (r != null)
    for (var t in r)
      t !== "default" && Object.prototype.hasOwnProperty.call(r, t) && Rm(e, r, t);
  return Pm(e, r), e;
}, Fm = ie && ie.__read || function(r, e) {
  var t = typeof Symbol == "function" && r[Symbol.iterator];
  if (!t)
    return r;
  var i = t.call(r), n, a = [], l;
  try {
    for (; (e === void 0 || e-- > 0) && !(n = i.next()).done; )
      a.push(n.value);
  } catch (o) {
    l = { error: o };
  } finally {
    try {
      n && !n.done && (t = i.return) && t.call(i);
    } finally {
      if (l)
        throw l.error;
    }
  }
  return a;
}, Bm = ie && ie.__spreadArray || function(r, e, t) {
  if (t || arguments.length === 2)
    for (var i = 0, n = e.length, a; i < n; i++)
      (a || !(i in e)) && (a || (a = Array.prototype.slice.call(e, 0, i)), a[i] = e[i]);
  return r.concat(a || Array.prototype.slice.call(e));
};
Object.defineProperty(gi, "__esModule", { value: !0 });
gi.DependencyParser = void 0;
var Um = Mm(ki), Wm = (
  /** @class */
  function() {
    function r() {
      this.REGEX_CLEAN = /[\n|\r]/g, this.REGEX_DETECT_IMPORT = /(?:(?:(?:import)|(?:export))(?:.)*?from\s+["']([^"']+)["'])|(?:((?:require|import))(?:\s+)?\(["']([^"']+)["']\))|(?:\/+\s+<reference\s+path=["']([^"']+)["']\s+\/>)/g, this.REGEX_NODE_MODULE = /^node:([\w\W\/]+)$/;
    }
    return r.prototype.parseDependencies = function(e, t) {
      var i = this, n = e;
      return Bm([], Fm(n.matchAll(this.REGEX_DETECT_IMPORT)), !1).map(function(a) {
        var l, o;
        return (o = (l = a[1]) !== null && l !== void 0 ? l : a[2]) !== null && o !== void 0 ? o : a[3];
      }).filter(function(a) {
        return !!a;
      }).map(function(a) {
        return i.resolvePath(a, t);
      });
    }, r.prototype.resolvePath = function(e, t) {
      var i = e.match(this.REGEX_NODE_MODULE);
      if (i)
        return {
          kind: "relative-in-package",
          packageName: "@types/node",
          importPath: "".concat(i[1], ".d.ts"),
          sourcePath: ""
        };
      if (typeof t == "string") {
        if (e.startsWith("."))
          return {
            kind: "relative",
            importPath: e,
            sourcePath: t
          };
        if (e.startsWith("@")) {
          var n = e.split("/");
          return {
            kind: "package",
            packageName: "".concat(n[0], "/").concat(n[1]),
            importPath: n.slice(2).join("/")
          };
        } else {
          var n = e.split("/");
          return {
            kind: "package",
            packageName: n[0],
            importPath: n.slice(1).join("/")
          };
        }
      } else
        switch (t.kind) {
          case "package":
            throw Error("TODO?");
          case "relative":
            throw Error("TODO2?");
          case "relative-in-package":
            if (e.startsWith("."))
              return {
                kind: "relative-in-package",
                packageName: t.packageName,
                sourcePath: Um.join(t.sourcePath, t.importPath),
                importPath: e
              };
            if (e.startsWith("@")) {
              var n = e.split("/");
              return {
                kind: "package",
                packageName: "".concat(n[0], "/").concat(n[1]),
                importPath: n.slice(2).join("/")
              };
            } else {
              var n = e.split("/");
              return {
                kind: "package",
                packageName: n[0],
                importPath: n.slice(1).join("/")
              };
            }
        }
    }, r;
  }()
);
gi.DependencyParser = Wm;
var Sr = {}, qm = ie && ie.__importDefault || function(r) {
  return r && r.__esModule ? r : { default: r };
};
Object.defineProperty(Sr, "__esModule", { value: !0 });
Sr.importResourcePathToString = void 0;
var Ni = qm(ki), Gm = function(r) {
  var e;
  switch (r.kind) {
    case "package":
      return Ni.default.join(r.packageName, (e = r.importPath) !== null && e !== void 0 ? e : "", "package.json");
    case "relative":
      return Ni.default.join(r.sourcePath, r.importPath);
    case "relative-in-package":
      return Ni.default.join(r.packageName, r.sourcePath, r.importPath);
  }
};
Sr.importResourcePathToString = Gm;
var wr = {};
Object.defineProperty(wr, "__esModule", { value: !0 });
wr.invokeUpdate = void 0;
var Hm = function(r, e) {
  var t, i = "".concat(r.type, ": ");
  switch (r.type) {
    case "CodeChanged":
      i += "";
      break;
    case "ResolveNewImports":
      i += "";
      break;
    case "LookedUpTypeFile":
      i += '"'.concat(r.path, '" was ').concat(r.success ? "sucessfully" : "not sucessfully", " looked up");
      break;
    case "AttemptedLookUpFile":
      i += '"'.concat(r.path, '" was ').concat(r.success ? "sucessfully" : "not sucessfully", " attempted to looked up");
      break;
    case "LookedUpPackage":
      i += 'package.json for package "'.concat(r.package, '" was ').concat(r.success ? "sucessfully" : "not sucessfully", " looked up").concat(r.definitelyTyped ? " (found in definitely typed repo)" : "");
      break;
    case "LoadedFromCache":
      i += '"'.concat(r.importPath, '" was loaded from cache');
      break;
    case "StoredToCache":
      i += '"'.concat(r.importPath, '" was stored to cache');
      break;
  }
  i.endsWith(": ") && (i = i.slice(void 0, -2)), (t = e.onUpdate) === null || t === void 0 || t.call(e, r, i);
};
wr.invokeUpdate = Hm;
var Ir = {};
Object.defineProperty(Ir, "__esModule", { value: !0 });
Ir.RecursionDepth = void 0;
var Vm = (
  /** @class */
  function() {
    function r(e, t, i) {
      t === void 0 && (t = 0), i === void 0 && (i = 0), this.options = e, this.fileRecursionDepth = t, this.packageRecursionDepth = i;
    }
    return r.prototype.nextPackage = function() {
      return new r(this.options, this.fileRecursionDepth, this.packageRecursionDepth + 1);
    }, r.prototype.nextFile = function() {
      return new r(this.options, this.fileRecursionDepth + 1, this.packageRecursionDepth);
    }, r.prototype.same = function() {
      return new r(this.options, this.fileRecursionDepth, this.packageRecursionDepth);
    }, r.prototype.shouldStop = function() {
      return this.options.fileRecursionDepth > 0 && this.fileRecursionDepth >= this.options.fileRecursionDepth || this.options.packageRecursionDepth > 0 && this.packageRecursionDepth >= this.options.packageRecursionDepth;
    }, r;
  }()
);
Ir.RecursionDepth = Vm;
var Yr = ie && ie.__assign || function() {
  return Yr = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, Yr.apply(this, arguments);
}, Km = ie && ie.__createBinding || (Object.create ? function(r, e, t, i) {
  i === void 0 && (i = t);
  var n = Object.getOwnPropertyDescriptor(e, t);
  (!n || ("get" in n ? !e.__esModule : n.writable || n.configurable)) && (n = { enumerable: !0, get: function() {
    return e[t];
  } }), Object.defineProperty(r, i, n);
} : function(r, e, t, i) {
  i === void 0 && (i = t), r[i] = e[t];
}), Xm = ie && ie.__setModuleDefault || (Object.create ? function(r, e) {
  Object.defineProperty(r, "default", { enumerable: !0, value: e });
} : function(r, e) {
  r.default = e;
}), Zm = ie && ie.__importStar || function(r) {
  if (r && r.__esModule)
    return r;
  var e = {};
  if (r != null)
    for (var t in r)
      t !== "default" && Object.prototype.hasOwnProperty.call(r, t) && Km(e, r, t);
  return Xm(e, r), e;
}, zt = ie && ie.__awaiter || function(r, e, t, i) {
  function n(a) {
    return a instanceof t ? a : new t(function(l) {
      l(a);
    });
  }
  return new (t || (t = Promise))(function(a, l) {
    function o(h) {
      try {
        d(i.next(h));
      } catch (u) {
        l(u);
      }
    }
    function s(h) {
      try {
        d(i.throw(h));
      } catch (u) {
        l(u);
      }
    }
    function d(h) {
      h.done ? a(h.value) : n(h.value).then(o, s);
    }
    d((i = i.apply(r, e || [])).next());
  });
}, Lt = ie && ie.__generator || function(r, e) {
  var t = { label: 0, sent: function() {
    if (a[0] & 1)
      throw a[1];
    return a[1];
  }, trys: [], ops: [] }, i, n, a, l;
  return l = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol == "function" && (l[Symbol.iterator] = function() {
    return this;
  }), l;
  function o(d) {
    return function(h) {
      return s([d, h]);
    };
  }
  function s(d) {
    if (i)
      throw new TypeError("Generator is already executing.");
    for (; l && (l = 0, d[0] && (t = 0)), t; )
      try {
        if (i = 1, n && (a = d[0] & 2 ? n.return : d[0] ? n.throw || ((a = n.return) && a.call(n), 0) : n.next) && !(a = a.call(n, d[1])).done)
          return a;
        switch (n = 0, a && (d = [d[0] & 2, a.value]), d[0]) {
          case 0:
          case 1:
            a = d;
            break;
          case 4:
            return t.label++, { value: d[1], done: !1 };
          case 5:
            t.label++, n = d[1], d = [0];
            continue;
          case 7:
            d = t.ops.pop(), t.trys.pop();
            continue;
          default:
            if (a = t.trys, !(a = a.length > 0 && a[a.length - 1]) && (d[0] === 6 || d[0] === 2)) {
              t = 0;
              continue;
            }
            if (d[0] === 3 && (!a || d[1] > a[0] && d[1] < a[3])) {
              t.label = d[1];
              break;
            }
            if (d[0] === 6 && t.label < a[1]) {
              t.label = a[1], a = d;
              break;
            }
            if (a && t.label < a[2]) {
              t.label = a[2], t.ops.push(d);
              break;
            }
            a[2] && t.ops.pop(), t.trys.pop();
            continue;
        }
        d = e.call(r, t);
      } catch (h) {
        d = [6, h], n = 0;
      } finally {
        i = a = 0;
      }
    if (d[0] & 5)
      throw d[1];
    return { value: d[0] ? d[1] : void 0, done: !0 };
  }
}, Ri = ie && ie.__values || function(r) {
  var e = typeof Symbol == "function" && Symbol.iterator, t = e && r[e], i = 0;
  if (t)
    return t.call(r);
  if (r && typeof r.length == "number")
    return {
      next: function() {
        return r && i >= r.length && (r = void 0), { value: r && r[i++], done: !r };
      }
    };
  throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Jm = ie && ie.__read || function(r, e) {
  var t = typeof Symbol == "function" && r[Symbol.iterator];
  if (!t)
    return r;
  var i = t.call(r), n, a = [], l;
  try {
    for (; (e === void 0 || e-- > 0) && !(n = i.next()).done; )
      a.push(n.value);
  } catch (o) {
    l = { error: o };
  } finally {
    try {
      n && !n.done && (t = i.return) && t.call(i);
    } finally {
      if (l)
        throw l.error;
    }
  }
  return a;
};
Object.defineProperty(pi, "__esModule", { value: !0 });
pi.ImportResolver = void 0;
var Ym = gi, Qm = Sr, Re = Zm(ki), We = wr, $m = Ir, eu = (
  /** @class */
  function() {
    function r(e) {
      var t, i;
      if (this.options = e, this.loadedFiles = [], this.dependencyParser = new Ym.DependencyParser(), this.cache = e.sourceCache, this.sourceResolver = e.sourceResolver, this.newImportsResolved = !1, this.monaco = e.monaco, e.preloadPackages && e.versions) {
        this.versions = e.versions;
        try {
          for (var n = Ri(Object.entries(e.versions)), a = n.next(); !a.done; a = n.next()) {
            var l = Jm(a.value, 2), o = l[0], s = l[1];
            this.resolveImport({
              kind: "package",
              packageName: o,
              importPath: ""
            }, new $m.RecursionDepth(this.options)).catch(function(d) {
              console.error(d);
            });
          }
        } catch (d) {
          t = { error: d };
        } finally {
          try {
            a && !a.done && (i = n.return) && i.call(n);
          } finally {
            if (t)
              throw t.error;
          }
        }
      }
    }
    return r.prototype.wereNewImportsResolved = function() {
      return this.newImportsResolved;
    }, r.prototype.resetNewImportsResolved = function() {
      this.newImportsResolved = !1;
    }, r.prototype.resolveImportsInFile = function(e, t, i) {
      var n, a, l;
      return zt(this, void 0, void 0, function() {
        var o, s, d, h, u, p, b, k;
        return Lt(this, function(g) {
          switch (g.label) {
            case 0:
              if (i.shouldStop())
                return [
                  2
                  /*return*/
                ];
              o = this.dependencyParser.parseDependencies(e, t), g.label = 1;
            case 1:
              g.trys.push([1, 8, 9, 10]), s = Ri(o), d = s.next(), g.label = 2;
            case 2:
              if (d.done)
                return [3, 7];
              h = d.value, g.label = 3;
            case 3:
              return g.trys.push([3, 5, , 6]), [4, this.resolveImport(h, i)];
            case 4:
              return g.sent(), [3, 6];
            case 5:
              return u = g.sent(), this.options.onError ? (a = (n = this.options).onError) === null || a === void 0 || a.call(n, (l = u.message) !== null && l !== void 0 ? l : u) : console.error(u), [3, 6];
            case 6:
              return d = s.next(), [3, 2];
            case 7:
              return [3, 10];
            case 8:
              return p = g.sent(), b = { error: p }, [3, 10];
            case 9:
              try {
                d && !d.done && (k = s.return) && k.call(s);
              } finally {
                if (b)
                  throw b.error;
              }
              return [
                7
                /*endfinally*/
              ];
            case 10:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, r.prototype.resolveImport = function(e, t) {
      return zt(this, void 0, void 0, function() {
        var i, n, a;
        return Lt(this, function(l) {
          switch (l.label) {
            case 0:
              if (i = this.hashImportResourcePath(e), this.loadedFiles.includes(i))
                return [
                  2
                  /*return*/
                ];
              switch (this.loadedFiles.push(i), n = e.kind, n) {
                case "package":
                  return [3, 1];
                case "relative":
                  return [3, 5];
                case "relative-in-package":
                  return [3, 6];
              }
              return [3, 8];
            case 1:
              return [4, this.resolveImportFromPackageRoot(e)];
            case 2:
              return a = l.sent(), a ? [4, this.resolveImportInPackage(a, t.nextPackage().nextFile())] : [3, 4];
            case 3:
              return [2, l.sent()];
            case 4:
              return [3, 8];
            case 5:
              throw Error("Not implemented yet");
            case 6:
              return [4, this.resolveImportInPackage(e, t.nextFile())];
            case 7:
              return [2, l.sent()];
            case 8:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, r.prototype.resolveImportInPackage = function(e, t) {
      return zt(this, void 0, void 0, function() {
        var i, n, a;
        return Lt(this, function(l) {
          switch (l.label) {
            case 0:
              return [4, this.loadSourceFileContents(e)];
            case 1:
              return i = l.sent(), i ? (n = i.source, a = i.at, this.createModel(n, this.monaco.Uri.parse(this.options.fileRootPath + Re.join("node_modules/".concat(e.packageName), a))), [4, this.resolveImportsInFile(n, {
                kind: "relative-in-package",
                packageName: e.packageName,
                sourcePath: Re.dirname(a),
                importPath: ""
              }, t)]) : [3, 3];
            case 2:
              l.sent(), l.label = 3;
            case 3:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, r.prototype.resolveImportFromPackageRoot = function(e) {
      var t, i, n, a, l, o, s, d, h;
      return zt(this, void 0, void 0, function() {
        var u, p, b, k, g, f, m, c, _, f;
        return Lt(this, function(v) {
          switch (v.label) {
            case 0:
              return u = {
                type: "LookedUpPackage",
                package: e.packageName,
                definitelyTyped: !1,
                success: !1
              }, this.options.onlySpecifiedPackages && !(!((t = this.versions) === null || t === void 0) && t[e.packageName]) && !(!((i = this.versions) === null || i === void 0) && i["@types/" + e.packageName]) ? ((0, We.invokeUpdate)(u, this.options), [
                2
                /*return*/
              ]) : (p = (a = (n = e.importPath) === null || n === void 0 ? void 0 : n.length) !== null && a !== void 0 ? a : 0 > 0, b = p ? "/".concat(e.importPath) : "", [4, this.resolvePackageJson(e.packageName, (l = this.versions) === null || l === void 0 ? void 0 : l[e.packageName], p ? e.importPath : void 0)]);
            case 1:
              return k = v.sent(), !k && p ? [4, this.resolvePackageJson(e.packageName, (o = this.versions) === null || o === void 0 ? void 0 : o[e.packageName])] : [3, 3];
            case 2:
              k = v.sent(), b = "", v.label = 3;
            case 3:
              return k ? (g = JSON.parse(k), g.typings || g.types ? (f = g.typings || g.types, this.createModel(k, this.monaco.Uri.parse("".concat(this.options.fileRootPath, "node_modules/").concat(e.packageName).concat(b, "/package.json"))), (0, We.invokeUpdate)({
                type: "LookedUpPackage",
                package: e.packageName,
                definitelyTyped: !1,
                success: !0
              }, this.options), this.setVersion(e.packageName, g.version), [2, {
                kind: "relative-in-package",
                packageName: e.packageName,
                sourcePath: "",
                importPath: Re.join((s = e.importPath) !== null && s !== void 0 ? s : "", f.startsWith("./") ? f.slice(2) : f)
              }]) : [3, 4]) : [3, 7];
            case 4:
              return m = "@types/".concat(e.packageName.startsWith("@") ? e.packageName.slice(1).replace(/\//, "__") : e.packageName), [4, this.resolvePackageJson(m, (d = this.versions) === null || d === void 0 ? void 0 : d[m])];
            case 5:
              if (c = v.sent(), c) {
                if (_ = JSON.parse(c), _.typings || _.types)
                  return f = _.typings || _.types, this.createModel(c, this.monaco.Uri.parse("".concat(this.options.fileRootPath, "node_modules/").concat(m, "/package.json"))), (0, We.invokeUpdate)({
                    type: "LookedUpPackage",
                    package: m,
                    definitelyTyped: !0,
                    success: !0
                  }, this.options), this.setVersion(m, _.version), [2, {
                    kind: "relative-in-package",
                    packageName: m,
                    sourcePath: "",
                    importPath: Re.join((h = e.importPath) !== null && h !== void 0 ? h : "", f.startsWith("./") ? f.slice(2) : f)
                  }];
                (0, We.invokeUpdate)(u, this.options);
              } else
                (0, We.invokeUpdate)(u, this.options);
              v.label = 6;
            case 6:
              return [3, 8];
            case 7:
              (0, We.invokeUpdate)(u, this.options), v.label = 8;
            case 8:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, r.prototype.loadSourceFileContents = function(e) {
      return zt(this, void 0, void 0, function() {
        var t, i, n, a, l, k, o, s, d, b, k, h, u, p, b, k, g, m;
        return Lt(this, function(c) {
          switch (c.label) {
            case 0:
              return t = Re.join(e.packageName, e.sourcePath, e.importPath), i = {
                type: "LookedUpTypeFile",
                path: t,
                definitelyTyped: !1,
                success: !1
              }, n = e.packageName, a = this.getVersion(e.packageName), l = [".d.ts", "/index.d.ts", ".ts", ".tsx", "/index.ts", "/index.tsx"], l.map(function(_) {
                return e.importPath.endsWith(_);
              }).reduce(function(_, f) {
                return _ || f;
              }, !1) ? [4, this.resolveSourceFile(n, a, Re.join(e.sourcePath, e.importPath))] : [3, 2];
            case 1:
              return k = c.sent(), k ? [2, { source: k, at: Re.join(e.sourcePath, e.importPath) }] : [3, 9];
            case 2:
              c.trys.push([2, 7, 8, 9]), o = Ri(l), s = o.next(), c.label = 3;
            case 3:
              return s.done ? [3, 6] : (d = s.value, b = Re.join(e.sourcePath, e.importPath) + d, [4, this.resolveSourceFile(n, a, b)]);
            case 4:
              if (k = c.sent(), (0, We.invokeUpdate)({
                type: "AttemptedLookUpFile",
                path: Re.join(n, b),
                success: !!k
              }, this.options), k)
                return (0, We.invokeUpdate)({
                  type: "LookedUpTypeFile",
                  path: Re.join(n, b),
                  success: !0
                }, this.options), [2, { source: k, at: b }];
              c.label = 5;
            case 5:
              return s = o.next(), [3, 3];
            case 6:
              return [3, 9];
            case 7:
              return h = c.sent(), g = { error: h }, [3, 9];
            case 8:
              try {
                s && !s.done && (m = o.return) && m.call(o);
              } finally {
                if (g)
                  throw g.error;
              }
              return [
                7
                /*endfinally*/
              ];
            case 9:
              return [4, this.resolvePackageJson(n, a, Re.join(e.sourcePath, e.importPath))];
            case 10:
              return u = c.sent(), u ? (p = JSON.parse(u).types, p ? (b = Re.join(e.sourcePath, e.importPath, p), [4, this.resolveSourceFile(n, a, b)]) : [3, 12]) : [3, 12];
            case 11:
              if (k = c.sent(), k)
                return (0, We.invokeUpdate)({
                  type: "LookedUpTypeFile",
                  path: Re.join(n, b),
                  success: !0
                }, this.options), [2, { source: k, at: b }];
              c.label = 12;
            case 12:
              return (0, We.invokeUpdate)(i, this.options), [2, null];
          }
        });
      });
    }, r.prototype.getVersion = function(e) {
      var t;
      return (t = this.versions) === null || t === void 0 ? void 0 : t[e];
    }, r.prototype.setVersions = function(e) {
      var t, i;
      this.versions = e, (i = (t = this.options).onUpdateVersions) === null || i === void 0 || i.call(t, e);
    }, r.prototype.setVersion = function(e, t) {
      var i;
      this.setVersions(Yr(Yr({}, this.versions), (i = {}, i[e] = t, i)));
    }, r.prototype.createModel = function(e, t) {
      t = t.with({ path: t.path.replace("@types/", "") }), this.monaco.editor.getModel(t) || (this.monaco.editor.createModel(e, "typescript", t), this.newImportsResolved = !0);
    }, r.prototype.hashImportResourcePath = function(e) {
      return (0, Qm.importResourcePathToString)(e);
    }, r.prototype.resolvePackageJson = function(e, t, i) {
      return zt(this, void 0, void 0, function() {
        var n, a, l, o;
        return Lt(this, function(s) {
          switch (s.label) {
            case 0:
              return n = Re.join(e + (t ? "@".concat(t) : ""), i ?? "", "package.json"), a = !1, l = void 0, this.cache.isFileAvailable ? [4, this.cache.isFileAvailable(n)] : [3, 2];
            case 1:
              return a = s.sent(), [3, 4];
            case 2:
              return [4, this.cache.getFile(n)];
            case 3:
              l = s.sent(), a = l !== void 0, s.label = 4;
            case 4:
              return a ? l == null ? [3, 5] : (o = l, [3, 7]) : [3, 8];
            case 5:
              return [4, this.cache.getFile(n)];
            case 6:
              o = s.sent(), s.label = 7;
            case 7:
              return [2, o];
            case 8:
              return [4, this.sourceResolver.resolvePackageJson(e, t, i)];
            case 9:
              return l = s.sent(), l && this.cache.storeFile(n, l), [2, l];
          }
        });
      });
    }, r.prototype.resolveSourceFile = function(e, t, i) {
      return zt(this, void 0, void 0, function() {
        var n, a, l, o;
        return Lt(this, function(s) {
          switch (s.label) {
            case 0:
              return n = Re.join(e + (t ? "@".concat(t) : ""), i), a = !1, l = void 0, this.cache.isFileAvailable ? [4, this.cache.isFileAvailable(n)] : [3, 2];
            case 1:
              return a = s.sent(), [3, 4];
            case 2:
              return [4, this.cache.getFile(n)];
            case 3:
              l = s.sent(), a = l !== void 0, s.label = 4;
            case 4:
              return a ? ((0, We.invokeUpdate)({
                type: "LoadedFromCache",
                importPath: n
              }, this.options), l == null ? [3, 5] : (o = l, [3, 7])) : [3, 8];
            case 5:
              return [4, this.cache.getFile(n)];
            case 6:
              o = s.sent(), s.label = 7;
            case 7:
              return [2, o];
            case 8:
              return [4, this.sourceResolver.resolveSourceFile(e, t, i)];
            case 9:
              return l = s.sent(), l && ((0, We.invokeUpdate)({
                type: "StoredToCache",
                importPath: n
              }, this.options), this.cache.storeFile(n, l)), [2, l];
          }
        });
      });
    }, r;
  }()
);
pi.ImportResolver = eu;
var Gt = ie && ie.__assign || function() {
  return Gt = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, Gt.apply(this, arguments);
}, tu = ie && ie.__createBinding || (Object.create ? function(r, e, t, i) {
  i === void 0 && (i = t);
  var n = Object.getOwnPropertyDescriptor(e, t);
  (!n || ("get" in n ? !e.__esModule : n.writable || n.configurable)) && (n = { enumerable: !0, get: function() {
    return e[t];
  } }), Object.defineProperty(r, i, n);
} : function(r, e, t, i) {
  i === void 0 && (i = t), r[i] = e[t];
}), ru = ie && ie.__setModuleDefault || (Object.create ? function(r, e) {
  Object.defineProperty(r, "default", { enumerable: !0, value: e });
} : function(r, e) {
  r.default = e;
}), iu = ie && ie.__importStar || function(r) {
  if (r && r.__esModule)
    return r;
  var e = {};
  if (r != null)
    for (var t in r)
      t !== "default" && Object.prototype.hasOwnProperty.call(r, t) && tu(e, r, t);
  return ru(e, r), e;
}, Or = ie && ie.__awaiter || function(r, e, t, i) {
  function n(a) {
    return a instanceof t ? a : new t(function(l) {
      l(a);
    });
  }
  return new (t || (t = Promise))(function(a, l) {
    function o(h) {
      try {
        d(i.next(h));
      } catch (u) {
        l(u);
      }
    }
    function s(h) {
      try {
        d(i.throw(h));
      } catch (u) {
        l(u);
      }
    }
    function d(h) {
      h.done ? a(h.value) : n(h.value).then(o, s);
    }
    d((i = i.apply(r, e || [])).next());
  });
}, Dr = ie && ie.__generator || function(r, e) {
  var t = { label: 0, sent: function() {
    if (a[0] & 1)
      throw a[1];
    return a[1];
  }, trys: [], ops: [] }, i, n, a, l;
  return l = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol == "function" && (l[Symbol.iterator] = function() {
    return this;
  }), l;
  function o(d) {
    return function(h) {
      return s([d, h]);
    };
  }
  function s(d) {
    if (i)
      throw new TypeError("Generator is already executing.");
    for (; l && (l = 0, d[0] && (t = 0)), t; )
      try {
        if (i = 1, n && (a = d[0] & 2 ? n.return : d[0] ? n.throw || ((a = n.return) && a.call(n), 0) : n.next) && !(a = a.call(n, d[1])).done)
          return a;
        switch (n = 0, a && (d = [d[0] & 2, a.value]), d[0]) {
          case 0:
          case 1:
            a = d;
            break;
          case 4:
            return t.label++, { value: d[1], done: !1 };
          case 5:
            t.label++, n = d[1], d = [0];
            continue;
          case 7:
            d = t.ops.pop(), t.trys.pop();
            continue;
          default:
            if (a = t.trys, !(a = a.length > 0 && a[a.length - 1]) && (d[0] === 6 || d[0] === 2)) {
              t = 0;
              continue;
            }
            if (d[0] === 3 && (!a || d[1] > a[0] && d[1] < a[3])) {
              t.label = d[1];
              break;
            }
            if (d[0] === 6 && t.label < a[1]) {
              t.label = a[1], a = d;
              break;
            }
            if (a && t.label < a[2]) {
              t.label = a[2], t.ops.push(d);
              break;
            }
            a[2] && t.ops.pop(), t.trys.pop();
            continue;
        }
        d = e.call(r, t);
      } catch (h) {
        d = [6, h], n = 0;
      } finally {
        i = a = 0;
      }
    if (d[0] & 5)
      throw d[1];
    return { value: d[0] ? d[1] : void 0, done: !0 };
  }
}, ou = ie && ie.__values || function(r) {
  var e = typeof Symbol == "function" && Symbol.iterator, t = e && r[e], i = 0;
  if (t)
    return t.call(r);
  if (r && typeof r.length == "number")
    return {
      next: function() {
        return r && i >= r.length && (r = void 0), { value: r && r[i++], done: !r };
      }
    };
  throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(fi, "__esModule", { value: !0 });
fi.AutoTypingsCore = void 0;
var nu = hi, au = yr, su = pi, du = iu(ki), nn = wr, lu = Ir, mu = (
  /** @class */
  function() {
    function r(e, t) {
      var i = this;
      this.editor = e, this.options = t, this.disposables = [], this.importResolver = new su.ImportResolver(t);
      var n = e.onDidChangeModelContent(function(a) {
        i.debouncedResolveContents();
      });
      this.disposables.push(n), this.resolveContents(), t.dontAdaptEditorOptions || t.monaco.languages.typescript.typescriptDefaults.setCompilerOptions(Gt(Gt({}, t.monaco.languages.typescript.typescriptDefaults.getCompilerOptions()), { moduleResolution: t.monaco.languages.typescript.ModuleResolutionKind.NodeJs, allowSyntheticDefaultImports: !0, rootDir: t.fileRootPath }));
    }
    return r.create = function(e, t) {
      var i;
      return Or(this, void 0, void 0, function() {
        var n;
        return Dr(this, function(a) {
          if (t != null && t.shareCache && t.sourceCache && !r.sharedCache && (r.sharedCache = t.sourceCache), n = t == null ? void 0 : t.monaco, !n)
            throw new Error("monacoInstance not found, you can specify the monaco instance via options.monaco");
          return [2, new r(e, Gt(Gt({ fileRootPath: "inmemory://model/", onlySpecifiedPackages: !1, preloadPackages: !1, shareCache: !1, dontAdaptEditorOptions: !1, dontRefreshModelValueAfterResolvement: !1, sourceCache: (i = r.sharedCache) !== null && i !== void 0 ? i : new nu.DummySourceCache(), sourceResolver: new au.UnpkgSourceResolver(), debounceDuration: 4e3, fileRecursionDepth: 10, packageRecursionDepth: 3 }, t), { monaco: n }))];
        });
      });
    }, r.prototype.dispose = function() {
      var e, t;
      try {
        for (var i = ou(this.disposables), n = i.next(); !n.done; n = i.next()) {
          var a = n.value;
          a.dispose();
        }
      } catch (l) {
        e = { error: l };
      } finally {
        try {
          n && !n.done && (t = i.return) && t.call(i);
        } finally {
          if (e)
            throw e.error;
        }
      }
    }, r.prototype.setVersions = function(e) {
      this.importResolver.setVersions(e), this.options.versions = e;
    }, r.prototype.clearCache = function() {
      return Or(this, void 0, void 0, function() {
        return Dr(this, function(e) {
          switch (e.label) {
            case 0:
              return [4, this.options.sourceCache.clear()];
            case 1:
              return e.sent(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, r.prototype.debouncedResolveContents = function() {
      var e = this;
      this.isResolving || ((0, nn.invokeUpdate)({
        type: "CodeChanged"
      }, this.options), this.options.debounceDuration <= 0 ? this.resolveContents() : (this.debounceTimer !== void 0 && clearTimeout(this.debounceTimer), this.debounceTimer = setTimeout(function() {
        return Or(e, void 0, void 0, function() {
          return Dr(this, function(t) {
            switch (t.label) {
              case 0:
                return [4, this.resolveContents()];
              case 1:
                return t.sent(), this.debounceTimer = void 0, [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, this.options.debounceDuration)));
    }, r.prototype.resolveContents = function() {
      var e;
      return Or(this, void 0, void 0, function() {
        var t, i, n, a;
        return Dr(this, function(l) {
          switch (l.label) {
            case 0:
              if (this.isResolving = !0, (0, nn.invokeUpdate)({
                type: "ResolveNewImports"
              }, this.options), t = this.editor.getModel(), !t)
                throw Error("No model");
              i = t.getLinesContent(), l.label = 1;
            case 1:
              return l.trys.push([1, 3, , 4]), [4, this.importResolver.resolveImportsInFile(i.join(`
`), du.dirname(t.uri.toString()), new lu.RecursionDepth(this.options))];
            case 2:
              return l.sent(), [3, 4];
            case 3:
              if (n = l.sent(), this.options.onError)
                this.options.onError((e = n.message) !== null && e !== void 0 ? e : n);
              else
                throw n;
              return [3, 4];
            case 4:
              return this.importResolver.wereNewImportsResolved() && (this.options.dontRefreshModelValueAfterResolvement || (a = this.editor.getPosition(), t.setValue(t.getValue()), a && this.editor.setPosition(a)), this.importResolver.resetNewImportsResolved()), this.isResolving = !1, [
                2
                /*return*/
              ];
          }
        });
      });
    }, r;
  }()
);
fi.AutoTypingsCore = mu;
var uu = ie && ie.__extends || function() {
  var r = function(e, t) {
    return r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(i, n) {
      i.__proto__ = n;
    } || function(i, n) {
      for (var a in n)
        Object.prototype.hasOwnProperty.call(n, a) && (i[a] = n[a]);
    }, r(e, t);
  };
  return function(e, t) {
    if (typeof t != "function" && t !== null)
      throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
    r(e, t);
    function i() {
      this.constructor = e;
    }
    e.prototype = t === null ? Object.create(t) : (i.prototype = t.prototype, new i());
  };
}();
Object.defineProperty(_i, "__esModule", { value: !0 });
_i.AutoTypings = void 0;
var cu = fi, _u = (
  /** @class */
  function(r) {
    uu(e, r);
    function e(t, i) {
      return r.call(this, t, i) || this;
    }
    return e;
  }(cu.AutoTypingsCore)
);
_i.AutoTypings = _u;
var vi = {}, Pi = ie && ie.__awaiter || function(r, e, t, i) {
  function n(a) {
    return a instanceof t ? a : new t(function(l) {
      l(a);
    });
  }
  return new (t || (t = Promise))(function(a, l) {
    function o(h) {
      try {
        d(i.next(h));
      } catch (u) {
        l(u);
      }
    }
    function s(h) {
      try {
        d(i.throw(h));
      } catch (u) {
        l(u);
      }
    }
    function d(h) {
      h.done ? a(h.value) : n(h.value).then(o, s);
    }
    d((i = i.apply(r, e || [])).next());
  });
}, Mi = ie && ie.__generator || function(r, e) {
  var t = { label: 0, sent: function() {
    if (a[0] & 1)
      throw a[1];
    return a[1];
  }, trys: [], ops: [] }, i, n, a, l;
  return l = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol == "function" && (l[Symbol.iterator] = function() {
    return this;
  }), l;
  function o(d) {
    return function(h) {
      return s([d, h]);
    };
  }
  function s(d) {
    if (i)
      throw new TypeError("Generator is already executing.");
    for (; l && (l = 0, d[0] && (t = 0)), t; )
      try {
        if (i = 1, n && (a = d[0] & 2 ? n.return : d[0] ? n.throw || ((a = n.return) && a.call(n), 0) : n.next) && !(a = a.call(n, d[1])).done)
          return a;
        switch (n = 0, a && (d = [d[0] & 2, a.value]), d[0]) {
          case 0:
          case 1:
            a = d;
            break;
          case 4:
            return t.label++, { value: d[1], done: !1 };
          case 5:
            t.label++, n = d[1], d = [0];
            continue;
          case 7:
            d = t.ops.pop(), t.trys.pop();
            continue;
          default:
            if (a = t.trys, !(a = a.length > 0 && a[a.length - 1]) && (d[0] === 6 || d[0] === 2)) {
              t = 0;
              continue;
            }
            if (d[0] === 3 && (!a || d[1] > a[0] && d[1] < a[3])) {
              t.label = d[1];
              break;
            }
            if (d[0] === 6 && t.label < a[1]) {
              t.label = a[1], a = d;
              break;
            }
            if (a && t.label < a[2]) {
              t.label = a[2], t.ops.push(d);
              break;
            }
            a[2] && t.ops.pop(), t.trys.pop();
            continue;
        }
        d = e.call(r, t);
      } catch (h) {
        d = [6, h], n = 0;
      } finally {
        i = a = 0;
      }
    if (d[0] & 5)
      throw d[1];
    return { value: d[0] ? d[1] : void 0, done: !0 };
  }
}, fu = ie && ie.__values || function(r) {
  var e = typeof Symbol == "function" && Symbol.iterator, t = e && r[e], i = 0;
  if (t)
    return t.call(r);
  if (r && typeof r.length == "number")
    return {
      next: function() {
        return r && i >= r.length && (r = void 0), { value: r && r[i++], done: !r };
      }
    };
  throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(vi, "__esModule", { value: !0 });
vi.LocalStorageCache = void 0;
var hu = (
  /** @class */
  function() {
    function r() {
      this.localCache = {};
    }
    return r.prototype.getFile = function(e) {
      var t;
      return Pi(this, void 0, void 0, function() {
        return Mi(this, function(i) {
          try {
            return [2, (t = localStorage.getItem(r.LOCALSTORAGE_PREFIX + e)) !== null && t !== void 0 ? t : void 0];
          } catch {
            return [2, this.localCache[e]];
          }
          return [
            2
            /*return*/
          ];
        });
      });
    }, r.prototype.storeFile = function(e, t) {
      return Pi(this, void 0, void 0, function() {
        return Mi(this, function(i) {
          this.localCache[e] = t;
          try {
            localStorage.setItem(r.LOCALSTORAGE_PREFIX + e, t);
          } catch {
          }
          return [
            2
            /*return*/
          ];
        });
      });
    }, r.prototype.clear = function() {
      return Pi(this, void 0, void 0, function() {
        var e, t, a, i, n, a, l, o;
        return Mi(this, function(s) {
          for (this.localCache = {}, e = [], t = 0; t < localStorage.length; t++)
            a = localStorage.key(t), a != null && a.startsWith(r.LOCALSTORAGE_PREFIX) && e.push(a);
          try {
            for (i = fu(e), n = i.next(); !n.done; n = i.next())
              a = n.value, localStorage.removeItem(a);
          } catch (d) {
            l = { error: d };
          } finally {
            try {
              n && !n.done && (o = i.return) && o.call(i);
            } finally {
              if (l)
                throw l.error;
            }
          }
          return [
            2
            /*return*/
          ];
        });
      });
    }, r.LOCALSTORAGE_PREFIX = "__autotyper_cache_", r;
  }()
);
vi.LocalStorageCache = hu;
var Ca = {};
Object.defineProperty(Ca, "__esModule", { value: !0 });
var ya = {};
Object.defineProperty(ya, "__esModule", { value: !0 });
var Sa = {};
Object.defineProperty(Sa, "__esModule", { value: !0 });
var wa = {};
Object.defineProperty(wa, "__esModule", { value: !0 });
(function(r) {
  var e = ie && ie.__createBinding || (Object.create ? function(i, n, a, l) {
    l === void 0 && (l = a);
    var o = Object.getOwnPropertyDescriptor(n, a);
    (!o || ("get" in o ? !n.__esModule : o.writable || o.configurable)) && (o = { enumerable: !0, get: function() {
      return n[a];
    } }), Object.defineProperty(i, l, o);
  } : function(i, n, a, l) {
    l === void 0 && (l = a), i[l] = n[a];
  }), t = ie && ie.__exportStar || function(i, n) {
    for (var a in i)
      a !== "default" && !Object.prototype.hasOwnProperty.call(n, a) && e(n, i, a);
  };
  Object.defineProperty(r, "__esModule", { value: !0 }), t(_i, r), t(Sr, r), t(vi, r), t(Ca, r), t(ya, r), t(Sa, r), t(wa, r), t(yr, r);
})(ha);
var Ia = ha;
const pu = new Ia.LocalStorageCache();
async function gu(r, e, t, i, n) {
  Ia.AutoTypings.create(r, { monaco: e, sourceCache: pu, fileRootPath: "./" });
  let a = "";
  try {
    a = await t.readFile(i, "utf-8");
  } catch {
  }
  r.setValue(a), n && (r.updateOptions({ readOnly: !1 }), n.syncEditor(r));
}
function Ci() {
  const [r, e] = he(matchMedia("(prefers-color-scheme: dark)").matches);
  return se(() => {
    const t = matchMedia("(prefers-color-scheme: dark)"), i = () => e(t.matches);
    return t.addEventListener("change", i), () => t.removeEventListener("change", i);
  }, []), r;
}
function bu(r) {
  const e = Ci();
  return /* @__PURE__ */ De(
    gm,
    {
      path: r.path,
      theme: e ? "vs-dark" : "vs-light",
      options: { readOnly: !0, padding: { top: 10 } },
      onMount: (t, i) => gu(t, i, r.fs, r.path, r.sync),
      onChange: (t) => r.fs.writeFile(r.path, t || "", "utf-8")
    }
  );
}
var ft;
(function(r) {
  r.DoubleClickItemToExpand = "double-click-item-to-expand", r.ClickItemToExpand = "click-item-to-expand", r.ClickArrowToExpand = "click-arrow-to-expand";
})(ft || (ft = {}));
var Qr = globalThis && globalThis.__assign || function() {
  return Qr = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, Qr.apply(this, arguments);
}, ku = function(r, e) {
  return {
    mode: r.mode,
    createInteractiveElementProps: function(t, i, n, a) {
      return Qr(Qr({}, e.createInteractiveElementProps(t, i, n, a)), r.createInteractiveElementProps(t, i, n, a));
    }
  };
}, bo = function(r) {
  return r.ctrlKey || navigator.platform.toUpperCase().indexOf("MAC") >= 0 && r.metaKey;
}, vu = (
  /** @class */
  function() {
    function r(e) {
      this.mode = ft.DoubleClickItemToExpand, this.environment = e;
    }
    return r.prototype.createInteractiveElementProps = function(e, t, i, n) {
      var a = this;
      return {
        onClick: function(l) {
          i.focusItem(), l.shiftKey ? i.selectUpTo(!l.ctrlKey) : bo(l) ? n.isSelected ? i.unselectItem() : i.addToSelectedItems() : i.selectItem();
        },
        onDoubleClick: function() {
          i.focusItem(), i.selectItem(), e.isFolder && i.toggleExpandedState(), (!e.isFolder || a.environment.canInvokePrimaryActionOnItemContainer) && i.primaryAction();
        },
        onFocus: function() {
          i.focusItem();
        },
        onDragStart: function(l) {
          l.dataTransfer.dropEffect = "move", i.startDragging();
        },
        onDragOver: function(l) {
          l.preventDefault();
        },
        draggable: n.canDrag && !n.isRenaming,
        tabIndex: n.isRenaming ? void 0 : n.isFocused ? 0 : -1
      };
    }, r;
  }()
), Cu = (
  /** @class */
  function() {
    function r(e) {
      this.mode = ft.ClickItemToExpand, this.environment = e;
    }
    return r.prototype.createInteractiveElementProps = function(e, t, i, n) {
      var a = this;
      return {
        onClick: function(l) {
          i.focusItem(), l.shiftKey ? i.selectUpTo(!l.ctrlKey) : bo(l) ? n.isSelected ? i.unselectItem() : i.addToSelectedItems() : (e.isFolder && i.toggleExpandedState(), i.selectItem(), (!e.isFolder || a.environment.canInvokePrimaryActionOnItemContainer) && i.primaryAction());
        },
        onFocus: function() {
          i.focusItem();
        },
        onDragStart: function(l) {
          l.dataTransfer.dropEffect = "move", i.startDragging();
        },
        onDragOver: function(l) {
          l.preventDefault();
        },
        draggable: n.canDrag && !n.isRenaming,
        tabIndex: n.isRenaming ? void 0 : n.isFocused ? 0 : -1
      };
    }, r;
  }()
), yu = (
  /** @class */
  function() {
    function r(e) {
      this.mode = ft.ClickItemToExpand, this.environment = e;
    }
    return r.prototype.createInteractiveElementProps = function(e, t, i, n) {
      var a = this;
      return {
        onClick: function(l) {
          i.focusItem(), l.shiftKey ? i.selectUpTo(!l.ctrlKey) : bo(l) ? n.isSelected ? i.unselectItem() : i.addToSelectedItems() : (i.selectItem(), (!e.isFolder || a.environment.canInvokePrimaryActionOnItemContainer) && i.primaryAction());
        },
        onFocus: function() {
          i.focusItem();
        },
        onDragStart: function(l) {
          l.dataTransfer.dropEffect = "move", i.startDragging();
        },
        onDragOver: function(l) {
          l.preventDefault();
        },
        draggable: n.canDrag && !n.isRenaming,
        tabIndex: n.isRenaming ? void 0 : n.isFocused ? 0 : -1
      };
    }, r;
  }()
), an = function(r, e) {
  switch (r) {
    case ft.DoubleClickItemToExpand:
      return new vu(e);
    case ft.ClickItemToExpand:
      return new Cu(e);
    case ft.ClickArrowToExpand:
      return new yu(e);
    default:
      throw Error("Unknown interaction mode ".concat(r));
  }
}, ja = Et(null), Su = function() {
  return tr(ja);
}, wu = function(r) {
  var e = r.children, t = ke(), i = t.defaultInteractionMode, n = ze(function() {
    var a;
    return i && typeof i != "string" ? i.extends ? ku(i, an(i.extends, t)) : i : an((a = i) !== null && a !== void 0 ? a : ft.ClickItemToExpand, t);
  }, []);
  return ne(ja.Provider, { value: n }, e);
}, ko = function() {
  var r = ke();
  return me(function(e, t) {
    for (var i = r.linearItems[t], n = i[e].depth, a = e; i[a] && i[a].depth !== n - 1; a -= 1)
      ;
    var l = i[a];
    return l || (l = { item: r.trees[t].rootItem, depth: 0 }, a = 0), { parent: l, parentLinearIndex: a };
  }, [r.linearItems, r.trees]);
}, $r = globalThis && globalThis.__assign || function() {
  return $r = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, $r.apply(this, arguments);
}, Aa = function(r, e) {
  return r.map(function(t) {
    return [t, e(t)];
  }).reduce(function(t, i) {
    var n, a = i[0], l = i[1];
    return $r($r({}, t), (n = {}, n[a] = l, n));
  }, {});
}, Ye = function() {
  return typeof document < "u" ? document : void 0;
}, Iu = function(r) {
  var e, t, i = (e = Ye()) === null || e === void 0 ? void 0 : e.querySelector('[data-rct-tree="'.concat(r, '"] [data-rct-item-container="true"]'));
  return (t = i == null ? void 0 : i.offsetHeight) !== null && t !== void 0 ? t : 5;
}, ju = function(r, e) {
  return r.clientX < e.left || r.clientX > e.right || r.clientY < e.top || r.clientY > e.bottom;
}, ei = function(r) {
  var e = oe(r);
  return e.current = r, e;
}, yi = function(r) {
  var e = ei(r);
  return me(function() {
    for (var t = [], i = 0; i < arguments.length; i++)
      t[i] = arguments[i];
    return e.current.apply(e, t);
  }, [
    e
  ]);
}, Au = function(r, e, t, i, n, a, l, o, s) {
  var d = (r - e) / t, h = i[n], u = Math.max(0, Math.floor(d));
  if (u > h.length - 1)
    return {
      linearIndex: h.length - 1,
      targetItem: h[h.length - 1].item,
      offset: "bottom",
      targetLinearItem: h[h.length - 1]
    };
  var p = h[u], b = a[p.item], k, g = s ? b != null && b.isFolder && l || o ? 0.2 : 0.5 : 0;
  return d % 1 < g ? k = "top" : d % 1 > 1 - g && (k = "bottom"), { linearIndex: u, offset: k, targetItem: b, targetLinearItem: p };
}, Eu = function() {
  var r = ko(), e = function(t, i, n) {
    var a = r(i, t), l = a.parentLinearIndex, o = a.parent;
    return n.find(function(s) {
      return s.index === o.item;
    }) ? !0 : o.depth === 0 ? !1 : e(t, l, n);
  };
  return e;
}, xu = function(r, e, t, i, n, a) {
  var l = ke(), o = l.canDropOnFolder, s = l.canDropOnNonFolder, d = l.canDragAndDrop, h = l.linearItems, u = l.items, p = l.canReorderItems, b = l.trees, k = ko(), g = Eu();
  return yi(function(m, c, _) {
    var f, v;
    if (t && d && _.current && !(m.clientX < 0 || m.clientY < 0)) {
      var y = _.current.getBoundingClientRect(), j = ju(m, y);
      if (h[c].length === 0) {
        a({
          targetType: "root",
          treeId: c,
          depth: 0,
          linearIndex: 0,
          targetItem: b[c].rootItem
        });
        return;
      }
      var A = Au(m.clientY, y.top, i, h, c, u, o, s, p), C = A.linearIndex, I = A.offset, z = j ? "outside" : "".concat(c).concat(C).concat(I ?? "");
      if (r !== z) {
        if (e(z), j) {
          n(void 0);
          return;
        }
        if (C < 0 || C >= h[c].length) {
          n(void 0);
          return;
        }
        var P = h[c][C], L = !p && !s && !u[P.item].isFolder;
        if (L) {
          var N = k(C, c), B = N.parentLinearIndex, F = N.parent;
          P = F, C = B;
        }
        if (g(c, C, t)) {
          n(void 0);
          return;
        }
        var U = P.depth, H = u[P.item];
        if (!I && !s && !H.isFolder) {
          n(void 0);
          return;
        }
        if (!I && !o && H.isFolder) {
          n(void 0);
          return;
        }
        if (I && !p) {
          n(void 0);
          return;
        }
        var x = k(C, c).parent;
        if (t.some(function(R) {
          return R.index === P.item;
        })) {
          n(void 0);
          return;
        }
        var O = u[x.item].children.indexOf(P.item) + (I === "top" ? 0 : 1);
        I === "top" && U === ((v = (f = h[c][C - 1]) === null || f === void 0 ? void 0 : f.depth) !== null && v !== void 0 ? v : -1) && (I = "bottom", C -= 1);
        var T;
        I ? T = {
          targetType: "between-items",
          treeId: c,
          parentItem: x.item,
          depth: P.depth,
          linearIndex: C + (I === "top" ? 0 : 1),
          // childIndex: linearIndex - parentLinearIndex - 1 + (offset === 'top' ? 0 : 1),
          // childIndex: environment.items[parent.item].children!.indexOf(targetItem.item) + (offset === 'top' ? 0 : 1),
          childIndex: O,
          linePosition: I
        } : T = {
          targetType: "item",
          treeId: c,
          parentItem: x.item,
          targetItem: P.item,
          depth: P.depth,
          linearIndex: C
        }, a(T);
      }
    }
  });
}, Ea = function() {
  var r = ke();
  return me(function(e, t) {
    if (e.targetType === "between-items") {
      if (!r.canReorderItems)
        return !1;
    } else if (e.targetType === "root") {
      if (!r.canDropOnFolder)
        return !1;
    } else {
      var i = r.items[e.targetItem];
      if (!r.canDropOnFolder && i.isFolder || !r.canDropOnNonFolder && !i.isFolder)
        return !1;
    }
    return !(r.canDropAt && (!t || !r.canDropAt(t, e)));
  }, [r]);
}, sn = globalThis && globalThis.__spreadArray || function(r, e, t) {
  if (t || arguments.length === 2)
    for (var i = 0, n = e.length, a; i < n; i++)
      (a || !(i in e)) && (a || (a = Array.prototype.slice.call(e, 0, i)), a[i] = e[i]);
  return r.concat(a || Array.prototype.slice.call(e));
}, zu = function() {
  var r = ke(), e = ko(), t = Ea();
  return me(function(i, n) {
    var a = r.linearItems[i];
    return a.map(function(l, o) {
      var s, d, h = l.item, u = l.depth, p = e(o, i).parent, b = r.items[p.item].children.indexOf(h), k = {
        targetType: "item",
        parentItem: p.item,
        targetItem: h,
        linearIndex: o,
        depth: u,
        treeId: i
      }, g = {
        targetType: "between-items",
        parentItem: p.item,
        linePosition: "top",
        childIndex: b,
        depth: u,
        treeId: i,
        linearIndex: o
      }, m = {
        targetType: "between-items",
        parentItem: p.item,
        linePosition: "bottom",
        linearIndex: o + 1,
        childIndex: b + 1,
        depth: u,
        treeId: i
      }, c = u === ((d = (s = a[o - 1]) === null || s === void 0 ? void 0 : s.depth) !== null && d !== void 0 ? d : -1);
      return c ? [k, m] : [g, k, m];
    }).reduce(function(l, o) {
      return sn(sn([], l, !0), o, !0);
    }, []).filter(function(l) {
      return t(l, n);
    });
  }, [
    t,
    r.items,
    r.linearItems,
    e
  ]);
}, Tr = globalThis && globalThis.__spreadArray || function(r, e, t) {
  if (t || arguments.length === 2)
    for (var i = 0, n = e.length, a; i < n; i++)
      (a || !(i in e)) && (a || (a = Array.prototype.slice.call(e, 0, i)), a[i] = e[i]);
  return r.concat(a || Array.prototype.slice.call(e));
}, ti = function(r, e, t) {
  var i = oe();
  se(function() {
    if (!i.current)
      i.current = Tr([], t, !0), r();
    else {
      var n = i.current.some(function(a, l) {
        return a !== t[l];
      });
      n && (i.current = Tr([], t, !0), r());
    }
  }, Tr(Tr([], e, !0), t, !0));
};
function rr(r) {
  r === void 0 && (r = !1);
  var e = oe(new Array());
  return se(function() {
    if (r)
      return function() {
      };
    var t = e.current;
    return function() {
      return t.forEach(function(i) {
        return cancelAnimationFrame(i);
      });
    };
  }, [r, e]), me(function(t) {
    var i = requestAnimationFrame(function() {
      e.current.splice(e.current.indexOf(i), 1), t();
    });
    e.current.push(i);
  }, [e]);
}
var xa = Et(null), dt = function() {
  return tr(xa);
}, Lu = function(r) {
  var e = r.children, t = ke(), i = he(!1), n = i[0], a = i[1], l = he(4), o = l[0], s = l[1], d = he({}), h = d[0], u = d[1], p = he(0), b = p[0], k = p[1], g = he(), m = g[0], c = g[1], _ = he(), f = _[0], v = _[1], y = he("_nodrag"), j = y[0], A = y[1], C = zu(), I = rr(), z = me(function(V, ee) {
    var Y;
    if (t.activeTreeId && (!((Y = t.viewState[t.activeTreeId]) === null || Y === void 0) && Y.focusedItem) && t.linearItems && ee) {
      var J = t.viewState[t.activeTreeId].focusedItem, E = C(t.activeTreeId, ee), W = E.findIndex(function(K) {
        return K.targetType === "item" ? K.targetItem === J : K.targetType === "between-items" ? t.items[K.parentItem].children[K.childIndex] === J : !1;
      });
      k(W ? Math.min(W + 1, E.length - 1) : 0);
    } else
      k(0);
  }, [
    t.activeTreeId,
    t.items,
    t.linearItems,
    t.viewState,
    C
  ]), P = me(function() {
    a(!1), s(4), u({}), k(0), c(void 0), v(void 0), A("_nodrag");
  }, []);
  ti(function() {
    t.activeTreeId && t.linearItems[t.activeTreeId] && h[t.activeTreeId] && z(h[t.activeTreeId], m);
  }, [
    m,
    t.activeTreeId,
    t.linearItems,
    z,
    h
  ], [t.activeTreeId]), ti(function() {
    n && t.activeTreeId && v(h[t.activeTreeId][b]);
  }, [
    b,
    t.activeTreeId,
    n,
    h
  ], [b, t.activeTreeId]);
  var L = Ea(), N = function(V) {
    var ee;
    m && !L(V, m) || (v(V), t.setActiveTree(V.treeId), m && t.activeTreeId !== V.treeId && ((ee = t.onSelectItems) === null || ee === void 0 || ee.call(t, m.map(function(Y) {
      return Y.index;
    }), V.treeId)));
  }, B = xu(j, A, m, o, v, N), F = yi(function() {
    m && f && t.onDrop && (t.onDrop(m, f), I(function() {
      var V;
      (V = t.onFocusItem) === null || V === void 0 || V.call(t, m[0], f.treeId), P();
    }));
  }), U = me(function(V, ee) {
    var Y = Aa(t.treeIds, function(E) {
      return C(E, V);
    }), J = Iu(ee);
    s(J), c(V), u(Y), t.activeTreeId && z(Y[t.activeTreeId], V);
  }, [
    t.activeTreeId,
    t.treeIds,
    C,
    z
  ]), H = me(function() {
    var V, ee, Y;
    if (t.canDragAndDrop && t.activeTreeId) {
      var J = (ee = (V = t.viewState[t.activeTreeId]) === null || V === void 0 ? void 0 : V.selectedItems) !== null && ee !== void 0 ? ee : [
        (Y = t.viewState[t.activeTreeId]) === null || Y === void 0 ? void 0 : Y.focusedItem
      ];
      if (J.length === 0 || J[0] === void 0)
        return;
      var E = J.map(function(W) {
        return t.items[W];
      });
      if (t.canDrag && !t.canDrag(E))
        return;
      U(E, t.activeTreeId), setTimeout(function() {
        a(!0);
      });
    }
  }, [U, t]), x = me(function() {
    P();
  }, [P]), O = me(function() {
    F(), P();
  }, [F, P]), T = me(function() {
    k(function(V) {
      return Math.max(0, V - 1);
    });
  }, []), R = me(function() {
    t.activeTreeId && k(function(V) {
      return Math.min(h[t.activeTreeId].length, V + 1);
    });
  }, [t.activeTreeId, h]), G = ze(function() {
    return {
      onStartDraggingItems: U,
      startProgrammaticDrag: H,
      abortProgrammaticDrag: x,
      completeProgrammaticDrag: O,
      programmaticDragUp: T,
      programmaticDragDown: R,
      draggingItems: m,
      draggingPosition: f,
      itemHeight: o,
      isProgrammaticallyDragging: n,
      onDragOverTreeHandler: B,
      viableDragPositions: h
    };
  }, [
    U,
    H,
    x,
    O,
    T,
    R,
    m,
    f,
    o,
    n,
    B,
    h
  ]);
  return se(function() {
    return window.addEventListener("dragend", P), window.addEventListener("drop", F), function() {
      window.removeEventListener("dragend", P), window.removeEventListener("drop", F);
    };
  }, [F, P]), ne(xa.Provider, { value: G }, e);
}, _r = globalThis && globalThis.__assign || function() {
  return _r = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, _r.apply(this, arguments);
}, Ou = function(r, e) {
  var t = ke(), i = dt();
  xt(r, function() {
    return _r(_r(_r({}, e), t), { treeEnvironmentContext: t, dragAndDropContext: i });
  });
}, Du = function(r, e, t) {
  return e === void 0 && (e = 50), t === void 0 && (t = 1e4), new Promise(function(i) {
    r() && i();
    var n, a = setInterval(function() {
      r() && n();
    }, e), l = setTimeout(function() {
      n();
    }, t);
    n = function() {
      clearInterval(a), clearTimeout(l), i();
    };
  });
}, za = globalThis && globalThis.__awaiter || function(r, e, t, i) {
  function n(a) {
    return a instanceof t ? a : new t(function(l) {
      l(a);
    });
  }
  return new (t || (t = Promise))(function(a, l) {
    function o(h) {
      try {
        d(i.next(h));
      } catch (u) {
        l(u);
      }
    }
    function s(h) {
      try {
        d(i.throw(h));
      } catch (u) {
        l(u);
      }
    }
    function d(h) {
      h.done ? a(h.value) : n(h.value).then(o, s);
    }
    d((i = i.apply(r, e || [])).next());
  });
}, La = globalThis && globalThis.__generator || function(r, e) {
  var t = { label: 0, sent: function() {
    if (a[0] & 1)
      throw a[1];
    return a[1];
  }, trys: [], ops: [] }, i, n, a, l;
  return l = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol == "function" && (l[Symbol.iterator] = function() {
    return this;
  }), l;
  function o(d) {
    return function(h) {
      return s([d, h]);
    };
  }
  function s(d) {
    if (i)
      throw new TypeError("Generator is already executing.");
    for (; l && (l = 0, d[0] && (t = 0)), t; )
      try {
        if (i = 1, n && (a = d[0] & 2 ? n.return : d[0] ? n.throw || ((a = n.return) && a.call(n), 0) : n.next) && !(a = a.call(n, d[1])).done)
          return a;
        switch (n = 0, a && (d = [d[0] & 2, a.value]), d[0]) {
          case 0:
          case 1:
            a = d;
            break;
          case 4:
            return t.label++, { value: d[1], done: !1 };
          case 5:
            t.label++, n = d[1], d = [0];
            continue;
          case 7:
            d = t.ops.pop(), t.trys.pop();
            continue;
          default:
            if (a = t.trys, !(a = a.length > 0 && a[a.length - 1]) && (d[0] === 6 || d[0] === 2)) {
              t = 0;
              continue;
            }
            if (d[0] === 3 && (!a || d[1] > a[0] && d[1] < a[3])) {
              t.label = d[1];
              break;
            }
            if (d[0] === 6 && t.label < a[1]) {
              t.label = a[1], a = d;
              break;
            }
            if (a && t.label < a[2]) {
              t.label = a[2], t.ops.push(d);
              break;
            }
            a[2] && t.ops.pop(), t.trys.pop();
            continue;
        }
        d = e.call(r, t);
      } catch (h) {
        d = [6, h], n = 0;
      } finally {
        i = a = 0;
      }
    if (d[0] & 5)
      throw d[1];
    return { value: d[0] ? d[1] : void 0, done: !0 };
  }
}, dn = globalThis && globalThis.__spreadArray || function(r, e, t) {
  if (t || arguments.length === 2)
    for (var i = 0, n = e.length, a; i < n; i++)
      (a || !(i in e)) && (a || (a = Array.prototype.slice.call(e, 0, i)), a[i] = e[i]);
  return r.concat(a || Array.prototype.slice.call(e));
}, Oa = Et(null), Tu = function() {
  return tr(Oa);
}, Da = function(r, e, t) {
  return za(void 0, void 0, void 0, function() {
    var i, n, a, l, o, s, d;
    return La(this, function(h) {
      for (i = function(u) {
        Du(function() {
          var p;
          return !!(!((p = e.current) === null || p === void 0) && p[u]);
        }).then(function() {
          var p, b = (p = e.current) === null || p === void 0 ? void 0 : p[u];
          b != null && b.isFolder && (t(b), Da(u, e, t));
        });
      }, n = 0, a = (d = (s = (o = e.current) === null || o === void 0 ? void 0 : o[r]) === null || s === void 0 ? void 0 : s.children) !== null && d !== void 0 ? d : []; n < a.length; n++)
        l = a[n], i(l);
      return [
        2
        /*return*/
      ];
    });
  });
}, Nu = Qe(function(r, e) {
  var t = ke(), i = t.onCollapseItem, n = t.items, a = t.trees, l = t.viewState, o = t.onExpandItem, s = t.onFocusItem, d = t.setActiveTree, h = t.onRenameItem, u = t.onSelectItems, p = t.onPrimaryAction, b = t.linearItems, k = dt(), g = k.abortProgrammaticDrag, m = k.completeProgrammaticDrag, c = k.programmaticDragDown, _ = k.programmaticDragUp, f = k.startProgrammaticDrag, v = ei(n), y = me(function(O, T) {
    i == null || i(n[O], T);
  }, [n, i]), j = me(function(O, T) {
    o == null || o(n[O], T);
  }, [n, o]), A = me(function(O, T) {
    s == null || s(n[O], T);
  }, [n, s]), C = me(function(O, T) {
    T === void 0 && (T = !0), d(O, T);
  }, [d]), I = me(function(O) {
    var T = b[O], R = T.findIndex(function(ee) {
      var Y, J = ee.item;
      return J === ((Y = l[O]) === null || Y === void 0 ? void 0 : Y.focusedItem);
    }), G = R !== void 0 ? Math.min(T.length - 1, R + 1) : 0, V = n[T[G].item];
    s == null || s(V, O);
  }, [n, b, s, l]), z = me(function(O) {
    var T = b[O], R = T.findIndex(function(ee) {
      var Y, J = ee.item;
      return J === ((Y = l[O]) === null || Y === void 0 ? void 0 : Y.focusedItem);
    }), G = R !== void 0 ? Math.max(0, R - 1) : 0, V = n[T[G].item];
    s == null || s(V, O);
  }, [n, b, s, l]), P = me(function(O, T, R) {
    h == null || h(n[O], T, R);
  }, [n, h]), L = me(function(O, T) {
    u == null || u(O, T);
  }, [u]), N = me(function(O, T) {
    var R, G;
    !((G = (R = l[T]) === null || R === void 0 ? void 0 : R.expandedItems) === null || G === void 0) && G.includes(O) ? i == null || i(n[O], T) : o == null || o(n[O], T);
  }, [n, i, o, l]), B = me(function(O, T) {
    var R, G, V, ee, Y;
    !((G = (R = l[T]) === null || R === void 0 ? void 0 : R.selectedItems) === null || G === void 0) && G.includes(O) ? u == null || u((ee = (V = l[T].selectedItems) === null || V === void 0 ? void 0 : V.filter(function(J) {
      return J !== O;
    })) !== null && ee !== void 0 ? ee : [], T) : u == null || u(dn(dn([], (Y = l[T].selectedItems) !== null && Y !== void 0 ? Y : [], !0), [O], !1), T);
  }, [u, l]), F = me(function(O, T) {
    p == null || p(n[O], T);
  }, [n, p]), U = me(function(O) {
    return za(void 0, void 0, void 0, function() {
      return La(this, function(T) {
        switch (T.label) {
          case 0:
            return [4, Da(a[O].rootItem, v, function(R) {
              return o == null ? void 0 : o(R, O);
            })];
          case 1:
            return T.sent(), [
              2
              /*return*/
            ];
        }
      });
    });
  }, [v, o, a]), H = me(function(O) {
    for (var T, R, G = 0, V = (R = (T = l[O]) === null || T === void 0 ? void 0 : T.expandedItems) !== null && R !== void 0 ? R : []; G < V.length; G++) {
      var ee = V[G];
      i == null || i(n[ee], O);
    }
  }, [n, i, l]), x = ze(function() {
    return {
      collapseItem: y,
      expandItem: j,
      focusItem: A,
      focusTree: C,
      moveFocusDown: I,
      moveFocusUp: z,
      renameItem: P,
      selectItems: L,
      toggleItemExpandedState: N,
      toggleItemSelectStatus: B,
      invokePrimaryAction: F,
      expandAll: U,
      collapseAll: H,
      abortProgrammaticDrag: g,
      completeProgrammaticDrag: m,
      moveProgrammaticDragPositionDown: c,
      moveProgrammaticDragPositionUp: _,
      startProgrammaticDrag: f
    };
  }, [
    y,
    j,
    A,
    C,
    I,
    z,
    P,
    L,
    N,
    B,
    F,
    U,
    H,
    g,
    m,
    c,
    _,
    f
  ]);
  return Ou(e, x), ne(Oa.Provider, { value: x }, r.children);
}), Ru = function(r) {
  var e, t, i, n;
  if (r)
    if (r.scrollIntoViewIfNeeded)
      r.scrollIntoViewIfNeeded();
    else {
      var a = r.getBoundingClientRect(), l = a.top >= 0 && a.left >= 0 && a.bottom <= (window.innerHeight || !!(!((t = (e = Ye()) === null || e === void 0 ? void 0 : e.documentElement) === null || t === void 0) && t.clientHeight)) && a.right <= (window.innerWidth || !!(!((n = (i = Ye()) === null || i === void 0 ? void 0 : i.documentElement) === null || n === void 0) && n.clientWidth));
      l || r.scrollIntoView();
    }
}, Me = globalThis && globalThis.__assign || function() {
  return Me = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, Me.apply(this, arguments);
}, bt = function() {
  for (var r = [], e = 0; e < arguments.length; e++)
    r[e] = arguments[e];
  return r.filter(function(t) {
    return !!t;
  }).join(" ");
}, Pu = function(r) {
  return {
    renderItemTitle: function(e) {
      var t = e.title, i = e.context, n = e.info;
      if (!n.isSearching || !i.isSearchMatching)
        return t;
      var a = t.toLowerCase().indexOf(n.search.toLowerCase());
      return ce.createElement(
        ce.Fragment,
        null,
        a > 0 && ce.createElement("span", null, t.slice(0, a)),
        ce.createElement("span", { className: "rct-tree-item-search-highlight" }, t.slice(a, a + n.search.length)),
        a + n.search.length < t.length && ce.createElement("span", null, t.slice(a + n.search.length, t.length))
      );
    },
    renderItemArrow: function(e) {
      var t = e.item, i = e.context;
      return (
        // Icons from https://blueprintjs.com/docs/#icons
        ce.createElement("div", Me({ className: bt(t.isFolder && "rct-tree-item-arrow-isFolder", "rct-tree-item-arrow") }, i.arrowProps), t.isFolder && (i.isExpanded ? ce.createElement(
          "svg",
          { version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", viewBox: "0 0 16 16", enableBackground: "new 0 0 16 16", xmlSpace: "preserve" },
          ce.createElement(
            "g",
            null,
            ce.createElement(
              "g",
              null,
              ce.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z", className: "rct-tree-item-arrow-path" })
            )
          )
        ) : ce.createElement(
          "svg",
          { version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", viewBox: "0 0 16 16", enableBackground: "new 0 0 16 16", xmlSpace: "preserve" },
          ce.createElement(
            "g",
            null,
            ce.createElement(
              "g",
              null,
              ce.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z", className: "rct-tree-item-arrow-path" })
            )
          )
        )))
      );
    },
    renderItem: function(e) {
      var t = e.item, i = e.depth, n = e.children, a = e.title, l = e.context, o = e.arrow, s = l.isRenaming ? "div" : "button", d = l.isRenaming ? void 0 : "button";
      return ce.createElement(
        "li",
        Me({}, l.itemContainerWithChildrenProps, { className: bt("rct-tree-item-li", t.isFolder && "rct-tree-item-li-isFolder", l.isSelected && "rct-tree-item-li-selected", l.isExpanded && "rct-tree-item-li-expanded", l.isFocused && "rct-tree-item-li-focused", l.isDraggingOver && "rct-tree-item-li-dragging-over", l.isSearchMatching && "rct-tree-item-li-search-match") }),
        ce.createElement(
          "div",
          Me({}, l.itemContainerWithoutChildrenProps, { style: { paddingLeft: "".concat((i + 1) * r, "px") }, className: bt("rct-tree-item-title-container", t.isFolder && "rct-tree-item-title-container-isFolder", l.isSelected && "rct-tree-item-title-container-selected", l.isExpanded && "rct-tree-item-title-container-expanded", l.isFocused && "rct-tree-item-title-container-focused", l.isDraggingOver && "rct-tree-item-title-container-dragging-over", l.isSearchMatching && "rct-tree-item-title-container-search-match") }),
          o,
          ce.createElement(s, Me({ type: d }, l.interactiveElementProps, { className: bt("rct-tree-item-button", t.isFolder && "rct-tree-item-button-isFolder", l.isSelected && "rct-tree-item-button-selected", l.isExpanded && "rct-tree-item-button-expanded", l.isFocused && "rct-tree-item-button-focused", l.isDraggingOver && "rct-tree-item-button-dragging-over", l.isSearchMatching && "rct-tree-item-button-search-match") }), a)
        ),
        n
      );
    },
    renderRenameInput: function(e) {
      var t = e.inputProps, i = e.inputRef, n = e.submitButtonProps, a = e.submitButtonRef, l = e.formProps;
      return ce.createElement(
        "form",
        Me({}, l, { className: "rct-tree-item-renaming-form" }),
        ce.createElement("input", Me({}, t, { ref: i, className: "rct-tree-item-renaming-input" })),
        ce.createElement("input", Me({}, n, { ref: a, type: "submit", className: "rct-tree-item-renaming-submit-button", value: "🗸" }))
      );
    },
    renderTreeContainer: function(e) {
      var t = e.children, i = e.containerProps, n = e.info;
      return ce.createElement(
        "div",
        { className: bt("rct-tree-root", n.isFocused && "rct-tree-root-focus", n.isRenaming && "rct-tree-root-renaming", n.areItemsSelected && "rct-tree-root-itemsselected") },
        ce.createElement("div", Me({}, i, { style: Me({ minHeight: "30px" }, i.style) }), t)
      );
    },
    renderItemsContainer: function(e) {
      var t = e.children, i = e.containerProps;
      return ce.createElement("ul", Me({}, i, { className: "rct-tree-items-container" }), t);
    },
    renderDragBetweenLine: function(e) {
      var t = e.draggingPosition, i = e.lineProps;
      return ce.createElement("div", Me({}, i, { style: { left: "".concat(t.depth * r, "px") }, className: bt("rct-tree-drag-between-line", t.targetType === "between-items" && t.linePosition === "top" && "rct-tree-drag-between-line-top", t.targetType === "between-items" && t.linePosition === "bottom" && "rct-tree-drag-between-line-bottom") }));
    },
    renderSearchInput: function(e) {
      var t = e.inputProps;
      return ce.createElement(
        "div",
        { className: bt("rct-tree-search-input-container") },
        ce.createElement("span", { className: "rct-tree-input-icon" }),
        ce.createElement("input", Me({}, t, { className: bt("rct-tree-search-input") }))
      );
    },
    renderLiveDescriptorContainer: function(e) {
      var t = e.tree, i = e.children;
      return ce.createElement("div", { id: "rct-livedescription-".concat(t.treeId), style: {
        clip: "rect(0 0 0 0)",
        clipPath: "inset(50%)",
        height: "1px",
        overflow: "hidden",
        position: "absolute",
        whiteSpace: "nowrap",
        width: "1px"
      } }, i);
    },
    renderDepthOffset: r
  };
}, Mu = function(r) {
  var e = r.renderItem, t = r.renderItemTitle, i = r.renderItemArrow, n = r.renderRenameInput, a = r.renderItemsContainer, l = r.renderTreeContainer, o = r.renderDragBetweenLine, s = r.renderSearchInput, d = r.renderLiveDescriptorContainer, h = r.renderDepthOffset, u = ze(function() {
    return Pu(h ?? 10);
  }, [h]), p = {
    renderItem: e,
    renderItemTitle: t,
    renderItemArrow: i,
    renderRenameInput: n,
    renderItemsContainer: a,
    renderTreeContainer: l,
    renderDragBetweenLine: o,
    renderSearchInput: s,
    renderLiveDescriptorContainer: d,
    renderDepthOffset: h
  }, b = Object.entries(u).reduce(function(k, g) {
    var m = g[0], c = g[1], _ = m;
    return p[_] ? k[_] = p[_] : k[_] = c, k;
  }, {});
  return b.renderItem.displayName = "RenderItem", b.renderItemTitle.displayName = "RenderItemTitle", b.renderItemArrow.displayName = "RenderItemArrow", b.renderRenameInput.displayName = "RenderRenameInput", b.renderItemsContainer.displayName = "RenderItemsContainer", b.renderTreeContainer.displayName = "RenderTreeContainer", b.renderDragBetweenLine.displayName = "RenderDragBetweenLine", b.renderSearchInput.displayName = "RenderSearchInput", b;
}, vo = function(r, e, t, i) {
  var n, a, l;
  i === void 0 && (i = 0);
  for (var o = [], s = 0, d = (a = (n = t[r]) === null || n === void 0 ? void 0 : n.children) !== null && a !== void 0 ? a : []; s < d.length; s++) {
    var h = d[s], u = t[h];
    o.push({ item: h, depth: i }), u && u.isFolder && u.children && (!((l = e.expandedItems) === null || l === void 0) && l.includes(h)) && o.push.apply(o, vo(h, e, t, i + 1));
  }
  return o;
}, Dt = globalThis && globalThis.__assign || function() {
  return Dt = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, Dt.apply(this, arguments);
}, Fu = globalThis && globalThis.__rest || function(r, e) {
  var t = {};
  for (var i in r)
    Object.prototype.hasOwnProperty.call(r, i) && e.indexOf(i) < 0 && (t[i] = r[i]);
  if (r != null && typeof Object.getOwnPropertySymbols == "function")
    for (var n = 0, i = Object.getOwnPropertySymbols(r); n < i.length; n++)
      e.indexOf(i[n]) < 0 && Object.prototype.propertyIsEnumerable.call(r, i[n]) && (t[i[n]] = r[i[n]]);
  return t;
}, Bu = function(r) {
  var e = r.onExpandItem, t = r.onCollapseItem, i = r.onDrop, n = Fu(r, ["onExpandItem", "onCollapseItem", "onDrop"]), a = he({}), l = a[0], o = a[1], s = he(), d = s[0], h = s[1], u = ze(function() {
    return Object.keys(l);
  }, [l]), p = n.onFocusItem, b = n.autoFocus, k = n.onRegisterTree, g = n.onUnregisterTree, m = n.items, c = n.viewState, _ = ei(p), f = ei(c), v = ze(function() {
    return Aa(u, function(B) {
      var F;
      return vo(l[B].rootItem, (F = c[B]) !== null && F !== void 0 ? F : {}, m);
    });
  }, [l, m, u, c]), y = me(function(B, F) {
    var U, H, x, O, T, R, G, V = (U = Ye()) === null || U === void 0 ? void 0 : U.querySelector('[data-rct-tree="'.concat(F, '"] [data-rct-item-id="').concat(B.index, '"]'));
    (b ?? !0) && (((O = (x = (H = Ye()) === null || H === void 0 ? void 0 : H.activeElement) === null || x === void 0 ? void 0 : x.attributes.getNamedItem("data-rct-search-input")) === null || O === void 0 ? void 0 : O.value) !== "true" ? (T = V == null ? void 0 : V.focus) === null || T === void 0 || T.call(V) : Ru(V)), ((R = f.current[F]) === null || R === void 0 ? void 0 : R.focusedItem) !== B.index && ((G = _.current) === null || G === void 0 || G.call(_, B, F));
  }, [b, _, f]), j = me(function(B) {
    o(function(F) {
      var U;
      return Dt(Dt({}, F), (U = {}, U[B.treeId] = B, U));
    }), k == null || k(B);
  }, [k]), A = me(function(B) {
    g == null || g(l[B]), delete l[B], o(l);
  }, [g, l]), C = me(function(B, F) {
    t == null || t(B, F), o(function(U) {
      return U;
    });
  }, [t]), I = me(function(B, F) {
    e == null || e(B, F), o(function(U) {
      return U;
    });
  }, [e]), z = me(function(B, F) {
    i == null || i(B, F), o(function(U) {
      return U;
    });
  }, [i]), P = me(function(B) {
    var F, U, H = (F = Ye()) === null || F === void 0 ? void 0 : F.querySelector('[data-rct-tree="'.concat(B, '"] [data-rct-item-focus="true"]'));
    (U = H == null ? void 0 : H.focus) === null || U === void 0 || U.call(H);
  }, []), L = me(function(B, F) {
    F === void 0 && (F = !0);
    var U = function(x) {
      var O, T;
      F && (b ?? !0) && x && !(!((T = (O = Ye()) === null || O === void 0 ? void 0 : O.querySelector('[data-rct-tree="'.concat(x, '"]'))) === null || T === void 0) && T.contains(document.activeElement)) && P(x);
    };
    if (typeof B == "function")
      h(function(x) {
        var O = B(x);
        return O !== x && U(O), O;
      });
    else {
      var H = B;
      h(H), U(H);
    }
  }, [b, P]), N = Mu(n);
  return Dt(Dt(Dt({}, N), n), { onFocusItem: y, registerTree: j, unregisterTree: A, onExpandItem: I, onCollapseItem: C, onDrop: z, setActiveTree: L, treeIds: u, trees: l, activeTreeId: d, linearItems: v });
}, ri = globalThis && globalThis.__assign || function() {
  return ri = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, ri.apply(this, arguments);
}, Ta = Et(null), ke = function() {
  return tr(Ta);
}, Uu = Qe(function(r, e) {
  for (var t, i, n, a = Bu(r), l = r.viewState, o = 0, s = Object.keys(a.trees); o < s.length; o++) {
    var d = s[o];
    !(!((t = l[d]) === null || t === void 0) && t.focusedItem) && a.trees[d] && (l[d] = ri(ri({}, l[d]), { focusedItem: (n = (i = r.items[a.trees[d].rootItem]) === null || i === void 0 ? void 0 : i.children) === null || n === void 0 ? void 0 : n[0] }));
  }
  return ne(
    Ta.Provider,
    { value: a },
    ne(
      wu,
      null,
      ne(
        Lu,
        null,
        ne(Nu, { ref: e }, r.children)
      )
    )
  );
}), jr = function() {
  var r, e = Pe().treeId, t = ke().viewState;
  return (r = t[e]) !== null && r !== void 0 ? r : {};
}, Na = function(r, e, t) {
  return t.toLowerCase().includes(r.toLowerCase());
}, Si = function(r) {
  return ke().linearItems[r];
}, ln = globalThis && globalThis.__spreadArray || function(r, e, t) {
  if (t || arguments.length === 2)
    for (var i = 0, n = e.length, a; i < n; i++)
      (a || !(i in e)) && (a || (a = Array.prototype.slice.call(e, 0, i)), a[i] = e[i]);
  return r.concat(a || Array.prototype.slice.call(e));
}, Wu = function(r) {
  var e = oe({
    target: r,
    previous: void 0
  });
  return e.current.target !== r && (e.current.previous = e.current.target, e.current.target = r), e.current.previous;
}, Ra = function(r) {
  var e = jr(), t = Pe().treeId, i = Si(t), n = ke().onSelectItems, a = Wu(e.focusedItem);
  return me(function(l, o) {
    var s, d;
    o === void 0 && (o = !1);
    var h = l.index, u = function(m, c) {
      var _ = ln(ln([], o ? [] : m, !0), c.filter(function(f) {
        return o || !m.includes(f);
      }), !0);
      n == null || n(_, t);
    };
    if (e && e.selectedItems && e.selectedItems.length > 0) {
      var p = e.focusedItem === h ? a : e.focusedItem, b = r === "last-focus" ? i.findIndex(function(m) {
        return p === m.item;
      }) : i.findIndex(function(m) {
        var c;
        return (c = e.selectedItems) === null || c === void 0 ? void 0 : c.includes(m.item);
      }), k = i.findIndex(function(m) {
        return m.item === h;
      });
      if (b < k) {
        var g = i.slice(b, k + 1).map(function(m) {
          var c = m.item;
          return c;
        });
        u((s = e.selectedItems) !== null && s !== void 0 ? s : [], g);
      } else {
        var g = i.slice(k, b + 1).map(function(c) {
          var _ = c.item;
          return _;
        });
        u((d = e.selectedItems) !== null && d !== void 0 ? d : [], g);
      }
    } else
      n == null || n([h], t);
  }, [
    e,
    n,
    t,
    r,
    i,
    a
  ]);
}, vt = globalThis && globalThis.__assign || function() {
  return vt = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, vt.apply(this, arguments);
}, mn = globalThis && globalThis.__spreadArray || function(r, e, t) {
  if (t || arguments.length === 2)
    for (var i = 0, n = e.length, a; i < n; i++)
      (a || !(i in e)) && (a || (a = Array.prototype.slice.call(e, 0, i)), a[i] = e[i]);
  return r.concat(a || Array.prototype.slice.call(e));
}, qu = function(r) {
  var e, t, i, n, a = Pe(), l = a.treeId, o = a.search, s = a.renamingItem, d = a.setRenamingItem, h = ke(), u = Su(), p = dt(), b = Ra("last-focus"), k = r && h.getItemTitle(r), g = ze(function() {
    var f;
    return o === null || o.length === 0 || !r || !k ? !1 : ((f = h.doesSearchMatchItem) !== null && f !== void 0 ? f : Na)(o, r, k);
  }, [o, r, k, h.doesSearchMatchItem]), m = r && ((t = (e = h.viewState[l]) === null || e === void 0 ? void 0 : e.selectedItems) === null || t === void 0 ? void 0 : t.includes(r.index)), c = r && ((n = (i = h.viewState[l]) === null || i === void 0 ? void 0 : i.expandedItems) === null || n === void 0 ? void 0 : n.includes(r.index)), _ = r && s === r.index;
  return ze(function() {
    var f, v, y, j, A, C, I, z, P;
    if (r) {
      var L = h.viewState[l], N = ((v = (f = L == null ? void 0 : L.selectedItems) === null || f === void 0 ? void 0 : f.map(function(J) {
        return h.items[J];
      })) !== null && v !== void 0 ? v : L != null && L.focusedItem ? [h.items[L == null ? void 0 : L.focusedItem]] : []).filter(function(J) {
        return !!J;
      }), B = !!N.find(function(J) {
        return J.index === r.index;
      }), F = N && ((j = (y = h.canDrag) === null || y === void 0 ? void 0 : y.call(h, N)) !== null && j !== void 0 ? j : !0) && N.map(function(J) {
        var E;
        return (E = J.canMove) !== null && E !== void 0 ? E : !0;
      }).reduce(function(J, E) {
        return J && E;
      }, !0), U = ((C = (A = h.canDrag) === null || A === void 0 ? void 0 : A.call(h, [r])) !== null && C !== void 0 ? C : !0) && ((I = r.canMove) !== null && I !== void 0 ? I : !0), H = h.canDragAndDrop && (B && F || !B && U), x = h.canDragAndDrop && !!(!((P = (z = p.viableDragPositions) === null || z === void 0 ? void 0 : z[l]) === null || P === void 0) && P.find(function(J) {
        return J.targetType === "item" && J.targetItem === r.index;
      })), O = {
        // TODO disable most actions during rename
        primaryAction: function() {
          var J;
          (J = h.onPrimaryAction) === null || J === void 0 || J.call(h, h.items[r.index], l);
        },
        collapseItem: function() {
          var J;
          (J = h.onCollapseItem) === null || J === void 0 || J.call(h, r, l);
        },
        expandItem: function() {
          var J;
          (J = h.onExpandItem) === null || J === void 0 || J.call(h, r, l);
        },
        toggleExpandedState: function() {
          var J, E;
          c ? (J = h.onCollapseItem) === null || J === void 0 || J.call(h, r, l) : (E = h.onExpandItem) === null || E === void 0 || E.call(h, r, l);
        },
        selectItem: function() {
          var J;
          (J = h.onSelectItems) === null || J === void 0 || J.call(h, [r.index], l);
        },
        addToSelectedItems: function() {
          var J, E;
          (J = h.onSelectItems) === null || J === void 0 || J.call(h, mn(mn([], (E = L == null ? void 0 : L.selectedItems) !== null && E !== void 0 ? E : [], !0), [r.index], !1), l);
        },
        unselectItem: function() {
          var J, E, W;
          (J = h.onSelectItems) === null || J === void 0 || J.call(h, (W = (E = L == null ? void 0 : L.selectedItems) === null || E === void 0 ? void 0 : E.filter(function(K) {
            return K !== r.index;
          })) !== null && W !== void 0 ? W : [], l);
        },
        selectUpTo: function(J) {
          b(r, J);
        },
        startRenamingItem: function() {
          d(r.index);
        },
        stopRenamingItem: function() {
          d(null);
        },
        focusItem: function() {
          var J;
          (J = h.onFocusItem) === null || J === void 0 || J.call(h, r, l);
        },
        startDragging: function() {
          var J, E, W = (J = L == null ? void 0 : L.selectedItems) !== null && J !== void 0 ? J : [];
          W.includes(r.index) || (W = [r.index], (E = h.onSelectItems) === null || E === void 0 || E.call(h, W, l)), H && p.onStartDraggingItems(W.map(function(K) {
            return h.items[K];
          }), l);
        }
      }, T = {
        isSelected: m,
        isExpanded: c,
        isFocused: (L == null ? void 0 : L.focusedItem) === r.index,
        isRenaming: _,
        isDraggingOver: p.draggingPosition && p.draggingPosition.targetType === "item" && p.draggingPosition.targetItem === r.index && p.draggingPosition.treeId === l,
        isDraggingOverParent: !1,
        isSearchMatching: g,
        canDrag: H,
        canDropOn: x
      }, R = vt(vt({}, u.createInteractiveElementProps(r, l, O, T, L)), {
        "data-rct-item-interactive": !0,
        "data-rct-item-focus": T.isFocused ? "true" : "false",
        "data-rct-item-id": r.index
      }), G = vt({}, {
        "data-rct-item-container": "true"
      }), V = {
        role: "treeitem",
        "aria-selected": T.isSelected,
        "aria-expanded": r.isFolder ? T.isExpanded ? "true" : "false" : void 0
      }, ee = {
        onClick: function() {
          r.isFolder && O.toggleExpandedState(), O.selectItem();
        },
        onFocus: function() {
          O.focusItem();
        },
        onDragOver: function(J) {
          J.preventDefault();
        },
        "aria-hidden": !0,
        tabIndex: -1
        // TODO alternative interaction modes
      }, Y = L ? Object.entries(L).reduce(function(J, E) {
        var W = E[0], K = E[1];
        return J[W] = Array.isArray(K) ? K.includes(r.index) : K === r.index, J;
      }, {}) : {};
      return vt(vt(vt({}, O), T), { interactiveElementProps: R, itemContainerWithChildrenProps: V, itemContainerWithoutChildrenProps: G, arrowProps: ee, viewStateFlags: Y });
    }
  }, [
    r,
    h,
    l,
    p,
    m,
    c,
    _,
    g,
    u,
    b,
    d
  ]);
}, $t = function(r, e, t) {
  var i = yi(t);
  se(function() {
    return r ? (r.addEventListener(e, i), function() {
      return r.removeEventListener(e, i);
    }) : function() {
    };
  }, [r, i, e]);
}, un = {
  expandSiblings: ["control+*"],
  moveFocusToFirstItem: ["home"],
  moveFocusToLastItem: ["end"],
  primaryAction: ["enter"],
  renameItem: ["f2"],
  abortRenameItem: ["escape"],
  toggleSelectItem: ["control+space"],
  abortSearch: ["escape", "enter"],
  startSearch: [],
  selectAll: ["control+a"],
  startProgrammaticDnd: ["control+d"],
  completeProgrammaticDnd: ["enter"],
  abortProgrammaticDnd: ["escape"]
}, ii = globalThis && globalThis.__assign || function() {
  return ii = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, ii.apply(this, arguments);
}, Pa = function() {
  var r = ke();
  return ze(function() {
    return r.keyboardBindings ? ii(ii({}, un), r.keyboardBindings) : un;
  }, [r.keyboardBindings]);
}, Gu = ["input", "textarea"], Ge = function(r, e, t, i) {
  i === void 0 && (i = !1);
  var n = oe([]), a = Pa(), l = rr(), o = ze(function() {
    return a[r].map(function(s) {
      return s.split("+");
    });
  }, [r, a]);
  $t(Ye(), "keydown", function(s) {
    var d;
    if (t !== !1 && !((Gu.includes((d = s.target.tagName) === null || d === void 0 ? void 0 : d.toLowerCase()) || s.target.isContentEditable) && !i) && !n.current.includes(s.key)) {
      n.current.push(s.key);
      var h = n.current.map(function(p) {
        return p.toLowerCase();
      }), u = o.map(function(p) {
        return h.map(function(b) {
          return p.includes(b.toLowerCase());
        }).reduce(function(b, k) {
          return b && k;
        }, !0);
      }).reduce(function(p, b) {
        return p || b;
      }, !1);
      u && (n.current.length > 1 || !/^[a-zA-Z]$/.test(s.key)) && s.preventDefault();
    }
  }), $t(Ye(), "keyup", function(s) {
    if (t !== !1) {
      var d = n.current.map(function(u) {
        return u.toLowerCase();
      }), h = o.map(function(u) {
        return u.map(function(p) {
          return d.includes(p.toLowerCase());
        }).reduce(function(p, b) {
          return p && b;
        }, !0);
      }).reduce(function(u, p) {
        return u || p;
      }, !1);
      h && l(function() {
        return e(s);
      }), n.current = n.current.filter(function(u) {
        return u !== s.key;
      });
    }
  });
}, Hu = function(r) {
  var e = Pe(), t = e.renderers, i = e.treeInformation, n = e.setRenamingItem, a = e.treeId, l = ke(), o = oe(null), s = oe(null), d = l.items[r.itemIndex], h = he(l.getItemTitle(d)), u = h[0], p = h[1], b = rr(!0), k = function() {
    var f;
    (f = l.onAbortRenamingItem) === null || f === void 0 || f.call(l, d, i.treeId), n(null), b(function() {
      l.setActiveTree(a);
    });
  }, g = function() {
    var f;
    (f = l.onRenameItem) === null || f === void 0 || f.call(l, d, u, i.treeId), n(null), b(function() {
      l.setActiveTree(a);
    });
  };
  ti(function() {
    var f, v, y, j;
    l.setActiveTree(a), (!((f = l.autoFocus) !== null && f !== void 0) || f) && ((v = o.current) === null || v === void 0 || v.select(), (j = (y = o.current) === null || y === void 0 ? void 0 : y.focus) === null || j === void 0 || j.call(y));
  }, [l, a], []), Ge("abortRenameItem", function() {
    k();
  }, !0, !0);
  var m = {
    value: u,
    onChange: function(f) {
      p(f.target.value);
    },
    onBlur: function(f) {
      f.relatedTarget !== s.current && k();
    },
    "aria-label": "New item name",
    tabIndex: 0
  }, c = {
    onClick: function(f) {
      f.stopPropagation(), g();
    }
  }, _ = {
    onSubmit: function(f) {
      f.preventDefault(), g();
    }
  };
  return t.renderRenameInput({
    item: d,
    inputRef: o,
    submitButtonProps: c,
    submitButtonRef: s,
    formProps: _,
    inputProps: m
  });
}, Vu = function(r) {
  var e, t, i = he(!1), n = i[0], a = i[1], l = Pe(), o = l.renderers, s = l.treeInformation, d = l.renamingItem, h = ke(), u = jr(), p = h.items[r.itemIndex], b = ze(function() {
    var f;
    return (f = u.expandedItems) === null || f === void 0 ? void 0 : f.includes(r.itemIndex);
  }, [r.itemIndex, u.expandedItems]), k = qu(p);
  if (p === void 0 || k === void 0)
    return n || (a(!0), (e = h.onMissingItems) === null || e === void 0 || e.call(h, [r.itemIndex])), null;
  var g = p.isFolder && b && p.children && ce.createElement(Ma, { depth: r.depth + 1, parentId: r.itemIndex }, p.children), m = h.getItemTitle(p), c = d === r.itemIndex ? ce.createElement(Hu, { itemIndex: r.itemIndex }) : o.renderItemTitle({
    info: s,
    context: k,
    title: m,
    item: p
  }), _ = o.renderItemArrow({
    info: s,
    context: k,
    item: h.items[r.itemIndex]
  });
  return (t = o.renderItem({
    item: h.items[r.itemIndex],
    depth: r.depth,
    title: c,
    arrow: _,
    context: k,
    info: s,
    children: g
  })) !== null && t !== void 0 ? t : null;
}, Ma = function(r) {
  for (var e = Pe(), t = e.renderers, i = e.treeInformation, n = [], a = 0, l = r.children; a < l.length; a++) {
    var o = l[a];
    n.push(ce.createElement(Vu, { key: o, itemIndex: o, depth: r.depth }));
  }
  if (n.length === 0)
    return null;
  var s = {
    role: r.depth !== 0 ? "group" : void 0
  };
  return t.renderItemsContainer({
    children: n,
    info: i,
    containerProps: s,
    depth: r.depth,
    parentId: r.parentId
  });
}, Ku = function(r) {
  var e, t = r.treeId, i = dt(), n = i.draggingPosition, a = i.itemHeight, l = Pe().renderers, o = n && n.targetType === "between-items" && n.treeId === t;
  if (!o)
    return null;
  var s = {
    onDragOver: function(d) {
      return d.preventDefault();
    }
    // Allow dropping
  };
  return ne("div", { style: {
    position: "absolute",
    left: "0",
    right: "0",
    top: "".concat(((e = n == null ? void 0 : n.linearIndex) !== null && e !== void 0 ? e : 0) * a, "px")
  } }, l.renderDragBetweenLine({
    draggingPosition: n,
    lineProps: s
  }));
}, Xu = function(r, e, t) {
  var i = he(!1), n = i[0], a = i[1], l = oe(!1), o = rr();
  return $t(r, "focusin", function() {
    n || (a(!0), e == null || e()), l.current && (l.current = !1);
  }), $t(r, "focusout", function() {
    l.current = !0, o(function() {
      l.current && !(r != null && r.contains(document.activeElement)) && (t == null || t(), l.current = !1, a(!1));
    });
  }), n;
}, Nr = function(r, e, t) {
  $t(Ye(), "keydown", function(i) {
    t && t && r.toLowerCase() === i.key.toLowerCase() && e(i);
  });
}, Zu = function() {
  var r = Pe().treeId, e = ke(), t = e.onFocusItem, i = e.items, n = Si(r), a = jr();
  return yi(function(l) {
    var o, s = (o = n.findIndex(function(p) {
      return p.item === a.focusedItem;
    })) !== null && o !== void 0 ? o : 0, d = l(s, n), h = Math.max(0, Math.min(n.length - 1, d)), u = i[n[h].item];
    return t == null || t(u, r), u;
  });
}, cn = globalThis && globalThis.__spreadArray || function(r, e, t) {
  if (t || arguments.length === 2)
    for (var i = 0, n = e.length, a; i < n; i++)
      (a || !(i in e)) && (a || (a = Array.prototype.slice.call(e, 0, i)), a[i] = e[i]);
  return r.concat(a || Array.prototype.slice.call(e));
}, Ju = function() {
  var r, e = ke(), t = Pe(), i = t.treeId, n = t.setRenamingItem, a = t.setSearch, l = t.renamingItem, o = Si(i), s = dt(), d = jr(), h = Zu(), u = Ra("first-selected"), p = e.activeTreeId === i, b = !!l;
  Nr("arrowdown", function(k) {
    if (k.preventDefault(), s.isProgrammaticallyDragging)
      s.programmaticDragDown();
    else {
      var g = h(function(m) {
        return m + 1;
      });
      k.shiftKey && u(g);
    }
  }, p && !b), Nr("arrowup", function(k) {
    if (k.preventDefault(), s.isProgrammaticallyDragging)
      s.programmaticDragUp();
    else {
      var g = h(function(m) {
        return m - 1;
      });
      k.shiftKey && u(g);
    }
  }, p && !b), Ge("moveFocusToFirstItem", function(k) {
    k.preventDefault(), h(function() {
      return 0;
    });
  }, p && !s.isProgrammaticallyDragging && !b), Ge("moveFocusToLastItem", function(k) {
    k.preventDefault(), h(function(g, m) {
      return m.length - 1;
    });
  }, p && !s.isProgrammaticallyDragging && !b), Nr("arrowright", function(k) {
    k.preventDefault(), h(function(g, m) {
      var c, _, f = e.items[m[g].item];
      if (f.isFolder) {
        if (!((c = d.expandedItems) === null || c === void 0) && c.includes(f.index))
          return g + 1;
        (_ = e.onExpandItem) === null || _ === void 0 || _.call(e, f, i);
      }
      return g;
    });
  }, p && !s.isProgrammaticallyDragging && !b), Nr("arrowleft", function(k) {
    k.preventDefault(), h(function(g, m) {
      var c, _, f = e.items[m[g].item], v = m[g].depth;
      if (f.isFolder && (!((c = d.expandedItems) === null || c === void 0) && c.includes(f.index)))
        (_ = e.onCollapseItem) === null || _ === void 0 || _.call(e, f, i);
      else if (v > 0) {
        var y = g;
        for (y; m[y].depth !== v - 1; y -= 1)
          ;
        return y;
      }
      return g;
    });
  }, p && !s.isProgrammaticallyDragging && !b), Ge("primaryAction", function(k) {
    var g, m;
    k.preventDefault(), d.focusedItem !== void 0 && ((g = e.onSelectItems) === null || g === void 0 || g.call(e, [d.focusedItem], i), (m = e.onPrimaryAction) === null || m === void 0 || m.call(e, e.items[d.focusedItem], i));
  }, p && !s.isProgrammaticallyDragging && !b), Ge("toggleSelectItem", function(k) {
    var g, m, c;
    k.preventDefault(), d.focusedItem !== void 0 && (d.selectedItems && d.selectedItems.includes(d.focusedItem) ? (g = e.onSelectItems) === null || g === void 0 || g.call(e, d.selectedItems.filter(function(_) {
      return _ !== d.focusedItem;
    }), i) : (m = e.onSelectItems) === null || m === void 0 || m.call(e, cn(cn([], (c = d.selectedItems) !== null && c !== void 0 ? c : [], !0), [d.focusedItem], !1), i));
  }, p && !s.isProgrammaticallyDragging && !b), Ge("selectAll", function(k) {
    var g;
    k.preventDefault(), (g = e.onSelectItems) === null || g === void 0 || g.call(e, o.map(function(m) {
      var c = m.item;
      return c;
    }), i);
  }, p && !s.isProgrammaticallyDragging && !b), Ge("renameItem", function(k) {
    var g;
    if (d.focusedItem !== void 0) {
      k.preventDefault();
      var m = e.items[d.focusedItem];
      (g = e.onStartRenamingItem) === null || g === void 0 || g.call(e, m, i), n(m.index);
    }
  }, p && ((r = e.canRename) !== null && r !== void 0 ? r : !0) && !b), Ge("startSearch", function(k) {
    var g, m;
    k.preventDefault(), a(""), (m = (g = document.querySelector('[data-rct-search-input="true"]')) === null || g === void 0 ? void 0 : g.focus) === null || m === void 0 || m.call(g);
  }, p && !s.isProgrammaticallyDragging && !b), Ge("startProgrammaticDnd", function(k) {
    k.preventDefault(), s.startProgrammaticDrag();
  }, p && !b), Ge("completeProgrammaticDnd", function(k) {
    k.preventDefault(), s.completeProgrammaticDrag();
  }, p && s.isProgrammaticallyDragging && !b), Ge("abortProgrammaticDnd", function(k) {
    k.preventDefault(), s.abortProgrammaticDrag();
  }, p && s.isProgrammaticallyDragging && !b);
}, Yu = function() {
  var r = ke(), e = r.doesSearchMatchItem, t = r.items, i = r.getItemTitle, n = r.onFocusItem, a = Pe(), l = a.search, o = a.treeId, s = Si(o), d = rr();
  ti(function() {
    l && l.length > 0 && d(function() {
      var h = s.find(function(u) {
        var p = u.item;
        return (e ?? Na)(l, t[p], i(t[p]));
      });
      h && (n == null || n(t[h.item], o));
    });
  }, [
    e,
    i,
    s,
    t,
    n,
    l,
    o,
    d
  ], [l]);
}, $i = globalThis && globalThis.__assign || function() {
  return $i = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, $i.apply(this, arguments);
}, Qu = function(r) {
  var e, t = r.containerRef, i = Pe(), n = i.search, a = i.setSearch, l = i.treeId, o = i.renderers, s = i.renamingItem, d = ke();
  jr();
  var h = d.activeTreeId === l, u = rr();
  Yu();
  var p = function() {
    var b, k, g;
    if (a(null), !((b = d.autoFocus) !== null && b !== void 0) || b) {
      var m = (k = Ye()) === null || k === void 0 ? void 0 : k.querySelector('[data-rct-tree="'.concat(l, '"] [data-rct-item-focus="true"]'));
      (g = m == null ? void 0 : m.focus) === null || g === void 0 || g.call(m);
    }
  };
  return Ge("abortSearch", function() {
    u(function() {
      p();
    });
  }, h && n !== null, !0), $t(t, "keydown", function(b) {
    var k, g, m = b.key.charCodeAt(0);
    (!((k = d.canSearch) !== null && k !== void 0) || k) && (!((g = d.canSearchByStartingTyping) !== null && g !== void 0) || g) && h && n === null && !s && !b.ctrlKey && !b.shiftKey && !b.altKey && !b.metaKey && (m >= 48 && m <= 57 || // number
    // (unicode >= 65 && unicode <= 90) || // uppercase letter
    m >= 97 && m <= 122) && a("");
  }), !(!((e = d.canSearch) !== null && e !== void 0) || e) || n === null ? null : o.renderSearchInput({
    inputProps: $i({ value: n, onChange: function(b) {
      return a(b.target.value);
    }, onBlur: function() {
      p();
    }, ref: function(b) {
      var k;
      (k = b == null ? void 0 : b.focus) === null || k === void 0 || k.call(b);
    }, "aria-label": "Search for items" }, {
      "data-rct-search-input": "true"
    })
  });
}, $u = {
  introduction: `
    <p>Accessibility guide for tree {treeLabel}.</p>
    <p>
      Navigate the tree with the arrow keys. Common tree hotkeys apply. Further keybindings are available:
    </p>
    <ul>
      <li>{keybinding:primaryAction} to execute primary action on focused item</li>
      <li>{keybinding:renameItem} to start renaming the focused item</li>
      <li>{keybinding:abortRenameItem} to abort renaming an item</li>
      <li>{keybinding:startProgrammaticDnd} to start dragging selected items</li>
    </ul>
  `,
  renamingItem: `
    <p>Renaming the item {renamingItem}.</p>
    <p>Use the keybinding {keybinding:abortRenameItem} to abort renaming.</p>
  `,
  searching: `
    <p>Searching</p>
  `,
  programmaticallyDragging: `
    <p>Dragging items {dragItems}.</p>
    <p>Press the arrow keys to move the drag target.</p>
    <p>Press {keybinding:completeProgrammaticDnd} to drop or {keybinding:abortProgrammaticDnd} to abort.</p>
  `,
  programmaticallyDraggingTarget: `
    <p>Drop target is {dropTarget}.</p>
  `
}, nr = function(r, e, t, i, n) {
  var a = function(l) {
    return e.getItemTitle(e.items[l]);
  };
  return r.replace(/({[^\s}]+)}/g, function(l) {
    var o, s, d, h = l.slice(1, -1);
    switch (h) {
      case "treeLabel":
        return (o = i.treeLabel) !== null && o !== void 0 ? o : "";
      case "renamingItem":
        return i.renamingItem ? a(i.renamingItem) : "None";
      case "dragItems":
        return (d = (s = t.draggingItems) === null || s === void 0 ? void 0 : s.map(function(b) {
          return e.getItemTitle(b);
        }).join(", ")) !== null && d !== void 0 ? d : "None";
      case "dropTarget": {
        if (!t.draggingPosition)
          return "None";
        if (t.draggingPosition.targetType === "item" || t.draggingPosition.targetType === "root")
          return "within ".concat(a(t.draggingPosition.targetItem));
        var u = e.items[t.draggingPosition.parentItem], p = e.getItemTitle(u);
        return t.draggingPosition.childIndex === 0 ? "within ".concat(p, " at the start") : "within ".concat(p, " after ").concat(a(u.children[t.draggingPosition.childIndex - 1]));
      }
      default:
        if (h.startsWith("keybinding:"))
          return n[h.slice(11)][0];
        throw Error("Unknown live descriptor variable {".concat(h, "}"));
    }
  });
}, ar = function(r) {
  var e = r.children, t = r.live;
  return ne("div", { "aria-live": t, dangerouslySetInnerHTML: { __html: e } });
}, ec = function() {
  var r = ke(), e = Pe(), t = dt(), i = Pa(), n = ze(function() {
    var l;
    return (l = r.liveDescriptors) !== null && l !== void 0 ? l : $u;
  }, [r.liveDescriptors]), a = e.renderers.renderLiveDescriptorContainer;
  return e.treeInformation.isRenaming ? ne(
    a,
    { tree: e },
    ne(ar, { live: "polite" }, nr(n.renamingItem, r, t, e, i))
  ) : e.treeInformation.isSearching ? ne(
    a,
    { tree: e },
    ne(ar, { live: "polite" }, nr(n.searching, r, t, e, i))
  ) : e.treeInformation.isProgrammaticallyDragging ? ne(
    a,
    { tree: e },
    ne(ar, { live: "polite" }, nr(n.programmaticallyDragging, r, t, e, i)),
    ne(ar, { live: "assertive" }, nr(n.programmaticallyDraggingTarget, r, t, e, i))
  ) : ne(
    a,
    { tree: e },
    ne(ar, { live: "off" }, nr(n.introduction, r, t, e, i))
  );
}, tc = function() {
  var r, e = ke();
  return !((r = e.showLiveDescription) !== null && r !== void 0) || r ? ne(ec, null) : null;
}, eo = globalThis && globalThis.__assign || function() {
  return eo = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, eo.apply(this, arguments);
}, rc = function() {
  var r = Pe(), e = r.treeId, t = r.rootItem, i = r.renderers, n = r.treeInformation, a = ke(), l = oe(), o = dt();
  Ju(), Xu(l.current, function() {
    a.setActiveTree(e);
  }, function() {
    a.setActiveTree(function(u) {
      return u === e ? void 0 : u;
    });
  });
  var s = a.items[t].children, d = ne(
    at,
    null,
    ne(tc, null),
    ne(Ma, { depth: 0, parentId: e }, s ?? []),
    ne(Ku, { treeId: e }),
    ne(Qu, { containerRef: l.current })
  ), h = eo({ onDragOver: function(u) {
    u.preventDefault(), o.onDragOverTreeHandler(u, e, l);
  }, onMouseDown: function() {
    return o.abortProgrammaticDrag();
  }, ref: l, style: { position: "relative" }, role: "tree", "aria-label": n.treeLabelledBy ? void 0 : n.treeLabel, "aria-labelledby": n.treeLabelledBy }, {
    "data-rct-tree": e
  });
  return i.renderTreeContainer({
    children: d,
    info: n,
    containerProps: h
  });
}, ic = function(r, e, t) {
  var i, n = ke(), a = dt(), l = (i = n.viewState[r.treeId]) === null || i === void 0 ? void 0 : i.selectedItems;
  return ze(function() {
    var o, s;
    return {
      isFocused: n.activeTreeId === r.treeId,
      isRenaming: !!e,
      areItemsSelected: ((o = l == null ? void 0 : l.length) !== null && o !== void 0 ? o : 0) > 0,
      isSearching: t !== null,
      search: t,
      isProgrammaticallyDragging: (s = a.isProgrammaticallyDragging) !== null && s !== void 0 ? s : !1,
      treeId: r.treeId,
      rootItem: r.rootItem,
      treeLabel: r.treeLabel,
      treeLabelledBy: r.treeLabelledBy
    };
  }, [
    n.activeTreeId,
    r.treeId,
    r.rootItem,
    r.treeLabel,
    r.treeLabelledBy,
    e,
    l == null ? void 0 : l.length,
    t,
    a.isProgrammaticallyDragging
  ]);
}, fr = globalThis && globalThis.__assign || function() {
  return fr = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, fr.apply(this, arguments);
}, oc = function(r, e) {
  var t = ke(), i = Pe(), n = dt();
  xt(r, function() {
    return fr(fr(fr({}, e), { treeEnvironmentContext: t, dragAndDropContext: n, treeContext: i }), i.treeInformation);
  });
}, nc = Et(null), ac = Qe(function(r, e) {
  ke();
  var t = Pe();
  dt();
  var i = Tu(), n = ze(function() {
    return {
      abortRenamingItem: function() {
        t.setRenamingItem(null);
      },
      abortSearch: function() {
        t.setSearch(null);
      },
      collapseItem: function(a) {
        i.collapseItem(a, t.treeId);
      },
      completeRenamingItem: function() {
      },
      expandItem: function(a) {
        i.expandItem(a, t.treeId);
      },
      focusItem: function(a) {
        i.focusItem(a, t.treeId);
      },
      focusTree: function(a) {
        a === void 0 && (a = !0), i.focusTree(t.treeId, a);
      },
      invokePrimaryAction: function(a) {
        i.invokePrimaryAction(a, t.treeId);
      },
      moveFocusDown: function() {
        i.moveFocusDown(t.treeId);
      },
      moveFocusUp: function() {
        i.moveFocusUp(t.treeId);
      },
      renameItem: function(a, l) {
        i.renameItem(a, l, t.treeId);
      },
      selectItems: function(a) {
        i.selectItems(a, t.treeId);
      },
      setSearch: function(a) {
        t.setSearch(a);
      },
      startRenamingItem: function(a) {
        t.setRenamingItem(a);
      },
      stopRenamingItem: function() {
        t.setRenamingItem(null);
      },
      toggleItemExpandedState: function(a) {
        i.toggleItemExpandedState(a, t.treeId);
      },
      toggleItemSelectStatus: function(a) {
        i.toggleItemSelectStatus(a, t.treeId);
      },
      expandAll: function() {
        i.expandAll(t.treeId);
      },
      collapseAll: function() {
        i.collapseAll(t.treeId);
      }
    };
  }, [i, t]);
  return oc(e, n), ne(nc.Provider, { value: n }, r.children);
}), oi = globalThis && globalThis.__assign || function() {
  return oi = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, oi.apply(this, arguments);
}, Fa = Et(null), Pe = function() {
  return tr(Fa);
}, sc = Qe(function(r, e) {
  var t, i = ke(), n = ze(function() {
    return oi(oi({}, i), r);
  }, [r, i]), a = he(null), l = a[0], o = a[1], s = he(null), d = s[0], h = s[1], u = i.items[r.rootItem], p = i.viewState[r.treeId];
  se(function() {
    return i.registerTree({
      treeId: r.treeId,
      rootItem: r.rootItem
    }), function() {
      return i.unregisterTree(r.treeId);
    };
  }, [r.treeId, r.rootItem]);
  var b = ic(r, d, l), k = ze(function() {
    return {
      treeId: r.treeId,
      rootItem: r.rootItem,
      treeLabel: r.treeLabel,
      treeLabelledBy: r.treeLabelledBy,
      getItemsLinearly: function() {
        return vo(r.rootItem, p ?? {}, i.items);
      },
      treeInformation: b,
      search: l,
      setSearch: o,
      renamingItem: d,
      setRenamingItem: h,
      renderers: n
    };
  }, [
    i.items,
    r.rootItem,
    r.treeId,
    r.treeLabel,
    r.treeLabelledBy,
    d,
    n,
    l,
    b,
    p
  ]);
  return u === void 0 ? ((t = i.onMissingItems) === null || t === void 0 || t.call(i, [r.rootItem]), null) : ne(
    Fa.Provider,
    { value: k },
    ne(
      ac,
      { ref: e },
      ne(rc, null)
    )
  );
}), Rr = globalThis && globalThis.__awaiter || function(r, e, t, i) {
  function n(a) {
    return a instanceof t ? a : new t(function(l) {
      l(a);
    });
  }
  return new (t || (t = Promise))(function(a, l) {
    function o(h) {
      try {
        d(i.next(h));
      } catch (u) {
        l(u);
      }
    }
    function s(h) {
      try {
        d(i.throw(h));
      } catch (u) {
        l(u);
      }
    }
    function d(h) {
      h.done ? a(h.value) : n(h.value).then(o, s);
    }
    d((i = i.apply(r, e || [])).next());
  });
}, Pr = globalThis && globalThis.__generator || function(r, e) {
  var t = { label: 0, sent: function() {
    if (a[0] & 1)
      throw a[1];
    return a[1];
  }, trys: [], ops: [] }, i, n, a, l;
  return l = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol == "function" && (l[Symbol.iterator] = function() {
    return this;
  }), l;
  function o(d) {
    return function(h) {
      return s([d, h]);
    };
  }
  function s(d) {
    if (i)
      throw new TypeError("Generator is already executing.");
    for (; l && (l = 0, d[0] && (t = 0)), t; )
      try {
        if (i = 1, n && (a = d[0] & 2 ? n.return : d[0] ? n.throw || ((a = n.return) && a.call(n), 0) : n.next) && !(a = a.call(n, d[1])).done)
          return a;
        switch (n = 0, a && (d = [d[0] & 2, a.value]), d[0]) {
          case 0:
          case 1:
            a = d;
            break;
          case 4:
            return t.label++, { value: d[1], done: !1 };
          case 5:
            t.label++, n = d[1], d = [0];
            continue;
          case 7:
            d = t.ops.pop(), t.trys.pop();
            continue;
          default:
            if (a = t.trys, !(a = a.length > 0 && a[a.length - 1]) && (d[0] === 6 || d[0] === 2)) {
              t = 0;
              continue;
            }
            if (d[0] === 3 && (!a || d[1] > a[0] && d[1] < a[3])) {
              t.label = d[1];
              break;
            }
            if (d[0] === 6 && t.label < a[1]) {
              t.label = a[1], a = d;
              break;
            }
            if (a && t.label < a[2]) {
              t.label = a[2], t.ops.push(d);
              break;
            }
            a[2] && t.ops.pop(), t.trys.pop();
            continue;
        }
        d = e.call(r, t);
      } catch (h) {
        d = [6, h], n = 0;
      } finally {
        i = a = 0;
      }
    if (d[0] & 5)
      throw d[1];
    return { value: d[0] ? d[1] : void 0, done: !0 };
  }
}, dc = (
  /** @class */
  function() {
    function r(e) {
      this.provider = e;
    }
    return r.prototype.getTreeItem = function(e) {
      return Rr(this, void 0, void 0, function() {
        return Pr(this, function(t) {
          return [2, this.provider.getTreeItem(e)];
        });
      });
    }, r.prototype.getTreeItems = function(e) {
      return Rr(this, void 0, void 0, function() {
        var t = this;
        return Pr(this, function(i) {
          return [2, this.provider.getTreeItems ? this.provider.getTreeItems(e) : Promise.all(e.map(function(n) {
            return t.provider.getTreeItem(n);
          }))];
        });
      });
    }, r.prototype.onChangeItemChildren = function(e, t) {
      var i, n;
      return Rr(this, void 0, void 0, function() {
        return Pr(this, function(a) {
          return [2, (n = (i = this.provider).onChangeItemChildren) === null || n === void 0 ? void 0 : n.call(i, e, t)];
        });
      });
    }, r.prototype.onDidChangeTreeData = function(e) {
      return this.provider.onDidChangeTreeData ? this.provider.onDidChangeTreeData(e) : { dispose: function() {
      } };
    }, r.prototype.onRenameItem = function(e, t) {
      var i, n;
      return Rr(this, void 0, void 0, function() {
        return Pr(this, function(a) {
          return [2, (n = (i = this.provider).onRenameItem) === null || n === void 0 ? void 0 : n.call(i, e, t)];
        });
      });
    }, r;
  }()
), lc = function() {
  var r = oe(!1);
  return se(function() {
    return r.current = !0, function() {
      r.current = !1;
    };
  }, []), r;
}, ve = globalThis && globalThis.__assign || function() {
  return ve = Object.assign || function(r) {
    for (var e, t = 1, i = arguments.length; t < i; t++) {
      e = arguments[t];
      for (var n in e)
        Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
    }
    return r;
  }, ve.apply(this, arguments);
}, _n = globalThis && globalThis.__awaiter || function(r, e, t, i) {
  function n(a) {
    return a instanceof t ? a : new t(function(l) {
      l(a);
    });
  }
  return new (t || (t = Promise))(function(a, l) {
    function o(h) {
      try {
        d(i.next(h));
      } catch (u) {
        l(u);
      }
    }
    function s(h) {
      try {
        d(i.throw(h));
      } catch (u) {
        l(u);
      }
    }
    function d(h) {
      h.done ? a(h.value) : n(h.value).then(o, s);
    }
    d((i = i.apply(r, e || [])).next());
  });
}, fn = globalThis && globalThis.__generator || function(r, e) {
  var t = { label: 0, sent: function() {
    if (a[0] & 1)
      throw a[1];
    return a[1];
  }, trys: [], ops: [] }, i, n, a, l;
  return l = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol == "function" && (l[Symbol.iterator] = function() {
    return this;
  }), l;
  function o(d) {
    return function(h) {
      return s([d, h]);
    };
  }
  function s(d) {
    if (i)
      throw new TypeError("Generator is already executing.");
    for (; l && (l = 0, d[0] && (t = 0)), t; )
      try {
        if (i = 1, n && (a = d[0] & 2 ? n.return : d[0] ? n.throw || ((a = n.return) && a.call(n), 0) : n.next) && !(a = a.call(n, d[1])).done)
          return a;
        switch (n = 0, a && (d = [d[0] & 2, a.value]), d[0]) {
          case 0:
          case 1:
            a = d;
            break;
          case 4:
            return t.label++, { value: d[1], done: !1 };
          case 5:
            t.label++, n = d[1], d = [0];
            continue;
          case 7:
            d = t.ops.pop(), t.trys.pop();
            continue;
          default:
            if (a = t.trys, !(a = a.length > 0 && a[a.length - 1]) && (d[0] === 6 || d[0] === 2)) {
              t = 0;
              continue;
            }
            if (d[0] === 3 && (!a || d[1] > a[0] && d[1] < a[3])) {
              t.label = d[1];
              break;
            }
            if (d[0] === 6 && t.label < a[1]) {
              t.label = a[1], a = d;
              break;
            }
            if (a && t.label < a[2]) {
              t.label = a[2], t.ops.push(d);
              break;
            }
            a[2] && t.ops.pop(), t.trys.pop();
            continue;
        }
        d = e.call(r, t);
      } catch (h) {
        d = [6, h], n = 0;
      } finally {
        i = a = 0;
      }
    if (d[0] & 5)
      throw d[1];
    return { value: d[0] ? d[1] : void 0, done: !0 };
  }
}, sr = globalThis && globalThis.__spreadArray || function(r, e, t) {
  if (t || arguments.length === 2)
    for (var i = 0, n = e.length, a; i < n; i++)
      (a || !(i in e)) && (a || (a = Array.prototype.slice.call(e, 0, i)), a[i] = e[i]);
  return r.concat(a || Array.prototype.slice.call(e));
}, mc = Qe(function(r, e) {
  var t = he({}), i = t[0], n = t[1], a = he(r.viewState), l = a[0], o = a[1], s = oe([]), d = ze(function() {
    return new dc(r.dataProvider);
  }, [r.dataProvider]), h = lc(), u = me(function(b) {
    h.current && n(function(k) {
      return ve(ve({}, k), b);
    });
  }, [h]), p = me(function(b, k) {
    o(function(g) {
      var m, c;
      return ve(ve({}, g), (m = {}, m[b] = ve(ve({}, g[b]), k((c = g[b]) !== null && c !== void 0 ? c : {})), m));
    });
  }, []);
  return se(function() {
    var b = d.onDidChangeTreeData(function(k) {
      d.getTreeItems(k).then(function(g) {
        u(g.map(function(m) {
          var c;
          return c = {}, c[m.index] = m, c;
        }).reduce(function(m, c) {
          return ve(ve({}, m), c);
        }, {}));
      });
    }).dispose;
    return b;
  }, [d, u]), ne(Uu, ve({}, r, { ref: e, viewState: l, items: i, onExpandItem: function(b, k) {
    var g;
    p(k, function(m) {
      var c;
      return ve(ve({}, m), { expandedItems: sr(sr([], (c = m.expandedItems) !== null && c !== void 0 ? c : [], !0), [b.index], !1) });
    }), (g = r.onExpandItem) === null || g === void 0 || g.call(r, b, k);
  }, onCollapseItem: function(b, k) {
    var g;
    p(k, function(m) {
      var c;
      return ve(ve({}, m), { expandedItems: (c = m.expandedItems) === null || c === void 0 ? void 0 : c.filter(function(_) {
        return _ !== b.index;
      }) });
    }), (g = r.onCollapseItem) === null || g === void 0 || g.call(r, b, k);
  }, onSelectItems: function(b, k) {
    p(k, function(g) {
      var m, c;
      if (r.disableMultiselect) {
        var _ = g.focusedItem ? [g.focusedItem] : [];
        return (m = r.onSelectItems) === null || m === void 0 || m.call(r, _, k), ve(ve({}, g), { selectedItems: _ });
      }
      return (c = r.onSelectItems) === null || c === void 0 || c.call(r, b, k), ve(ve({}, g), { selectedItems: b });
    });
  }, onFocusItem: function(b, k) {
    var g;
    p(k, function(m) {
      return ve(ve({}, m), { focusedItem: b.index });
    }), (g = r.onFocusItem) === null || g === void 0 || g.call(r, b, k);
  }, onRenameItem: function(b, k, g) {
    return _n(void 0, void 0, void 0, function() {
      var m, c, _;
      return fn(this, function(f) {
        switch (f.label) {
          case 0:
            return [4, d.onRenameItem(b, k)];
          case 1:
            return f.sent(), p(g, function(v) {
              return ve(ve({}, v), { renamingItem: void 0 });
            }), [4, d.getTreeItem(b.index)];
          case 2:
            return m = f.sent(), u((c = {}, c[b.index] = m, c)), (_ = r.onRenameItem) === null || _ === void 0 || _.call(r, b, k, g), [
              2
              /*return*/
            ];
        }
      });
    });
  }, onDrop: function(b, k) {
    return _n(void 0, void 0, void 0, function() {
      var g, m, c, _, f, v, y, j, A, C, I;
      return fn(this, function(z) {
        switch (z.label) {
          case 0:
            for (g = [], m = function(P) {
              var L = Object.values(i).find(function(U) {
                var H;
                return (H = U.children) === null || H === void 0 ? void 0 : H.includes(P.index);
              });
              if (!L)
                throw Error('Could not find parent of item "'.concat(P.index, '"'));
              if (!L.children)
                throw Error('Parent "'.concat(L.index, '" of item "').concat(P.index, '" did not have any children'));
              if (k.targetType === "item" || k.targetType === "root")
                k.targetItem === L.index || (g.push(d.onChangeItemChildren(L.index, L.children.filter(function(U) {
                  return U !== P.index;
                }))), g.push(d.onChangeItemChildren(k.targetItem, sr(sr([], (y = i[k.targetItem].children) !== null && y !== void 0 ? y : [], !0), [
                  P.index
                ], !1))));
              else {
                var N = i[k.parentItem], B = sr([], (j = N.children) !== null && j !== void 0 ? j : [], !0).filter(function(U) {
                  return U !== P.index;
                });
                if (k.parentItem === P.index)
                  return { value: void 0 };
                if (k.parentItem === L.index) {
                  var F = ((C = ((A = N.children) !== null && A !== void 0 ? A : []).findIndex(function(U) {
                    return U === P.index;
                  })) !== null && C !== void 0 ? C : 1 / 0) < k.childIndex;
                  B.splice(k.childIndex - (F ? 1 : 0), 0, P.index), g.push(d.onChangeItemChildren(k.parentItem, B));
                } else
                  B.splice(k.childIndex, 0, P.index), g.push(d.onChangeItemChildren(L.index, L.children.filter(function(U) {
                    return U !== P.index;
                  }))), g.push(d.onChangeItemChildren(k.parentItem, B));
              }
            }, c = 0, _ = b; c < _.length; c++)
              if (f = _[c], v = m(f), typeof v == "object")
                return [2, v.value];
            return [4, Promise.all(g)];
          case 1:
            return z.sent(), (I = r.onDrop) === null || I === void 0 || I.call(r, b, k), [
              2
              /*return*/
            ];
        }
      });
    });
  }, onMissingItems: function(b) {
    var k, g;
    s.current.length === 0 && setTimeout(function() {
      d.getTreeItems(s.current).then(function(m) {
        u(m.map(function(c) {
          var _;
          return _ = {}, _[c == null ? void 0 : c.index] = c, _;
        }).reduce(function(c, _) {
          return ve(ve({}, c), _);
        }, {}));
      }), s.current = [];
    }), (k = s.current).push.apply(k, b), (g = r.onMissingItems) === null || g === void 0 || g.call(r, b);
  } }), r.children);
});
class uc {
  constructor(e) {
    Oe(this, "handlerCount", 0);
    Oe(this, "handlers", []);
    Oe(this, "options");
    this.options = e;
  }
  get numberOfHandlers() {
    return this.handlers.filter((e) => !!e).length;
  }
  async emit(e) {
    var i, n;
    const t = [];
    (n = (i = this.options) == null ? void 0 : i.logger) == null || n.call(i, "emit", e);
    for (const a of this.handlers)
      if (a) {
        const l = a(e);
        typeof (l == null ? void 0 : l.then) == "function" && t.push(l);
      }
    await Promise.all(t);
  }
  on(e) {
    var t, i;
    return (i = (t = this.options) == null ? void 0 : t.logger) == null || i.call(t, "on"), this.handlers.push(e), this.handlerCount++;
  }
  off(e) {
    this.delete(e);
  }
  delete(e) {
    var t, i;
    (i = (t = this.options) == null ? void 0 : t.logger) == null || i.call(t, "off"), this.handlers[e] = null;
  }
}
const Ba = "vslite";
var vn, Cn, yn;
const cc = (vn = globalThis.localStorage) != null && vn.debug ? (Cn = globalThis.localStorage) == null ? void 0 : Cn.debug : ((yn = globalThis.process) == null ? void 0 : yn.env.DEBUG) || "", _c = cc.split(",").find((r) => r.startsWith(Ba) || r === "*"), wi = (r) => (...e) => {
  _c && console.debug(`[${Ba}/${r}]`, ...e);
};
var Sn;
const hn = (Sn = globalThis.localStorage) == null ? void 0 : Sn.vslite_config, fc = hn ? JSON.parse(hn) : {}, pn = wi("webcontainer");
async function Ua(r, e, t, i, n) {
  var o, s;
  const a = await r.readdir(e, { withFileTypes: !0 }), l = fc.showHidden ? a : a.filter((d) => !d.name.startsWith(".") && d.name !== "node_modules");
  pn("getDirAsTree() directory", l), t === "root" && (n.root = i);
  for (const d of l) {
    const h = d.isDirectory(), u = `${e}/${d.name}`;
    n[u] = {
      index: u,
      data: d.name,
      isFolder: h,
      canMove: !0,
      canRename: !0,
      children: []
    }, t && ((s = (o = n == null ? void 0 : n[t]) == null ? void 0 : o.children) == null || s.push(u)), h && await Ua(r, u, u, i, n);
  }
  return pn("getDirAsTree() db", n), n;
}
async function hc(r, e) {
  const t = await globalThis.showDirectoryPicker();
  for await (const i of t.values())
    console.log(i);
}
const pc = {}, gc = `
export PNPM_HOME="/home/.pnpm"
export PATH="/bin:/usr/bin:/usr/local/bin:/home/.pnpm"
alias git='npx -y --package=git-pwa -- git'
alias ni='npx -y --package=@antfu/ni -- ni'
`;
function bc(r, e = 150) {
  let t;
  return (...n) => {
    clearTimeout(t), t = setTimeout(() => r(...n), e);
  };
}
const Ht = wi("FileTree"), gn = {
  index: "root",
  data: "root",
  isFolder: !0,
  canMove: !1,
  canRename: !1,
  children: []
}, Wa = {
  refresh: new Function(),
  treeEnv: null
};
function kc(r) {
  const e = Ci(), t = oe(), i = oe(new vc({ root: gn }));
  Object.assign(Wa, { treeEnv: t, refresh: bc(async (l) => {
    Ht("refresh updateMessage", l);
    const o = await Ua(r.fs, ".", "root", Object.assign({}, gn, { children: [] }), {});
    Ht("refresh getDirAsTree", o), i.current.updateItems(o);
  }, 300) });
  const a = (l) => {
    const o = Is(
      l.data,
      "",
      l.isFolder || !1,
      l.index === "root",
      e ? "dark" : "light"
    );
    return /* @__PURE__ */ De("span", { className: o, children: l.data });
  };
  return /* @__PURE__ */ De("div", { style: { overflow: "scroll" }, children: /* @__PURE__ */ De("div", { className: e ? "rct-dark" : "rct-default", children: /* @__PURE__ */ De(
    mc,
    {
      ref: t,
      canRename: !0,
      canSearch: !0,
      canDragAndDrop: !0,
      canDropOnFolder: !0,
      canSearchByStartingTyping: !0,
      dataProvider: i.current,
      getItemTitle: (l) => l.data,
      renderItemTitle: (l) => a(l.item),
      onPrimaryAction: (l) => r.onTriggerItem(l.index.toString(), l.data),
      onRenameItem: (l, o) => r.onRenameItem(l.index.toString(), o),
      viewState: { filetree: {} },
      children: /* @__PURE__ */ De(sc, { treeId: "filetree", treeLabel: "Explorer", rootItem: "root" })
    }
  ) }) });
}
class vc {
  constructor(e) {
    Oe(this, "data");
    Oe(this, "onDidChangeTreeDataEmitter", new uc());
    Ht("TreeProvider constructor", e), this.data = { items: e };
  }
  async updateItems(e) {
    Ht("updateItems items", e), this.data = { items: e }, this.onDidChangeTreeDataEmitter.emit(Object.keys(e));
  }
  async getTreeItem(e) {
    return Ht("getTreeItem", e, this.data.items[e]), this.data.items[e];
  }
  onDidChangeTreeData(e) {
    Ht("onDidChangeTreeData items", this.data.items);
    const t = this.onDidChangeTreeDataEmitter.on((i) => e(i));
    return { dispose: () => this.onDidChangeTreeDataEmitter.off(t) };
  }
}
function Cc(r) {
  const { shell: e } = r, t = oe(!1), i = oe(null);
  return se(() => {
    !t.current && i.current && (t.current = !0, e.start(i.current, r.panelApi, r.onServerReady));
  }, [e]), /* @__PURE__ */ De("div", { ref: i, style: { height: "100%" } });
}
function yc(r) {
  return /* @__PURE__ */ De("div", { className: "watermark", children: [
    /* @__PURE__ */ De("div", { className: "letterpress" }),
    /* @__PURE__ */ De("div", { className: "shortcuts" })
  ] });
}
function Sc() {
  const [r, e] = he(null), [t, i] = he([]);
  return se(() => {
    "launchQueue" in window && launchQueue.setConsumer((n) => {
      var a;
      n.targetURL && e(new URL(n.targetURL).searchParams.get("action")), (a = n == null ? void 0 : n.files) != null && a.length && i(n.files);
    });
  }, []), { action: r, files: t };
}
const Fi = wi("useCollab");
function wc(r) {
  const e = oe(!1), t = oe(null), i = oe(null), n = me((a) => {
    !t.current || !i.current || (Fi("Editor sync enabled."), i.current(a, t.current.document, t.current.provider));
  }, []);
  return se(() => {
    var a;
    if (!e.current && r && (a = r.container) != null && a.fs) {
      e.current = !0;
      const l = location.hash;
      if (!l)
        return;
      Fi("Setting up sync using key:", l), import("./yjs-0ccde8be.js").then((o) => o.y).then((o) => {
        t.current = o.connect(l), i.current = o.monaco, Fi("Connected to sync.");
      });
    }
  }, [r]), { session: t, syncEditor: n };
}
function qa(r) {
  const e = { d: {} };
  for (const t of Object.keys(r)) {
    const i = r[t];
    if ("file" in i) {
      const a = i.file.contents, l = typeof a == "string" ? a : Ic(a), o = typeof a == "string" ? {} : { b: !0 };
      e.d[t] = { f: { c: l, ...o } };
      continue;
    }
    const n = qa(i.directory);
    e.d[t] = n;
  }
  return e;
}
function Ic(r) {
  let e = "";
  for (const t of r)
    e += String.fromCharCode(t);
  return e;
}
var jc = Object.defineProperty, Ac = (r, e) => {
  for (var t in e)
    jc(r, t, { get: e[t], enumerable: !0 });
}, ht = {};
Ac(ht, {
  createEndpoint: () => Ga,
  expose: () => So,
  proxy: () => Ya,
  proxyMarker: () => Co,
  releaseProxy: () => Ha,
  transfer: () => Ja,
  transferHandlers: () => yo,
  windowEndpoint: () => Oc,
  wrap: () => Xa
});
var Co = Symbol("Comlink.proxy"), Ga = Symbol("Comlink.endpoint"), Ha = Symbol("Comlink.releaseProxy"), to = Symbol("Comlink.thrown"), Va = (r) => typeof r == "object" && r !== null || typeof r == "function", Ec = {
  canHandle: (r) => Va(r) && r[Co],
  serialize(r) {
    const { port1: e, port2: t } = new MessageChannel();
    return So(r, e), [t, [t]];
  },
  deserialize(r) {
    return r.start(), Xa(r);
  }
}, xc = {
  canHandle: (r) => Va(r) && to in r,
  serialize({ value: r }) {
    let e;
    return r instanceof Error ? e = {
      isError: !0,
      value: {
        message: r.message,
        name: r.name,
        stack: r.stack
      }
    } : e = { isError: !1, value: r }, [e, []];
  },
  deserialize(r) {
    throw r.isError ? Object.assign(new Error(r.value.message), r.value) : r.value;
  }
}, yo = /* @__PURE__ */ new Map([
  ["proxy", Ec],
  ["throw", xc]
]);
function So(r, e = self) {
  e.addEventListener("message", function t(i) {
    if (!i || !i.data)
      return;
    const { id: n, type: a, path: l } = Object.assign({ path: [] }, i.data), o = (i.data.argumentList || []).map(Tt);
    let s;
    try {
      const d = l.slice(0, -1).reduce((u, p) => u[p], r), h = l.reduce((u, p) => u[p], r);
      switch (a) {
        case 0:
          s = h;
          break;
        case 1:
          d[l.slice(-1)[0]] = Tt(i.data.value), s = !0;
          break;
        case 2:
          s = h.apply(d, o);
          break;
        case 3:
          {
            const u = new h(...o);
            s = Ya(u);
          }
          break;
        case 4:
          {
            const { port1: u, port2: p } = new MessageChannel();
            So(r, p), s = Ja(u, [u]);
          }
          break;
        case 5:
          s = void 0;
          break;
      }
    } catch (d) {
      s = { value: d, [to]: 0 };
    }
    Promise.resolve(s).catch((d) => ({ value: d, [to]: 0 })).then((d) => {
      const [h, u] = wo(d);
      e.postMessage(Object.assign(Object.assign({}, h), { id: n }), u), a === 5 && (e.removeEventListener("message", t), Ka(e));
    });
  }), e.start && e.start();
}
function zc(r) {
  return r.constructor.name === "MessagePort";
}
function Ka(r) {
  zc(r) && r.close();
}
function Xa(r, e) {
  return ro(r, [], e);
}
function Mr(r) {
  if (r)
    throw new Error("Proxy has been released and is not useable");
}
function ro(r, e = [], t = function() {
}) {
  let i = !1;
  const n = new Proxy(t, {
    get(a, l) {
      if (Mr(i), l === Ha)
        return () => Ut(r, {
          type: 5,
          path: e.map((o) => o.toString())
        }).then(() => {
          Ka(r), i = !0;
        });
      if (l === "then") {
        if (e.length === 0)
          return { then: () => n };
        const o = Ut(r, {
          type: 0,
          path: e.map((s) => s.toString())
        }).then(Tt);
        return o.then.bind(o);
      }
      return ro(r, [...e, l]);
    },
    set(a, l, o) {
      Mr(i);
      const [s, d] = wo(o);
      return Ut(r, {
        type: 1,
        path: [...e, l].map((h) => h.toString()),
        value: s
      }, d).then(Tt);
    },
    apply(a, l, o) {
      Mr(i);
      const s = e[e.length - 1];
      if (s === Ga)
        return Ut(r, {
          type: 4
        }).then(Tt);
      if (s === "bind")
        return ro(r, e.slice(0, -1));
      const [d, h] = bn(o);
      return Ut(r, {
        type: 2,
        path: e.map((u) => u.toString()),
        argumentList: d
      }, h).then(Tt);
    },
    construct(a, l) {
      Mr(i);
      const [o, s] = bn(l);
      return Ut(r, {
        type: 3,
        path: e.map((d) => d.toString()),
        argumentList: o
      }, s).then(Tt);
    }
  });
  return n;
}
function Lc(r) {
  return Array.prototype.concat.apply([], r);
}
function bn(r) {
  const e = r.map(wo);
  return [e.map((t) => t[0]), Lc(e.map((t) => t[1]))];
}
var Za = /* @__PURE__ */ new WeakMap();
function Ja(r, e) {
  return Za.set(r, e), r;
}
function Ya(r) {
  return Object.assign(r, { [Co]: !0 });
}
function Oc(r, e = self, t = "*") {
  return {
    postMessage: (i, n) => r.postMessage(i, t, n),
    addEventListener: e.addEventListener.bind(e),
    removeEventListener: e.removeEventListener.bind(e)
  };
}
function wo(r) {
  for (const [e, t] of yo)
    if (t.canHandle(r)) {
      const [i, n] = t.serialize(r);
      return [
        {
          type: 3,
          name: e,
          value: i
        },
        n
      ];
    }
  return [
    {
      type: 0,
      value: r
    },
    Za.get(r) || []
  ];
}
function Tt(r) {
  switch (r.type) {
    case 3:
      return yo.get(r.name).deserialize(r.value);
    case 0:
      return r.value;
  }
}
function Ut(r, e, t) {
  return new Promise((i) => {
    const n = Dc();
    r.addEventListener("message", function a(l) {
      !l.data || !l.data.id || l.data.id !== n || (r.removeEventListener("message", a), i(l.data));
    }), r.start && r.start(), r.postMessage(Object.assign({ id: n }, e), t);
  });
}
function Dc() {
  return new Array(4).fill(0).map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16)).join("-");
}
const Tc = "https://stackblitz.com/headless";
let Fr = null, Br = null, Bi = {};
const Nc = new TextDecoder(), Rc = new TextEncoder(), Nt = class Nt {
  /** @internal */
  constructor(e, t, i) {
    Oe(this, "_instance");
    Oe(this, "_runtimeInfo");
    /**
     * Gives access to the underlying file system.
     */
    Oe(this, "fs");
    Oe(this, "_tornDown", !1);
    this._instance = e, this._runtimeInfo = i, this.fs = new Uc(t);
  }
  async spawn(e, t, i) {
    let n = [];
    Array.isArray(t) ? n = t : i = t;
    let a, l = new ReadableStream();
    if ((i == null ? void 0 : i.output) !== !1) {
      const d = Zc();
      a = d.push, l = d.stream;
    }
    const o = Gc(qc(a)), s = await this._instance.run({
      command: e,
      args: n,
      env: i == null ? void 0 : i.env,
      terminal: i == null ? void 0 : i.terminal
    }, void 0, void 0, o);
    return new Bc(s, l);
  }
  on(e, t) {
    let i = !1, n = () => {
    };
    const a = (...l) => {
      i || t(...l);
    };
    return this._instance.on(e, ht.proxy(a)).then((l) => {
      n = l, i && n();
    }), () => {
      i = !0, n();
    };
  }
  /**
   * Mounts a tree of files into the filesystem.
   *
   * @param tree
   * @param options.mountPoint - Specifies a nested path where the tree should be mounted.
   */
  mount(e, t) {
    const i = Rc.encode(JSON.stringify(qa(e)));
    return this._instance.loadFiles(ht.transfer(i, [i.buffer]), {
      mountPoints: t == null ? void 0 : t.mountPoint
    });
  }
  /**
   * The default value of the `PATH` environment variable for processes started through {@link spawn}.
   */
  get path() {
    return this._runtimeInfo.path;
  }
  /**
   * The full path to the working directory (see {@link FileSystemAPI}).
   */
  get workdir() {
    return this._runtimeInfo.cwd;
  }
  /**
   * Destroys the WebContainer instance, turning it unusable, and releases its resources. After this,
   * a new WebContainer instance can be obtained by calling {@link WebContainer.boot | `boot`}.
   *
   * All entities derived from this instance (e.g. processes, the file system, etc.) also become unusable
   * after calling this method.
   */
  teardown() {
    if (this._tornDown)
      throw new Error("WebContainer already torn down");
    this._tornDown = !0, this.fs._teardown(), this._instance.teardown(), this._instance[ht.releaseProxy](), Nt._instance === this && (Nt._instance = null);
  }
  /**
   * Boots a WebContainer. Only a single instance of WebContainer can be booted concurrently (see {@link WebContainer#teardown | `teardown`}).
   *
   * Booting WebContainer is an expensive operation.
   */
  static async boot(e = {}) {
    const { workdirName: t } = e;
    if (window.crossOriginIsolated && e.coep === "none" && console.warn(`A Cross-Origin-Embedder-Policy header is required in cross origin isolated environments.
Set the 'coep' option to 'require-corp'.`), t != null && t.includes("/") || t === ".." || t === ".")
      throw new Error("workdirName should be a valid folder name");
    for (; Fr; )
      await Fr;
    if (Nt._instance)
      throw new Error("Only a single WebContainer instance can be booted");
    const i = Wc(e);
    Fr = i.catch(() => {
    });
    try {
      const n = await i;
      return Nt._instance = n, n;
    } finally {
      Fr = null;
    }
  }
};
Oe(Nt, "_instance", null);
let ni = Nt;
const Pc = 1, Mc = 2;
class Fc {
  constructor(e, t) {
    Oe(this, "name");
    Oe(this, "_type");
    this.name = e, this._type = t;
  }
  isFile() {
    return this._type === Pc;
  }
  isDirectory() {
    return this._type === Mc;
  }
}
class Bc {
  constructor(e, t) {
    Oe(this, "output");
    Oe(this, "input");
    Oe(this, "exit");
    Oe(this, "_process");
    this.output = t, this._process = e, this.input = new WritableStream({
      write: (i) => {
        var n;
        (n = this._getProcess()) == null || n.write(i).catch(() => {
        });
      }
    }), this.exit = this._onExit();
  }
  kill() {
    var e;
    (e = this._getProcess()) == null || e.kill();
  }
  resize(e) {
    var t;
    (t = this._getProcess()) == null || t.resize(e);
  }
  async _onExit() {
    var e;
    try {
      return await this._process.onExit;
    } finally {
      (e = this._process) == null || e[ht.releaseProxy](), this._process = null;
    }
  }
  _getProcess() {
    return this._process == null && console.warn("This process already exited"), this._process;
  }
}
class Uc {
  constructor(e) {
    Oe(this, "_fs");
    this._fs = e;
  }
  rm(...e) {
    return this._fs.rm(...e);
  }
  async readFile(e, t) {
    return await this._fs.readFile(e, t);
  }
  async rename(e, t) {
    return await this._fs.rename(e, t);
  }
  async writeFile(e, t, i) {
    if (t instanceof Uint8Array) {
      const n = t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength);
      t = ht.transfer(new Uint8Array(n), [n]);
    }
    await this._fs.writeFile(e, t, i);
  }
  async readdir(e, t) {
    const i = await this._fs.readdir(e, t);
    return Vc(i) || Kc(i) ? i : i.map((a) => new Fc(a.name, a["Symbol(type)"]));
  }
  async mkdir(e, t) {
    return await this._fs.mkdir(e, t);
  }
  /**
   * @internal
   */
  _teardown() {
    this._fs[ht.releaseProxy]();
  }
}
async function Wc(r) {
  const { serverPromise: e } = Hc(r), i = await (await e).build({
    host: window.location.host,
    version: "1.1.7",
    workdirName: r.workdirName
  }), n = await i.fs(), a = await i.runtimeInfo();
  return new ni(i, n, a);
}
function qc(r) {
  if (r != null)
    return (e) => {
      e instanceof Uint8Array ? r(Nc.decode(e)) : e == null && r(null);
    };
}
function Gc(r) {
  if (r != null)
    return ht.proxy(r);
}
function Hc(r) {
  if (Br != null)
    return r.coep !== Bi.coep && (console.warn(`Attempting to boot WebContainer with 'coep: ${r.coep}'`), console.warn(`First boot had 'coep: ${Bi.coep}', new settings will not take effect!`)), { serverPromise: Br };
  const e = document.createElement("iframe");
  e.style.display = "none", e.setAttribute("allow", "cross-origin-isolated");
  const t = Xc();
  t.searchParams.set("version", "1.1.7"), r.coep && t.searchParams.set("coep", r.coep), e.src = t.toString();
  const { origin: i } = t;
  return Bi = { ...r }, Br = new Promise((n) => {
    const a = (l) => {
      if (l.origin !== i)
        return;
      const { data: o } = l;
      if (o.type === "init") {
        n(ht.wrap(l.ports[0]));
        return;
      }
      if (o.type === "warning") {
        console[o.level].call(console, o.message);
        return;
      }
    };
    window.addEventListener("message", a);
  }), document.body.insertBefore(e, null), { serverPromise: Br };
}
function Vc(r) {
  return typeof r[0] == "string";
}
function Kc(r) {
  return r[0] instanceof Uint8Array;
}
function Xc() {
  return new URL(window.WEBCONTAINER_API_IFRAME_URL ?? Tc);
}
function Zc() {
  let r = null;
  return { stream: new ReadableStream({
    start(i) {
      r = i;
    }
  }), push: (i) => {
    i != null ? r == null || r.enqueue(i) : (r == null || r.close(), r = null);
  } };
}
var Qa = { exports: {} };
(function(r, e) {
  (function(t, i) {
    r.exports = i();
  })(self, () => (() => {
    var t = { 4567: function(l, o, s) {
      var d = this && this.__decorate || function(f, v, y, j) {
        var A, C = arguments.length, I = C < 3 ? v : j === null ? j = Object.getOwnPropertyDescriptor(v, y) : j;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          I = Reflect.decorate(f, v, y, j);
        else
          for (var z = f.length - 1; z >= 0; z--)
            (A = f[z]) && (I = (C < 3 ? A(I) : C > 3 ? A(v, y, I) : A(v, y)) || I);
        return C > 3 && I && Object.defineProperty(v, y, I), I;
      }, h = this && this.__param || function(f, v) {
        return function(y, j) {
          v(y, j, f);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.AccessibilityManager = void 0;
      const u = s(9042), p = s(6114), b = s(9924), k = s(844), g = s(5596), m = s(4725), c = s(3656);
      let _ = o.AccessibilityManager = class extends k.Disposable {
        constructor(f, v) {
          super(), this._terminal = f, this._renderService = v, this._liveRegionLineCount = 0, this._charsToConsume = [], this._charsToAnnounce = "", this._accessibilityContainer = document.createElement("div"), this._accessibilityContainer.classList.add("xterm-accessibility"), this._rowContainer = document.createElement("div"), this._rowContainer.setAttribute("role", "list"), this._rowContainer.classList.add("xterm-accessibility-tree"), this._rowElements = [];
          for (let y = 0; y < this._terminal.rows; y++)
            this._rowElements[y] = this._createAccessibilityTreeNode(), this._rowContainer.appendChild(this._rowElements[y]);
          if (this._topBoundaryFocusListener = (y) => this._handleBoundaryFocus(y, 0), this._bottomBoundaryFocusListener = (y) => this._handleBoundaryFocus(y, 1), this._rowElements[0].addEventListener("focus", this._topBoundaryFocusListener), this._rowElements[this._rowElements.length - 1].addEventListener("focus", this._bottomBoundaryFocusListener), this._refreshRowsDimensions(), this._accessibilityContainer.appendChild(this._rowContainer), this._liveRegion = document.createElement("div"), this._liveRegion.classList.add("live-region"), this._liveRegion.setAttribute("aria-live", "assertive"), this._accessibilityContainer.appendChild(this._liveRegion), this._liveRegionDebouncer = this.register(new b.TimeBasedDebouncer(this._renderRows.bind(this))), !this._terminal.element)
            throw new Error("Cannot enable accessibility before Terminal.open");
          this._terminal.element.insertAdjacentElement("afterbegin", this._accessibilityContainer), this.register(this._terminal.onResize((y) => this._handleResize(y.rows))), this.register(this._terminal.onRender((y) => this._refreshRows(y.start, y.end))), this.register(this._terminal.onScroll(() => this._refreshRows())), this.register(this._terminal.onA11yChar((y) => this._handleChar(y))), this.register(this._terminal.onLineFeed(() => this._handleChar(`
`))), this.register(this._terminal.onA11yTab((y) => this._handleTab(y))), this.register(this._terminal.onKey((y) => this._handleKey(y.key))), this.register(this._terminal.onBlur(() => this._clearLiveRegion())), this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions())), this._screenDprMonitor = new g.ScreenDprMonitor(window), this.register(this._screenDprMonitor), this._screenDprMonitor.setListener(() => this._refreshRowsDimensions()), this.register((0, c.addDisposableDomListener)(window, "resize", () => this._refreshRowsDimensions())), this._refreshRows(), this.register((0, k.toDisposable)(() => {
            this._accessibilityContainer.remove(), this._rowElements.length = 0;
          }));
        }
        _handleTab(f) {
          for (let v = 0; v < f; v++)
            this._handleChar(" ");
        }
        _handleChar(f) {
          this._liveRegionLineCount < 21 && (this._charsToConsume.length > 0 ? this._charsToConsume.shift() !== f && (this._charsToAnnounce += f) : this._charsToAnnounce += f, f === `
` && (this._liveRegionLineCount++, this._liveRegionLineCount === 21 && (this._liveRegion.textContent += u.tooMuchOutput)), p.isMac && this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode && setTimeout(() => {
            this._accessibilityContainer.appendChild(this._liveRegion);
          }, 0));
        }
        _clearLiveRegion() {
          this._liveRegion.textContent = "", this._liveRegionLineCount = 0, p.isMac && this._liveRegion.remove();
        }
        _handleKey(f) {
          this._clearLiveRegion(), /\p{Control}/u.test(f) || this._charsToConsume.push(f);
        }
        _refreshRows(f, v) {
          this._liveRegionDebouncer.refresh(f, v, this._terminal.rows);
        }
        _renderRows(f, v) {
          const y = this._terminal.buffer, j = y.lines.length.toString();
          for (let A = f; A <= v; A++) {
            const C = y.translateBufferLineToString(y.ydisp + A, !0), I = (y.ydisp + A + 1).toString(), z = this._rowElements[A];
            z && (C.length === 0 ? z.innerText = " " : z.textContent = C, z.setAttribute("aria-posinset", I), z.setAttribute("aria-setsize", j));
          }
          this._announceCharacters();
        }
        _announceCharacters() {
          this._charsToAnnounce.length !== 0 && (this._liveRegion.textContent += this._charsToAnnounce, this._charsToAnnounce = "");
        }
        _handleBoundaryFocus(f, v) {
          const y = f.target, j = this._rowElements[v === 0 ? 1 : this._rowElements.length - 2];
          if (y.getAttribute("aria-posinset") === (v === 0 ? "1" : `${this._terminal.buffer.lines.length}`) || f.relatedTarget !== j)
            return;
          let A, C;
          if (v === 0 ? (A = y, C = this._rowElements.pop(), this._rowContainer.removeChild(C)) : (A = this._rowElements.shift(), C = y, this._rowContainer.removeChild(A)), A.removeEventListener("focus", this._topBoundaryFocusListener), C.removeEventListener("focus", this._bottomBoundaryFocusListener), v === 0) {
            const I = this._createAccessibilityTreeNode();
            this._rowElements.unshift(I), this._rowContainer.insertAdjacentElement("afterbegin", I);
          } else {
            const I = this._createAccessibilityTreeNode();
            this._rowElements.push(I), this._rowContainer.appendChild(I);
          }
          this._rowElements[0].addEventListener("focus", this._topBoundaryFocusListener), this._rowElements[this._rowElements.length - 1].addEventListener("focus", this._bottomBoundaryFocusListener), this._terminal.scrollLines(v === 0 ? -1 : 1), this._rowElements[v === 0 ? 1 : this._rowElements.length - 2].focus(), f.preventDefault(), f.stopImmediatePropagation();
        }
        _handleResize(f) {
          this._rowElements[this._rowElements.length - 1].removeEventListener("focus", this._bottomBoundaryFocusListener);
          for (let v = this._rowContainer.children.length; v < this._terminal.rows; v++)
            this._rowElements[v] = this._createAccessibilityTreeNode(), this._rowContainer.appendChild(this._rowElements[v]);
          for (; this._rowElements.length > f; )
            this._rowContainer.removeChild(this._rowElements.pop());
          this._rowElements[this._rowElements.length - 1].addEventListener("focus", this._bottomBoundaryFocusListener), this._refreshRowsDimensions();
        }
        _createAccessibilityTreeNode() {
          const f = document.createElement("div");
          return f.setAttribute("role", "listitem"), f.tabIndex = -1, this._refreshRowDimensions(f), f;
        }
        _refreshRowsDimensions() {
          if (this._renderService.dimensions.css.cell.height) {
            this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`, this._rowElements.length !== this._terminal.rows && this._handleResize(this._terminal.rows);
            for (let f = 0; f < this._terminal.rows; f++)
              this._refreshRowDimensions(this._rowElements[f]);
          }
        }
        _refreshRowDimensions(f) {
          f.style.height = `${this._renderService.dimensions.css.cell.height}px`;
        }
      };
      o.AccessibilityManager = _ = d([h(1, m.IRenderService)], _);
    }, 3614: (l, o) => {
      function s(p) {
        return p.replace(/\r?\n/g, "\r");
      }
      function d(p, b) {
        return b ? "\x1B[200~" + p + "\x1B[201~" : p;
      }
      function h(p, b, k, g) {
        p = d(p = s(p), k.decPrivateModes.bracketedPasteMode && g.rawOptions.ignoreBracketedPasteMode !== !0), k.triggerDataEvent(p, !0), b.value = "";
      }
      function u(p, b, k) {
        const g = k.getBoundingClientRect(), m = p.clientX - g.left - 10, c = p.clientY - g.top - 10;
        b.style.width = "20px", b.style.height = "20px", b.style.left = `${m}px`, b.style.top = `${c}px`, b.style.zIndex = "1000", b.focus();
      }
      Object.defineProperty(o, "__esModule", { value: !0 }), o.rightClickHandler = o.moveTextAreaUnderMouseCursor = o.paste = o.handlePasteEvent = o.copyHandler = o.bracketTextForPaste = o.prepareTextForTerminal = void 0, o.prepareTextForTerminal = s, o.bracketTextForPaste = d, o.copyHandler = function(p, b) {
        p.clipboardData && p.clipboardData.setData("text/plain", b.selectionText), p.preventDefault();
      }, o.handlePasteEvent = function(p, b, k, g) {
        p.stopPropagation(), p.clipboardData && h(p.clipboardData.getData("text/plain"), b, k, g);
      }, o.paste = h, o.moveTextAreaUnderMouseCursor = u, o.rightClickHandler = function(p, b, k, g, m) {
        u(p, b, k), m && g.rightClickSelect(p), b.value = g.selectionText, b.select();
      };
    }, 7239: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.ColorContrastCache = void 0;
      const d = s(1505);
      o.ColorContrastCache = class {
        constructor() {
          this._color = new d.TwoKeyMap(), this._css = new d.TwoKeyMap();
        }
        setCss(h, u, p) {
          this._css.set(h, u, p);
        }
        getCss(h, u) {
          return this._css.get(h, u);
        }
        setColor(h, u, p) {
          this._color.set(h, u, p);
        }
        getColor(h, u) {
          return this._color.get(h, u);
        }
        clear() {
          this._color.clear(), this._css.clear();
        }
      };
    }, 3656: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.addDisposableDomListener = void 0, o.addDisposableDomListener = function(s, d, h, u) {
        s.addEventListener(d, h, u);
        let p = !1;
        return { dispose: () => {
          p || (p = !0, s.removeEventListener(d, h, u));
        } };
      };
    }, 6465: function(l, o, s) {
      var d = this && this.__decorate || function(m, c, _, f) {
        var v, y = arguments.length, j = y < 3 ? c : f === null ? f = Object.getOwnPropertyDescriptor(c, _) : f;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          j = Reflect.decorate(m, c, _, f);
        else
          for (var A = m.length - 1; A >= 0; A--)
            (v = m[A]) && (j = (y < 3 ? v(j) : y > 3 ? v(c, _, j) : v(c, _)) || j);
        return y > 3 && j && Object.defineProperty(c, _, j), j;
      }, h = this && this.__param || function(m, c) {
        return function(_, f) {
          c(_, f, m);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.Linkifier2 = void 0;
      const u = s(3656), p = s(8460), b = s(844), k = s(2585);
      let g = o.Linkifier2 = class extends b.Disposable {
        get currentLink() {
          return this._currentLink;
        }
        constructor(m) {
          super(), this._bufferService = m, this._linkProviders = [], this._linkCacheDisposables = [], this._isMouseOut = !0, this._wasResized = !1, this._activeLine = -1, this._onShowLinkUnderline = this.register(new p.EventEmitter()), this.onShowLinkUnderline = this._onShowLinkUnderline.event, this._onHideLinkUnderline = this.register(new p.EventEmitter()), this.onHideLinkUnderline = this._onHideLinkUnderline.event, this.register((0, b.getDisposeArrayDisposable)(this._linkCacheDisposables)), this.register((0, b.toDisposable)(() => {
            this._lastMouseEvent = void 0;
          })), this.register(this._bufferService.onResize(() => {
            this._clearCurrentLink(), this._wasResized = !0;
          }));
        }
        registerLinkProvider(m) {
          return this._linkProviders.push(m), { dispose: () => {
            const c = this._linkProviders.indexOf(m);
            c !== -1 && this._linkProviders.splice(c, 1);
          } };
        }
        attachToDom(m, c, _) {
          this._element = m, this._mouseService = c, this._renderService = _, this.register((0, u.addDisposableDomListener)(this._element, "mouseleave", () => {
            this._isMouseOut = !0, this._clearCurrentLink();
          })), this.register((0, u.addDisposableDomListener)(this._element, "mousemove", this._handleMouseMove.bind(this))), this.register((0, u.addDisposableDomListener)(this._element, "mousedown", this._handleMouseDown.bind(this))), this.register((0, u.addDisposableDomListener)(this._element, "mouseup", this._handleMouseUp.bind(this)));
        }
        _handleMouseMove(m) {
          if (this._lastMouseEvent = m, !this._element || !this._mouseService)
            return;
          const c = this._positionFromMouseEvent(m, this._element, this._mouseService);
          if (!c)
            return;
          this._isMouseOut = !1;
          const _ = m.composedPath();
          for (let f = 0; f < _.length; f++) {
            const v = _[f];
            if (v.classList.contains("xterm"))
              break;
            if (v.classList.contains("xterm-hover"))
              return;
          }
          this._lastBufferCell && c.x === this._lastBufferCell.x && c.y === this._lastBufferCell.y || (this._handleHover(c), this._lastBufferCell = c);
        }
        _handleHover(m) {
          if (this._activeLine !== m.y || this._wasResized)
            return this._clearCurrentLink(), this._askForLink(m, !1), void (this._wasResized = !1);
          this._currentLink && this._linkAtPosition(this._currentLink.link, m) || (this._clearCurrentLink(), this._askForLink(m, !0));
        }
        _askForLink(m, c) {
          var _, f;
          this._activeProviderReplies && c || ((_ = this._activeProviderReplies) === null || _ === void 0 || _.forEach((y) => {
            y == null || y.forEach((j) => {
              j.link.dispose && j.link.dispose();
            });
          }), this._activeProviderReplies = /* @__PURE__ */ new Map(), this._activeLine = m.y);
          let v = !1;
          for (const [y, j] of this._linkProviders.entries())
            c ? !((f = this._activeProviderReplies) === null || f === void 0) && f.get(y) && (v = this._checkLinkProviderResult(y, m, v)) : j.provideLinks(m.y, (A) => {
              var C, I;
              if (this._isMouseOut)
                return;
              const z = A == null ? void 0 : A.map((P) => ({ link: P }));
              (C = this._activeProviderReplies) === null || C === void 0 || C.set(y, z), v = this._checkLinkProviderResult(y, m, v), ((I = this._activeProviderReplies) === null || I === void 0 ? void 0 : I.size) === this._linkProviders.length && this._removeIntersectingLinks(m.y, this._activeProviderReplies);
            });
        }
        _removeIntersectingLinks(m, c) {
          const _ = /* @__PURE__ */ new Set();
          for (let f = 0; f < c.size; f++) {
            const v = c.get(f);
            if (v)
              for (let y = 0; y < v.length; y++) {
                const j = v[y], A = j.link.range.start.y < m ? 0 : j.link.range.start.x, C = j.link.range.end.y > m ? this._bufferService.cols : j.link.range.end.x;
                for (let I = A; I <= C; I++) {
                  if (_.has(I)) {
                    v.splice(y--, 1);
                    break;
                  }
                  _.add(I);
                }
              }
          }
        }
        _checkLinkProviderResult(m, c, _) {
          var f;
          if (!this._activeProviderReplies)
            return _;
          const v = this._activeProviderReplies.get(m);
          let y = !1;
          for (let j = 0; j < m; j++)
            this._activeProviderReplies.has(j) && !this._activeProviderReplies.get(j) || (y = !0);
          if (!y && v) {
            const j = v.find((A) => this._linkAtPosition(A.link, c));
            j && (_ = !0, this._handleNewLink(j));
          }
          if (this._activeProviderReplies.size === this._linkProviders.length && !_)
            for (let j = 0; j < this._activeProviderReplies.size; j++) {
              const A = (f = this._activeProviderReplies.get(j)) === null || f === void 0 ? void 0 : f.find((C) => this._linkAtPosition(C.link, c));
              if (A) {
                _ = !0, this._handleNewLink(A);
                break;
              }
            }
          return _;
        }
        _handleMouseDown() {
          this._mouseDownLink = this._currentLink;
        }
        _handleMouseUp(m) {
          if (!this._element || !this._mouseService || !this._currentLink)
            return;
          const c = this._positionFromMouseEvent(m, this._element, this._mouseService);
          c && this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, c) && this._currentLink.link.activate(m, this._currentLink.link.text);
        }
        _clearCurrentLink(m, c) {
          this._element && this._currentLink && this._lastMouseEvent && (!m || !c || this._currentLink.link.range.start.y >= m && this._currentLink.link.range.end.y <= c) && (this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent), this._currentLink = void 0, (0, b.disposeArray)(this._linkCacheDisposables));
        }
        _handleNewLink(m) {
          if (!this._element || !this._lastMouseEvent || !this._mouseService)
            return;
          const c = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);
          c && this._linkAtPosition(m.link, c) && (this._currentLink = m, this._currentLink.state = { decorations: { underline: m.link.decorations === void 0 || m.link.decorations.underline, pointerCursor: m.link.decorations === void 0 || m.link.decorations.pointerCursor }, isHovered: !0 }, this._linkHover(this._element, m.link, this._lastMouseEvent), m.link.decorations = {}, Object.defineProperties(m.link.decorations, { pointerCursor: { get: () => {
            var _, f;
            return (f = (_ = this._currentLink) === null || _ === void 0 ? void 0 : _.state) === null || f === void 0 ? void 0 : f.decorations.pointerCursor;
          }, set: (_) => {
            var f, v;
            !((f = this._currentLink) === null || f === void 0) && f.state && this._currentLink.state.decorations.pointerCursor !== _ && (this._currentLink.state.decorations.pointerCursor = _, this._currentLink.state.isHovered && ((v = this._element) === null || v === void 0 || v.classList.toggle("xterm-cursor-pointer", _)));
          } }, underline: { get: () => {
            var _, f;
            return (f = (_ = this._currentLink) === null || _ === void 0 ? void 0 : _.state) === null || f === void 0 ? void 0 : f.decorations.underline;
          }, set: (_) => {
            var f, v, y;
            !((f = this._currentLink) === null || f === void 0) && f.state && ((y = (v = this._currentLink) === null || v === void 0 ? void 0 : v.state) === null || y === void 0 ? void 0 : y.decorations.underline) !== _ && (this._currentLink.state.decorations.underline = _, this._currentLink.state.isHovered && this._fireUnderlineEvent(m.link, _));
          } } }), this._renderService && this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange((_) => {
            if (!this._currentLink)
              return;
            const f = _.start === 0 ? 0 : _.start + 1 + this._bufferService.buffer.ydisp, v = this._bufferService.buffer.ydisp + 1 + _.end;
            if (this._currentLink.link.range.start.y >= f && this._currentLink.link.range.end.y <= v && (this._clearCurrentLink(f, v), this._lastMouseEvent && this._element)) {
              const y = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);
              y && this._askForLink(y, !1);
            }
          })));
        }
        _linkHover(m, c, _) {
          var f;
          !((f = this._currentLink) === null || f === void 0) && f.state && (this._currentLink.state.isHovered = !0, this._currentLink.state.decorations.underline && this._fireUnderlineEvent(c, !0), this._currentLink.state.decorations.pointerCursor && m.classList.add("xterm-cursor-pointer")), c.hover && c.hover(_, c.text);
        }
        _fireUnderlineEvent(m, c) {
          const _ = m.range, f = this._bufferService.buffer.ydisp, v = this._createLinkUnderlineEvent(_.start.x - 1, _.start.y - f - 1, _.end.x, _.end.y - f - 1, void 0);
          (c ? this._onShowLinkUnderline : this._onHideLinkUnderline).fire(v);
        }
        _linkLeave(m, c, _) {
          var f;
          !((f = this._currentLink) === null || f === void 0) && f.state && (this._currentLink.state.isHovered = !1, this._currentLink.state.decorations.underline && this._fireUnderlineEvent(c, !1), this._currentLink.state.decorations.pointerCursor && m.classList.remove("xterm-cursor-pointer")), c.leave && c.leave(_, c.text);
        }
        _linkAtPosition(m, c) {
          const _ = m.range.start.y * this._bufferService.cols + m.range.start.x, f = m.range.end.y * this._bufferService.cols + m.range.end.x, v = c.y * this._bufferService.cols + c.x;
          return _ <= v && v <= f;
        }
        _positionFromMouseEvent(m, c, _) {
          const f = _.getCoords(m, c, this._bufferService.cols, this._bufferService.rows);
          if (f)
            return { x: f[0], y: f[1] + this._bufferService.buffer.ydisp };
        }
        _createLinkUnderlineEvent(m, c, _, f, v) {
          return { x1: m, y1: c, x2: _, y2: f, cols: this._bufferService.cols, fg: v };
        }
      };
      o.Linkifier2 = g = d([h(0, k.IBufferService)], g);
    }, 9042: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.tooMuchOutput = o.promptLabel = void 0, o.promptLabel = "Terminal input", o.tooMuchOutput = "Too much output to announce, navigate to rows manually to read";
    }, 3730: function(l, o, s) {
      var d = this && this.__decorate || function(g, m, c, _) {
        var f, v = arguments.length, y = v < 3 ? m : _ === null ? _ = Object.getOwnPropertyDescriptor(m, c) : _;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          y = Reflect.decorate(g, m, c, _);
        else
          for (var j = g.length - 1; j >= 0; j--)
            (f = g[j]) && (y = (v < 3 ? f(y) : v > 3 ? f(m, c, y) : f(m, c)) || y);
        return v > 3 && y && Object.defineProperty(m, c, y), y;
      }, h = this && this.__param || function(g, m) {
        return function(c, _) {
          m(c, _, g);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.OscLinkProvider = void 0;
      const u = s(511), p = s(2585);
      let b = o.OscLinkProvider = class {
        constructor(g, m, c) {
          this._bufferService = g, this._optionsService = m, this._oscLinkService = c;
        }
        provideLinks(g, m) {
          var c;
          const _ = this._bufferService.buffer.lines.get(g - 1);
          if (!_)
            return void m(void 0);
          const f = [], v = this._optionsService.rawOptions.linkHandler, y = new u.CellData(), j = _.getTrimmedLength();
          let A = -1, C = -1, I = !1;
          for (let z = 0; z < j; z++)
            if (C !== -1 || _.hasContent(z)) {
              if (_.loadCell(z, y), y.hasExtendedAttrs() && y.extended.urlId) {
                if (C === -1) {
                  C = z, A = y.extended.urlId;
                  continue;
                }
                I = y.extended.urlId !== A;
              } else
                C !== -1 && (I = !0);
              if (I || C !== -1 && z === j - 1) {
                const P = (c = this._oscLinkService.getLinkData(A)) === null || c === void 0 ? void 0 : c.uri;
                if (P) {
                  const L = { start: { x: C + 1, y: g }, end: { x: z + (I || z !== j - 1 ? 0 : 1), y: g } };
                  let N = !1;
                  if (!(v != null && v.allowNonHttpProtocols))
                    try {
                      const B = new URL(P);
                      ["http:", "https:"].includes(B.protocol) || (N = !0);
                    } catch {
                      N = !0;
                    }
                  N || f.push({ text: P, range: L, activate: (B, F) => v ? v.activate(B, F, L) : k(0, F), hover: (B, F) => {
                    var U;
                    return (U = v == null ? void 0 : v.hover) === null || U === void 0 ? void 0 : U.call(v, B, F, L);
                  }, leave: (B, F) => {
                    var U;
                    return (U = v == null ? void 0 : v.leave) === null || U === void 0 ? void 0 : U.call(v, B, F, L);
                  } });
                }
                I = !1, y.hasExtendedAttrs() && y.extended.urlId ? (C = z, A = y.extended.urlId) : (C = -1, A = -1);
              }
            }
          m(f);
        }
      };
      function k(g, m) {
        if (confirm(`Do you want to navigate to ${m}?

WARNING: This link could potentially be dangerous`)) {
          const c = window.open();
          if (c) {
            try {
              c.opener = null;
            } catch {
            }
            c.location.href = m;
          } else
            console.warn("Opening link blocked as opener could not be cleared");
        }
      }
      o.OscLinkProvider = b = d([h(0, p.IBufferService), h(1, p.IOptionsService), h(2, p.IOscLinkService)], b);
    }, 6193: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.RenderDebouncer = void 0, o.RenderDebouncer = class {
        constructor(s, d) {
          this._parentWindow = s, this._renderCallback = d, this._refreshCallbacks = [];
        }
        dispose() {
          this._animationFrame && (this._parentWindow.cancelAnimationFrame(this._animationFrame), this._animationFrame = void 0);
        }
        addRefreshCallback(s) {
          return this._refreshCallbacks.push(s), this._animationFrame || (this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh())), this._animationFrame;
        }
        refresh(s, d, h) {
          this._rowCount = h, s = s !== void 0 ? s : 0, d = d !== void 0 ? d : this._rowCount - 1, this._rowStart = this._rowStart !== void 0 ? Math.min(this._rowStart, s) : s, this._rowEnd = this._rowEnd !== void 0 ? Math.max(this._rowEnd, d) : d, this._animationFrame || (this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh()));
        }
        _innerRefresh() {
          if (this._animationFrame = void 0, this._rowStart === void 0 || this._rowEnd === void 0 || this._rowCount === void 0)
            return void this._runRefreshCallbacks();
          const s = Math.max(this._rowStart, 0), d = Math.min(this._rowEnd, this._rowCount - 1);
          this._rowStart = void 0, this._rowEnd = void 0, this._renderCallback(s, d), this._runRefreshCallbacks();
        }
        _runRefreshCallbacks() {
          for (const s of this._refreshCallbacks)
            s(0);
          this._refreshCallbacks = [];
        }
      };
    }, 5596: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.ScreenDprMonitor = void 0;
      const d = s(844);
      class h extends d.Disposable {
        constructor(p) {
          super(), this._parentWindow = p, this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio, this.register((0, d.toDisposable)(() => {
            this.clearListener();
          }));
        }
        setListener(p) {
          this._listener && this.clearListener(), this._listener = p, this._outerListener = () => {
            this._listener && (this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio), this._updateDpr());
          }, this._updateDpr();
        }
        _updateDpr() {
          var p;
          this._outerListener && ((p = this._resolutionMediaMatchList) === null || p === void 0 || p.removeListener(this._outerListener), this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio, this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`), this._resolutionMediaMatchList.addListener(this._outerListener));
        }
        clearListener() {
          this._resolutionMediaMatchList && this._listener && this._outerListener && (this._resolutionMediaMatchList.removeListener(this._outerListener), this._resolutionMediaMatchList = void 0, this._listener = void 0, this._outerListener = void 0);
        }
      }
      o.ScreenDprMonitor = h;
    }, 3236: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.Terminal = void 0;
      const d = s(3614), h = s(3656), u = s(6465), p = s(9042), b = s(3730), k = s(1680), g = s(3107), m = s(5744), c = s(2950), _ = s(1296), f = s(428), v = s(4269), y = s(5114), j = s(8934), A = s(3230), C = s(9312), I = s(4725), z = s(6731), P = s(8055), L = s(8969), N = s(8460), B = s(844), F = s(6114), U = s(8437), H = s(2584), x = s(7399), O = s(5941), T = s(9074), R = s(2585), G = s(5435), V = s(4567), ee = typeof window < "u" ? window.document : null;
      class Y extends L.CoreTerminal {
        get onFocus() {
          return this._onFocus.event;
        }
        get onBlur() {
          return this._onBlur.event;
        }
        get onA11yChar() {
          return this._onA11yCharEmitter.event;
        }
        get onA11yTab() {
          return this._onA11yTabEmitter.event;
        }
        get onWillOpen() {
          return this._onWillOpen.event;
        }
        constructor(E = {}) {
          super(E), this.browser = F, this._keyDownHandled = !1, this._keyDownSeen = !1, this._keyPressHandled = !1, this._unprocessedDeadKey = !1, this._accessibilityManager = this.register(new B.MutableDisposable()), this._onCursorMove = this.register(new N.EventEmitter()), this.onCursorMove = this._onCursorMove.event, this._onKey = this.register(new N.EventEmitter()), this.onKey = this._onKey.event, this._onRender = this.register(new N.EventEmitter()), this.onRender = this._onRender.event, this._onSelectionChange = this.register(new N.EventEmitter()), this.onSelectionChange = this._onSelectionChange.event, this._onTitleChange = this.register(new N.EventEmitter()), this.onTitleChange = this._onTitleChange.event, this._onBell = this.register(new N.EventEmitter()), this.onBell = this._onBell.event, this._onFocus = this.register(new N.EventEmitter()), this._onBlur = this.register(new N.EventEmitter()), this._onA11yCharEmitter = this.register(new N.EventEmitter()), this._onA11yTabEmitter = this.register(new N.EventEmitter()), this._onWillOpen = this.register(new N.EventEmitter()), this._setup(), this.linkifier2 = this.register(this._instantiationService.createInstance(u.Linkifier2)), this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(b.OscLinkProvider)), this._decorationService = this._instantiationService.createInstance(T.DecorationService), this._instantiationService.setService(R.IDecorationService, this._decorationService), this.register(this._inputHandler.onRequestBell(() => this._onBell.fire())), this.register(this._inputHandler.onRequestRefreshRows((W, K) => this.refresh(W, K))), this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus())), this.register(this._inputHandler.onRequestReset(() => this.reset())), this.register(this._inputHandler.onRequestWindowsOptionsReport((W) => this._reportWindowsOptions(W))), this.register(this._inputHandler.onColor((W) => this._handleColorEvent(W))), this.register((0, N.forwardEvent)(this._inputHandler.onCursorMove, this._onCursorMove)), this.register((0, N.forwardEvent)(this._inputHandler.onTitleChange, this._onTitleChange)), this.register((0, N.forwardEvent)(this._inputHandler.onA11yChar, this._onA11yCharEmitter)), this.register((0, N.forwardEvent)(this._inputHandler.onA11yTab, this._onA11yTabEmitter)), this.register(this._bufferService.onResize((W) => this._afterResize(W.cols, W.rows))), this.register((0, B.toDisposable)(() => {
            var W, K;
            this._customKeyEventHandler = void 0, (K = (W = this.element) === null || W === void 0 ? void 0 : W.parentNode) === null || K === void 0 || K.removeChild(this.element);
          }));
        }
        _handleColorEvent(E) {
          if (this._themeService)
            for (const W of E) {
              let K, X = "";
              switch (W.index) {
                case 256:
                  K = "foreground", X = "10";
                  break;
                case 257:
                  K = "background", X = "11";
                  break;
                case 258:
                  K = "cursor", X = "12";
                  break;
                default:
                  K = "ansi", X = "4;" + W.index;
              }
              switch (W.type) {
                case 0:
                  const le = P.color.toColorRGB(K === "ansi" ? this._themeService.colors.ansi[W.index] : this._themeService.colors[K]);
                  this.coreService.triggerDataEvent(`${H.C0.ESC}]${X};${(0, O.toRgbString)(le)}${H.C1_ESCAPED.ST}`);
                  break;
                case 1:
                  if (K === "ansi")
                    this._themeService.modifyColors((te) => te.ansi[W.index] = P.rgba.toColor(...W.color));
                  else {
                    const te = K;
                    this._themeService.modifyColors((ue) => ue[te] = P.rgba.toColor(...W.color));
                  }
                  break;
                case 2:
                  this._themeService.restoreColor(W.index);
              }
            }
        }
        _setup() {
          super._setup(), this._customKeyEventHandler = void 0;
        }
        get buffer() {
          return this.buffers.active;
        }
        focus() {
          this.textarea && this.textarea.focus({ preventScroll: !0 });
        }
        _handleScreenReaderModeOptionChange(E) {
          E ? !this._accessibilityManager.value && this._renderService && (this._accessibilityManager.value = this._instantiationService.createInstance(V.AccessibilityManager, this)) : this._accessibilityManager.clear();
        }
        _handleTextAreaFocus(E) {
          this.coreService.decPrivateModes.sendFocus && this.coreService.triggerDataEvent(H.C0.ESC + "[I"), this.updateCursorStyle(E), this.element.classList.add("focus"), this._showCursor(), this._onFocus.fire();
        }
        blur() {
          var E;
          return (E = this.textarea) === null || E === void 0 ? void 0 : E.blur();
        }
        _handleTextAreaBlur() {
          this.textarea.value = "", this.refresh(this.buffer.y, this.buffer.y), this.coreService.decPrivateModes.sendFocus && this.coreService.triggerDataEvent(H.C0.ESC + "[O"), this.element.classList.remove("focus"), this._onBlur.fire();
        }
        _syncTextArea() {
          if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper.isComposing || !this._renderService)
            return;
          const E = this.buffer.ybase + this.buffer.y, W = this.buffer.lines.get(E);
          if (!W)
            return;
          const K = Math.min(this.buffer.x, this.cols - 1), X = this._renderService.dimensions.css.cell.height, le = W.getWidth(K), te = this._renderService.dimensions.css.cell.width * le, ue = this.buffer.y * this._renderService.dimensions.css.cell.height, je = K * this._renderService.dimensions.css.cell.width;
          this.textarea.style.left = je + "px", this.textarea.style.top = ue + "px", this.textarea.style.width = te + "px", this.textarea.style.height = X + "px", this.textarea.style.lineHeight = X + "px", this.textarea.style.zIndex = "-5";
        }
        _initGlobal() {
          this._bindKeys(), this.register((0, h.addDisposableDomListener)(this.element, "copy", (W) => {
            this.hasSelection() && (0, d.copyHandler)(W, this._selectionService);
          }));
          const E = (W) => (0, d.handlePasteEvent)(W, this.textarea, this.coreService, this.optionsService);
          this.register((0, h.addDisposableDomListener)(this.textarea, "paste", E)), this.register((0, h.addDisposableDomListener)(this.element, "paste", E)), F.isFirefox ? this.register((0, h.addDisposableDomListener)(this.element, "mousedown", (W) => {
            W.button === 2 && (0, d.rightClickHandler)(W, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);
          })) : this.register((0, h.addDisposableDomListener)(this.element, "contextmenu", (W) => {
            (0, d.rightClickHandler)(W, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);
          })), F.isLinux && this.register((0, h.addDisposableDomListener)(this.element, "auxclick", (W) => {
            W.button === 1 && (0, d.moveTextAreaUnderMouseCursor)(W, this.textarea, this.screenElement);
          }));
        }
        _bindKeys() {
          this.register((0, h.addDisposableDomListener)(this.textarea, "keyup", (E) => this._keyUp(E), !0)), this.register((0, h.addDisposableDomListener)(this.textarea, "keydown", (E) => this._keyDown(E), !0)), this.register((0, h.addDisposableDomListener)(this.textarea, "keypress", (E) => this._keyPress(E), !0)), this.register((0, h.addDisposableDomListener)(this.textarea, "compositionstart", () => this._compositionHelper.compositionstart())), this.register((0, h.addDisposableDomListener)(this.textarea, "compositionupdate", (E) => this._compositionHelper.compositionupdate(E))), this.register((0, h.addDisposableDomListener)(this.textarea, "compositionend", () => this._compositionHelper.compositionend())), this.register((0, h.addDisposableDomListener)(this.textarea, "input", (E) => this._inputEvent(E), !0)), this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));
        }
        open(E) {
          var W;
          if (!E)
            throw new Error("Terminal requires a parent element.");
          E.isConnected || this._logService.debug("Terminal.open was called on an element that was not attached to the DOM"), this._document = E.ownerDocument, this.element = this._document.createElement("div"), this.element.dir = "ltr", this.element.classList.add("terminal"), this.element.classList.add("xterm"), E.appendChild(this.element);
          const K = ee.createDocumentFragment();
          this._viewportElement = ee.createElement("div"), this._viewportElement.classList.add("xterm-viewport"), K.appendChild(this._viewportElement), this._viewportScrollArea = ee.createElement("div"), this._viewportScrollArea.classList.add("xterm-scroll-area"), this._viewportElement.appendChild(this._viewportScrollArea), this.screenElement = ee.createElement("div"), this.screenElement.classList.add("xterm-screen"), this._helperContainer = ee.createElement("div"), this._helperContainer.classList.add("xterm-helpers"), this.screenElement.appendChild(this._helperContainer), K.appendChild(this.screenElement), this.textarea = ee.createElement("textarea"), this.textarea.classList.add("xterm-helper-textarea"), this.textarea.setAttribute("aria-label", p.promptLabel), F.isChromeOS || this.textarea.setAttribute("aria-multiline", "false"), this.textarea.setAttribute("autocorrect", "off"), this.textarea.setAttribute("autocapitalize", "off"), this.textarea.setAttribute("spellcheck", "false"), this.textarea.tabIndex = 0, this._coreBrowserService = this._instantiationService.createInstance(y.CoreBrowserService, this.textarea, (W = this._document.defaultView) !== null && W !== void 0 ? W : window), this._instantiationService.setService(I.ICoreBrowserService, this._coreBrowserService), this.register((0, h.addDisposableDomListener)(this.textarea, "focus", (X) => this._handleTextAreaFocus(X))), this.register((0, h.addDisposableDomListener)(this.textarea, "blur", () => this._handleTextAreaBlur())), this._helperContainer.appendChild(this.textarea), this._charSizeService = this._instantiationService.createInstance(f.CharSizeService, this._document, this._helperContainer), this._instantiationService.setService(I.ICharSizeService, this._charSizeService), this._themeService = this._instantiationService.createInstance(z.ThemeService), this._instantiationService.setService(I.IThemeService, this._themeService), this._characterJoinerService = this._instantiationService.createInstance(v.CharacterJoinerService), this._instantiationService.setService(I.ICharacterJoinerService, this._characterJoinerService), this._renderService = this.register(this._instantiationService.createInstance(A.RenderService, this.rows, this.screenElement)), this._instantiationService.setService(I.IRenderService, this._renderService), this.register(this._renderService.onRenderedViewportChange((X) => this._onRender.fire(X))), this.onResize((X) => this._renderService.resize(X.cols, X.rows)), this._compositionView = ee.createElement("div"), this._compositionView.classList.add("composition-view"), this._compositionHelper = this._instantiationService.createInstance(c.CompositionHelper, this.textarea, this._compositionView), this._helperContainer.appendChild(this._compositionView), this.element.appendChild(K);
          try {
            this._onWillOpen.fire(this.element);
          } catch {
          }
          this._renderService.hasRenderer() || this._renderService.setRenderer(this._createRenderer()), this._mouseService = this._instantiationService.createInstance(j.MouseService), this._instantiationService.setService(I.IMouseService, this._mouseService), this.viewport = this._instantiationService.createInstance(k.Viewport, this._viewportElement, this._viewportScrollArea), this.viewport.onRequestScrollLines((X) => this.scrollLines(X.amount, X.suppressScrollEvent, 1)), this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport.syncScrollArea())), this.register(this.viewport), this.register(this.onCursorMove(() => {
            this._renderService.handleCursorMove(), this._syncTextArea();
          })), this.register(this.onResize(() => this._renderService.handleResize(this.cols, this.rows))), this.register(this.onBlur(() => this._renderService.handleBlur())), this.register(this.onFocus(() => this._renderService.handleFocus())), this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea())), this._selectionService = this.register(this._instantiationService.createInstance(C.SelectionService, this.element, this.screenElement, this.linkifier2)), this._instantiationService.setService(I.ISelectionService, this._selectionService), this.register(this._selectionService.onRequestScrollLines((X) => this.scrollLines(X.amount, X.suppressScrollEvent))), this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire())), this.register(this._selectionService.onRequestRedraw((X) => this._renderService.handleSelectionChanged(X.start, X.end, X.columnSelectMode))), this.register(this._selectionService.onLinuxMouseSelection((X) => {
            this.textarea.value = X, this.textarea.focus(), this.textarea.select();
          })), this.register(this._onScroll.event((X) => {
            this.viewport.syncScrollArea(), this._selectionService.refresh();
          })), this.register((0, h.addDisposableDomListener)(this._viewportElement, "scroll", () => this._selectionService.refresh())), this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService), this.register(this._instantiationService.createInstance(g.BufferDecorationRenderer, this.screenElement)), this.register((0, h.addDisposableDomListener)(this.element, "mousedown", (X) => this._selectionService.handleMouseDown(X))), this.coreMouseService.areMouseEventsActive ? (this._selectionService.disable(), this.element.classList.add("enable-mouse-events")) : this._selectionService.enable(), this.options.screenReaderMode && (this._accessibilityManager.value = this._instantiationService.createInstance(V.AccessibilityManager, this)), this.register(this.optionsService.onSpecificOptionChange("screenReaderMode", (X) => this._handleScreenReaderModeOptionChange(X))), this.options.overviewRulerWidth && (this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(m.OverviewRulerRenderer, this._viewportElement, this.screenElement))), this.optionsService.onSpecificOptionChange("overviewRulerWidth", (X) => {
            !this._overviewRulerRenderer && X && this._viewportElement && this.screenElement && (this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(m.OverviewRulerRenderer, this._viewportElement, this.screenElement)));
          }), this._charSizeService.measure(), this.refresh(0, this.rows - 1), this._initGlobal(), this.bindMouse();
        }
        _createRenderer() {
          return this._instantiationService.createInstance(_.DomRenderer, this.element, this.screenElement, this._viewportElement, this.linkifier2);
        }
        bindMouse() {
          const E = this, W = this.element;
          function K(te) {
            const ue = E._mouseService.getMouseReportCoords(te, E.screenElement);
            if (!ue)
              return !1;
            let je, Te;
            switch (te.overrideType || te.type) {
              case "mousemove":
                Te = 32, te.buttons === void 0 ? (je = 3, te.button !== void 0 && (je = te.button < 3 ? te.button : 3)) : je = 1 & te.buttons ? 0 : 4 & te.buttons ? 1 : 2 & te.buttons ? 2 : 3;
                break;
              case "mouseup":
                Te = 0, je = te.button < 3 ? te.button : 3;
                break;
              case "mousedown":
                Te = 1, je = te.button < 3 ? te.button : 3;
                break;
              case "wheel":
                if (E.viewport.getLinesScrolled(te) === 0)
                  return !1;
                Te = te.deltaY < 0 ? 0 : 1, je = 4;
                break;
              default:
                return !1;
            }
            return !(Te === void 0 || je === void 0 || je > 4) && E.coreMouseService.triggerMouseEvent({ col: ue.col, row: ue.row, x: ue.x, y: ue.y, button: je, action: Te, ctrl: te.ctrlKey, alt: te.altKey, shift: te.shiftKey });
          }
          const X = { mouseup: null, wheel: null, mousedrag: null, mousemove: null }, le = { mouseup: (te) => (K(te), te.buttons || (this._document.removeEventListener("mouseup", X.mouseup), X.mousedrag && this._document.removeEventListener("mousemove", X.mousedrag)), this.cancel(te)), wheel: (te) => (K(te), this.cancel(te, !0)), mousedrag: (te) => {
            te.buttons && K(te);
          }, mousemove: (te) => {
            te.buttons || K(te);
          } };
          this.register(this.coreMouseService.onProtocolChange((te) => {
            te ? (this.optionsService.rawOptions.logLevel === "debug" && this._logService.debug("Binding to mouse events:", this.coreMouseService.explainEvents(te)), this.element.classList.add("enable-mouse-events"), this._selectionService.disable()) : (this._logService.debug("Unbinding from mouse events."), this.element.classList.remove("enable-mouse-events"), this._selectionService.enable()), 8 & te ? X.mousemove || (W.addEventListener("mousemove", le.mousemove), X.mousemove = le.mousemove) : (W.removeEventListener("mousemove", X.mousemove), X.mousemove = null), 16 & te ? X.wheel || (W.addEventListener("wheel", le.wheel, { passive: !1 }), X.wheel = le.wheel) : (W.removeEventListener("wheel", X.wheel), X.wheel = null), 2 & te ? X.mouseup || (W.addEventListener("mouseup", le.mouseup), X.mouseup = le.mouseup) : (this._document.removeEventListener("mouseup", X.mouseup), W.removeEventListener("mouseup", X.mouseup), X.mouseup = null), 4 & te ? X.mousedrag || (X.mousedrag = le.mousedrag) : (this._document.removeEventListener("mousemove", X.mousedrag), X.mousedrag = null);
          })), this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol, this.register((0, h.addDisposableDomListener)(W, "mousedown", (te) => {
            if (te.preventDefault(), this.focus(), this.coreMouseService.areMouseEventsActive && !this._selectionService.shouldForceSelection(te))
              return K(te), X.mouseup && this._document.addEventListener("mouseup", X.mouseup), X.mousedrag && this._document.addEventListener("mousemove", X.mousedrag), this.cancel(te);
          })), this.register((0, h.addDisposableDomListener)(W, "wheel", (te) => {
            if (!X.wheel) {
              if (!this.buffer.hasScrollback) {
                const ue = this.viewport.getLinesScrolled(te);
                if (ue === 0)
                  return;
                const je = H.C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? "O" : "[") + (te.deltaY < 0 ? "A" : "B");
                let Te = "";
                for (let D = 0; D < Math.abs(ue); D++)
                  Te += je;
                return this.coreService.triggerDataEvent(Te, !0), this.cancel(te, !0);
              }
              return this.viewport.handleWheel(te) ? this.cancel(te) : void 0;
            }
          }, { passive: !1 })), this.register((0, h.addDisposableDomListener)(W, "touchstart", (te) => {
            if (!this.coreMouseService.areMouseEventsActive)
              return this.viewport.handleTouchStart(te), this.cancel(te);
          }, { passive: !0 })), this.register((0, h.addDisposableDomListener)(W, "touchmove", (te) => {
            if (!this.coreMouseService.areMouseEventsActive)
              return this.viewport.handleTouchMove(te) ? void 0 : this.cancel(te);
          }, { passive: !1 }));
        }
        refresh(E, W) {
          var K;
          (K = this._renderService) === null || K === void 0 || K.refreshRows(E, W);
        }
        updateCursorStyle(E) {
          var W;
          !((W = this._selectionService) === null || W === void 0) && W.shouldColumnSelect(E) ? this.element.classList.add("column-select") : this.element.classList.remove("column-select");
        }
        _showCursor() {
          this.coreService.isCursorInitialized || (this.coreService.isCursorInitialized = !0, this.refresh(this.buffer.y, this.buffer.y));
        }
        scrollLines(E, W, K = 0) {
          var X;
          K === 1 ? (super.scrollLines(E, W, K), this.refresh(0, this.rows - 1)) : (X = this.viewport) === null || X === void 0 || X.scrollLines(E);
        }
        paste(E) {
          (0, d.paste)(E, this.textarea, this.coreService, this.optionsService);
        }
        attachCustomKeyEventHandler(E) {
          this._customKeyEventHandler = E;
        }
        registerLinkProvider(E) {
          return this.linkifier2.registerLinkProvider(E);
        }
        registerCharacterJoiner(E) {
          if (!this._characterJoinerService)
            throw new Error("Terminal must be opened first");
          const W = this._characterJoinerService.register(E);
          return this.refresh(0, this.rows - 1), W;
        }
        deregisterCharacterJoiner(E) {
          if (!this._characterJoinerService)
            throw new Error("Terminal must be opened first");
          this._characterJoinerService.deregister(E) && this.refresh(0, this.rows - 1);
        }
        get markers() {
          return this.buffer.markers;
        }
        registerMarker(E) {
          return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + E);
        }
        registerDecoration(E) {
          return this._decorationService.registerDecoration(E);
        }
        hasSelection() {
          return !!this._selectionService && this._selectionService.hasSelection;
        }
        select(E, W, K) {
          this._selectionService.setSelection(E, W, K);
        }
        getSelection() {
          return this._selectionService ? this._selectionService.selectionText : "";
        }
        getSelectionPosition() {
          if (this._selectionService && this._selectionService.hasSelection)
            return { start: { x: this._selectionService.selectionStart[0], y: this._selectionService.selectionStart[1] }, end: { x: this._selectionService.selectionEnd[0], y: this._selectionService.selectionEnd[1] } };
        }
        clearSelection() {
          var E;
          (E = this._selectionService) === null || E === void 0 || E.clearSelection();
        }
        selectAll() {
          var E;
          (E = this._selectionService) === null || E === void 0 || E.selectAll();
        }
        selectLines(E, W) {
          var K;
          (K = this._selectionService) === null || K === void 0 || K.selectLines(E, W);
        }
        _keyDown(E) {
          if (this._keyDownHandled = !1, this._keyDownSeen = !0, this._customKeyEventHandler && this._customKeyEventHandler(E) === !1)
            return !1;
          const W = this.browser.isMac && this.options.macOptionIsMeta && E.altKey;
          if (!W && !this._compositionHelper.keydown(E))
            return this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp && this.scrollToBottom(), !1;
          W || E.key !== "Dead" && E.key !== "AltGraph" || (this._unprocessedDeadKey = !0);
          const K = (0, x.evaluateKeyboardEvent)(E, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);
          if (this.updateCursorStyle(E), K.type === 3 || K.type === 2) {
            const X = this.rows - 1;
            return this.scrollLines(K.type === 2 ? -X : X), this.cancel(E, !0);
          }
          return K.type === 1 && this.selectAll(), !!this._isThirdLevelShift(this.browser, E) || (K.cancel && this.cancel(E, !0), !K.key || !!(E.key && !E.ctrlKey && !E.altKey && !E.metaKey && E.key.length === 1 && E.key.charCodeAt(0) >= 65 && E.key.charCodeAt(0) <= 90) || (this._unprocessedDeadKey ? (this._unprocessedDeadKey = !1, !0) : (K.key !== H.C0.ETX && K.key !== H.C0.CR || (this.textarea.value = ""), this._onKey.fire({ key: K.key, domEvent: E }), this._showCursor(), this.coreService.triggerDataEvent(K.key, !0), !this.optionsService.rawOptions.screenReaderMode || E.altKey || E.ctrlKey ? this.cancel(E, !0) : void (this._keyDownHandled = !0))));
        }
        _isThirdLevelShift(E, W) {
          const K = E.isMac && !this.options.macOptionIsMeta && W.altKey && !W.ctrlKey && !W.metaKey || E.isWindows && W.altKey && W.ctrlKey && !W.metaKey || E.isWindows && W.getModifierState("AltGraph");
          return W.type === "keypress" ? K : K && (!W.keyCode || W.keyCode > 47);
        }
        _keyUp(E) {
          this._keyDownSeen = !1, this._customKeyEventHandler && this._customKeyEventHandler(E) === !1 || (function(W) {
            return W.keyCode === 16 || W.keyCode === 17 || W.keyCode === 18;
          }(E) || this.focus(), this.updateCursorStyle(E), this._keyPressHandled = !1);
        }
        _keyPress(E) {
          let W;
          if (this._keyPressHandled = !1, this._keyDownHandled || this._customKeyEventHandler && this._customKeyEventHandler(E) === !1)
            return !1;
          if (this.cancel(E), E.charCode)
            W = E.charCode;
          else if (E.which === null || E.which === void 0)
            W = E.keyCode;
          else {
            if (E.which === 0 || E.charCode === 0)
              return !1;
            W = E.which;
          }
          return !(!W || (E.altKey || E.ctrlKey || E.metaKey) && !this._isThirdLevelShift(this.browser, E) || (W = String.fromCharCode(W), this._onKey.fire({ key: W, domEvent: E }), this._showCursor(), this.coreService.triggerDataEvent(W, !0), this._keyPressHandled = !0, this._unprocessedDeadKey = !1, 0));
        }
        _inputEvent(E) {
          if (E.data && E.inputType === "insertText" && (!E.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {
            if (this._keyPressHandled)
              return !1;
            this._unprocessedDeadKey = !1;
            const W = E.data;
            return this.coreService.triggerDataEvent(W, !0), this.cancel(E), !0;
          }
          return !1;
        }
        resize(E, W) {
          E !== this.cols || W !== this.rows ? super.resize(E, W) : this._charSizeService && !this._charSizeService.hasValidSize && this._charSizeService.measure();
        }
        _afterResize(E, W) {
          var K, X;
          (K = this._charSizeService) === null || K === void 0 || K.measure(), (X = this.viewport) === null || X === void 0 || X.syncScrollArea(!0);
        }
        clear() {
          var E;
          if (this.buffer.ybase !== 0 || this.buffer.y !== 0) {
            this.buffer.clearAllMarkers(), this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)), this.buffer.lines.length = 1, this.buffer.ydisp = 0, this.buffer.ybase = 0, this.buffer.y = 0;
            for (let W = 1; W < this.rows; W++)
              this.buffer.lines.push(this.buffer.getBlankLine(U.DEFAULT_ATTR_DATA));
            this._onScroll.fire({ position: this.buffer.ydisp, source: 0 }), (E = this.viewport) === null || E === void 0 || E.reset(), this.refresh(0, this.rows - 1);
          }
        }
        reset() {
          var E, W;
          this.options.rows = this.rows, this.options.cols = this.cols;
          const K = this._customKeyEventHandler;
          this._setup(), super.reset(), (E = this._selectionService) === null || E === void 0 || E.reset(), this._decorationService.reset(), (W = this.viewport) === null || W === void 0 || W.reset(), this._customKeyEventHandler = K, this.refresh(0, this.rows - 1);
        }
        clearTextureAtlas() {
          var E;
          (E = this._renderService) === null || E === void 0 || E.clearTextureAtlas();
        }
        _reportFocus() {
          var E;
          !((E = this.element) === null || E === void 0) && E.classList.contains("focus") ? this.coreService.triggerDataEvent(H.C0.ESC + "[I") : this.coreService.triggerDataEvent(H.C0.ESC + "[O");
        }
        _reportWindowsOptions(E) {
          if (this._renderService)
            switch (E) {
              case G.WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:
                const W = this._renderService.dimensions.css.canvas.width.toFixed(0), K = this._renderService.dimensions.css.canvas.height.toFixed(0);
                this.coreService.triggerDataEvent(`${H.C0.ESC}[4;${K};${W}t`);
                break;
              case G.WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:
                const X = this._renderService.dimensions.css.cell.width.toFixed(0), le = this._renderService.dimensions.css.cell.height.toFixed(0);
                this.coreService.triggerDataEvent(`${H.C0.ESC}[6;${le};${X}t`);
            }
        }
        cancel(E, W) {
          if (this.options.cancelEvents || W)
            return E.preventDefault(), E.stopPropagation(), !1;
        }
      }
      o.Terminal = Y;
    }, 9924: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.TimeBasedDebouncer = void 0, o.TimeBasedDebouncer = class {
        constructor(s, d = 1e3) {
          this._renderCallback = s, this._debounceThresholdMS = d, this._lastRefreshMs = 0, this._additionalRefreshRequested = !1;
        }
        dispose() {
          this._refreshTimeoutID && clearTimeout(this._refreshTimeoutID);
        }
        refresh(s, d, h) {
          this._rowCount = h, s = s !== void 0 ? s : 0, d = d !== void 0 ? d : this._rowCount - 1, this._rowStart = this._rowStart !== void 0 ? Math.min(this._rowStart, s) : s, this._rowEnd = this._rowEnd !== void 0 ? Math.max(this._rowEnd, d) : d;
          const u = Date.now();
          if (u - this._lastRefreshMs >= this._debounceThresholdMS)
            this._lastRefreshMs = u, this._innerRefresh();
          else if (!this._additionalRefreshRequested) {
            const p = u - this._lastRefreshMs, b = this._debounceThresholdMS - p;
            this._additionalRefreshRequested = !0, this._refreshTimeoutID = window.setTimeout(() => {
              this._lastRefreshMs = Date.now(), this._innerRefresh(), this._additionalRefreshRequested = !1, this._refreshTimeoutID = void 0;
            }, b);
          }
        }
        _innerRefresh() {
          if (this._rowStart === void 0 || this._rowEnd === void 0 || this._rowCount === void 0)
            return;
          const s = Math.max(this._rowStart, 0), d = Math.min(this._rowEnd, this._rowCount - 1);
          this._rowStart = void 0, this._rowEnd = void 0, this._renderCallback(s, d);
        }
      };
    }, 1680: function(l, o, s) {
      var d = this && this.__decorate || function(c, _, f, v) {
        var y, j = arguments.length, A = j < 3 ? _ : v === null ? v = Object.getOwnPropertyDescriptor(_, f) : v;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          A = Reflect.decorate(c, _, f, v);
        else
          for (var C = c.length - 1; C >= 0; C--)
            (y = c[C]) && (A = (j < 3 ? y(A) : j > 3 ? y(_, f, A) : y(_, f)) || A);
        return j > 3 && A && Object.defineProperty(_, f, A), A;
      }, h = this && this.__param || function(c, _) {
        return function(f, v) {
          _(f, v, c);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.Viewport = void 0;
      const u = s(3656), p = s(4725), b = s(8460), k = s(844), g = s(2585);
      let m = o.Viewport = class extends k.Disposable {
        constructor(c, _, f, v, y, j, A, C) {
          super(), this._viewportElement = c, this._scrollArea = _, this._bufferService = f, this._optionsService = v, this._charSizeService = y, this._renderService = j, this._coreBrowserService = A, this.scrollBarWidth = 0, this._currentRowHeight = 0, this._currentDeviceCellHeight = 0, this._lastRecordedBufferLength = 0, this._lastRecordedViewportHeight = 0, this._lastRecordedBufferHeight = 0, this._lastTouchY = 0, this._lastScrollTop = 0, this._wheelPartialScroll = 0, this._refreshAnimationFrame = null, this._ignoreNextScrollEvent = !1, this._smoothScrollState = { startTime: 0, origin: -1, target: -1 }, this._onRequestScrollLines = this.register(new b.EventEmitter()), this.onRequestScrollLines = this._onRequestScrollLines.event, this.scrollBarWidth = this._viewportElement.offsetWidth - this._scrollArea.offsetWidth || 15, this.register((0, u.addDisposableDomListener)(this._viewportElement, "scroll", this._handleScroll.bind(this))), this._activeBuffer = this._bufferService.buffer, this.register(this._bufferService.buffers.onBufferActivate((I) => this._activeBuffer = I.activeBuffer)), this._renderDimensions = this._renderService.dimensions, this.register(this._renderService.onDimensionsChange((I) => this._renderDimensions = I)), this._handleThemeChange(C.colors), this.register(C.onChangeColors((I) => this._handleThemeChange(I))), this.register(this._optionsService.onSpecificOptionChange("scrollback", () => this.syncScrollArea())), setTimeout(() => this.syncScrollArea());
        }
        _handleThemeChange(c) {
          this._viewportElement.style.backgroundColor = c.background.css;
        }
        reset() {
          this._currentRowHeight = 0, this._currentDeviceCellHeight = 0, this._lastRecordedBufferLength = 0, this._lastRecordedViewportHeight = 0, this._lastRecordedBufferHeight = 0, this._lastTouchY = 0, this._lastScrollTop = 0, this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());
        }
        _refresh(c) {
          if (c)
            return this._innerRefresh(), void (this._refreshAnimationFrame !== null && this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame));
          this._refreshAnimationFrame === null && (this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh()));
        }
        _innerRefresh() {
          if (this._charSizeService.height > 0) {
            this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr, this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height, this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;
            const _ = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);
            this._lastRecordedBufferHeight !== _ && (this._lastRecordedBufferHeight = _, this._scrollArea.style.height = this._lastRecordedBufferHeight + "px");
          }
          const c = this._bufferService.buffer.ydisp * this._currentRowHeight;
          this._viewportElement.scrollTop !== c && (this._ignoreNextScrollEvent = !0, this._viewportElement.scrollTop = c), this._refreshAnimationFrame = null;
        }
        syncScrollArea(c = !1) {
          if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length)
            return this._lastRecordedBufferLength = this._bufferService.buffer.lines.length, void this._refresh(c);
          this._lastRecordedViewportHeight === this._renderService.dimensions.css.canvas.height && this._lastScrollTop === this._activeBuffer.ydisp * this._currentRowHeight && this._renderDimensions.device.cell.height === this._currentDeviceCellHeight || this._refresh(c);
        }
        _handleScroll(c) {
          if (this._lastScrollTop = this._viewportElement.scrollTop, !this._viewportElement.offsetParent)
            return;
          if (this._ignoreNextScrollEvent)
            return this._ignoreNextScrollEvent = !1, void this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: !0 });
          const _ = Math.round(this._lastScrollTop / this._currentRowHeight) - this._bufferService.buffer.ydisp;
          this._onRequestScrollLines.fire({ amount: _, suppressScrollEvent: !0 });
        }
        _smoothScroll() {
          if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1)
            return;
          const c = this._smoothScrollPercent();
          this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(c * (this._smoothScrollState.target - this._smoothScrollState.origin)), c < 1 ? this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll()) : this._clearSmoothScrollState();
        }
        _smoothScrollPercent() {
          return this._optionsService.rawOptions.smoothScrollDuration && this._smoothScrollState.startTime ? Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0) : 1;
        }
        _clearSmoothScrollState() {
          this._smoothScrollState.startTime = 0, this._smoothScrollState.origin = -1, this._smoothScrollState.target = -1;
        }
        _bubbleScroll(c, _) {
          const f = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;
          return !(_ < 0 && this._viewportElement.scrollTop !== 0 || _ > 0 && f < this._lastRecordedBufferHeight) || (c.cancelable && c.preventDefault(), !1);
        }
        handleWheel(c) {
          const _ = this._getPixelsScrolled(c);
          return _ !== 0 && (this._optionsService.rawOptions.smoothScrollDuration ? (this._smoothScrollState.startTime = Date.now(), this._smoothScrollPercent() < 1 ? (this._smoothScrollState.origin = this._viewportElement.scrollTop, this._smoothScrollState.target === -1 ? this._smoothScrollState.target = this._viewportElement.scrollTop + _ : this._smoothScrollState.target += _, this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0), this._smoothScroll()) : this._clearSmoothScrollState()) : this._viewportElement.scrollTop += _, this._bubbleScroll(c, _));
        }
        scrollLines(c) {
          if (c !== 0)
            if (this._optionsService.rawOptions.smoothScrollDuration) {
              const _ = c * this._currentRowHeight;
              this._smoothScrollState.startTime = Date.now(), this._smoothScrollPercent() < 1 ? (this._smoothScrollState.origin = this._viewportElement.scrollTop, this._smoothScrollState.target = this._smoothScrollState.origin + _, this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0), this._smoothScroll()) : this._clearSmoothScrollState();
            } else
              this._onRequestScrollLines.fire({ amount: c, suppressScrollEvent: !1 });
        }
        _getPixelsScrolled(c) {
          if (c.deltaY === 0 || c.shiftKey)
            return 0;
          let _ = this._applyScrollModifier(c.deltaY, c);
          return c.deltaMode === WheelEvent.DOM_DELTA_LINE ? _ *= this._currentRowHeight : c.deltaMode === WheelEvent.DOM_DELTA_PAGE && (_ *= this._currentRowHeight * this._bufferService.rows), _;
        }
        getBufferElements(c, _) {
          var f;
          let v, y = "";
          const j = [], A = _ ?? this._bufferService.buffer.lines.length, C = this._bufferService.buffer.lines;
          for (let I = c; I < A; I++) {
            const z = C.get(I);
            if (!z)
              continue;
            const P = (f = C.get(I + 1)) === null || f === void 0 ? void 0 : f.isWrapped;
            if (y += z.translateToString(!P), !P || I === C.length - 1) {
              const L = document.createElement("div");
              L.textContent = y, j.push(L), y.length > 0 && (v = L), y = "";
            }
          }
          return { bufferElements: j, cursorElement: v };
        }
        getLinesScrolled(c) {
          if (c.deltaY === 0 || c.shiftKey)
            return 0;
          let _ = this._applyScrollModifier(c.deltaY, c);
          return c.deltaMode === WheelEvent.DOM_DELTA_PIXEL ? (_ /= this._currentRowHeight + 0, this._wheelPartialScroll += _, _ = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1), this._wheelPartialScroll %= 1) : c.deltaMode === WheelEvent.DOM_DELTA_PAGE && (_ *= this._bufferService.rows), _;
        }
        _applyScrollModifier(c, _) {
          const f = this._optionsService.rawOptions.fastScrollModifier;
          return f === "alt" && _.altKey || f === "ctrl" && _.ctrlKey || f === "shift" && _.shiftKey ? c * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity : c * this._optionsService.rawOptions.scrollSensitivity;
        }
        handleTouchStart(c) {
          this._lastTouchY = c.touches[0].pageY;
        }
        handleTouchMove(c) {
          const _ = this._lastTouchY - c.touches[0].pageY;
          return this._lastTouchY = c.touches[0].pageY, _ !== 0 && (this._viewportElement.scrollTop += _, this._bubbleScroll(c, _));
        }
      };
      o.Viewport = m = d([h(2, g.IBufferService), h(3, g.IOptionsService), h(4, p.ICharSizeService), h(5, p.IRenderService), h(6, p.ICoreBrowserService), h(7, p.IThemeService)], m);
    }, 3107: function(l, o, s) {
      var d = this && this.__decorate || function(m, c, _, f) {
        var v, y = arguments.length, j = y < 3 ? c : f === null ? f = Object.getOwnPropertyDescriptor(c, _) : f;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          j = Reflect.decorate(m, c, _, f);
        else
          for (var A = m.length - 1; A >= 0; A--)
            (v = m[A]) && (j = (y < 3 ? v(j) : y > 3 ? v(c, _, j) : v(c, _)) || j);
        return y > 3 && j && Object.defineProperty(c, _, j), j;
      }, h = this && this.__param || function(m, c) {
        return function(_, f) {
          c(_, f, m);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.BufferDecorationRenderer = void 0;
      const u = s(3656), p = s(4725), b = s(844), k = s(2585);
      let g = o.BufferDecorationRenderer = class extends b.Disposable {
        constructor(m, c, _, f) {
          super(), this._screenElement = m, this._bufferService = c, this._decorationService = _, this._renderService = f, this._decorationElements = /* @__PURE__ */ new Map(), this._altBufferIsActive = !1, this._dimensionsChanged = !1, this._container = document.createElement("div"), this._container.classList.add("xterm-decoration-container"), this._screenElement.appendChild(this._container), this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations())), this.register(this._renderService.onDimensionsChange(() => {
            this._dimensionsChanged = !0, this._queueRefresh();
          })), this.register((0, u.addDisposableDomListener)(window, "resize", () => this._queueRefresh())), this.register(this._bufferService.buffers.onBufferActivate(() => {
            this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;
          })), this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh())), this.register(this._decorationService.onDecorationRemoved((v) => this._removeDecoration(v))), this.register((0, b.toDisposable)(() => {
            this._container.remove(), this._decorationElements.clear();
          }));
        }
        _queueRefresh() {
          this._animationFrame === void 0 && (this._animationFrame = this._renderService.addRefreshCallback(() => {
            this._doRefreshDecorations(), this._animationFrame = void 0;
          }));
        }
        _doRefreshDecorations() {
          for (const m of this._decorationService.decorations)
            this._renderDecoration(m);
          this._dimensionsChanged = !1;
        }
        _renderDecoration(m) {
          this._refreshStyle(m), this._dimensionsChanged && this._refreshXPosition(m);
        }
        _createElement(m) {
          var c, _;
          const f = document.createElement("div");
          f.classList.add("xterm-decoration"), f.classList.toggle("xterm-decoration-top-layer", ((c = m == null ? void 0 : m.options) === null || c === void 0 ? void 0 : c.layer) === "top"), f.style.width = `${Math.round((m.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`, f.style.height = (m.options.height || 1) * this._renderService.dimensions.css.cell.height + "px", f.style.top = (m.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height + "px", f.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;
          const v = (_ = m.options.x) !== null && _ !== void 0 ? _ : 0;
          return v && v > this._bufferService.cols && (f.style.display = "none"), this._refreshXPosition(m, f), f;
        }
        _refreshStyle(m) {
          const c = m.marker.line - this._bufferService.buffers.active.ydisp;
          if (c < 0 || c >= this._bufferService.rows)
            m.element && (m.element.style.display = "none", m.onRenderEmitter.fire(m.element));
          else {
            let _ = this._decorationElements.get(m);
            _ || (_ = this._createElement(m), m.element = _, this._decorationElements.set(m, _), this._container.appendChild(_), m.onDispose(() => {
              this._decorationElements.delete(m), _.remove();
            })), _.style.top = c * this._renderService.dimensions.css.cell.height + "px", _.style.display = this._altBufferIsActive ? "none" : "block", m.onRenderEmitter.fire(_);
          }
        }
        _refreshXPosition(m, c = m.element) {
          var _;
          if (!c)
            return;
          const f = (_ = m.options.x) !== null && _ !== void 0 ? _ : 0;
          (m.options.anchor || "left") === "right" ? c.style.right = f ? f * this._renderService.dimensions.css.cell.width + "px" : "" : c.style.left = f ? f * this._renderService.dimensions.css.cell.width + "px" : "";
        }
        _removeDecoration(m) {
          var c;
          (c = this._decorationElements.get(m)) === null || c === void 0 || c.remove(), this._decorationElements.delete(m), m.dispose();
        }
      };
      o.BufferDecorationRenderer = g = d([h(1, k.IBufferService), h(2, k.IDecorationService), h(3, p.IRenderService)], g);
    }, 5871: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.ColorZoneStore = void 0, o.ColorZoneStore = class {
        constructor() {
          this._zones = [], this._zonePool = [], this._zonePoolIndex = 0, this._linePadding = { full: 0, left: 0, center: 0, right: 0 };
        }
        get zones() {
          return this._zonePool.length = Math.min(this._zonePool.length, this._zones.length), this._zones;
        }
        clear() {
          this._zones.length = 0, this._zonePoolIndex = 0;
        }
        addDecoration(s) {
          if (s.options.overviewRulerOptions) {
            for (const d of this._zones)
              if (d.color === s.options.overviewRulerOptions.color && d.position === s.options.overviewRulerOptions.position) {
                if (this._lineIntersectsZone(d, s.marker.line))
                  return;
                if (this._lineAdjacentToZone(d, s.marker.line, s.options.overviewRulerOptions.position))
                  return void this._addLineToZone(d, s.marker.line);
              }
            if (this._zonePoolIndex < this._zonePool.length)
              return this._zonePool[this._zonePoolIndex].color = s.options.overviewRulerOptions.color, this._zonePool[this._zonePoolIndex].position = s.options.overviewRulerOptions.position, this._zonePool[this._zonePoolIndex].startBufferLine = s.marker.line, this._zonePool[this._zonePoolIndex].endBufferLine = s.marker.line, void this._zones.push(this._zonePool[this._zonePoolIndex++]);
            this._zones.push({ color: s.options.overviewRulerOptions.color, position: s.options.overviewRulerOptions.position, startBufferLine: s.marker.line, endBufferLine: s.marker.line }), this._zonePool.push(this._zones[this._zones.length - 1]), this._zonePoolIndex++;
          }
        }
        setPadding(s) {
          this._linePadding = s;
        }
        _lineIntersectsZone(s, d) {
          return d >= s.startBufferLine && d <= s.endBufferLine;
        }
        _lineAdjacentToZone(s, d, h) {
          return d >= s.startBufferLine - this._linePadding[h || "full"] && d <= s.endBufferLine + this._linePadding[h || "full"];
        }
        _addLineToZone(s, d) {
          s.startBufferLine = Math.min(s.startBufferLine, d), s.endBufferLine = Math.max(s.endBufferLine, d);
        }
      };
    }, 5744: function(l, o, s) {
      var d = this && this.__decorate || function(v, y, j, A) {
        var C, I = arguments.length, z = I < 3 ? y : A === null ? A = Object.getOwnPropertyDescriptor(y, j) : A;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          z = Reflect.decorate(v, y, j, A);
        else
          for (var P = v.length - 1; P >= 0; P--)
            (C = v[P]) && (z = (I < 3 ? C(z) : I > 3 ? C(y, j, z) : C(y, j)) || z);
        return I > 3 && z && Object.defineProperty(y, j, z), z;
      }, h = this && this.__param || function(v, y) {
        return function(j, A) {
          y(j, A, v);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.OverviewRulerRenderer = void 0;
      const u = s(5871), p = s(3656), b = s(4725), k = s(844), g = s(2585), m = { full: 0, left: 0, center: 0, right: 0 }, c = { full: 0, left: 0, center: 0, right: 0 }, _ = { full: 0, left: 0, center: 0, right: 0 };
      let f = o.OverviewRulerRenderer = class extends k.Disposable {
        get _width() {
          return this._optionsService.options.overviewRulerWidth || 0;
        }
        constructor(v, y, j, A, C, I, z) {
          var P;
          super(), this._viewportElement = v, this._screenElement = y, this._bufferService = j, this._decorationService = A, this._renderService = C, this._optionsService = I, this._coreBrowseService = z, this._colorZoneStore = new u.ColorZoneStore(), this._shouldUpdateDimensions = !0, this._shouldUpdateAnchor = !0, this._lastKnownBufferLength = 0, this._canvas = document.createElement("canvas"), this._canvas.classList.add("xterm-decoration-overview-ruler"), this._refreshCanvasDimensions(), (P = this._viewportElement.parentElement) === null || P === void 0 || P.insertBefore(this._canvas, this._viewportElement);
          const L = this._canvas.getContext("2d");
          if (!L)
            throw new Error("Ctx cannot be null");
          this._ctx = L, this._registerDecorationListeners(), this._registerBufferChangeListeners(), this._registerDimensionChangeListeners(), this.register((0, k.toDisposable)(() => {
            var N;
            (N = this._canvas) === null || N === void 0 || N.remove();
          }));
        }
        _registerDecorationListeners() {
          this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(void 0, !0))), this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(void 0, !0)));
        }
        _registerBufferChangeListeners() {
          this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh())), this.register(this._bufferService.buffers.onBufferActivate(() => {
            this._canvas.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? "none" : "block";
          })), this.register(this._bufferService.onScroll(() => {
            this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length && (this._refreshDrawHeightConstants(), this._refreshColorZonePadding());
          }));
        }
        _registerDimensionChangeListeners() {
          this.register(this._renderService.onRender(() => {
            this._containerHeight && this._containerHeight === this._screenElement.clientHeight || (this._queueRefresh(!0), this._containerHeight = this._screenElement.clientHeight);
          })), this.register(this._optionsService.onSpecificOptionChange("overviewRulerWidth", () => this._queueRefresh(!0))), this.register((0, p.addDisposableDomListener)(this._coreBrowseService.window, "resize", () => this._queueRefresh(!0))), this._queueRefresh(!0);
        }
        _refreshDrawConstants() {
          const v = Math.floor(this._canvas.width / 3), y = Math.ceil(this._canvas.width / 3);
          c.full = this._canvas.width, c.left = v, c.center = y, c.right = v, this._refreshDrawHeightConstants(), _.full = 0, _.left = 0, _.center = c.left, _.right = c.left + c.center;
        }
        _refreshDrawHeightConstants() {
          m.full = Math.round(2 * this._coreBrowseService.dpr);
          const v = this._canvas.height / this._bufferService.buffer.lines.length, y = Math.round(Math.max(Math.min(v, 12), 6) * this._coreBrowseService.dpr);
          m.left = y, m.center = y, m.right = y;
        }
        _refreshColorZonePadding() {
          this._colorZoneStore.setPadding({ full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * m.full), left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * m.left), center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * m.center), right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * m.right) }), this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;
        }
        _refreshCanvasDimensions() {
          this._canvas.style.width = `${this._width}px`, this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr), this._canvas.style.height = `${this._screenElement.clientHeight}px`, this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr), this._refreshDrawConstants(), this._refreshColorZonePadding();
        }
        _refreshDecorations() {
          this._shouldUpdateDimensions && this._refreshCanvasDimensions(), this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height), this._colorZoneStore.clear();
          for (const y of this._decorationService.decorations)
            this._colorZoneStore.addDecoration(y);
          this._ctx.lineWidth = 1;
          const v = this._colorZoneStore.zones;
          for (const y of v)
            y.position !== "full" && this._renderColorZone(y);
          for (const y of v)
            y.position === "full" && this._renderColorZone(y);
          this._shouldUpdateDimensions = !1, this._shouldUpdateAnchor = !1;
        }
        _renderColorZone(v) {
          this._ctx.fillStyle = v.color, this._ctx.fillRect(_[v.position || "full"], Math.round((this._canvas.height - 1) * (v.startBufferLine / this._bufferService.buffers.active.lines.length) - m[v.position || "full"] / 2), c[v.position || "full"], Math.round((this._canvas.height - 1) * ((v.endBufferLine - v.startBufferLine) / this._bufferService.buffers.active.lines.length) + m[v.position || "full"]));
        }
        _queueRefresh(v, y) {
          this._shouldUpdateDimensions = v || this._shouldUpdateDimensions, this._shouldUpdateAnchor = y || this._shouldUpdateAnchor, this._animationFrame === void 0 && (this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {
            this._refreshDecorations(), this._animationFrame = void 0;
          }));
        }
      };
      o.OverviewRulerRenderer = f = d([h(2, g.IBufferService), h(3, g.IDecorationService), h(4, b.IRenderService), h(5, g.IOptionsService), h(6, b.ICoreBrowserService)], f);
    }, 2950: function(l, o, s) {
      var d = this && this.__decorate || function(g, m, c, _) {
        var f, v = arguments.length, y = v < 3 ? m : _ === null ? _ = Object.getOwnPropertyDescriptor(m, c) : _;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          y = Reflect.decorate(g, m, c, _);
        else
          for (var j = g.length - 1; j >= 0; j--)
            (f = g[j]) && (y = (v < 3 ? f(y) : v > 3 ? f(m, c, y) : f(m, c)) || y);
        return v > 3 && y && Object.defineProperty(m, c, y), y;
      }, h = this && this.__param || function(g, m) {
        return function(c, _) {
          m(c, _, g);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CompositionHelper = void 0;
      const u = s(4725), p = s(2585), b = s(2584);
      let k = o.CompositionHelper = class {
        get isComposing() {
          return this._isComposing;
        }
        constructor(g, m, c, _, f, v) {
          this._textarea = g, this._compositionView = m, this._bufferService = c, this._optionsService = _, this._coreService = f, this._renderService = v, this._isComposing = !1, this._isSendingComposition = !1, this._compositionPosition = { start: 0, end: 0 }, this._dataAlreadySent = "";
        }
        compositionstart() {
          this._isComposing = !0, this._compositionPosition.start = this._textarea.value.length, this._compositionView.textContent = "", this._dataAlreadySent = "", this._compositionView.classList.add("active");
        }
        compositionupdate(g) {
          this._compositionView.textContent = g.data, this.updateCompositionElements(), setTimeout(() => {
            this._compositionPosition.end = this._textarea.value.length;
          }, 0);
        }
        compositionend() {
          this._finalizeComposition(!0);
        }
        keydown(g) {
          if (this._isComposing || this._isSendingComposition) {
            if (g.keyCode === 229 || g.keyCode === 16 || g.keyCode === 17 || g.keyCode === 18)
              return !1;
            this._finalizeComposition(!1);
          }
          return g.keyCode !== 229 || (this._handleAnyTextareaChanges(), !1);
        }
        _finalizeComposition(g) {
          if (this._compositionView.classList.remove("active"), this._isComposing = !1, g) {
            const m = { start: this._compositionPosition.start, end: this._compositionPosition.end };
            this._isSendingComposition = !0, setTimeout(() => {
              if (this._isSendingComposition) {
                let c;
                this._isSendingComposition = !1, m.start += this._dataAlreadySent.length, c = this._isComposing ? this._textarea.value.substring(m.start, m.end) : this._textarea.value.substring(m.start), c.length > 0 && this._coreService.triggerDataEvent(c, !0);
              }
            }, 0);
          } else {
            this._isSendingComposition = !1;
            const m = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);
            this._coreService.triggerDataEvent(m, !0);
          }
        }
        _handleAnyTextareaChanges() {
          const g = this._textarea.value;
          setTimeout(() => {
            if (!this._isComposing) {
              const m = this._textarea.value, c = m.replace(g, "");
              this._dataAlreadySent = c, m.length > g.length ? this._coreService.triggerDataEvent(c, !0) : m.length < g.length ? this._coreService.triggerDataEvent(`${b.C0.DEL}`, !0) : m.length === g.length && m !== g && this._coreService.triggerDataEvent(m, !0);
            }
          }, 0);
        }
        updateCompositionElements(g) {
          if (this._isComposing) {
            if (this._bufferService.buffer.isCursorInViewport) {
              const m = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1), c = this._renderService.dimensions.css.cell.height, _ = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height, f = m * this._renderService.dimensions.css.cell.width;
              this._compositionView.style.left = f + "px", this._compositionView.style.top = _ + "px", this._compositionView.style.height = c + "px", this._compositionView.style.lineHeight = c + "px", this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily, this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + "px";
              const v = this._compositionView.getBoundingClientRect();
              this._textarea.style.left = f + "px", this._textarea.style.top = _ + "px", this._textarea.style.width = Math.max(v.width, 1) + "px", this._textarea.style.height = Math.max(v.height, 1) + "px", this._textarea.style.lineHeight = v.height + "px";
            }
            g || setTimeout(() => this.updateCompositionElements(!0), 0);
          }
        }
      };
      o.CompositionHelper = k = d([h(2, p.IBufferService), h(3, p.IOptionsService), h(4, p.ICoreService), h(5, u.IRenderService)], k);
    }, 9806: (l, o) => {
      function s(d, h, u) {
        const p = u.getBoundingClientRect(), b = d.getComputedStyle(u), k = parseInt(b.getPropertyValue("padding-left")), g = parseInt(b.getPropertyValue("padding-top"));
        return [h.clientX - p.left - k, h.clientY - p.top - g];
      }
      Object.defineProperty(o, "__esModule", { value: !0 }), o.getCoords = o.getCoordsRelativeToElement = void 0, o.getCoordsRelativeToElement = s, o.getCoords = function(d, h, u, p, b, k, g, m, c) {
        if (!k)
          return;
        const _ = s(d, h, u);
        return _ ? (_[0] = Math.ceil((_[0] + (c ? g / 2 : 0)) / g), _[1] = Math.ceil(_[1] / m), _[0] = Math.min(Math.max(_[0], 1), p + (c ? 1 : 0)), _[1] = Math.min(Math.max(_[1], 1), b), _) : void 0;
      };
    }, 9504: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.moveToCellSequence = void 0;
      const d = s(2584);
      function h(m, c, _, f) {
        const v = m - u(m, _), y = c - u(c, _), j = Math.abs(v - y) - function(A, C, I) {
          let z = 0;
          const P = A - u(A, I), L = C - u(C, I);
          for (let N = 0; N < Math.abs(P - L); N++) {
            const B = p(A, C) === "A" ? -1 : 1, F = I.buffer.lines.get(P + B * N);
            F != null && F.isWrapped && z++;
          }
          return z;
        }(m, c, _);
        return g(j, k(p(m, c), f));
      }
      function u(m, c) {
        let _ = 0, f = c.buffer.lines.get(m), v = f == null ? void 0 : f.isWrapped;
        for (; v && m >= 0 && m < c.rows; )
          _++, f = c.buffer.lines.get(--m), v = f == null ? void 0 : f.isWrapped;
        return _;
      }
      function p(m, c) {
        return m > c ? "A" : "B";
      }
      function b(m, c, _, f, v, y) {
        let j = m, A = c, C = "";
        for (; j !== _ || A !== f; )
          j += v ? 1 : -1, v && j > y.cols - 1 ? (C += y.buffer.translateBufferLineToString(A, !1, m, j), j = 0, m = 0, A++) : !v && j < 0 && (C += y.buffer.translateBufferLineToString(A, !1, 0, m + 1), j = y.cols - 1, m = j, A--);
        return C + y.buffer.translateBufferLineToString(A, !1, m, j);
      }
      function k(m, c) {
        const _ = c ? "O" : "[";
        return d.C0.ESC + _ + m;
      }
      function g(m, c) {
        m = Math.floor(m);
        let _ = "";
        for (let f = 0; f < m; f++)
          _ += c;
        return _;
      }
      o.moveToCellSequence = function(m, c, _, f) {
        const v = _.buffer.x, y = _.buffer.y;
        if (!_.buffer.hasScrollback)
          return function(C, I, z, P, L, N) {
            return h(I, P, L, N).length === 0 ? "" : g(b(C, I, C, I - u(I, L), !1, L).length, k("D", N));
          }(v, y, 0, c, _, f) + h(y, c, _, f) + function(C, I, z, P, L, N) {
            let B;
            B = h(I, P, L, N).length > 0 ? P - u(P, L) : I;
            const F = P, U = function(H, x, O, T, R, G) {
              let V;
              return V = h(O, T, R, G).length > 0 ? T - u(T, R) : x, H < O && V <= T || H >= O && V < T ? "C" : "D";
            }(C, I, z, P, L, N);
            return g(b(C, B, z, F, U === "C", L).length, k(U, N));
          }(v, y, m, c, _, f);
        let j;
        if (y === c)
          return j = v > m ? "D" : "C", g(Math.abs(v - m), k(j, f));
        j = y > c ? "D" : "C";
        const A = Math.abs(y - c);
        return g(function(C, I) {
          return I.cols - C;
        }(y > c ? m : v, _) + (A - 1) * _.cols + 1 + ((y > c ? v : m) - 1), k(j, f));
      };
    }, 1296: function(l, o, s) {
      var d = this && this.__decorate || function(L, N, B, F) {
        var U, H = arguments.length, x = H < 3 ? N : F === null ? F = Object.getOwnPropertyDescriptor(N, B) : F;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          x = Reflect.decorate(L, N, B, F);
        else
          for (var O = L.length - 1; O >= 0; O--)
            (U = L[O]) && (x = (H < 3 ? U(x) : H > 3 ? U(N, B, x) : U(N, B)) || x);
        return H > 3 && x && Object.defineProperty(N, B, x), x;
      }, h = this && this.__param || function(L, N) {
        return function(B, F) {
          N(B, F, L);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.DomRenderer = void 0;
      const u = s(3787), p = s(2550), b = s(2223), k = s(6171), g = s(4725), m = s(8055), c = s(8460), _ = s(844), f = s(2585), v = "xterm-dom-renderer-owner-", y = "xterm-rows", j = "xterm-fg-", A = "xterm-bg-", C = "xterm-focus", I = "xterm-selection";
      let z = 1, P = o.DomRenderer = class extends _.Disposable {
        constructor(L, N, B, F, U, H, x, O, T, R) {
          super(), this._element = L, this._screenElement = N, this._viewportElement = B, this._linkifier2 = F, this._charSizeService = H, this._optionsService = x, this._bufferService = O, this._coreBrowserService = T, this._themeService = R, this._terminalClass = z++, this._rowElements = [], this.onRequestRedraw = this.register(new c.EventEmitter()).event, this._rowContainer = document.createElement("div"), this._rowContainer.classList.add(y), this._rowContainer.style.lineHeight = "normal", this._rowContainer.setAttribute("aria-hidden", "true"), this._refreshRowElements(this._bufferService.cols, this._bufferService.rows), this._selectionContainer = document.createElement("div"), this._selectionContainer.classList.add(I), this._selectionContainer.setAttribute("aria-hidden", "true"), this.dimensions = (0, k.createRenderDimensions)(), this._updateDimensions(), this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged())), this.register(this._themeService.onChangeColors((G) => this._injectCss(G))), this._injectCss(this._themeService.colors), this._rowFactory = U.createInstance(u.DomRendererRowFactory, document), this._element.classList.add(v + this._terminalClass), this._screenElement.appendChild(this._rowContainer), this._screenElement.appendChild(this._selectionContainer), this.register(this._linkifier2.onShowLinkUnderline((G) => this._handleLinkHover(G))), this.register(this._linkifier2.onHideLinkUnderline((G) => this._handleLinkLeave(G))), this.register((0, _.toDisposable)(() => {
            this._element.classList.remove(v + this._terminalClass), this._rowContainer.remove(), this._selectionContainer.remove(), this._widthCache.dispose(), this._themeStyleElement.remove(), this._dimensionsStyleElement.remove();
          })), this._widthCache = new p.WidthCache(document), this._widthCache.setFont(this._optionsService.rawOptions.fontFamily, this._optionsService.rawOptions.fontSize, this._optionsService.rawOptions.fontWeight, this._optionsService.rawOptions.fontWeightBold), this._setDefaultSpacing();
        }
        _updateDimensions() {
          const L = this._coreBrowserService.dpr;
          this.dimensions.device.char.width = this._charSizeService.width * L, this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * L), this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing), this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight), this.dimensions.device.char.left = 0, this.dimensions.device.char.top = 0, this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols, this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows, this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / L), this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / L), this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols, this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;
          for (const B of this._rowElements)
            B.style.width = `${this.dimensions.css.canvas.width}px`, B.style.height = `${this.dimensions.css.cell.height}px`, B.style.lineHeight = `${this.dimensions.css.cell.height}px`, B.style.overflow = "hidden";
          this._dimensionsStyleElement || (this._dimensionsStyleElement = document.createElement("style"), this._screenElement.appendChild(this._dimensionsStyleElement));
          const N = `${this._terminalSelector} .${y} span { display: inline-block; height: 100%; vertical-align: top;}`;
          this._dimensionsStyleElement.textContent = N, this._selectionContainer.style.height = this._viewportElement.style.height, this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`, this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;
        }
        _injectCss(L) {
          this._themeStyleElement || (this._themeStyleElement = document.createElement("style"), this._screenElement.appendChild(this._themeStyleElement));
          let N = `${this._terminalSelector} .${y} { color: ${L.foreground.css}; font-family: ${this._optionsService.rawOptions.fontFamily}; font-size: ${this._optionsService.rawOptions.fontSize}px; font-kerning: none; white-space: pre}`;
          N += `${this._terminalSelector} .${y} .xterm-dim { color: ${m.color.multiplyOpacity(L.foreground, 0.5).css};}`, N += `${this._terminalSelector} span:not(.xterm-bold) { font-weight: ${this._optionsService.rawOptions.fontWeight};}${this._terminalSelector} span.xterm-bold { font-weight: ${this._optionsService.rawOptions.fontWeightBold};}${this._terminalSelector} span.xterm-italic { font-style: italic;}`, N += "@keyframes blink_box_shadow_" + this._terminalClass + " { 50% {  border-bottom-style: hidden; }}", N += "@keyframes blink_block_" + this._terminalClass + ` { 0% {  background-color: ${L.cursor.css};  color: ${L.cursorAccent.css}; } 50% {  background-color: inherit;  color: ${L.cursor.css}; }}`, N += `${this._terminalSelector} .${y}.${C} .xterm-cursor.xterm-cursor-blink:not(.xterm-cursor-block) { animation: blink_box_shadow_` + this._terminalClass + ` 1s step-end infinite;}${this._terminalSelector} .${y}.${C} .xterm-cursor.xterm-cursor-blink.xterm-cursor-block { animation: blink_block_` + this._terminalClass + ` 1s step-end infinite;}${this._terminalSelector} .${y} .xterm-cursor.xterm-cursor-block { background-color: ${L.cursor.css}; color: ${L.cursorAccent.css};}${this._terminalSelector} .${y} .xterm-cursor.xterm-cursor-outline { outline: 1px solid ${L.cursor.css}; outline-offset: -1px;}${this._terminalSelector} .${y} .xterm-cursor.xterm-cursor-bar { box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${L.cursor.css} inset;}${this._terminalSelector} .${y} .xterm-cursor.xterm-cursor-underline { border-bottom: 1px ${L.cursor.css}; border-bottom-style: solid; height: calc(100% - 1px);}`, N += `${this._terminalSelector} .${I} { position: absolute; top: 0; left: 0; z-index: 1; pointer-events: none;}${this._terminalSelector}.focus .${I} div { position: absolute; background-color: ${L.selectionBackgroundOpaque.css};}${this._terminalSelector} .${I} div { position: absolute; background-color: ${L.selectionInactiveBackgroundOpaque.css};}`;
          for (const [B, F] of L.ansi.entries())
            N += `${this._terminalSelector} .${j}${B} { color: ${F.css}; }${this._terminalSelector} .${j}${B}.xterm-dim { color: ${m.color.multiplyOpacity(F, 0.5).css}; }${this._terminalSelector} .${A}${B} { background-color: ${F.css}; }`;
          N += `${this._terminalSelector} .${j}${b.INVERTED_DEFAULT_COLOR} { color: ${m.color.opaque(L.background).css}; }${this._terminalSelector} .${j}${b.INVERTED_DEFAULT_COLOR}.xterm-dim { color: ${m.color.multiplyOpacity(m.color.opaque(L.background), 0.5).css}; }${this._terminalSelector} .${A}${b.INVERTED_DEFAULT_COLOR} { background-color: ${L.foreground.css}; }`, this._themeStyleElement.textContent = N;
        }
        _setDefaultSpacing() {
          const L = this.dimensions.css.cell.width - this._widthCache.get("W", !1, !1);
          this._rowContainer.style.letterSpacing = `${L}px`, this._rowFactory.defaultSpacing = L;
        }
        handleDevicePixelRatioChange() {
          this._updateDimensions(), this._widthCache.clear(), this._setDefaultSpacing();
        }
        _refreshRowElements(L, N) {
          for (let B = this._rowElements.length; B <= N; B++) {
            const F = document.createElement("div");
            this._rowContainer.appendChild(F), this._rowElements.push(F);
          }
          for (; this._rowElements.length > N; )
            this._rowContainer.removeChild(this._rowElements.pop());
        }
        handleResize(L, N) {
          this._refreshRowElements(L, N), this._updateDimensions();
        }
        handleCharSizeChanged() {
          this._updateDimensions(), this._widthCache.clear(), this._setDefaultSpacing();
        }
        handleBlur() {
          this._rowContainer.classList.remove(C);
        }
        handleFocus() {
          this._rowContainer.classList.add(C), this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);
        }
        handleSelectionChanged(L, N, B) {
          if (this._selectionContainer.replaceChildren(), this._rowFactory.handleSelectionChanged(L, N, B), this.renderRows(0, this._bufferService.rows - 1), !L || !N)
            return;
          const F = L[1] - this._bufferService.buffer.ydisp, U = N[1] - this._bufferService.buffer.ydisp, H = Math.max(F, 0), x = Math.min(U, this._bufferService.rows - 1);
          if (H >= this._bufferService.rows || x < 0)
            return;
          const O = document.createDocumentFragment();
          if (B) {
            const T = L[0] > N[0];
            O.appendChild(this._createSelectionElement(H, T ? N[0] : L[0], T ? L[0] : N[0], x - H + 1));
          } else {
            const T = F === H ? L[0] : 0, R = H === U ? N[0] : this._bufferService.cols;
            O.appendChild(this._createSelectionElement(H, T, R));
            const G = x - H - 1;
            if (O.appendChild(this._createSelectionElement(H + 1, 0, this._bufferService.cols, G)), H !== x) {
              const V = U === x ? N[0] : this._bufferService.cols;
              O.appendChild(this._createSelectionElement(x, 0, V));
            }
          }
          this._selectionContainer.appendChild(O);
        }
        _createSelectionElement(L, N, B, F = 1) {
          const U = document.createElement("div");
          return U.style.height = F * this.dimensions.css.cell.height + "px", U.style.top = L * this.dimensions.css.cell.height + "px", U.style.left = N * this.dimensions.css.cell.width + "px", U.style.width = this.dimensions.css.cell.width * (B - N) + "px", U;
        }
        handleCursorMove() {
        }
        _handleOptionsChanged() {
          this._updateDimensions(), this._injectCss(this._themeService.colors), this._widthCache.setFont(this._optionsService.rawOptions.fontFamily, this._optionsService.rawOptions.fontSize, this._optionsService.rawOptions.fontWeight, this._optionsService.rawOptions.fontWeightBold), this._setDefaultSpacing();
        }
        clear() {
          for (const L of this._rowElements)
            L.replaceChildren();
        }
        renderRows(L, N) {
          const B = this._bufferService.buffer, F = B.ybase + B.y, U = Math.min(B.x, this._bufferService.cols - 1), H = this._optionsService.rawOptions.cursorBlink, x = this._optionsService.rawOptions.cursorStyle, O = this._optionsService.rawOptions.cursorInactiveStyle;
          for (let T = L; T <= N; T++) {
            const R = T + B.ydisp, G = this._rowElements[T], V = B.lines.get(R);
            if (!G || !V)
              break;
            G.replaceChildren(...this._rowFactory.createRow(V, R, R === F, x, O, U, H, this.dimensions.css.cell.width, this._widthCache, -1, -1));
          }
        }
        get _terminalSelector() {
          return `.${v}${this._terminalClass}`;
        }
        _handleLinkHover(L) {
          this._setCellUnderline(L.x1, L.x2, L.y1, L.y2, L.cols, !0);
        }
        _handleLinkLeave(L) {
          this._setCellUnderline(L.x1, L.x2, L.y1, L.y2, L.cols, !1);
        }
        _setCellUnderline(L, N, B, F, U, H) {
          B < 0 && (L = 0), F < 0 && (N = 0);
          const x = this._bufferService.rows - 1;
          B = Math.max(Math.min(B, x), 0), F = Math.max(Math.min(F, x), 0), U = Math.min(U, this._bufferService.cols);
          const O = this._bufferService.buffer, T = O.ybase + O.y, R = Math.min(O.x, U - 1), G = this._optionsService.rawOptions.cursorBlink, V = this._optionsService.rawOptions.cursorStyle, ee = this._optionsService.rawOptions.cursorInactiveStyle;
          for (let Y = B; Y <= F; ++Y) {
            const J = Y + O.ydisp, E = this._rowElements[Y], W = O.lines.get(J);
            if (!E || !W)
              break;
            E.replaceChildren(...this._rowFactory.createRow(W, J, J === T, V, ee, R, G, this.dimensions.css.cell.width, this._widthCache, H ? Y === B ? L : 0 : -1, H ? (Y === F ? N : U) - 1 : -1));
          }
        }
      };
      o.DomRenderer = P = d([h(4, f.IInstantiationService), h(5, g.ICharSizeService), h(6, f.IOptionsService), h(7, f.IBufferService), h(8, g.ICoreBrowserService), h(9, g.IThemeService)], P);
    }, 3787: function(l, o, s) {
      var d = this && this.__decorate || function(j, A, C, I) {
        var z, P = arguments.length, L = P < 3 ? A : I === null ? I = Object.getOwnPropertyDescriptor(A, C) : I;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          L = Reflect.decorate(j, A, C, I);
        else
          for (var N = j.length - 1; N >= 0; N--)
            (z = j[N]) && (L = (P < 3 ? z(L) : P > 3 ? z(A, C, L) : z(A, C)) || L);
        return P > 3 && L && Object.defineProperty(A, C, L), L;
      }, h = this && this.__param || function(j, A) {
        return function(C, I) {
          A(C, I, j);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.DomRendererRowFactory = void 0;
      const u = s(2223), p = s(643), b = s(511), k = s(2585), g = s(8055), m = s(4725), c = s(4269), _ = s(6171), f = s(3734);
      let v = o.DomRendererRowFactory = class {
        constructor(j, A, C, I, z, P, L) {
          this._document = j, this._characterJoinerService = A, this._optionsService = C, this._coreBrowserService = I, this._coreService = z, this._decorationService = P, this._themeService = L, this._workCell = new b.CellData(), this._columnSelectMode = !1, this.defaultSpacing = 0;
        }
        handleSelectionChanged(j, A, C) {
          this._selectionStart = j, this._selectionEnd = A, this._columnSelectMode = C;
        }
        createRow(j, A, C, I, z, P, L, N, B, F, U) {
          const H = [], x = this._characterJoinerService.getJoinedCharacters(A), O = this._themeService.colors;
          let T, R = j.getNoBgTrimmedLength();
          C && R < P + 1 && (R = P + 1);
          let G = 0, V = "", ee = 0, Y = 0, J = 0, E = !1, W = 0, K = !1, X = 0;
          const le = [], te = F !== -1 && U !== -1;
          for (let ue = 0; ue < R; ue++) {
            j.loadCell(ue, this._workCell);
            let je = this._workCell.getWidth();
            if (je === 0)
              continue;
            let Te = !1, D = ue, S = this._workCell;
            if (x.length > 0 && ue === x[0][0]) {
              Te = !0;
              const we = x.shift();
              S = new c.JoinedCellData(this._workCell, j.translateToString(!0, we[0], we[1]), we[1] - we[0]), D = we[1] - 1, je = S.getWidth();
            }
            const w = this._isCellInSelection(ue, A), M = C && ue === P, q = te && ue >= F && ue <= U;
            let Z = !1;
            this._decorationService.forEachDecorationAtCell(ue, A, void 0, (we) => {
              Z = !0;
            });
            let $ = S.getChars() || p.WHITESPACE_CELL_CHAR;
            if ($ === " " && (S.isUnderline() || S.isOverline()) && ($ = " "), X = je * N - B.get($, S.isBold(), S.isItalic()), T) {
              if (G && (w && K || !w && !K && S.bg === ee) && (w && K && O.selectionForeground || S.fg === Y) && S.extended.ext === J && q === E && X === W && !M && !Te && !Z) {
                V += $, G++;
                continue;
              }
              G && (T.textContent = V), T = this._document.createElement("span"), G = 0, V = "";
            } else
              T = this._document.createElement("span");
            if (ee = S.bg, Y = S.fg, J = S.extended.ext, E = q, W = X, K = w, Te && P >= ue && P <= D && (P = ue), !this._coreService.isCursorHidden && M) {
              if (le.push("xterm-cursor"), this._coreBrowserService.isFocused)
                L && le.push("xterm-cursor-blink"), le.push(I === "bar" ? "xterm-cursor-bar" : I === "underline" ? "xterm-cursor-underline" : "xterm-cursor-block");
              else if (z)
                switch (z) {
                  case "outline":
                    le.push("xterm-cursor-outline");
                    break;
                  case "block":
                    le.push("xterm-cursor-block");
                    break;
                  case "bar":
                    le.push("xterm-cursor-bar");
                    break;
                  case "underline":
                    le.push("xterm-cursor-underline");
                }
            }
            if (S.isBold() && le.push("xterm-bold"), S.isItalic() && le.push("xterm-italic"), S.isDim() && le.push("xterm-dim"), V = S.isInvisible() ? p.WHITESPACE_CELL_CHAR : S.getChars() || p.WHITESPACE_CELL_CHAR, S.isUnderline() && (le.push(`xterm-underline-${S.extended.underlineStyle}`), V === " " && (V = " "), !S.isUnderlineColorDefault()))
              if (S.isUnderlineColorRGB())
                T.style.textDecorationColor = `rgb(${f.AttributeData.toColorRGB(S.getUnderlineColor()).join(",")})`;
              else {
                let we = S.getUnderlineColor();
                this._optionsService.rawOptions.drawBoldTextInBrightColors && S.isBold() && we < 8 && (we += 8), T.style.textDecorationColor = O.ansi[we].css;
              }
            S.isOverline() && (le.push("xterm-overline"), V === " " && (V = " ")), S.isStrikethrough() && le.push("xterm-strikethrough"), q && (T.style.textDecoration = "underline");
            let de = S.getFgColor(), fe = S.getFgColorMode(), _e = S.getBgColor(), Ie = S.getBgColorMode();
            const be = !!S.isInverse();
            if (be) {
              const we = de;
              de = _e, _e = we;
              const rs = fe;
              fe = Ie, Ie = rs;
            }
            let Fe, Mt, Ze, ir = !1;
            switch (this._decorationService.forEachDecorationAtCell(ue, A, void 0, (we) => {
              we.options.layer !== "top" && ir || (we.backgroundColorRGB && (Ie = 50331648, _e = we.backgroundColorRGB.rgba >> 8 & 16777215, Fe = we.backgroundColorRGB), we.foregroundColorRGB && (fe = 50331648, de = we.foregroundColorRGB.rgba >> 8 & 16777215, Mt = we.foregroundColorRGB), ir = we.options.layer === "top");
            }), !ir && w && (Fe = this._coreBrowserService.isFocused ? O.selectionBackgroundOpaque : O.selectionInactiveBackgroundOpaque, _e = Fe.rgba >> 8 & 16777215, Ie = 50331648, ir = !0, O.selectionForeground && (fe = 50331648, de = O.selectionForeground.rgba >> 8 & 16777215, Mt = O.selectionForeground)), ir && le.push("xterm-decoration-top"), Ie) {
              case 16777216:
              case 33554432:
                Ze = O.ansi[_e], le.push(`xterm-bg-${_e}`);
                break;
              case 50331648:
                Ze = g.rgba.toColor(_e >> 16, _e >> 8 & 255, 255 & _e), this._addStyle(T, `background-color:#${y((_e >>> 0).toString(16), "0", 6)}`);
                break;
              default:
                be ? (Ze = O.foreground, le.push(`xterm-bg-${u.INVERTED_DEFAULT_COLOR}`)) : Ze = O.background;
            }
            switch (Fe || S.isDim() && (Fe = g.color.multiplyOpacity(Ze, 0.5)), fe) {
              case 16777216:
              case 33554432:
                S.isBold() && de < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors && (de += 8), this._applyMinimumContrast(T, Ze, O.ansi[de], S, Fe, void 0) || le.push(`xterm-fg-${de}`);
                break;
              case 50331648:
                const we = g.rgba.toColor(de >> 16 & 255, de >> 8 & 255, 255 & de);
                this._applyMinimumContrast(T, Ze, we, S, Fe, Mt) || this._addStyle(T, `color:#${y(de.toString(16), "0", 6)}`);
                break;
              default:
                this._applyMinimumContrast(T, Ze, O.foreground, S, Fe, void 0) || be && le.push(`xterm-fg-${u.INVERTED_DEFAULT_COLOR}`);
            }
            le.length && (T.className = le.join(" "), le.length = 0), M || Te || Z ? T.textContent = V : G++, X !== this.defaultSpacing && (T.style.letterSpacing = `${X}px`), H.push(T), ue = D;
          }
          return T && G && (T.textContent = V), H;
        }
        _applyMinimumContrast(j, A, C, I, z, P) {
          if (this._optionsService.rawOptions.minimumContrastRatio === 1 || (0, _.excludeFromContrastRatioDemands)(I.getCode()))
            return !1;
          const L = this._getContrastCache(I);
          let N;
          if (z || P || (N = L.getColor(A.rgba, C.rgba)), N === void 0) {
            const B = this._optionsService.rawOptions.minimumContrastRatio / (I.isDim() ? 2 : 1);
            N = g.color.ensureContrastRatio(z || A, P || C, B), L.setColor((z || A).rgba, (P || C).rgba, N ?? null);
          }
          return !!N && (this._addStyle(j, `color:${N.css}`), !0);
        }
        _getContrastCache(j) {
          return j.isDim() ? this._themeService.colors.halfContrastCache : this._themeService.colors.contrastCache;
        }
        _addStyle(j, A) {
          j.setAttribute("style", `${j.getAttribute("style") || ""}${A};`);
        }
        _isCellInSelection(j, A) {
          const C = this._selectionStart, I = this._selectionEnd;
          return !(!C || !I) && (this._columnSelectMode ? C[0] <= I[0] ? j >= C[0] && A >= C[1] && j < I[0] && A <= I[1] : j < C[0] && A >= C[1] && j >= I[0] && A <= I[1] : A > C[1] && A < I[1] || C[1] === I[1] && A === C[1] && j >= C[0] && j < I[0] || C[1] < I[1] && A === I[1] && j < I[0] || C[1] < I[1] && A === C[1] && j >= C[0]);
        }
      };
      function y(j, A, C) {
        for (; j.length < C; )
          j = A + j;
        return j;
      }
      o.DomRendererRowFactory = v = d([h(1, m.ICharacterJoinerService), h(2, k.IOptionsService), h(3, m.ICoreBrowserService), h(4, k.ICoreService), h(5, k.IDecorationService), h(6, m.IThemeService)], v);
    }, 2550: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.WidthCache = void 0, o.WidthCache = class {
        constructor(s) {
          this._flat = new Float32Array(256), this._font = "", this._fontSize = 0, this._weight = "normal", this._weightBold = "bold", this._measureElements = [], this._container = s.createElement("div"), this._container.style.position = "absolute", this._container.style.top = "-50000px", this._container.style.width = "50000px", this._container.style.whiteSpace = "pre", this._container.style.fontKerning = "none";
          const d = s.createElement("span"), h = s.createElement("span");
          h.style.fontWeight = "bold";
          const u = s.createElement("span");
          u.style.fontStyle = "italic";
          const p = s.createElement("span");
          p.style.fontWeight = "bold", p.style.fontStyle = "italic", this._measureElements = [d, h, u, p], this._container.appendChild(d), this._container.appendChild(h), this._container.appendChild(u), this._container.appendChild(p), s.body.appendChild(this._container), this.clear();
        }
        dispose() {
          this._container.remove(), this._measureElements.length = 0, this._holey = void 0;
        }
        clear() {
          this._flat.fill(-9999), this._holey = /* @__PURE__ */ new Map();
        }
        setFont(s, d, h, u) {
          s === this._font && d === this._fontSize && h === this._weight && u === this._weightBold || (this._font = s, this._fontSize = d, this._weight = h, this._weightBold = u, this._container.style.fontFamily = this._font, this._container.style.fontSize = `${this._fontSize}px`, this._measureElements[0].style.fontWeight = `${h}`, this._measureElements[1].style.fontWeight = `${u}`, this._measureElements[2].style.fontWeight = `${h}`, this._measureElements[3].style.fontWeight = `${u}`, this.clear());
        }
        get(s, d, h) {
          let u = 0;
          if (!d && !h && s.length === 1 && (u = s.charCodeAt(0)) < 256)
            return this._flat[u] !== -9999 ? this._flat[u] : this._flat[u] = this._measure(s, 0);
          let p = s;
          d && (p += "B"), h && (p += "I");
          let b = this._holey.get(p);
          if (b === void 0) {
            let k = 0;
            d && (k |= 1), h && (k |= 2), b = this._measure(s, k), this._holey.set(p, b);
          }
          return b;
        }
        _measure(s, d) {
          const h = this._measureElements[d];
          return h.textContent = s.repeat(32), h.offsetWidth / 32;
        }
      };
    }, 2223: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.TEXT_BASELINE = o.DIM_OPACITY = o.INVERTED_DEFAULT_COLOR = void 0;
      const d = s(6114);
      o.INVERTED_DEFAULT_COLOR = 257, o.DIM_OPACITY = 0.5, o.TEXT_BASELINE = d.isFirefox || d.isLegacyEdge ? "bottom" : "ideographic";
    }, 6171: (l, o) => {
      function s(d) {
        return 57508 <= d && d <= 57558;
      }
      Object.defineProperty(o, "__esModule", { value: !0 }), o.createRenderDimensions = o.excludeFromContrastRatioDemands = o.isRestrictedPowerlineGlyph = o.isPowerlineGlyph = o.throwIfFalsy = void 0, o.throwIfFalsy = function(d) {
        if (!d)
          throw new Error("value must not be falsy");
        return d;
      }, o.isPowerlineGlyph = s, o.isRestrictedPowerlineGlyph = function(d) {
        return 57520 <= d && d <= 57527;
      }, o.excludeFromContrastRatioDemands = function(d) {
        return s(d) || function(h) {
          return 9472 <= h && h <= 9631;
        }(d);
      }, o.createRenderDimensions = function() {
        return { css: { canvas: { width: 0, height: 0 }, cell: { width: 0, height: 0 } }, device: { canvas: { width: 0, height: 0 }, cell: { width: 0, height: 0 }, char: { width: 0, height: 0, left: 0, top: 0 } } };
      };
    }, 456: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.SelectionModel = void 0, o.SelectionModel = class {
        constructor(s) {
          this._bufferService = s, this.isSelectAllActive = !1, this.selectionStartLength = 0;
        }
        clearSelection() {
          this.selectionStart = void 0, this.selectionEnd = void 0, this.isSelectAllActive = !1, this.selectionStartLength = 0;
        }
        get finalSelectionStart() {
          return this.isSelectAllActive ? [0, 0] : this.selectionEnd && this.selectionStart && this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;
        }
        get finalSelectionEnd() {
          if (this.isSelectAllActive)
            return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];
          if (this.selectionStart) {
            if (!this.selectionEnd || this.areSelectionValuesReversed()) {
              const s = this.selectionStart[0] + this.selectionStartLength;
              return s > this._bufferService.cols ? s % this._bufferService.cols == 0 ? [this._bufferService.cols, this.selectionStart[1] + Math.floor(s / this._bufferService.cols) - 1] : [s % this._bufferService.cols, this.selectionStart[1] + Math.floor(s / this._bufferService.cols)] : [s, this.selectionStart[1]];
            }
            if (this.selectionStartLength && this.selectionEnd[1] === this.selectionStart[1]) {
              const s = this.selectionStart[0] + this.selectionStartLength;
              return s > this._bufferService.cols ? [s % this._bufferService.cols, this.selectionStart[1] + Math.floor(s / this._bufferService.cols)] : [Math.max(s, this.selectionEnd[0]), this.selectionEnd[1]];
            }
            return this.selectionEnd;
          }
        }
        areSelectionValuesReversed() {
          const s = this.selectionStart, d = this.selectionEnd;
          return !(!s || !d) && (s[1] > d[1] || s[1] === d[1] && s[0] > d[0]);
        }
        handleTrim(s) {
          return this.selectionStart && (this.selectionStart[1] -= s), this.selectionEnd && (this.selectionEnd[1] -= s), this.selectionEnd && this.selectionEnd[1] < 0 ? (this.clearSelection(), !0) : (this.selectionStart && this.selectionStart[1] < 0 && (this.selectionStart[1] = 0), !1);
        }
      };
    }, 428: function(l, o, s) {
      var d = this && this.__decorate || function(m, c, _, f) {
        var v, y = arguments.length, j = y < 3 ? c : f === null ? f = Object.getOwnPropertyDescriptor(c, _) : f;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          j = Reflect.decorate(m, c, _, f);
        else
          for (var A = m.length - 1; A >= 0; A--)
            (v = m[A]) && (j = (y < 3 ? v(j) : y > 3 ? v(c, _, j) : v(c, _)) || j);
        return y > 3 && j && Object.defineProperty(c, _, j), j;
      }, h = this && this.__param || function(m, c) {
        return function(_, f) {
          c(_, f, m);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CharSizeService = void 0;
      const u = s(2585), p = s(8460), b = s(844);
      let k = o.CharSizeService = class extends b.Disposable {
        get hasValidSize() {
          return this.width > 0 && this.height > 0;
        }
        constructor(m, c, _) {
          super(), this._optionsService = _, this.width = 0, this.height = 0, this._onCharSizeChange = this.register(new p.EventEmitter()), this.onCharSizeChange = this._onCharSizeChange.event, this._measureStrategy = new g(m, c, this._optionsService), this.register(this._optionsService.onMultipleOptionChange(["fontFamily", "fontSize"], () => this.measure()));
        }
        measure() {
          const m = this._measureStrategy.measure();
          m.width === this.width && m.height === this.height || (this.width = m.width, this.height = m.height, this._onCharSizeChange.fire());
        }
      };
      o.CharSizeService = k = d([h(2, u.IOptionsService)], k);
      class g {
        constructor(c, _, f) {
          this._document = c, this._parentElement = _, this._optionsService = f, this._result = { width: 0, height: 0 }, this._measureElement = this._document.createElement("span"), this._measureElement.classList.add("xterm-char-measure-element"), this._measureElement.textContent = "W".repeat(32), this._measureElement.setAttribute("aria-hidden", "true"), this._measureElement.style.whiteSpace = "pre", this._measureElement.style.fontKerning = "none", this._parentElement.appendChild(this._measureElement);
        }
        measure() {
          this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily, this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;
          const c = { height: Number(this._measureElement.offsetHeight), width: Number(this._measureElement.offsetWidth) };
          return c.width !== 0 && c.height !== 0 && (this._result.width = c.width / 32, this._result.height = Math.ceil(c.height)), this._result;
        }
      }
    }, 4269: function(l, o, s) {
      var d = this && this.__decorate || function(c, _, f, v) {
        var y, j = arguments.length, A = j < 3 ? _ : v === null ? v = Object.getOwnPropertyDescriptor(_, f) : v;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          A = Reflect.decorate(c, _, f, v);
        else
          for (var C = c.length - 1; C >= 0; C--)
            (y = c[C]) && (A = (j < 3 ? y(A) : j > 3 ? y(_, f, A) : y(_, f)) || A);
        return j > 3 && A && Object.defineProperty(_, f, A), A;
      }, h = this && this.__param || function(c, _) {
        return function(f, v) {
          _(f, v, c);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CharacterJoinerService = o.JoinedCellData = void 0;
      const u = s(3734), p = s(643), b = s(511), k = s(2585);
      class g extends u.AttributeData {
        constructor(_, f, v) {
          super(), this.content = 0, this.combinedData = "", this.fg = _.fg, this.bg = _.bg, this.combinedData = f, this._width = v;
        }
        isCombined() {
          return 2097152;
        }
        getWidth() {
          return this._width;
        }
        getChars() {
          return this.combinedData;
        }
        getCode() {
          return 2097151;
        }
        setFromCharData(_) {
          throw new Error("not implemented");
        }
        getAsCharData() {
          return [this.fg, this.getChars(), this.getWidth(), this.getCode()];
        }
      }
      o.JoinedCellData = g;
      let m = o.CharacterJoinerService = class $a {
        constructor(_) {
          this._bufferService = _, this._characterJoiners = [], this._nextCharacterJoinerId = 0, this._workCell = new b.CellData();
        }
        register(_) {
          const f = { id: this._nextCharacterJoinerId++, handler: _ };
          return this._characterJoiners.push(f), f.id;
        }
        deregister(_) {
          for (let f = 0; f < this._characterJoiners.length; f++)
            if (this._characterJoiners[f].id === _)
              return this._characterJoiners.splice(f, 1), !0;
          return !1;
        }
        getJoinedCharacters(_) {
          if (this._characterJoiners.length === 0)
            return [];
          const f = this._bufferService.buffer.lines.get(_);
          if (!f || f.length === 0)
            return [];
          const v = [], y = f.translateToString(!0);
          let j = 0, A = 0, C = 0, I = f.getFg(0), z = f.getBg(0);
          for (let P = 0; P < f.getTrimmedLength(); P++)
            if (f.loadCell(P, this._workCell), this._workCell.getWidth() !== 0) {
              if (this._workCell.fg !== I || this._workCell.bg !== z) {
                if (P - j > 1) {
                  const L = this._getJoinedRanges(y, C, A, f, j);
                  for (let N = 0; N < L.length; N++)
                    v.push(L[N]);
                }
                j = P, C = A, I = this._workCell.fg, z = this._workCell.bg;
              }
              A += this._workCell.getChars().length || p.WHITESPACE_CELL_CHAR.length;
            }
          if (this._bufferService.cols - j > 1) {
            const P = this._getJoinedRanges(y, C, A, f, j);
            for (let L = 0; L < P.length; L++)
              v.push(P[L]);
          }
          return v;
        }
        _getJoinedRanges(_, f, v, y, j) {
          const A = _.substring(f, v);
          let C = [];
          try {
            C = this._characterJoiners[0].handler(A);
          } catch (I) {
            console.error(I);
          }
          for (let I = 1; I < this._characterJoiners.length; I++)
            try {
              const z = this._characterJoiners[I].handler(A);
              for (let P = 0; P < z.length; P++)
                $a._mergeRanges(C, z[P]);
            } catch (z) {
              console.error(z);
            }
          return this._stringRangesToCellRanges(C, y, j), C;
        }
        _stringRangesToCellRanges(_, f, v) {
          let y = 0, j = !1, A = 0, C = _[y];
          if (C) {
            for (let I = v; I < this._bufferService.cols; I++) {
              const z = f.getWidth(I), P = f.getString(I).length || p.WHITESPACE_CELL_CHAR.length;
              if (z !== 0) {
                if (!j && C[0] <= A && (C[0] = I, j = !0), C[1] <= A) {
                  if (C[1] = I, C = _[++y], !C)
                    break;
                  C[0] <= A ? (C[0] = I, j = !0) : j = !1;
                }
                A += P;
              }
            }
            C && (C[1] = this._bufferService.cols);
          }
        }
        static _mergeRanges(_, f) {
          let v = !1;
          for (let y = 0; y < _.length; y++) {
            const j = _[y];
            if (v) {
              if (f[1] <= j[0])
                return _[y - 1][1] = f[1], _;
              if (f[1] <= j[1])
                return _[y - 1][1] = Math.max(f[1], j[1]), _.splice(y, 1), _;
              _.splice(y, 1), y--;
            } else {
              if (f[1] <= j[0])
                return _.splice(y, 0, f), _;
              if (f[1] <= j[1])
                return j[0] = Math.min(f[0], j[0]), _;
              f[0] < j[1] && (j[0] = Math.min(f[0], j[0]), v = !0);
            }
          }
          return v ? _[_.length - 1][1] = f[1] : _.push(f), _;
        }
      };
      o.CharacterJoinerService = m = d([h(0, k.IBufferService)], m);
    }, 5114: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CoreBrowserService = void 0, o.CoreBrowserService = class {
        constructor(s, d) {
          this._textarea = s, this.window = d, this._isFocused = !1, this._cachedIsFocused = void 0, this._textarea.addEventListener("focus", () => this._isFocused = !0), this._textarea.addEventListener("blur", () => this._isFocused = !1);
        }
        get dpr() {
          return this.window.devicePixelRatio;
        }
        get isFocused() {
          return this._cachedIsFocused === void 0 && (this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus(), queueMicrotask(() => this._cachedIsFocused = void 0)), this._cachedIsFocused;
        }
      };
    }, 8934: function(l, o, s) {
      var d = this && this.__decorate || function(k, g, m, c) {
        var _, f = arguments.length, v = f < 3 ? g : c === null ? c = Object.getOwnPropertyDescriptor(g, m) : c;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          v = Reflect.decorate(k, g, m, c);
        else
          for (var y = k.length - 1; y >= 0; y--)
            (_ = k[y]) && (v = (f < 3 ? _(v) : f > 3 ? _(g, m, v) : _(g, m)) || v);
        return f > 3 && v && Object.defineProperty(g, m, v), v;
      }, h = this && this.__param || function(k, g) {
        return function(m, c) {
          g(m, c, k);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.MouseService = void 0;
      const u = s(4725), p = s(9806);
      let b = o.MouseService = class {
        constructor(k, g) {
          this._renderService = k, this._charSizeService = g;
        }
        getCoords(k, g, m, c, _) {
          return (0, p.getCoords)(window, k, g, m, c, this._charSizeService.hasValidSize, this._renderService.dimensions.css.cell.width, this._renderService.dimensions.css.cell.height, _);
        }
        getMouseReportCoords(k, g) {
          const m = (0, p.getCoordsRelativeToElement)(window, k, g);
          if (this._charSizeService.hasValidSize)
            return m[0] = Math.min(Math.max(m[0], 0), this._renderService.dimensions.css.canvas.width - 1), m[1] = Math.min(Math.max(m[1], 0), this._renderService.dimensions.css.canvas.height - 1), { col: Math.floor(m[0] / this._renderService.dimensions.css.cell.width), row: Math.floor(m[1] / this._renderService.dimensions.css.cell.height), x: Math.floor(m[0]), y: Math.floor(m[1]) };
        }
      };
      o.MouseService = b = d([h(0, u.IRenderService), h(1, u.ICharSizeService)], b);
    }, 3230: function(l, o, s) {
      var d = this && this.__decorate || function(v, y, j, A) {
        var C, I = arguments.length, z = I < 3 ? y : A === null ? A = Object.getOwnPropertyDescriptor(y, j) : A;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          z = Reflect.decorate(v, y, j, A);
        else
          for (var P = v.length - 1; P >= 0; P--)
            (C = v[P]) && (z = (I < 3 ? C(z) : I > 3 ? C(y, j, z) : C(y, j)) || z);
        return I > 3 && z && Object.defineProperty(y, j, z), z;
      }, h = this && this.__param || function(v, y) {
        return function(j, A) {
          y(j, A, v);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.RenderService = void 0;
      const u = s(3656), p = s(6193), b = s(5596), k = s(4725), g = s(8460), m = s(844), c = s(7226), _ = s(2585);
      let f = o.RenderService = class extends m.Disposable {
        get dimensions() {
          return this._renderer.value.dimensions;
        }
        constructor(v, y, j, A, C, I, z, P) {
          if (super(), this._rowCount = v, this._charSizeService = A, this._renderer = this.register(new m.MutableDisposable()), this._pausedResizeTask = new c.DebouncedIdleTask(), this._isPaused = !1, this._needsFullRefresh = !1, this._isNextRenderRedrawOnly = !0, this._needsSelectionRefresh = !1, this._canvasWidth = 0, this._canvasHeight = 0, this._selectionState = { start: void 0, end: void 0, columnSelectMode: !1 }, this._onDimensionsChange = this.register(new g.EventEmitter()), this.onDimensionsChange = this._onDimensionsChange.event, this._onRenderedViewportChange = this.register(new g.EventEmitter()), this.onRenderedViewportChange = this._onRenderedViewportChange.event, this._onRender = this.register(new g.EventEmitter()), this.onRender = this._onRender.event, this._onRefreshRequest = this.register(new g.EventEmitter()), this.onRefreshRequest = this._onRefreshRequest.event, this._renderDebouncer = new p.RenderDebouncer(z.window, (L, N) => this._renderRows(L, N)), this.register(this._renderDebouncer), this._screenDprMonitor = new b.ScreenDprMonitor(z.window), this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange()), this.register(this._screenDprMonitor), this.register(I.onResize(() => this._fullRefresh())), this.register(I.buffers.onBufferActivate(() => {
            var L;
            return (L = this._renderer.value) === null || L === void 0 ? void 0 : L.clear();
          })), this.register(j.onOptionChange(() => this._handleOptionsChanged())), this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged())), this.register(C.onDecorationRegistered(() => this._fullRefresh())), this.register(C.onDecorationRemoved(() => this._fullRefresh())), this.register(j.onMultipleOptionChange(["customGlyphs", "drawBoldTextInBrightColors", "letterSpacing", "lineHeight", "fontFamily", "fontSize", "fontWeight", "fontWeightBold", "minimumContrastRatio"], () => {
            this.clear(), this.handleResize(I.cols, I.rows), this._fullRefresh();
          })), this.register(j.onMultipleOptionChange(["cursorBlink", "cursorStyle"], () => this.refreshRows(I.buffer.y, I.buffer.y, !0))), this.register((0, u.addDisposableDomListener)(z.window, "resize", () => this.handleDevicePixelRatioChange())), this.register(P.onChangeColors(() => this._fullRefresh())), "IntersectionObserver" in z.window) {
            const L = new z.window.IntersectionObserver((N) => this._handleIntersectionChange(N[N.length - 1]), { threshold: 0 });
            L.observe(y), this.register({ dispose: () => L.disconnect() });
          }
        }
        _handleIntersectionChange(v) {
          this._isPaused = v.isIntersecting === void 0 ? v.intersectionRatio === 0 : !v.isIntersecting, this._isPaused || this._charSizeService.hasValidSize || this._charSizeService.measure(), !this._isPaused && this._needsFullRefresh && (this._pausedResizeTask.flush(), this.refreshRows(0, this._rowCount - 1), this._needsFullRefresh = !1);
        }
        refreshRows(v, y, j = !1) {
          this._isPaused ? this._needsFullRefresh = !0 : (j || (this._isNextRenderRedrawOnly = !1), this._renderDebouncer.refresh(v, y, this._rowCount));
        }
        _renderRows(v, y) {
          this._renderer.value && (v = Math.min(v, this._rowCount - 1), y = Math.min(y, this._rowCount - 1), this._renderer.value.renderRows(v, y), this._needsSelectionRefresh && (this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode), this._needsSelectionRefresh = !1), this._isNextRenderRedrawOnly || this._onRenderedViewportChange.fire({ start: v, end: y }), this._onRender.fire({ start: v, end: y }), this._isNextRenderRedrawOnly = !0);
        }
        resize(v, y) {
          this._rowCount = y, this._fireOnCanvasResize();
        }
        _handleOptionsChanged() {
          this._renderer.value && (this.refreshRows(0, this._rowCount - 1), this._fireOnCanvasResize());
        }
        _fireOnCanvasResize() {
          this._renderer.value && (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight || this._onDimensionsChange.fire(this._renderer.value.dimensions));
        }
        hasRenderer() {
          return !!this._renderer.value;
        }
        setRenderer(v) {
          this._renderer.value = v, this._renderer.value.onRequestRedraw((y) => this.refreshRows(y.start, y.end, !0)), this._needsSelectionRefresh = !0, this._fullRefresh();
        }
        addRefreshCallback(v) {
          return this._renderDebouncer.addRefreshCallback(v);
        }
        _fullRefresh() {
          this._isPaused ? this._needsFullRefresh = !0 : this.refreshRows(0, this._rowCount - 1);
        }
        clearTextureAtlas() {
          var v, y;
          this._renderer.value && ((y = (v = this._renderer.value).clearTextureAtlas) === null || y === void 0 || y.call(v), this._fullRefresh());
        }
        handleDevicePixelRatioChange() {
          this._charSizeService.measure(), this._renderer.value && (this._renderer.value.handleDevicePixelRatioChange(), this.refreshRows(0, this._rowCount - 1));
        }
        handleResize(v, y) {
          this._renderer.value && (this._isPaused ? this._pausedResizeTask.set(() => this._renderer.value.handleResize(v, y)) : this._renderer.value.handleResize(v, y), this._fullRefresh());
        }
        handleCharSizeChanged() {
          var v;
          (v = this._renderer.value) === null || v === void 0 || v.handleCharSizeChanged();
        }
        handleBlur() {
          var v;
          (v = this._renderer.value) === null || v === void 0 || v.handleBlur();
        }
        handleFocus() {
          var v;
          (v = this._renderer.value) === null || v === void 0 || v.handleFocus();
        }
        handleSelectionChanged(v, y, j) {
          var A;
          this._selectionState.start = v, this._selectionState.end = y, this._selectionState.columnSelectMode = j, (A = this._renderer.value) === null || A === void 0 || A.handleSelectionChanged(v, y, j);
        }
        handleCursorMove() {
          var v;
          (v = this._renderer.value) === null || v === void 0 || v.handleCursorMove();
        }
        clear() {
          var v;
          (v = this._renderer.value) === null || v === void 0 || v.clear();
        }
      };
      o.RenderService = f = d([h(2, _.IOptionsService), h(3, k.ICharSizeService), h(4, _.IDecorationService), h(5, _.IBufferService), h(6, k.ICoreBrowserService), h(7, k.IThemeService)], f);
    }, 9312: function(l, o, s) {
      var d = this && this.__decorate || function(C, I, z, P) {
        var L, N = arguments.length, B = N < 3 ? I : P === null ? P = Object.getOwnPropertyDescriptor(I, z) : P;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          B = Reflect.decorate(C, I, z, P);
        else
          for (var F = C.length - 1; F >= 0; F--)
            (L = C[F]) && (B = (N < 3 ? L(B) : N > 3 ? L(I, z, B) : L(I, z)) || B);
        return N > 3 && B && Object.defineProperty(I, z, B), B;
      }, h = this && this.__param || function(C, I) {
        return function(z, P) {
          I(z, P, C);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.SelectionService = void 0;
      const u = s(9806), p = s(9504), b = s(456), k = s(4725), g = s(8460), m = s(844), c = s(6114), _ = s(4841), f = s(511), v = s(2585), y = String.fromCharCode(160), j = new RegExp(y, "g");
      let A = o.SelectionService = class extends m.Disposable {
        constructor(C, I, z, P, L, N, B, F, U) {
          super(), this._element = C, this._screenElement = I, this._linkifier = z, this._bufferService = P, this._coreService = L, this._mouseService = N, this._optionsService = B, this._renderService = F, this._coreBrowserService = U, this._dragScrollAmount = 0, this._enabled = !0, this._workCell = new f.CellData(), this._mouseDownTimeStamp = 0, this._oldHasSelection = !1, this._oldSelectionStart = void 0, this._oldSelectionEnd = void 0, this._onLinuxMouseSelection = this.register(new g.EventEmitter()), this.onLinuxMouseSelection = this._onLinuxMouseSelection.event, this._onRedrawRequest = this.register(new g.EventEmitter()), this.onRequestRedraw = this._onRedrawRequest.event, this._onSelectionChange = this.register(new g.EventEmitter()), this.onSelectionChange = this._onSelectionChange.event, this._onRequestScrollLines = this.register(new g.EventEmitter()), this.onRequestScrollLines = this._onRequestScrollLines.event, this._mouseMoveListener = (H) => this._handleMouseMove(H), this._mouseUpListener = (H) => this._handleMouseUp(H), this._coreService.onUserInput(() => {
            this.hasSelection && this.clearSelection();
          }), this._trimListener = this._bufferService.buffer.lines.onTrim((H) => this._handleTrim(H)), this.register(this._bufferService.buffers.onBufferActivate((H) => this._handleBufferActivate(H))), this.enable(), this._model = new b.SelectionModel(this._bufferService), this._activeSelectionMode = 0, this.register((0, m.toDisposable)(() => {
            this._removeMouseDownListeners();
          }));
        }
        reset() {
          this.clearSelection();
        }
        disable() {
          this.clearSelection(), this._enabled = !1;
        }
        enable() {
          this._enabled = !0;
        }
        get selectionStart() {
          return this._model.finalSelectionStart;
        }
        get selectionEnd() {
          return this._model.finalSelectionEnd;
        }
        get hasSelection() {
          const C = this._model.finalSelectionStart, I = this._model.finalSelectionEnd;
          return !(!C || !I || C[0] === I[0] && C[1] === I[1]);
        }
        get selectionText() {
          const C = this._model.finalSelectionStart, I = this._model.finalSelectionEnd;
          if (!C || !I)
            return "";
          const z = this._bufferService.buffer, P = [];
          if (this._activeSelectionMode === 3) {
            if (C[0] === I[0])
              return "";
            const L = C[0] < I[0] ? C[0] : I[0], N = C[0] < I[0] ? I[0] : C[0];
            for (let B = C[1]; B <= I[1]; B++) {
              const F = z.translateBufferLineToString(B, !0, L, N);
              P.push(F);
            }
          } else {
            const L = C[1] === I[1] ? I[0] : void 0;
            P.push(z.translateBufferLineToString(C[1], !0, C[0], L));
            for (let N = C[1] + 1; N <= I[1] - 1; N++) {
              const B = z.lines.get(N), F = z.translateBufferLineToString(N, !0);
              B != null && B.isWrapped ? P[P.length - 1] += F : P.push(F);
            }
            if (C[1] !== I[1]) {
              const N = z.lines.get(I[1]), B = z.translateBufferLineToString(I[1], !0, 0, I[0]);
              N && N.isWrapped ? P[P.length - 1] += B : P.push(B);
            }
          }
          return P.map((L) => L.replace(j, " ")).join(c.isWindows ? `\r
` : `
`);
        }
        clearSelection() {
          this._model.clearSelection(), this._removeMouseDownListeners(), this.refresh(), this._onSelectionChange.fire();
        }
        refresh(C) {
          this._refreshAnimationFrame || (this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh())), c.isLinux && C && this.selectionText.length && this._onLinuxMouseSelection.fire(this.selectionText);
        }
        _refresh() {
          this._refreshAnimationFrame = void 0, this._onRedrawRequest.fire({ start: this._model.finalSelectionStart, end: this._model.finalSelectionEnd, columnSelectMode: this._activeSelectionMode === 3 });
        }
        _isClickInSelection(C) {
          const I = this._getMouseBufferCoords(C), z = this._model.finalSelectionStart, P = this._model.finalSelectionEnd;
          return !!(z && P && I) && this._areCoordsInSelection(I, z, P);
        }
        isCellInSelection(C, I) {
          const z = this._model.finalSelectionStart, P = this._model.finalSelectionEnd;
          return !(!z || !P) && this._areCoordsInSelection([C, I], z, P);
        }
        _areCoordsInSelection(C, I, z) {
          return C[1] > I[1] && C[1] < z[1] || I[1] === z[1] && C[1] === I[1] && C[0] >= I[0] && C[0] < z[0] || I[1] < z[1] && C[1] === z[1] && C[0] < z[0] || I[1] < z[1] && C[1] === I[1] && C[0] >= I[0];
        }
        _selectWordAtCursor(C, I) {
          var z, P;
          const L = (P = (z = this._linkifier.currentLink) === null || z === void 0 ? void 0 : z.link) === null || P === void 0 ? void 0 : P.range;
          if (L)
            return this._model.selectionStart = [L.start.x - 1, L.start.y - 1], this._model.selectionStartLength = (0, _.getRangeLength)(L, this._bufferService.cols), this._model.selectionEnd = void 0, !0;
          const N = this._getMouseBufferCoords(C);
          return !!N && (this._selectWordAt(N, I), this._model.selectionEnd = void 0, !0);
        }
        selectAll() {
          this._model.isSelectAllActive = !0, this.refresh(), this._onSelectionChange.fire();
        }
        selectLines(C, I) {
          this._model.clearSelection(), C = Math.max(C, 0), I = Math.min(I, this._bufferService.buffer.lines.length - 1), this._model.selectionStart = [0, C], this._model.selectionEnd = [this._bufferService.cols, I], this.refresh(), this._onSelectionChange.fire();
        }
        _handleTrim(C) {
          this._model.handleTrim(C) && this.refresh();
        }
        _getMouseBufferCoords(C) {
          const I = this._mouseService.getCoords(C, this._screenElement, this._bufferService.cols, this._bufferService.rows, !0);
          if (I)
            return I[0]--, I[1]--, I[1] += this._bufferService.buffer.ydisp, I;
        }
        _getMouseEventScrollAmount(C) {
          let I = (0, u.getCoordsRelativeToElement)(this._coreBrowserService.window, C, this._screenElement)[1];
          const z = this._renderService.dimensions.css.canvas.height;
          return I >= 0 && I <= z ? 0 : (I > z && (I -= z), I = Math.min(Math.max(I, -50), 50), I /= 50, I / Math.abs(I) + Math.round(14 * I));
        }
        shouldForceSelection(C) {
          return c.isMac ? C.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection : C.shiftKey;
        }
        handleMouseDown(C) {
          if (this._mouseDownTimeStamp = C.timeStamp, (C.button !== 2 || !this.hasSelection) && C.button === 0) {
            if (!this._enabled) {
              if (!this.shouldForceSelection(C))
                return;
              C.stopPropagation();
            }
            C.preventDefault(), this._dragScrollAmount = 0, this._enabled && C.shiftKey ? this._handleIncrementalClick(C) : C.detail === 1 ? this._handleSingleClick(C) : C.detail === 2 ? this._handleDoubleClick(C) : C.detail === 3 && this._handleTripleClick(C), this._addMouseDownListeners(), this.refresh(!0);
          }
        }
        _addMouseDownListeners() {
          this._screenElement.ownerDocument && (this._screenElement.ownerDocument.addEventListener("mousemove", this._mouseMoveListener), this._screenElement.ownerDocument.addEventListener("mouseup", this._mouseUpListener)), this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), 50);
        }
        _removeMouseDownListeners() {
          this._screenElement.ownerDocument && (this._screenElement.ownerDocument.removeEventListener("mousemove", this._mouseMoveListener), this._screenElement.ownerDocument.removeEventListener("mouseup", this._mouseUpListener)), this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer), this._dragScrollIntervalTimer = void 0;
        }
        _handleIncrementalClick(C) {
          this._model.selectionStart && (this._model.selectionEnd = this._getMouseBufferCoords(C));
        }
        _handleSingleClick(C) {
          if (this._model.selectionStartLength = 0, this._model.isSelectAllActive = !1, this._activeSelectionMode = this.shouldColumnSelect(C) ? 3 : 0, this._model.selectionStart = this._getMouseBufferCoords(C), !this._model.selectionStart)
            return;
          this._model.selectionEnd = void 0;
          const I = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);
          I && I.length !== this._model.selectionStart[0] && I.hasWidth(this._model.selectionStart[0]) === 0 && this._model.selectionStart[0]++;
        }
        _handleDoubleClick(C) {
          this._selectWordAtCursor(C, !0) && (this._activeSelectionMode = 1);
        }
        _handleTripleClick(C) {
          const I = this._getMouseBufferCoords(C);
          I && (this._activeSelectionMode = 2, this._selectLineAt(I[1]));
        }
        shouldColumnSelect(C) {
          return C.altKey && !(c.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);
        }
        _handleMouseMove(C) {
          if (C.stopImmediatePropagation(), !this._model.selectionStart)
            return;
          const I = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;
          if (this._model.selectionEnd = this._getMouseBufferCoords(C), !this._model.selectionEnd)
            return void this.refresh(!0);
          this._activeSelectionMode === 2 ? this._model.selectionEnd[1] < this._model.selectionStart[1] ? this._model.selectionEnd[0] = 0 : this._model.selectionEnd[0] = this._bufferService.cols : this._activeSelectionMode === 1 && this._selectToWordAt(this._model.selectionEnd), this._dragScrollAmount = this._getMouseEventScrollAmount(C), this._activeSelectionMode !== 3 && (this._dragScrollAmount > 0 ? this._model.selectionEnd[0] = this._bufferService.cols : this._dragScrollAmount < 0 && (this._model.selectionEnd[0] = 0));
          const z = this._bufferService.buffer;
          if (this._model.selectionEnd[1] < z.lines.length) {
            const P = z.lines.get(this._model.selectionEnd[1]);
            P && P.hasWidth(this._model.selectionEnd[0]) === 0 && this._model.selectionEnd[0]++;
          }
          I && I[0] === this._model.selectionEnd[0] && I[1] === this._model.selectionEnd[1] || this.refresh(!0);
        }
        _dragScroll() {
          if (this._model.selectionEnd && this._model.selectionStart && this._dragScrollAmount) {
            this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: !1 });
            const C = this._bufferService.buffer;
            this._dragScrollAmount > 0 ? (this._activeSelectionMode !== 3 && (this._model.selectionEnd[0] = this._bufferService.cols), this._model.selectionEnd[1] = Math.min(C.ydisp + this._bufferService.rows, C.lines.length - 1)) : (this._activeSelectionMode !== 3 && (this._model.selectionEnd[0] = 0), this._model.selectionEnd[1] = C.ydisp), this.refresh();
          }
        }
        _handleMouseUp(C) {
          const I = C.timeStamp - this._mouseDownTimeStamp;
          if (this._removeMouseDownListeners(), this.selectionText.length <= 1 && I < 500 && C.altKey && this._optionsService.rawOptions.altClickMovesCursor) {
            if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {
              const z = this._mouseService.getCoords(C, this._element, this._bufferService.cols, this._bufferService.rows, !1);
              if (z && z[0] !== void 0 && z[1] !== void 0) {
                const P = (0, p.moveToCellSequence)(z[0] - 1, z[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);
                this._coreService.triggerDataEvent(P, !0);
              }
            }
          } else
            this._fireEventIfSelectionChanged();
        }
        _fireEventIfSelectionChanged() {
          const C = this._model.finalSelectionStart, I = this._model.finalSelectionEnd, z = !(!C || !I || C[0] === I[0] && C[1] === I[1]);
          z ? C && I && (this._oldSelectionStart && this._oldSelectionEnd && C[0] === this._oldSelectionStart[0] && C[1] === this._oldSelectionStart[1] && I[0] === this._oldSelectionEnd[0] && I[1] === this._oldSelectionEnd[1] || this._fireOnSelectionChange(C, I, z)) : this._oldHasSelection && this._fireOnSelectionChange(C, I, z);
        }
        _fireOnSelectionChange(C, I, z) {
          this._oldSelectionStart = C, this._oldSelectionEnd = I, this._oldHasSelection = z, this._onSelectionChange.fire();
        }
        _handleBufferActivate(C) {
          this.clearSelection(), this._trimListener.dispose(), this._trimListener = C.activeBuffer.lines.onTrim((I) => this._handleTrim(I));
        }
        _convertViewportColToCharacterIndex(C, I) {
          let z = I;
          for (let P = 0; I >= P; P++) {
            const L = C.loadCell(P, this._workCell).getChars().length;
            this._workCell.getWidth() === 0 ? z-- : L > 1 && I !== P && (z += L - 1);
          }
          return z;
        }
        setSelection(C, I, z) {
          this._model.clearSelection(), this._removeMouseDownListeners(), this._model.selectionStart = [C, I], this._model.selectionStartLength = z, this.refresh(), this._fireEventIfSelectionChanged();
        }
        rightClickSelect(C) {
          this._isClickInSelection(C) || (this._selectWordAtCursor(C, !1) && this.refresh(!0), this._fireEventIfSelectionChanged());
        }
        _getWordAt(C, I, z = !0, P = !0) {
          if (C[0] >= this._bufferService.cols)
            return;
          const L = this._bufferService.buffer, N = L.lines.get(C[1]);
          if (!N)
            return;
          const B = L.translateBufferLineToString(C[1], !1);
          let F = this._convertViewportColToCharacterIndex(N, C[0]), U = F;
          const H = C[0] - F;
          let x = 0, O = 0, T = 0, R = 0;
          if (B.charAt(F) === " ") {
            for (; F > 0 && B.charAt(F - 1) === " "; )
              F--;
            for (; U < B.length && B.charAt(U + 1) === " "; )
              U++;
          } else {
            let ee = C[0], Y = C[0];
            N.getWidth(ee) === 0 && (x++, ee--), N.getWidth(Y) === 2 && (O++, Y++);
            const J = N.getString(Y).length;
            for (J > 1 && (R += J - 1, U += J - 1); ee > 0 && F > 0 && !this._isCharWordSeparator(N.loadCell(ee - 1, this._workCell)); ) {
              N.loadCell(ee - 1, this._workCell);
              const E = this._workCell.getChars().length;
              this._workCell.getWidth() === 0 ? (x++, ee--) : E > 1 && (T += E - 1, F -= E - 1), F--, ee--;
            }
            for (; Y < N.length && U + 1 < B.length && !this._isCharWordSeparator(N.loadCell(Y + 1, this._workCell)); ) {
              N.loadCell(Y + 1, this._workCell);
              const E = this._workCell.getChars().length;
              this._workCell.getWidth() === 2 ? (O++, Y++) : E > 1 && (R += E - 1, U += E - 1), U++, Y++;
            }
          }
          U++;
          let G = F + H - x + T, V = Math.min(this._bufferService.cols, U - F + x + O - T - R);
          if (I || B.slice(F, U).trim() !== "") {
            if (z && G === 0 && N.getCodePoint(0) !== 32) {
              const ee = L.lines.get(C[1] - 1);
              if (ee && N.isWrapped && ee.getCodePoint(this._bufferService.cols - 1) !== 32) {
                const Y = this._getWordAt([this._bufferService.cols - 1, C[1] - 1], !1, !0, !1);
                if (Y) {
                  const J = this._bufferService.cols - Y.start;
                  G -= J, V += J;
                }
              }
            }
            if (P && G + V === this._bufferService.cols && N.getCodePoint(this._bufferService.cols - 1) !== 32) {
              const ee = L.lines.get(C[1] + 1);
              if (ee != null && ee.isWrapped && ee.getCodePoint(0) !== 32) {
                const Y = this._getWordAt([0, C[1] + 1], !1, !1, !0);
                Y && (V += Y.length);
              }
            }
            return { start: G, length: V };
          }
        }
        _selectWordAt(C, I) {
          const z = this._getWordAt(C, I);
          if (z) {
            for (; z.start < 0; )
              z.start += this._bufferService.cols, C[1]--;
            this._model.selectionStart = [z.start, C[1]], this._model.selectionStartLength = z.length;
          }
        }
        _selectToWordAt(C) {
          const I = this._getWordAt(C, !0);
          if (I) {
            let z = C[1];
            for (; I.start < 0; )
              I.start += this._bufferService.cols, z--;
            if (!this._model.areSelectionValuesReversed())
              for (; I.start + I.length > this._bufferService.cols; )
                I.length -= this._bufferService.cols, z++;
            this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? I.start : I.start + I.length, z];
          }
        }
        _isCharWordSeparator(C) {
          return C.getWidth() !== 0 && this._optionsService.rawOptions.wordSeparator.indexOf(C.getChars()) >= 0;
        }
        _selectLineAt(C) {
          const I = this._bufferService.buffer.getWrappedRangeForLine(C), z = { start: { x: 0, y: I.first }, end: { x: this._bufferService.cols - 1, y: I.last } };
          this._model.selectionStart = [0, I.first], this._model.selectionEnd = void 0, this._model.selectionStartLength = (0, _.getRangeLength)(z, this._bufferService.cols);
        }
      };
      o.SelectionService = A = d([h(3, v.IBufferService), h(4, v.ICoreService), h(5, k.IMouseService), h(6, v.IOptionsService), h(7, k.IRenderService), h(8, k.ICoreBrowserService)], A);
    }, 4725: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.IThemeService = o.ICharacterJoinerService = o.ISelectionService = o.IRenderService = o.IMouseService = o.ICoreBrowserService = o.ICharSizeService = void 0;
      const d = s(8343);
      o.ICharSizeService = (0, d.createDecorator)("CharSizeService"), o.ICoreBrowserService = (0, d.createDecorator)("CoreBrowserService"), o.IMouseService = (0, d.createDecorator)("MouseService"), o.IRenderService = (0, d.createDecorator)("RenderService"), o.ISelectionService = (0, d.createDecorator)("SelectionService"), o.ICharacterJoinerService = (0, d.createDecorator)("CharacterJoinerService"), o.IThemeService = (0, d.createDecorator)("ThemeService");
    }, 6731: function(l, o, s) {
      var d = this && this.__decorate || function(A, C, I, z) {
        var P, L = arguments.length, N = L < 3 ? C : z === null ? z = Object.getOwnPropertyDescriptor(C, I) : z;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          N = Reflect.decorate(A, C, I, z);
        else
          for (var B = A.length - 1; B >= 0; B--)
            (P = A[B]) && (N = (L < 3 ? P(N) : L > 3 ? P(C, I, N) : P(C, I)) || N);
        return L > 3 && N && Object.defineProperty(C, I, N), N;
      }, h = this && this.__param || function(A, C) {
        return function(I, z) {
          C(I, z, A);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.ThemeService = o.DEFAULT_ANSI_COLORS = void 0;
      const u = s(7239), p = s(8055), b = s(8460), k = s(844), g = s(2585), m = p.css.toColor("#ffffff"), c = p.css.toColor("#000000"), _ = p.css.toColor("#ffffff"), f = p.css.toColor("#000000"), v = { css: "rgba(255, 255, 255, 0.3)", rgba: 4294967117 };
      o.DEFAULT_ANSI_COLORS = Object.freeze((() => {
        const A = [p.css.toColor("#2e3436"), p.css.toColor("#cc0000"), p.css.toColor("#4e9a06"), p.css.toColor("#c4a000"), p.css.toColor("#3465a4"), p.css.toColor("#75507b"), p.css.toColor("#06989a"), p.css.toColor("#d3d7cf"), p.css.toColor("#555753"), p.css.toColor("#ef2929"), p.css.toColor("#8ae234"), p.css.toColor("#fce94f"), p.css.toColor("#729fcf"), p.css.toColor("#ad7fa8"), p.css.toColor("#34e2e2"), p.css.toColor("#eeeeec")], C = [0, 95, 135, 175, 215, 255];
        for (let I = 0; I < 216; I++) {
          const z = C[I / 36 % 6 | 0], P = C[I / 6 % 6 | 0], L = C[I % 6];
          A.push({ css: p.channels.toCss(z, P, L), rgba: p.channels.toRgba(z, P, L) });
        }
        for (let I = 0; I < 24; I++) {
          const z = 8 + 10 * I;
          A.push({ css: p.channels.toCss(z, z, z), rgba: p.channels.toRgba(z, z, z) });
        }
        return A;
      })());
      let y = o.ThemeService = class extends k.Disposable {
        get colors() {
          return this._colors;
        }
        constructor(A) {
          super(), this._optionsService = A, this._contrastCache = new u.ColorContrastCache(), this._halfContrastCache = new u.ColorContrastCache(), this._onChangeColors = this.register(new b.EventEmitter()), this.onChangeColors = this._onChangeColors.event, this._colors = { foreground: m, background: c, cursor: _, cursorAccent: f, selectionForeground: void 0, selectionBackgroundTransparent: v, selectionBackgroundOpaque: p.color.blend(c, v), selectionInactiveBackgroundTransparent: v, selectionInactiveBackgroundOpaque: p.color.blend(c, v), ansi: o.DEFAULT_ANSI_COLORS.slice(), contrastCache: this._contrastCache, halfContrastCache: this._halfContrastCache }, this._updateRestoreColors(), this._setTheme(this._optionsService.rawOptions.theme), this.register(this._optionsService.onSpecificOptionChange("minimumContrastRatio", () => this._contrastCache.clear())), this.register(this._optionsService.onSpecificOptionChange("theme", () => this._setTheme(this._optionsService.rawOptions.theme)));
        }
        _setTheme(A = {}) {
          const C = this._colors;
          if (C.foreground = j(A.foreground, m), C.background = j(A.background, c), C.cursor = j(A.cursor, _), C.cursorAccent = j(A.cursorAccent, f), C.selectionBackgroundTransparent = j(A.selectionBackground, v), C.selectionBackgroundOpaque = p.color.blend(C.background, C.selectionBackgroundTransparent), C.selectionInactiveBackgroundTransparent = j(A.selectionInactiveBackground, C.selectionBackgroundTransparent), C.selectionInactiveBackgroundOpaque = p.color.blend(C.background, C.selectionInactiveBackgroundTransparent), C.selectionForeground = A.selectionForeground ? j(A.selectionForeground, p.NULL_COLOR) : void 0, C.selectionForeground === p.NULL_COLOR && (C.selectionForeground = void 0), p.color.isOpaque(C.selectionBackgroundTransparent) && (C.selectionBackgroundTransparent = p.color.opacity(C.selectionBackgroundTransparent, 0.3)), p.color.isOpaque(C.selectionInactiveBackgroundTransparent) && (C.selectionInactiveBackgroundTransparent = p.color.opacity(C.selectionInactiveBackgroundTransparent, 0.3)), C.ansi = o.DEFAULT_ANSI_COLORS.slice(), C.ansi[0] = j(A.black, o.DEFAULT_ANSI_COLORS[0]), C.ansi[1] = j(A.red, o.DEFAULT_ANSI_COLORS[1]), C.ansi[2] = j(A.green, o.DEFAULT_ANSI_COLORS[2]), C.ansi[3] = j(A.yellow, o.DEFAULT_ANSI_COLORS[3]), C.ansi[4] = j(A.blue, o.DEFAULT_ANSI_COLORS[4]), C.ansi[5] = j(A.magenta, o.DEFAULT_ANSI_COLORS[5]), C.ansi[6] = j(A.cyan, o.DEFAULT_ANSI_COLORS[6]), C.ansi[7] = j(A.white, o.DEFAULT_ANSI_COLORS[7]), C.ansi[8] = j(A.brightBlack, o.DEFAULT_ANSI_COLORS[8]), C.ansi[9] = j(A.brightRed, o.DEFAULT_ANSI_COLORS[9]), C.ansi[10] = j(A.brightGreen, o.DEFAULT_ANSI_COLORS[10]), C.ansi[11] = j(A.brightYellow, o.DEFAULT_ANSI_COLORS[11]), C.ansi[12] = j(A.brightBlue, o.DEFAULT_ANSI_COLORS[12]), C.ansi[13] = j(A.brightMagenta, o.DEFAULT_ANSI_COLORS[13]), C.ansi[14] = j(A.brightCyan, o.DEFAULT_ANSI_COLORS[14]), C.ansi[15] = j(A.brightWhite, o.DEFAULT_ANSI_COLORS[15]), A.extendedAnsi) {
            const I = Math.min(C.ansi.length - 16, A.extendedAnsi.length);
            for (let z = 0; z < I; z++)
              C.ansi[z + 16] = j(A.extendedAnsi[z], o.DEFAULT_ANSI_COLORS[z + 16]);
          }
          this._contrastCache.clear(), this._halfContrastCache.clear(), this._updateRestoreColors(), this._onChangeColors.fire(this.colors);
        }
        restoreColor(A) {
          this._restoreColor(A), this._onChangeColors.fire(this.colors);
        }
        _restoreColor(A) {
          if (A !== void 0)
            switch (A) {
              case 256:
                this._colors.foreground = this._restoreColors.foreground;
                break;
              case 257:
                this._colors.background = this._restoreColors.background;
                break;
              case 258:
                this._colors.cursor = this._restoreColors.cursor;
                break;
              default:
                this._colors.ansi[A] = this._restoreColors.ansi[A];
            }
          else
            for (let C = 0; C < this._restoreColors.ansi.length; ++C)
              this._colors.ansi[C] = this._restoreColors.ansi[C];
        }
        modifyColors(A) {
          A(this._colors), this._onChangeColors.fire(this.colors);
        }
        _updateRestoreColors() {
          this._restoreColors = { foreground: this._colors.foreground, background: this._colors.background, cursor: this._colors.cursor, ansi: this._colors.ansi.slice() };
        }
      };
      function j(A, C) {
        if (A !== void 0)
          try {
            return p.css.toColor(A);
          } catch {
          }
        return C;
      }
      o.ThemeService = y = d([h(0, g.IOptionsService)], y);
    }, 6349: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CircularList = void 0;
      const d = s(8460), h = s(844);
      class u extends h.Disposable {
        constructor(b) {
          super(), this._maxLength = b, this.onDeleteEmitter = this.register(new d.EventEmitter()), this.onDelete = this.onDeleteEmitter.event, this.onInsertEmitter = this.register(new d.EventEmitter()), this.onInsert = this.onInsertEmitter.event, this.onTrimEmitter = this.register(new d.EventEmitter()), this.onTrim = this.onTrimEmitter.event, this._array = new Array(this._maxLength), this._startIndex = 0, this._length = 0;
        }
        get maxLength() {
          return this._maxLength;
        }
        set maxLength(b) {
          if (this._maxLength === b)
            return;
          const k = new Array(b);
          for (let g = 0; g < Math.min(b, this.length); g++)
            k[g] = this._array[this._getCyclicIndex(g)];
          this._array = k, this._maxLength = b, this._startIndex = 0;
        }
        get length() {
          return this._length;
        }
        set length(b) {
          if (b > this._length)
            for (let k = this._length; k < b; k++)
              this._array[k] = void 0;
          this._length = b;
        }
        get(b) {
          return this._array[this._getCyclicIndex(b)];
        }
        set(b, k) {
          this._array[this._getCyclicIndex(b)] = k;
        }
        push(b) {
          this._array[this._getCyclicIndex(this._length)] = b, this._length === this._maxLength ? (this._startIndex = ++this._startIndex % this._maxLength, this.onTrimEmitter.fire(1)) : this._length++;
        }
        recycle() {
          if (this._length !== this._maxLength)
            throw new Error("Can only recycle when the buffer is full");
          return this._startIndex = ++this._startIndex % this._maxLength, this.onTrimEmitter.fire(1), this._array[this._getCyclicIndex(this._length - 1)];
        }
        get isFull() {
          return this._length === this._maxLength;
        }
        pop() {
          return this._array[this._getCyclicIndex(this._length-- - 1)];
        }
        splice(b, k, ...g) {
          if (k) {
            for (let m = b; m < this._length - k; m++)
              this._array[this._getCyclicIndex(m)] = this._array[this._getCyclicIndex(m + k)];
            this._length -= k, this.onDeleteEmitter.fire({ index: b, amount: k });
          }
          for (let m = this._length - 1; m >= b; m--)
            this._array[this._getCyclicIndex(m + g.length)] = this._array[this._getCyclicIndex(m)];
          for (let m = 0; m < g.length; m++)
            this._array[this._getCyclicIndex(b + m)] = g[m];
          if (g.length && this.onInsertEmitter.fire({ index: b, amount: g.length }), this._length + g.length > this._maxLength) {
            const m = this._length + g.length - this._maxLength;
            this._startIndex += m, this._length = this._maxLength, this.onTrimEmitter.fire(m);
          } else
            this._length += g.length;
        }
        trimStart(b) {
          b > this._length && (b = this._length), this._startIndex += b, this._length -= b, this.onTrimEmitter.fire(b);
        }
        shiftElements(b, k, g) {
          if (!(k <= 0)) {
            if (b < 0 || b >= this._length)
              throw new Error("start argument out of range");
            if (b + g < 0)
              throw new Error("Cannot shift elements in list beyond index 0");
            if (g > 0) {
              for (let c = k - 1; c >= 0; c--)
                this.set(b + c + g, this.get(b + c));
              const m = b + k + g - this._length;
              if (m > 0)
                for (this._length += m; this._length > this._maxLength; )
                  this._length--, this._startIndex++, this.onTrimEmitter.fire(1);
            } else
              for (let m = 0; m < k; m++)
                this.set(b + m + g, this.get(b + m));
          }
        }
        _getCyclicIndex(b) {
          return (this._startIndex + b) % this._maxLength;
        }
      }
      o.CircularList = u;
    }, 1439: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.clone = void 0, o.clone = function s(d, h = 5) {
        if (typeof d != "object")
          return d;
        const u = Array.isArray(d) ? [] : {};
        for (const p in d)
          u[p] = h <= 1 ? d[p] : d[p] && s(d[p], h - 1);
        return u;
      };
    }, 8055: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.contrastRatio = o.toPaddedHex = o.rgba = o.rgb = o.css = o.color = o.channels = o.NULL_COLOR = void 0;
      const d = s(6114);
      let h = 0, u = 0, p = 0, b = 0;
      var k, g, m, c, _;
      function f(y) {
        const j = y.toString(16);
        return j.length < 2 ? "0" + j : j;
      }
      function v(y, j) {
        return y < j ? (j + 0.05) / (y + 0.05) : (y + 0.05) / (j + 0.05);
      }
      o.NULL_COLOR = { css: "#00000000", rgba: 0 }, function(y) {
        y.toCss = function(j, A, C, I) {
          return I !== void 0 ? `#${f(j)}${f(A)}${f(C)}${f(I)}` : `#${f(j)}${f(A)}${f(C)}`;
        }, y.toRgba = function(j, A, C, I = 255) {
          return (j << 24 | A << 16 | C << 8 | I) >>> 0;
        };
      }(k || (o.channels = k = {})), function(y) {
        function j(A, C) {
          return b = Math.round(255 * C), [h, u, p] = _.toChannels(A.rgba), { css: k.toCss(h, u, p, b), rgba: k.toRgba(h, u, p, b) };
        }
        y.blend = function(A, C) {
          if (b = (255 & C.rgba) / 255, b === 1)
            return { css: C.css, rgba: C.rgba };
          const I = C.rgba >> 24 & 255, z = C.rgba >> 16 & 255, P = C.rgba >> 8 & 255, L = A.rgba >> 24 & 255, N = A.rgba >> 16 & 255, B = A.rgba >> 8 & 255;
          return h = L + Math.round((I - L) * b), u = N + Math.round((z - N) * b), p = B + Math.round((P - B) * b), { css: k.toCss(h, u, p), rgba: k.toRgba(h, u, p) };
        }, y.isOpaque = function(A) {
          return (255 & A.rgba) == 255;
        }, y.ensureContrastRatio = function(A, C, I) {
          const z = _.ensureContrastRatio(A.rgba, C.rgba, I);
          if (z)
            return _.toColor(z >> 24 & 255, z >> 16 & 255, z >> 8 & 255);
        }, y.opaque = function(A) {
          const C = (255 | A.rgba) >>> 0;
          return [h, u, p] = _.toChannels(C), { css: k.toCss(h, u, p), rgba: C };
        }, y.opacity = j, y.multiplyOpacity = function(A, C) {
          return b = 255 & A.rgba, j(A, b * C / 255);
        }, y.toColorRGB = function(A) {
          return [A.rgba >> 24 & 255, A.rgba >> 16 & 255, A.rgba >> 8 & 255];
        };
      }(g || (o.color = g = {})), function(y) {
        let j, A;
        if (!d.isNode) {
          const C = document.createElement("canvas");
          C.width = 1, C.height = 1;
          const I = C.getContext("2d", { willReadFrequently: !0 });
          I && (j = I, j.globalCompositeOperation = "copy", A = j.createLinearGradient(0, 0, 1, 1));
        }
        y.toColor = function(C) {
          if (C.match(/#[\da-f]{3,8}/i))
            switch (C.length) {
              case 4:
                return h = parseInt(C.slice(1, 2).repeat(2), 16), u = parseInt(C.slice(2, 3).repeat(2), 16), p = parseInt(C.slice(3, 4).repeat(2), 16), _.toColor(h, u, p);
              case 5:
                return h = parseInt(C.slice(1, 2).repeat(2), 16), u = parseInt(C.slice(2, 3).repeat(2), 16), p = parseInt(C.slice(3, 4).repeat(2), 16), b = parseInt(C.slice(4, 5).repeat(2), 16), _.toColor(h, u, p, b);
              case 7:
                return { css: C, rgba: (parseInt(C.slice(1), 16) << 8 | 255) >>> 0 };
              case 9:
                return { css: C, rgba: parseInt(C.slice(1), 16) >>> 0 };
            }
          const I = C.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);
          if (I)
            return h = parseInt(I[1]), u = parseInt(I[2]), p = parseInt(I[3]), b = Math.round(255 * (I[5] === void 0 ? 1 : parseFloat(I[5]))), _.toColor(h, u, p, b);
          if (!j || !A)
            throw new Error("css.toColor: Unsupported css format");
          if (j.fillStyle = A, j.fillStyle = C, typeof j.fillStyle != "string")
            throw new Error("css.toColor: Unsupported css format");
          if (j.fillRect(0, 0, 1, 1), [h, u, p, b] = j.getImageData(0, 0, 1, 1).data, b !== 255)
            throw new Error("css.toColor: Unsupported css format");
          return { rgba: k.toRgba(h, u, p, b), css: C };
        };
      }(m || (o.css = m = {})), function(y) {
        function j(A, C, I) {
          const z = A / 255, P = C / 255, L = I / 255;
          return 0.2126 * (z <= 0.03928 ? z / 12.92 : Math.pow((z + 0.055) / 1.055, 2.4)) + 0.7152 * (P <= 0.03928 ? P / 12.92 : Math.pow((P + 0.055) / 1.055, 2.4)) + 0.0722 * (L <= 0.03928 ? L / 12.92 : Math.pow((L + 0.055) / 1.055, 2.4));
        }
        y.relativeLuminance = function(A) {
          return j(A >> 16 & 255, A >> 8 & 255, 255 & A);
        }, y.relativeLuminance2 = j;
      }(c || (o.rgb = c = {})), function(y) {
        function j(C, I, z) {
          const P = C >> 24 & 255, L = C >> 16 & 255, N = C >> 8 & 255;
          let B = I >> 24 & 255, F = I >> 16 & 255, U = I >> 8 & 255, H = v(c.relativeLuminance2(B, F, U), c.relativeLuminance2(P, L, N));
          for (; H < z && (B > 0 || F > 0 || U > 0); )
            B -= Math.max(0, Math.ceil(0.1 * B)), F -= Math.max(0, Math.ceil(0.1 * F)), U -= Math.max(0, Math.ceil(0.1 * U)), H = v(c.relativeLuminance2(B, F, U), c.relativeLuminance2(P, L, N));
          return (B << 24 | F << 16 | U << 8 | 255) >>> 0;
        }
        function A(C, I, z) {
          const P = C >> 24 & 255, L = C >> 16 & 255, N = C >> 8 & 255;
          let B = I >> 24 & 255, F = I >> 16 & 255, U = I >> 8 & 255, H = v(c.relativeLuminance2(B, F, U), c.relativeLuminance2(P, L, N));
          for (; H < z && (B < 255 || F < 255 || U < 255); )
            B = Math.min(255, B + Math.ceil(0.1 * (255 - B))), F = Math.min(255, F + Math.ceil(0.1 * (255 - F))), U = Math.min(255, U + Math.ceil(0.1 * (255 - U))), H = v(c.relativeLuminance2(B, F, U), c.relativeLuminance2(P, L, N));
          return (B << 24 | F << 16 | U << 8 | 255) >>> 0;
        }
        y.ensureContrastRatio = function(C, I, z) {
          const P = c.relativeLuminance(C >> 8), L = c.relativeLuminance(I >> 8);
          if (v(P, L) < z) {
            if (L < P) {
              const F = j(C, I, z), U = v(P, c.relativeLuminance(F >> 8));
              if (U < z) {
                const H = A(C, I, z);
                return U > v(P, c.relativeLuminance(H >> 8)) ? F : H;
              }
              return F;
            }
            const N = A(C, I, z), B = v(P, c.relativeLuminance(N >> 8));
            if (B < z) {
              const F = j(C, I, z);
              return B > v(P, c.relativeLuminance(F >> 8)) ? N : F;
            }
            return N;
          }
        }, y.reduceLuminance = j, y.increaseLuminance = A, y.toChannels = function(C) {
          return [C >> 24 & 255, C >> 16 & 255, C >> 8 & 255, 255 & C];
        }, y.toColor = function(C, I, z, P) {
          return { css: k.toCss(C, I, z, P), rgba: k.toRgba(C, I, z, P) };
        };
      }(_ || (o.rgba = _ = {})), o.toPaddedHex = f, o.contrastRatio = v;
    }, 8969: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CoreTerminal = void 0;
      const d = s(844), h = s(2585), u = s(4348), p = s(7866), b = s(744), k = s(7302), g = s(6975), m = s(8460), c = s(1753), _ = s(1480), f = s(7994), v = s(9282), y = s(5435), j = s(5981), A = s(2660);
      let C = !1;
      class I extends d.Disposable {
        get onScroll() {
          return this._onScrollApi || (this._onScrollApi = this.register(new m.EventEmitter()), this._onScroll.event((P) => {
            var L;
            (L = this._onScrollApi) === null || L === void 0 || L.fire(P.position);
          })), this._onScrollApi.event;
        }
        get cols() {
          return this._bufferService.cols;
        }
        get rows() {
          return this._bufferService.rows;
        }
        get buffers() {
          return this._bufferService.buffers;
        }
        get options() {
          return this.optionsService.options;
        }
        set options(P) {
          for (const L in P)
            this.optionsService.options[L] = P[L];
        }
        constructor(P) {
          super(), this._windowsWrappingHeuristics = this.register(new d.MutableDisposable()), this._onBinary = this.register(new m.EventEmitter()), this.onBinary = this._onBinary.event, this._onData = this.register(new m.EventEmitter()), this.onData = this._onData.event, this._onLineFeed = this.register(new m.EventEmitter()), this.onLineFeed = this._onLineFeed.event, this._onResize = this.register(new m.EventEmitter()), this.onResize = this._onResize.event, this._onWriteParsed = this.register(new m.EventEmitter()), this.onWriteParsed = this._onWriteParsed.event, this._onScroll = this.register(new m.EventEmitter()), this._instantiationService = new u.InstantiationService(), this.optionsService = this.register(new k.OptionsService(P)), this._instantiationService.setService(h.IOptionsService, this.optionsService), this._bufferService = this.register(this._instantiationService.createInstance(b.BufferService)), this._instantiationService.setService(h.IBufferService, this._bufferService), this._logService = this.register(this._instantiationService.createInstance(p.LogService)), this._instantiationService.setService(h.ILogService, this._logService), this.coreService = this.register(this._instantiationService.createInstance(g.CoreService)), this._instantiationService.setService(h.ICoreService, this.coreService), this.coreMouseService = this.register(this._instantiationService.createInstance(c.CoreMouseService)), this._instantiationService.setService(h.ICoreMouseService, this.coreMouseService), this.unicodeService = this.register(this._instantiationService.createInstance(_.UnicodeService)), this._instantiationService.setService(h.IUnicodeService, this.unicodeService), this._charsetService = this._instantiationService.createInstance(f.CharsetService), this._instantiationService.setService(h.ICharsetService, this._charsetService), this._oscLinkService = this._instantiationService.createInstance(A.OscLinkService), this._instantiationService.setService(h.IOscLinkService, this._oscLinkService), this._inputHandler = this.register(new y.InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService)), this.register((0, m.forwardEvent)(this._inputHandler.onLineFeed, this._onLineFeed)), this.register(this._inputHandler), this.register((0, m.forwardEvent)(this._bufferService.onResize, this._onResize)), this.register((0, m.forwardEvent)(this.coreService.onData, this._onData)), this.register((0, m.forwardEvent)(this.coreService.onBinary, this._onBinary)), this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom())), this.register(this.coreService.onUserInput(() => this._writeBuffer.handleUserInput())), this.register(this.optionsService.onMultipleOptionChange(["windowsMode", "windowsPty"], () => this._handleWindowsPtyOptionChange())), this.register(this._bufferService.onScroll((L) => {
            this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: 0 }), this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);
          })), this.register(this._inputHandler.onScroll((L) => {
            this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: 0 }), this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);
          })), this._writeBuffer = this.register(new j.WriteBuffer((L, N) => this._inputHandler.parse(L, N))), this.register((0, m.forwardEvent)(this._writeBuffer.onWriteParsed, this._onWriteParsed));
        }
        write(P, L) {
          this._writeBuffer.write(P, L);
        }
        writeSync(P, L) {
          this._logService.logLevel <= h.LogLevelEnum.WARN && !C && (this._logService.warn("writeSync is unreliable and will be removed soon."), C = !0), this._writeBuffer.writeSync(P, L);
        }
        resize(P, L) {
          isNaN(P) || isNaN(L) || (P = Math.max(P, b.MINIMUM_COLS), L = Math.max(L, b.MINIMUM_ROWS), this._bufferService.resize(P, L));
        }
        scroll(P, L = !1) {
          this._bufferService.scroll(P, L);
        }
        scrollLines(P, L, N) {
          this._bufferService.scrollLines(P, L, N);
        }
        scrollPages(P) {
          this.scrollLines(P * (this.rows - 1));
        }
        scrollToTop() {
          this.scrollLines(-this._bufferService.buffer.ydisp);
        }
        scrollToBottom() {
          this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);
        }
        scrollToLine(P) {
          const L = P - this._bufferService.buffer.ydisp;
          L !== 0 && this.scrollLines(L);
        }
        registerEscHandler(P, L) {
          return this._inputHandler.registerEscHandler(P, L);
        }
        registerDcsHandler(P, L) {
          return this._inputHandler.registerDcsHandler(P, L);
        }
        registerCsiHandler(P, L) {
          return this._inputHandler.registerCsiHandler(P, L);
        }
        registerOscHandler(P, L) {
          return this._inputHandler.registerOscHandler(P, L);
        }
        _setup() {
          this._handleWindowsPtyOptionChange();
        }
        reset() {
          this._inputHandler.reset(), this._bufferService.reset(), this._charsetService.reset(), this.coreService.reset(), this.coreMouseService.reset();
        }
        _handleWindowsPtyOptionChange() {
          let P = !1;
          const L = this.optionsService.rawOptions.windowsPty;
          L && L.buildNumber !== void 0 && L.buildNumber !== void 0 ? P = L.backend === "conpty" && L.buildNumber < 21376 : this.optionsService.rawOptions.windowsMode && (P = !0), P ? this._enableWindowsWrappingHeuristics() : this._windowsWrappingHeuristics.clear();
        }
        _enableWindowsWrappingHeuristics() {
          if (!this._windowsWrappingHeuristics.value) {
            const P = [];
            P.push(this.onLineFeed(v.updateWindowsModeWrappedState.bind(null, this._bufferService))), P.push(this.registerCsiHandler({ final: "H" }, () => ((0, v.updateWindowsModeWrappedState)(this._bufferService), !1))), this._windowsWrappingHeuristics.value = (0, d.toDisposable)(() => {
              for (const L of P)
                L.dispose();
            });
          }
        }
      }
      o.CoreTerminal = I;
    }, 8460: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.forwardEvent = o.EventEmitter = void 0, o.EventEmitter = class {
        constructor() {
          this._listeners = [], this._disposed = !1;
        }
        get event() {
          return this._event || (this._event = (s) => (this._listeners.push(s), { dispose: () => {
            if (!this._disposed) {
              for (let d = 0; d < this._listeners.length; d++)
                if (this._listeners[d] === s)
                  return void this._listeners.splice(d, 1);
            }
          } })), this._event;
        }
        fire(s, d) {
          const h = [];
          for (let u = 0; u < this._listeners.length; u++)
            h.push(this._listeners[u]);
          for (let u = 0; u < h.length; u++)
            h[u].call(void 0, s, d);
        }
        dispose() {
          this.clearListeners(), this._disposed = !0;
        }
        clearListeners() {
          this._listeners && (this._listeners.length = 0);
        }
      }, o.forwardEvent = function(s, d) {
        return s((h) => d.fire(h));
      };
    }, 5435: function(l, o, s) {
      var d = this && this.__decorate || function(H, x, O, T) {
        var R, G = arguments.length, V = G < 3 ? x : T === null ? T = Object.getOwnPropertyDescriptor(x, O) : T;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          V = Reflect.decorate(H, x, O, T);
        else
          for (var ee = H.length - 1; ee >= 0; ee--)
            (R = H[ee]) && (V = (G < 3 ? R(V) : G > 3 ? R(x, O, V) : R(x, O)) || V);
        return G > 3 && V && Object.defineProperty(x, O, V), V;
      }, h = this && this.__param || function(H, x) {
        return function(O, T) {
          x(O, T, H);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.InputHandler = o.WindowsOptionsReportType = void 0;
      const u = s(2584), p = s(7116), b = s(2015), k = s(844), g = s(482), m = s(8437), c = s(8460), _ = s(643), f = s(511), v = s(3734), y = s(2585), j = s(6242), A = s(6351), C = s(5941), I = { "(": 0, ")": 1, "*": 2, "+": 3, "-": 1, ".": 2 }, z = 131072;
      function P(H, x) {
        if (H > 24)
          return x.setWinLines || !1;
        switch (H) {
          case 1:
            return !!x.restoreWin;
          case 2:
            return !!x.minimizeWin;
          case 3:
            return !!x.setWinPosition;
          case 4:
            return !!x.setWinSizePixels;
          case 5:
            return !!x.raiseWin;
          case 6:
            return !!x.lowerWin;
          case 7:
            return !!x.refreshWin;
          case 8:
            return !!x.setWinSizeChars;
          case 9:
            return !!x.maximizeWin;
          case 10:
            return !!x.fullscreenWin;
          case 11:
            return !!x.getWinState;
          case 13:
            return !!x.getWinPosition;
          case 14:
            return !!x.getWinSizePixels;
          case 15:
            return !!x.getScreenSizePixels;
          case 16:
            return !!x.getCellSizePixels;
          case 18:
            return !!x.getWinSizeChars;
          case 19:
            return !!x.getScreenSizeChars;
          case 20:
            return !!x.getIconTitle;
          case 21:
            return !!x.getWinTitle;
          case 22:
            return !!x.pushTitle;
          case 23:
            return !!x.popTitle;
          case 24:
            return !!x.setWinLines;
        }
        return !1;
      }
      var L;
      (function(H) {
        H[H.GET_WIN_SIZE_PIXELS = 0] = "GET_WIN_SIZE_PIXELS", H[H.GET_CELL_SIZE_PIXELS = 1] = "GET_CELL_SIZE_PIXELS";
      })(L || (o.WindowsOptionsReportType = L = {}));
      let N = 0;
      class B extends k.Disposable {
        getAttrData() {
          return this._curAttrData;
        }
        constructor(x, O, T, R, G, V, ee, Y, J = new b.EscapeSequenceParser()) {
          super(), this._bufferService = x, this._charsetService = O, this._coreService = T, this._logService = R, this._optionsService = G, this._oscLinkService = V, this._coreMouseService = ee, this._unicodeService = Y, this._parser = J, this._parseBuffer = new Uint32Array(4096), this._stringDecoder = new g.StringToUtf32(), this._utf8Decoder = new g.Utf8ToUtf32(), this._workCell = new f.CellData(), this._windowTitle = "", this._iconName = "", this._windowTitleStack = [], this._iconNameStack = [], this._curAttrData = m.DEFAULT_ATTR_DATA.clone(), this._eraseAttrDataInternal = m.DEFAULT_ATTR_DATA.clone(), this._onRequestBell = this.register(new c.EventEmitter()), this.onRequestBell = this._onRequestBell.event, this._onRequestRefreshRows = this.register(new c.EventEmitter()), this.onRequestRefreshRows = this._onRequestRefreshRows.event, this._onRequestReset = this.register(new c.EventEmitter()), this.onRequestReset = this._onRequestReset.event, this._onRequestSendFocus = this.register(new c.EventEmitter()), this.onRequestSendFocus = this._onRequestSendFocus.event, this._onRequestSyncScrollBar = this.register(new c.EventEmitter()), this.onRequestSyncScrollBar = this._onRequestSyncScrollBar.event, this._onRequestWindowsOptionsReport = this.register(new c.EventEmitter()), this.onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event, this._onA11yChar = this.register(new c.EventEmitter()), this.onA11yChar = this._onA11yChar.event, this._onA11yTab = this.register(new c.EventEmitter()), this.onA11yTab = this._onA11yTab.event, this._onCursorMove = this.register(new c.EventEmitter()), this.onCursorMove = this._onCursorMove.event, this._onLineFeed = this.register(new c.EventEmitter()), this.onLineFeed = this._onLineFeed.event, this._onScroll = this.register(new c.EventEmitter()), this.onScroll = this._onScroll.event, this._onTitleChange = this.register(new c.EventEmitter()), this.onTitleChange = this._onTitleChange.event, this._onColor = this.register(new c.EventEmitter()), this.onColor = this._onColor.event, this._parseStack = { paused: !1, cursorStartX: 0, cursorStartY: 0, decodedLength: 0, position: 0 }, this._specialColors = [256, 257, 258], this.register(this._parser), this._dirtyRowTracker = new F(this._bufferService), this._activeBuffer = this._bufferService.buffer, this.register(this._bufferService.buffers.onBufferActivate((E) => this._activeBuffer = E.activeBuffer)), this._parser.setCsiHandlerFallback((E, W) => {
            this._logService.debug("Unknown CSI code: ", { identifier: this._parser.identToString(E), params: W.toArray() });
          }), this._parser.setEscHandlerFallback((E) => {
            this._logService.debug("Unknown ESC code: ", { identifier: this._parser.identToString(E) });
          }), this._parser.setExecuteHandlerFallback((E) => {
            this._logService.debug("Unknown EXECUTE code: ", { code: E });
          }), this._parser.setOscHandlerFallback((E, W, K) => {
            this._logService.debug("Unknown OSC code: ", { identifier: E, action: W, data: K });
          }), this._parser.setDcsHandlerFallback((E, W, K) => {
            W === "HOOK" && (K = K.toArray()), this._logService.debug("Unknown DCS code: ", { identifier: this._parser.identToString(E), action: W, payload: K });
          }), this._parser.setPrintHandler((E, W, K) => this.print(E, W, K)), this._parser.registerCsiHandler({ final: "@" }, (E) => this.insertChars(E)), this._parser.registerCsiHandler({ intermediates: " ", final: "@" }, (E) => this.scrollLeft(E)), this._parser.registerCsiHandler({ final: "A" }, (E) => this.cursorUp(E)), this._parser.registerCsiHandler({ intermediates: " ", final: "A" }, (E) => this.scrollRight(E)), this._parser.registerCsiHandler({ final: "B" }, (E) => this.cursorDown(E)), this._parser.registerCsiHandler({ final: "C" }, (E) => this.cursorForward(E)), this._parser.registerCsiHandler({ final: "D" }, (E) => this.cursorBackward(E)), this._parser.registerCsiHandler({ final: "E" }, (E) => this.cursorNextLine(E)), this._parser.registerCsiHandler({ final: "F" }, (E) => this.cursorPrecedingLine(E)), this._parser.registerCsiHandler({ final: "G" }, (E) => this.cursorCharAbsolute(E)), this._parser.registerCsiHandler({ final: "H" }, (E) => this.cursorPosition(E)), this._parser.registerCsiHandler({ final: "I" }, (E) => this.cursorForwardTab(E)), this._parser.registerCsiHandler({ final: "J" }, (E) => this.eraseInDisplay(E, !1)), this._parser.registerCsiHandler({ prefix: "?", final: "J" }, (E) => this.eraseInDisplay(E, !0)), this._parser.registerCsiHandler({ final: "K" }, (E) => this.eraseInLine(E, !1)), this._parser.registerCsiHandler({ prefix: "?", final: "K" }, (E) => this.eraseInLine(E, !0)), this._parser.registerCsiHandler({ final: "L" }, (E) => this.insertLines(E)), this._parser.registerCsiHandler({ final: "M" }, (E) => this.deleteLines(E)), this._parser.registerCsiHandler({ final: "P" }, (E) => this.deleteChars(E)), this._parser.registerCsiHandler({ final: "S" }, (E) => this.scrollUp(E)), this._parser.registerCsiHandler({ final: "T" }, (E) => this.scrollDown(E)), this._parser.registerCsiHandler({ final: "X" }, (E) => this.eraseChars(E)), this._parser.registerCsiHandler({ final: "Z" }, (E) => this.cursorBackwardTab(E)), this._parser.registerCsiHandler({ final: "`" }, (E) => this.charPosAbsolute(E)), this._parser.registerCsiHandler({ final: "a" }, (E) => this.hPositionRelative(E)), this._parser.registerCsiHandler({ final: "b" }, (E) => this.repeatPrecedingCharacter(E)), this._parser.registerCsiHandler({ final: "c" }, (E) => this.sendDeviceAttributesPrimary(E)), this._parser.registerCsiHandler({ prefix: ">", final: "c" }, (E) => this.sendDeviceAttributesSecondary(E)), this._parser.registerCsiHandler({ final: "d" }, (E) => this.linePosAbsolute(E)), this._parser.registerCsiHandler({ final: "e" }, (E) => this.vPositionRelative(E)), this._parser.registerCsiHandler({ final: "f" }, (E) => this.hVPosition(E)), this._parser.registerCsiHandler({ final: "g" }, (E) => this.tabClear(E)), this._parser.registerCsiHandler({ final: "h" }, (E) => this.setMode(E)), this._parser.registerCsiHandler({ prefix: "?", final: "h" }, (E) => this.setModePrivate(E)), this._parser.registerCsiHandler({ final: "l" }, (E) => this.resetMode(E)), this._parser.registerCsiHandler({ prefix: "?", final: "l" }, (E) => this.resetModePrivate(E)), this._parser.registerCsiHandler({ final: "m" }, (E) => this.charAttributes(E)), this._parser.registerCsiHandler({ final: "n" }, (E) => this.deviceStatus(E)), this._parser.registerCsiHandler({ prefix: "?", final: "n" }, (E) => this.deviceStatusPrivate(E)), this._parser.registerCsiHandler({ intermediates: "!", final: "p" }, (E) => this.softReset(E)), this._parser.registerCsiHandler({ intermediates: " ", final: "q" }, (E) => this.setCursorStyle(E)), this._parser.registerCsiHandler({ final: "r" }, (E) => this.setScrollRegion(E)), this._parser.registerCsiHandler({ final: "s" }, (E) => this.saveCursor(E)), this._parser.registerCsiHandler({ final: "t" }, (E) => this.windowOptions(E)), this._parser.registerCsiHandler({ final: "u" }, (E) => this.restoreCursor(E)), this._parser.registerCsiHandler({ intermediates: "'", final: "}" }, (E) => this.insertColumns(E)), this._parser.registerCsiHandler({ intermediates: "'", final: "~" }, (E) => this.deleteColumns(E)), this._parser.registerCsiHandler({ intermediates: '"', final: "q" }, (E) => this.selectProtected(E)), this._parser.registerCsiHandler({ intermediates: "$", final: "p" }, (E) => this.requestMode(E, !0)), this._parser.registerCsiHandler({ prefix: "?", intermediates: "$", final: "p" }, (E) => this.requestMode(E, !1)), this._parser.setExecuteHandler(u.C0.BEL, () => this.bell()), this._parser.setExecuteHandler(u.C0.LF, () => this.lineFeed()), this._parser.setExecuteHandler(u.C0.VT, () => this.lineFeed()), this._parser.setExecuteHandler(u.C0.FF, () => this.lineFeed()), this._parser.setExecuteHandler(u.C0.CR, () => this.carriageReturn()), this._parser.setExecuteHandler(u.C0.BS, () => this.backspace()), this._parser.setExecuteHandler(u.C0.HT, () => this.tab()), this._parser.setExecuteHandler(u.C0.SO, () => this.shiftOut()), this._parser.setExecuteHandler(u.C0.SI, () => this.shiftIn()), this._parser.setExecuteHandler(u.C1.IND, () => this.index()), this._parser.setExecuteHandler(u.C1.NEL, () => this.nextLine()), this._parser.setExecuteHandler(u.C1.HTS, () => this.tabSet()), this._parser.registerOscHandler(0, new j.OscHandler((E) => (this.setTitle(E), this.setIconName(E), !0))), this._parser.registerOscHandler(1, new j.OscHandler((E) => this.setIconName(E))), this._parser.registerOscHandler(2, new j.OscHandler((E) => this.setTitle(E))), this._parser.registerOscHandler(4, new j.OscHandler((E) => this.setOrReportIndexedColor(E))), this._parser.registerOscHandler(8, new j.OscHandler((E) => this.setHyperlink(E))), this._parser.registerOscHandler(10, new j.OscHandler((E) => this.setOrReportFgColor(E))), this._parser.registerOscHandler(11, new j.OscHandler((E) => this.setOrReportBgColor(E))), this._parser.registerOscHandler(12, new j.OscHandler((E) => this.setOrReportCursorColor(E))), this._parser.registerOscHandler(104, new j.OscHandler((E) => this.restoreIndexedColor(E))), this._parser.registerOscHandler(110, new j.OscHandler((E) => this.restoreFgColor(E))), this._parser.registerOscHandler(111, new j.OscHandler((E) => this.restoreBgColor(E))), this._parser.registerOscHandler(112, new j.OscHandler((E) => this.restoreCursorColor(E))), this._parser.registerEscHandler({ final: "7" }, () => this.saveCursor()), this._parser.registerEscHandler({ final: "8" }, () => this.restoreCursor()), this._parser.registerEscHandler({ final: "D" }, () => this.index()), this._parser.registerEscHandler({ final: "E" }, () => this.nextLine()), this._parser.registerEscHandler({ final: "H" }, () => this.tabSet()), this._parser.registerEscHandler({ final: "M" }, () => this.reverseIndex()), this._parser.registerEscHandler({ final: "=" }, () => this.keypadApplicationMode()), this._parser.registerEscHandler({ final: ">" }, () => this.keypadNumericMode()), this._parser.registerEscHandler({ final: "c" }, () => this.fullReset()), this._parser.registerEscHandler({ final: "n" }, () => this.setgLevel(2)), this._parser.registerEscHandler({ final: "o" }, () => this.setgLevel(3)), this._parser.registerEscHandler({ final: "|" }, () => this.setgLevel(3)), this._parser.registerEscHandler({ final: "}" }, () => this.setgLevel(2)), this._parser.registerEscHandler({ final: "~" }, () => this.setgLevel(1)), this._parser.registerEscHandler({ intermediates: "%", final: "@" }, () => this.selectDefaultCharset()), this._parser.registerEscHandler({ intermediates: "%", final: "G" }, () => this.selectDefaultCharset());
          for (const E in p.CHARSETS)
            this._parser.registerEscHandler({ intermediates: "(", final: E }, () => this.selectCharset("(" + E)), this._parser.registerEscHandler({ intermediates: ")", final: E }, () => this.selectCharset(")" + E)), this._parser.registerEscHandler({ intermediates: "*", final: E }, () => this.selectCharset("*" + E)), this._parser.registerEscHandler({ intermediates: "+", final: E }, () => this.selectCharset("+" + E)), this._parser.registerEscHandler({ intermediates: "-", final: E }, () => this.selectCharset("-" + E)), this._parser.registerEscHandler({ intermediates: ".", final: E }, () => this.selectCharset("." + E)), this._parser.registerEscHandler({ intermediates: "/", final: E }, () => this.selectCharset("/" + E));
          this._parser.registerEscHandler({ intermediates: "#", final: "8" }, () => this.screenAlignmentPattern()), this._parser.setErrorHandler((E) => (this._logService.error("Parsing error: ", E), E)), this._parser.registerDcsHandler({ intermediates: "$", final: "q" }, new A.DcsHandler((E, W) => this.requestStatusString(E, W)));
        }
        _preserveStack(x, O, T, R) {
          this._parseStack.paused = !0, this._parseStack.cursorStartX = x, this._parseStack.cursorStartY = O, this._parseStack.decodedLength = T, this._parseStack.position = R;
        }
        _logSlowResolvingAsync(x) {
          this._logService.logLevel <= y.LogLevelEnum.WARN && Promise.race([x, new Promise((O, T) => setTimeout(() => T("#SLOW_TIMEOUT"), 5e3))]).catch((O) => {
            if (O !== "#SLOW_TIMEOUT")
              throw O;
            console.warn("async parser handler taking longer than 5000 ms");
          });
        }
        _getCurrentLinkId() {
          return this._curAttrData.extended.urlId;
        }
        parse(x, O) {
          let T, R = this._activeBuffer.x, G = this._activeBuffer.y, V = 0;
          const ee = this._parseStack.paused;
          if (ee) {
            if (T = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, O))
              return this._logSlowResolvingAsync(T), T;
            R = this._parseStack.cursorStartX, G = this._parseStack.cursorStartY, this._parseStack.paused = !1, x.length > z && (V = this._parseStack.position + z);
          }
          if (this._logService.logLevel <= y.LogLevelEnum.DEBUG && this._logService.debug("parsing data" + (typeof x == "string" ? ` "${x}"` : ` "${Array.prototype.map.call(x, (Y) => String.fromCharCode(Y)).join("")}"`), typeof x == "string" ? x.split("").map((Y) => Y.charCodeAt(0)) : x), this._parseBuffer.length < x.length && this._parseBuffer.length < z && (this._parseBuffer = new Uint32Array(Math.min(x.length, z))), ee || this._dirtyRowTracker.clearRange(), x.length > z)
            for (let Y = V; Y < x.length; Y += z) {
              const J = Y + z < x.length ? Y + z : x.length, E = typeof x == "string" ? this._stringDecoder.decode(x.substring(Y, J), this._parseBuffer) : this._utf8Decoder.decode(x.subarray(Y, J), this._parseBuffer);
              if (T = this._parser.parse(this._parseBuffer, E))
                return this._preserveStack(R, G, E, Y), this._logSlowResolvingAsync(T), T;
            }
          else if (!ee) {
            const Y = typeof x == "string" ? this._stringDecoder.decode(x, this._parseBuffer) : this._utf8Decoder.decode(x, this._parseBuffer);
            if (T = this._parser.parse(this._parseBuffer, Y))
              return this._preserveStack(R, G, Y, 0), this._logSlowResolvingAsync(T), T;
          }
          this._activeBuffer.x === R && this._activeBuffer.y === G || this._onCursorMove.fire(), this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);
        }
        print(x, O, T) {
          let R, G;
          const V = this._charsetService.charset, ee = this._optionsService.rawOptions.screenReaderMode, Y = this._bufferService.cols, J = this._coreService.decPrivateModes.wraparound, E = this._coreService.modes.insertMode, W = this._curAttrData;
          let K = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
          this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._activeBuffer.x && T - O > 0 && K.getWidth(this._activeBuffer.x - 1) === 2 && K.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, W.fg, W.bg, W.extended);
          for (let X = O; X < T; ++X) {
            if (R = x[X], G = this._unicodeService.wcwidth(R), R < 127 && V) {
              const le = V[String.fromCharCode(R)];
              le && (R = le.charCodeAt(0));
            }
            if (ee && this._onA11yChar.fire((0, g.stringFromCodePoint)(R)), this._getCurrentLinkId() && this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y), G || !this._activeBuffer.x) {
              if (this._activeBuffer.x + G - 1 >= Y) {
                if (J) {
                  for (; this._activeBuffer.x < Y; )
                    K.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, W.fg, W.bg, W.extended);
                  this._activeBuffer.x = 0, this._activeBuffer.y++, this._activeBuffer.y === this._activeBuffer.scrollBottom + 1 ? (this._activeBuffer.y--, this._bufferService.scroll(this._eraseAttrData(), !0)) : (this._activeBuffer.y >= this._bufferService.rows && (this._activeBuffer.y = this._bufferService.rows - 1), this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).isWrapped = !0), K = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                } else if (this._activeBuffer.x = Y - 1, G === 2)
                  continue;
              }
              if (E && (K.insertCells(this._activeBuffer.x, G, this._activeBuffer.getNullCell(W), W), K.getWidth(Y - 1) === 2 && K.setCellFromCodePoint(Y - 1, _.NULL_CELL_CODE, _.NULL_CELL_WIDTH, W.fg, W.bg, W.extended)), K.setCellFromCodePoint(this._activeBuffer.x++, R, G, W.fg, W.bg, W.extended), G > 0)
                for (; --G; )
                  K.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, W.fg, W.bg, W.extended);
            } else
              K.getWidth(this._activeBuffer.x - 1) ? K.addCodepointToCell(this._activeBuffer.x - 1, R) : K.addCodepointToCell(this._activeBuffer.x - 2, R);
          }
          T - O > 0 && (K.loadCell(this._activeBuffer.x - 1, this._workCell), this._workCell.getWidth() === 2 || this._workCell.getCode() > 65535 ? this._parser.precedingCodepoint = 0 : this._workCell.isCombined() ? this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0) : this._parser.precedingCodepoint = this._workCell.content), this._activeBuffer.x < Y && T - O > 0 && K.getWidth(this._activeBuffer.x) === 0 && !K.hasContent(this._activeBuffer.x) && K.setCellFromCodePoint(this._activeBuffer.x, 0, 1, W.fg, W.bg, W.extended), this._dirtyRowTracker.markDirty(this._activeBuffer.y);
        }
        registerCsiHandler(x, O) {
          return x.final !== "t" || x.prefix || x.intermediates ? this._parser.registerCsiHandler(x, O) : this._parser.registerCsiHandler(x, (T) => !P(T.params[0], this._optionsService.rawOptions.windowOptions) || O(T));
        }
        registerDcsHandler(x, O) {
          return this._parser.registerDcsHandler(x, new A.DcsHandler(O));
        }
        registerEscHandler(x, O) {
          return this._parser.registerEscHandler(x, O);
        }
        registerOscHandler(x, O) {
          return this._parser.registerOscHandler(x, new j.OscHandler(O));
        }
        bell() {
          return this._onRequestBell.fire(), !0;
        }
        lineFeed() {
          return this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._optionsService.rawOptions.convertEol && (this._activeBuffer.x = 0), this._activeBuffer.y++, this._activeBuffer.y === this._activeBuffer.scrollBottom + 1 ? (this._activeBuffer.y--, this._bufferService.scroll(this._eraseAttrData())) : this._activeBuffer.y >= this._bufferService.rows ? this._activeBuffer.y = this._bufferService.rows - 1 : this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).isWrapped = !1, this._activeBuffer.x >= this._bufferService.cols && this._activeBuffer.x--, this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._onLineFeed.fire(), !0;
        }
        carriageReturn() {
          return this._activeBuffer.x = 0, !0;
        }
        backspace() {
          var x;
          if (!this._coreService.decPrivateModes.reverseWraparound)
            return this._restrictCursor(), this._activeBuffer.x > 0 && this._activeBuffer.x--, !0;
          if (this._restrictCursor(this._bufferService.cols), this._activeBuffer.x > 0)
            this._activeBuffer.x--;
          else if (this._activeBuffer.x === 0 && this._activeBuffer.y > this._activeBuffer.scrollTop && this._activeBuffer.y <= this._activeBuffer.scrollBottom && (!((x = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)) === null || x === void 0) && x.isWrapped)) {
            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).isWrapped = !1, this._activeBuffer.y--, this._activeBuffer.x = this._bufferService.cols - 1;
            const O = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
            O.hasWidth(this._activeBuffer.x) && !O.hasContent(this._activeBuffer.x) && this._activeBuffer.x--;
          }
          return this._restrictCursor(), !0;
        }
        tab() {
          if (this._activeBuffer.x >= this._bufferService.cols)
            return !0;
          const x = this._activeBuffer.x;
          return this._activeBuffer.x = this._activeBuffer.nextStop(), this._optionsService.rawOptions.screenReaderMode && this._onA11yTab.fire(this._activeBuffer.x - x), !0;
        }
        shiftOut() {
          return this._charsetService.setgLevel(1), !0;
        }
        shiftIn() {
          return this._charsetService.setgLevel(0), !0;
        }
        _restrictCursor(x = this._bufferService.cols - 1) {
          this._activeBuffer.x = Math.min(x, Math.max(0, this._activeBuffer.x)), this._activeBuffer.y = this._coreService.decPrivateModes.origin ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y)) : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y)), this._dirtyRowTracker.markDirty(this._activeBuffer.y);
        }
        _setCursor(x, O) {
          this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._coreService.decPrivateModes.origin ? (this._activeBuffer.x = x, this._activeBuffer.y = this._activeBuffer.scrollTop + O) : (this._activeBuffer.x = x, this._activeBuffer.y = O), this._restrictCursor(), this._dirtyRowTracker.markDirty(this._activeBuffer.y);
        }
        _moveCursor(x, O) {
          this._restrictCursor(), this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + O);
        }
        cursorUp(x) {
          const O = this._activeBuffer.y - this._activeBuffer.scrollTop;
          return O >= 0 ? this._moveCursor(0, -Math.min(O, x.params[0] || 1)) : this._moveCursor(0, -(x.params[0] || 1)), !0;
        }
        cursorDown(x) {
          const O = this._activeBuffer.scrollBottom - this._activeBuffer.y;
          return O >= 0 ? this._moveCursor(0, Math.min(O, x.params[0] || 1)) : this._moveCursor(0, x.params[0] || 1), !0;
        }
        cursorForward(x) {
          return this._moveCursor(x.params[0] || 1, 0), !0;
        }
        cursorBackward(x) {
          return this._moveCursor(-(x.params[0] || 1), 0), !0;
        }
        cursorNextLine(x) {
          return this.cursorDown(x), this._activeBuffer.x = 0, !0;
        }
        cursorPrecedingLine(x) {
          return this.cursorUp(x), this._activeBuffer.x = 0, !0;
        }
        cursorCharAbsolute(x) {
          return this._setCursor((x.params[0] || 1) - 1, this._activeBuffer.y), !0;
        }
        cursorPosition(x) {
          return this._setCursor(x.length >= 2 ? (x.params[1] || 1) - 1 : 0, (x.params[0] || 1) - 1), !0;
        }
        charPosAbsolute(x) {
          return this._setCursor((x.params[0] || 1) - 1, this._activeBuffer.y), !0;
        }
        hPositionRelative(x) {
          return this._moveCursor(x.params[0] || 1, 0), !0;
        }
        linePosAbsolute(x) {
          return this._setCursor(this._activeBuffer.x, (x.params[0] || 1) - 1), !0;
        }
        vPositionRelative(x) {
          return this._moveCursor(0, x.params[0] || 1), !0;
        }
        hVPosition(x) {
          return this.cursorPosition(x), !0;
        }
        tabClear(x) {
          const O = x.params[0];
          return O === 0 ? delete this._activeBuffer.tabs[this._activeBuffer.x] : O === 3 && (this._activeBuffer.tabs = {}), !0;
        }
        cursorForwardTab(x) {
          if (this._activeBuffer.x >= this._bufferService.cols)
            return !0;
          let O = x.params[0] || 1;
          for (; O--; )
            this._activeBuffer.x = this._activeBuffer.nextStop();
          return !0;
        }
        cursorBackwardTab(x) {
          if (this._activeBuffer.x >= this._bufferService.cols)
            return !0;
          let O = x.params[0] || 1;
          for (; O--; )
            this._activeBuffer.x = this._activeBuffer.prevStop();
          return !0;
        }
        selectProtected(x) {
          const O = x.params[0];
          return O === 1 && (this._curAttrData.bg |= 536870912), O !== 2 && O !== 0 || (this._curAttrData.bg &= -536870913), !0;
        }
        _eraseInBufferLine(x, O, T, R = !1, G = !1) {
          const V = this._activeBuffer.lines.get(this._activeBuffer.ybase + x);
          V.replaceCells(O, T, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData(), G), R && (V.isWrapped = !1);
        }
        _resetBufferLine(x, O = !1) {
          const T = this._activeBuffer.lines.get(this._activeBuffer.ybase + x);
          T && (T.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), O), this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + x), T.isWrapped = !1);
        }
        eraseInDisplay(x, O = !1) {
          let T;
          switch (this._restrictCursor(this._bufferService.cols), x.params[0]) {
            case 0:
              for (T = this._activeBuffer.y, this._dirtyRowTracker.markDirty(T), this._eraseInBufferLine(T++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, O); T < this._bufferService.rows; T++)
                this._resetBufferLine(T, O);
              this._dirtyRowTracker.markDirty(T);
              break;
            case 1:
              for (T = this._activeBuffer.y, this._dirtyRowTracker.markDirty(T), this._eraseInBufferLine(T, 0, this._activeBuffer.x + 1, !0, O), this._activeBuffer.x + 1 >= this._bufferService.cols && (this._activeBuffer.lines.get(T + 1).isWrapped = !1); T--; )
                this._resetBufferLine(T, O);
              this._dirtyRowTracker.markDirty(0);
              break;
            case 2:
              for (T = this._bufferService.rows, this._dirtyRowTracker.markDirty(T - 1); T--; )
                this._resetBufferLine(T, O);
              this._dirtyRowTracker.markDirty(0);
              break;
            case 3:
              const R = this._activeBuffer.lines.length - this._bufferService.rows;
              R > 0 && (this._activeBuffer.lines.trimStart(R), this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - R, 0), this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - R, 0), this._onScroll.fire(0));
          }
          return !0;
        }
        eraseInLine(x, O = !1) {
          switch (this._restrictCursor(this._bufferService.cols), x.params[0]) {
            case 0:
              this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, O);
              break;
            case 1:
              this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, !1, O);
              break;
            case 2:
              this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, !0, O);
          }
          return this._dirtyRowTracker.markDirty(this._activeBuffer.y), !0;
        }
        insertLines(x) {
          this._restrictCursor();
          let O = x.params[0] || 1;
          if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop)
            return !0;
          const T = this._activeBuffer.ybase + this._activeBuffer.y, R = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom, G = this._bufferService.rows - 1 + this._activeBuffer.ybase - R + 1;
          for (; O--; )
            this._activeBuffer.lines.splice(G - 1, 1), this._activeBuffer.lines.splice(T, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));
          return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom), this._activeBuffer.x = 0, !0;
        }
        deleteLines(x) {
          this._restrictCursor();
          let O = x.params[0] || 1;
          if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop)
            return !0;
          const T = this._activeBuffer.ybase + this._activeBuffer.y;
          let R;
          for (R = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom, R = this._bufferService.rows - 1 + this._activeBuffer.ybase - R; O--; )
            this._activeBuffer.lines.splice(T, 1), this._activeBuffer.lines.splice(R, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));
          return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom), this._activeBuffer.x = 0, !0;
        }
        insertChars(x) {
          this._restrictCursor();
          const O = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
          return O && (O.insertCells(this._activeBuffer.x, x.params[0] || 1, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData()), this._dirtyRowTracker.markDirty(this._activeBuffer.y)), !0;
        }
        deleteChars(x) {
          this._restrictCursor();
          const O = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
          return O && (O.deleteCells(this._activeBuffer.x, x.params[0] || 1, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData()), this._dirtyRowTracker.markDirty(this._activeBuffer.y)), !0;
        }
        scrollUp(x) {
          let O = x.params[0] || 1;
          for (; O--; )
            this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1), this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));
          return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0;
        }
        scrollDown(x) {
          let O = x.params[0] || 1;
          for (; O--; )
            this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1), this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(m.DEFAULT_ATTR_DATA));
          return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0;
        }
        scrollLeft(x) {
          if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop)
            return !0;
          const O = x.params[0] || 1;
          for (let T = this._activeBuffer.scrollTop; T <= this._activeBuffer.scrollBottom; ++T) {
            const R = this._activeBuffer.lines.get(this._activeBuffer.ybase + T);
            R.deleteCells(0, O, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData()), R.isWrapped = !1;
          }
          return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0;
        }
        scrollRight(x) {
          if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop)
            return !0;
          const O = x.params[0] || 1;
          for (let T = this._activeBuffer.scrollTop; T <= this._activeBuffer.scrollBottom; ++T) {
            const R = this._activeBuffer.lines.get(this._activeBuffer.ybase + T);
            R.insertCells(0, O, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData()), R.isWrapped = !1;
          }
          return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0;
        }
        insertColumns(x) {
          if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop)
            return !0;
          const O = x.params[0] || 1;
          for (let T = this._activeBuffer.scrollTop; T <= this._activeBuffer.scrollBottom; ++T) {
            const R = this._activeBuffer.lines.get(this._activeBuffer.ybase + T);
            R.insertCells(this._activeBuffer.x, O, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData()), R.isWrapped = !1;
          }
          return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0;
        }
        deleteColumns(x) {
          if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop)
            return !0;
          const O = x.params[0] || 1;
          for (let T = this._activeBuffer.scrollTop; T <= this._activeBuffer.scrollBottom; ++T) {
            const R = this._activeBuffer.lines.get(this._activeBuffer.ybase + T);
            R.deleteCells(this._activeBuffer.x, O, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData()), R.isWrapped = !1;
          }
          return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0;
        }
        eraseChars(x) {
          this._restrictCursor();
          const O = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
          return O && (O.replaceCells(this._activeBuffer.x, this._activeBuffer.x + (x.params[0] || 1), this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData()), this._dirtyRowTracker.markDirty(this._activeBuffer.y)), !0;
        }
        repeatPrecedingCharacter(x) {
          if (!this._parser.precedingCodepoint)
            return !0;
          const O = x.params[0] || 1, T = new Uint32Array(O);
          for (let R = 0; R < O; ++R)
            T[R] = this._parser.precedingCodepoint;
          return this.print(T, 0, T.length), !0;
        }
        sendDeviceAttributesPrimary(x) {
          return x.params[0] > 0 || (this._is("xterm") || this._is("rxvt-unicode") || this._is("screen") ? this._coreService.triggerDataEvent(u.C0.ESC + "[?1;2c") : this._is("linux") && this._coreService.triggerDataEvent(u.C0.ESC + "[?6c")), !0;
        }
        sendDeviceAttributesSecondary(x) {
          return x.params[0] > 0 || (this._is("xterm") ? this._coreService.triggerDataEvent(u.C0.ESC + "[>0;276;0c") : this._is("rxvt-unicode") ? this._coreService.triggerDataEvent(u.C0.ESC + "[>85;95;0c") : this._is("linux") ? this._coreService.triggerDataEvent(x.params[0] + "c") : this._is("screen") && this._coreService.triggerDataEvent(u.C0.ESC + "[>83;40003;0c")), !0;
        }
        _is(x) {
          return (this._optionsService.rawOptions.termName + "").indexOf(x) === 0;
        }
        setMode(x) {
          for (let O = 0; O < x.length; O++)
            switch (x.params[O]) {
              case 4:
                this._coreService.modes.insertMode = !0;
                break;
              case 20:
                this._optionsService.options.convertEol = !0;
            }
          return !0;
        }
        setModePrivate(x) {
          for (let O = 0; O < x.length; O++)
            switch (x.params[O]) {
              case 1:
                this._coreService.decPrivateModes.applicationCursorKeys = !0;
                break;
              case 2:
                this._charsetService.setgCharset(0, p.DEFAULT_CHARSET), this._charsetService.setgCharset(1, p.DEFAULT_CHARSET), this._charsetService.setgCharset(2, p.DEFAULT_CHARSET), this._charsetService.setgCharset(3, p.DEFAULT_CHARSET);
                break;
              case 3:
                this._optionsService.rawOptions.windowOptions.setWinLines && (this._bufferService.resize(132, this._bufferService.rows), this._onRequestReset.fire());
                break;
              case 6:
                this._coreService.decPrivateModes.origin = !0, this._setCursor(0, 0);
                break;
              case 7:
                this._coreService.decPrivateModes.wraparound = !0;
                break;
              case 12:
                this._optionsService.options.cursorBlink = !0;
                break;
              case 45:
                this._coreService.decPrivateModes.reverseWraparound = !0;
                break;
              case 66:
                this._logService.debug("Serial port requested application keypad."), this._coreService.decPrivateModes.applicationKeypad = !0, this._onRequestSyncScrollBar.fire();
                break;
              case 9:
                this._coreMouseService.activeProtocol = "X10";
                break;
              case 1e3:
                this._coreMouseService.activeProtocol = "VT200";
                break;
              case 1002:
                this._coreMouseService.activeProtocol = "DRAG";
                break;
              case 1003:
                this._coreMouseService.activeProtocol = "ANY";
                break;
              case 1004:
                this._coreService.decPrivateModes.sendFocus = !0, this._onRequestSendFocus.fire();
                break;
              case 1005:
                this._logService.debug("DECSET 1005 not supported (see #2507)");
                break;
              case 1006:
                this._coreMouseService.activeEncoding = "SGR";
                break;
              case 1015:
                this._logService.debug("DECSET 1015 not supported (see #2507)");
                break;
              case 1016:
                this._coreMouseService.activeEncoding = "SGR_PIXELS";
                break;
              case 25:
                this._coreService.isCursorHidden = !1;
                break;
              case 1048:
                this.saveCursor();
                break;
              case 1049:
                this.saveCursor();
              case 47:
              case 1047:
                this._bufferService.buffers.activateAltBuffer(this._eraseAttrData()), this._coreService.isCursorInitialized = !0, this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1), this._onRequestSyncScrollBar.fire();
                break;
              case 2004:
                this._coreService.decPrivateModes.bracketedPasteMode = !0;
            }
          return !0;
        }
        resetMode(x) {
          for (let O = 0; O < x.length; O++)
            switch (x.params[O]) {
              case 4:
                this._coreService.modes.insertMode = !1;
                break;
              case 20:
                this._optionsService.options.convertEol = !1;
            }
          return !0;
        }
        resetModePrivate(x) {
          for (let O = 0; O < x.length; O++)
            switch (x.params[O]) {
              case 1:
                this._coreService.decPrivateModes.applicationCursorKeys = !1;
                break;
              case 3:
                this._optionsService.rawOptions.windowOptions.setWinLines && (this._bufferService.resize(80, this._bufferService.rows), this._onRequestReset.fire());
                break;
              case 6:
                this._coreService.decPrivateModes.origin = !1, this._setCursor(0, 0);
                break;
              case 7:
                this._coreService.decPrivateModes.wraparound = !1;
                break;
              case 12:
                this._optionsService.options.cursorBlink = !1;
                break;
              case 45:
                this._coreService.decPrivateModes.reverseWraparound = !1;
                break;
              case 66:
                this._logService.debug("Switching back to normal keypad."), this._coreService.decPrivateModes.applicationKeypad = !1, this._onRequestSyncScrollBar.fire();
                break;
              case 9:
              case 1e3:
              case 1002:
              case 1003:
                this._coreMouseService.activeProtocol = "NONE";
                break;
              case 1004:
                this._coreService.decPrivateModes.sendFocus = !1;
                break;
              case 1005:
                this._logService.debug("DECRST 1005 not supported (see #2507)");
                break;
              case 1006:
              case 1016:
                this._coreMouseService.activeEncoding = "DEFAULT";
                break;
              case 1015:
                this._logService.debug("DECRST 1015 not supported (see #2507)");
                break;
              case 25:
                this._coreService.isCursorHidden = !0;
                break;
              case 1048:
                this.restoreCursor();
                break;
              case 1049:
              case 47:
              case 1047:
                this._bufferService.buffers.activateNormalBuffer(), x.params[O] === 1049 && this.restoreCursor(), this._coreService.isCursorInitialized = !0, this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1), this._onRequestSyncScrollBar.fire();
                break;
              case 2004:
                this._coreService.decPrivateModes.bracketedPasteMode = !1;
            }
          return !0;
        }
        requestMode(x, O) {
          const T = this._coreService.decPrivateModes, { activeProtocol: R, activeEncoding: G } = this._coreMouseService, V = this._coreService, { buffers: ee, cols: Y } = this._bufferService, { active: J, alt: E } = ee, W = this._optionsService.rawOptions, K = (ue) => ue ? 1 : 2, X = x.params[0];
          return le = X, te = O ? X === 2 ? 4 : X === 4 ? K(V.modes.insertMode) : X === 12 ? 3 : X === 20 ? K(W.convertEol) : 0 : X === 1 ? K(T.applicationCursorKeys) : X === 3 ? W.windowOptions.setWinLines ? Y === 80 ? 2 : Y === 132 ? 1 : 0 : 0 : X === 6 ? K(T.origin) : X === 7 ? K(T.wraparound) : X === 8 ? 3 : X === 9 ? K(R === "X10") : X === 12 ? K(W.cursorBlink) : X === 25 ? K(!V.isCursorHidden) : X === 45 ? K(T.reverseWraparound) : X === 66 ? K(T.applicationKeypad) : X === 67 ? 4 : X === 1e3 ? K(R === "VT200") : X === 1002 ? K(R === "DRAG") : X === 1003 ? K(R === "ANY") : X === 1004 ? K(T.sendFocus) : X === 1005 ? 4 : X === 1006 ? K(G === "SGR") : X === 1015 ? 4 : X === 1016 ? K(G === "SGR_PIXELS") : X === 1048 ? 1 : X === 47 || X === 1047 || X === 1049 ? K(J === E) : X === 2004 ? K(T.bracketedPasteMode) : 0, V.triggerDataEvent(`${u.C0.ESC}[${O ? "" : "?"}${le};${te}$y`), !0;
          var le, te;
        }
        _updateAttrColor(x, O, T, R, G) {
          return O === 2 ? (x |= 50331648, x &= -16777216, x |= v.AttributeData.fromColorRGB([T, R, G])) : O === 5 && (x &= -50331904, x |= 33554432 | 255 & T), x;
        }
        _extractColor(x, O, T) {
          const R = [0, 0, -1, 0, 0, 0];
          let G = 0, V = 0;
          do {
            if (R[V + G] = x.params[O + V], x.hasSubParams(O + V)) {
              const ee = x.getSubParams(O + V);
              let Y = 0;
              do
                R[1] === 5 && (G = 1), R[V + Y + 1 + G] = ee[Y];
              while (++Y < ee.length && Y + V + 1 + G < R.length);
              break;
            }
            if (R[1] === 5 && V + G >= 2 || R[1] === 2 && V + G >= 5)
              break;
            R[1] && (G = 1);
          } while (++V + O < x.length && V + G < R.length);
          for (let ee = 2; ee < R.length; ++ee)
            R[ee] === -1 && (R[ee] = 0);
          switch (R[0]) {
            case 38:
              T.fg = this._updateAttrColor(T.fg, R[1], R[3], R[4], R[5]);
              break;
            case 48:
              T.bg = this._updateAttrColor(T.bg, R[1], R[3], R[4], R[5]);
              break;
            case 58:
              T.extended = T.extended.clone(), T.extended.underlineColor = this._updateAttrColor(T.extended.underlineColor, R[1], R[3], R[4], R[5]);
          }
          return V;
        }
        _processUnderline(x, O) {
          O.extended = O.extended.clone(), (!~x || x > 5) && (x = 1), O.extended.underlineStyle = x, O.fg |= 268435456, x === 0 && (O.fg &= -268435457), O.updateExtended();
        }
        _processSGR0(x) {
          x.fg = m.DEFAULT_ATTR_DATA.fg, x.bg = m.DEFAULT_ATTR_DATA.bg, x.extended = x.extended.clone(), x.extended.underlineStyle = 0, x.extended.underlineColor &= -67108864, x.updateExtended();
        }
        charAttributes(x) {
          if (x.length === 1 && x.params[0] === 0)
            return this._processSGR0(this._curAttrData), !0;
          const O = x.length;
          let T;
          const R = this._curAttrData;
          for (let G = 0; G < O; G++)
            T = x.params[G], T >= 30 && T <= 37 ? (R.fg &= -50331904, R.fg |= 16777216 | T - 30) : T >= 40 && T <= 47 ? (R.bg &= -50331904, R.bg |= 16777216 | T - 40) : T >= 90 && T <= 97 ? (R.fg &= -50331904, R.fg |= 16777224 | T - 90) : T >= 100 && T <= 107 ? (R.bg &= -50331904, R.bg |= 16777224 | T - 100) : T === 0 ? this._processSGR0(R) : T === 1 ? R.fg |= 134217728 : T === 3 ? R.bg |= 67108864 : T === 4 ? (R.fg |= 268435456, this._processUnderline(x.hasSubParams(G) ? x.getSubParams(G)[0] : 1, R)) : T === 5 ? R.fg |= 536870912 : T === 7 ? R.fg |= 67108864 : T === 8 ? R.fg |= 1073741824 : T === 9 ? R.fg |= 2147483648 : T === 2 ? R.bg |= 134217728 : T === 21 ? this._processUnderline(2, R) : T === 22 ? (R.fg &= -134217729, R.bg &= -134217729) : T === 23 ? R.bg &= -67108865 : T === 24 ? (R.fg &= -268435457, this._processUnderline(0, R)) : T === 25 ? R.fg &= -536870913 : T === 27 ? R.fg &= -67108865 : T === 28 ? R.fg &= -1073741825 : T === 29 ? R.fg &= 2147483647 : T === 39 ? (R.fg &= -67108864, R.fg |= 16777215 & m.DEFAULT_ATTR_DATA.fg) : T === 49 ? (R.bg &= -67108864, R.bg |= 16777215 & m.DEFAULT_ATTR_DATA.bg) : T === 38 || T === 48 || T === 58 ? G += this._extractColor(x, G, R) : T === 53 ? R.bg |= 1073741824 : T === 55 ? R.bg &= -1073741825 : T === 59 ? (R.extended = R.extended.clone(), R.extended.underlineColor = -1, R.updateExtended()) : T === 100 ? (R.fg &= -67108864, R.fg |= 16777215 & m.DEFAULT_ATTR_DATA.fg, R.bg &= -67108864, R.bg |= 16777215 & m.DEFAULT_ATTR_DATA.bg) : this._logService.debug("Unknown SGR attribute: %d.", T);
          return !0;
        }
        deviceStatus(x) {
          switch (x.params[0]) {
            case 5:
              this._coreService.triggerDataEvent(`${u.C0.ESC}[0n`);
              break;
            case 6:
              const O = this._activeBuffer.y + 1, T = this._activeBuffer.x + 1;
              this._coreService.triggerDataEvent(`${u.C0.ESC}[${O};${T}R`);
          }
          return !0;
        }
        deviceStatusPrivate(x) {
          if (x.params[0] === 6) {
            const O = this._activeBuffer.y + 1, T = this._activeBuffer.x + 1;
            this._coreService.triggerDataEvent(`${u.C0.ESC}[?${O};${T}R`);
          }
          return !0;
        }
        softReset(x) {
          return this._coreService.isCursorHidden = !1, this._onRequestSyncScrollBar.fire(), this._activeBuffer.scrollTop = 0, this._activeBuffer.scrollBottom = this._bufferService.rows - 1, this._curAttrData = m.DEFAULT_ATTR_DATA.clone(), this._coreService.reset(), this._charsetService.reset(), this._activeBuffer.savedX = 0, this._activeBuffer.savedY = this._activeBuffer.ybase, this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg, this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg, this._activeBuffer.savedCharset = this._charsetService.charset, this._coreService.decPrivateModes.origin = !1, !0;
        }
        setCursorStyle(x) {
          const O = x.params[0] || 1;
          switch (O) {
            case 1:
            case 2:
              this._optionsService.options.cursorStyle = "block";
              break;
            case 3:
            case 4:
              this._optionsService.options.cursorStyle = "underline";
              break;
            case 5:
            case 6:
              this._optionsService.options.cursorStyle = "bar";
          }
          const T = O % 2 == 1;
          return this._optionsService.options.cursorBlink = T, !0;
        }
        setScrollRegion(x) {
          const O = x.params[0] || 1;
          let T;
          return (x.length < 2 || (T = x.params[1]) > this._bufferService.rows || T === 0) && (T = this._bufferService.rows), T > O && (this._activeBuffer.scrollTop = O - 1, this._activeBuffer.scrollBottom = T - 1, this._setCursor(0, 0)), !0;
        }
        windowOptions(x) {
          if (!P(x.params[0], this._optionsService.rawOptions.windowOptions))
            return !0;
          const O = x.length > 1 ? x.params[1] : 0;
          switch (x.params[0]) {
            case 14:
              O !== 2 && this._onRequestWindowsOptionsReport.fire(L.GET_WIN_SIZE_PIXELS);
              break;
            case 16:
              this._onRequestWindowsOptionsReport.fire(L.GET_CELL_SIZE_PIXELS);
              break;
            case 18:
              this._bufferService && this._coreService.triggerDataEvent(`${u.C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);
              break;
            case 22:
              O !== 0 && O !== 2 || (this._windowTitleStack.push(this._windowTitle), this._windowTitleStack.length > 10 && this._windowTitleStack.shift()), O !== 0 && O !== 1 || (this._iconNameStack.push(this._iconName), this._iconNameStack.length > 10 && this._iconNameStack.shift());
              break;
            case 23:
              O !== 0 && O !== 2 || this._windowTitleStack.length && this.setTitle(this._windowTitleStack.pop()), O !== 0 && O !== 1 || this._iconNameStack.length && this.setIconName(this._iconNameStack.pop());
          }
          return !0;
        }
        saveCursor(x) {
          return this._activeBuffer.savedX = this._activeBuffer.x, this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg, this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg, this._activeBuffer.savedCharset = this._charsetService.charset, !0;
        }
        restoreCursor(x) {
          return this._activeBuffer.x = this._activeBuffer.savedX || 0, this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0), this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg, this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg, this._charsetService.charset = this._savedCharset, this._activeBuffer.savedCharset && (this._charsetService.charset = this._activeBuffer.savedCharset), this._restrictCursor(), !0;
        }
        setTitle(x) {
          return this._windowTitle = x, this._onTitleChange.fire(x), !0;
        }
        setIconName(x) {
          return this._iconName = x, !0;
        }
        setOrReportIndexedColor(x) {
          const O = [], T = x.split(";");
          for (; T.length > 1; ) {
            const R = T.shift(), G = T.shift();
            if (/^\d+$/.exec(R)) {
              const V = parseInt(R);
              if (U(V))
                if (G === "?")
                  O.push({ type: 0, index: V });
                else {
                  const ee = (0, C.parseColor)(G);
                  ee && O.push({ type: 1, index: V, color: ee });
                }
            }
          }
          return O.length && this._onColor.fire(O), !0;
        }
        setHyperlink(x) {
          const O = x.split(";");
          return !(O.length < 2) && (O[1] ? this._createHyperlink(O[0], O[1]) : !O[0] && this._finishHyperlink());
        }
        _createHyperlink(x, O) {
          this._getCurrentLinkId() && this._finishHyperlink();
          const T = x.split(":");
          let R;
          const G = T.findIndex((V) => V.startsWith("id="));
          return G !== -1 && (R = T[G].slice(3) || void 0), this._curAttrData.extended = this._curAttrData.extended.clone(), this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id: R, uri: O }), this._curAttrData.updateExtended(), !0;
        }
        _finishHyperlink() {
          return this._curAttrData.extended = this._curAttrData.extended.clone(), this._curAttrData.extended.urlId = 0, this._curAttrData.updateExtended(), !0;
        }
        _setOrReportSpecialColor(x, O) {
          const T = x.split(";");
          for (let R = 0; R < T.length && !(O >= this._specialColors.length); ++R, ++O)
            if (T[R] === "?")
              this._onColor.fire([{ type: 0, index: this._specialColors[O] }]);
            else {
              const G = (0, C.parseColor)(T[R]);
              G && this._onColor.fire([{ type: 1, index: this._specialColors[O], color: G }]);
            }
          return !0;
        }
        setOrReportFgColor(x) {
          return this._setOrReportSpecialColor(x, 0);
        }
        setOrReportBgColor(x) {
          return this._setOrReportSpecialColor(x, 1);
        }
        setOrReportCursorColor(x) {
          return this._setOrReportSpecialColor(x, 2);
        }
        restoreIndexedColor(x) {
          if (!x)
            return this._onColor.fire([{ type: 2 }]), !0;
          const O = [], T = x.split(";");
          for (let R = 0; R < T.length; ++R)
            if (/^\d+$/.exec(T[R])) {
              const G = parseInt(T[R]);
              U(G) && O.push({ type: 2, index: G });
            }
          return O.length && this._onColor.fire(O), !0;
        }
        restoreFgColor(x) {
          return this._onColor.fire([{ type: 2, index: 256 }]), !0;
        }
        restoreBgColor(x) {
          return this._onColor.fire([{ type: 2, index: 257 }]), !0;
        }
        restoreCursorColor(x) {
          return this._onColor.fire([{ type: 2, index: 258 }]), !0;
        }
        nextLine() {
          return this._activeBuffer.x = 0, this.index(), !0;
        }
        keypadApplicationMode() {
          return this._logService.debug("Serial port requested application keypad."), this._coreService.decPrivateModes.applicationKeypad = !0, this._onRequestSyncScrollBar.fire(), !0;
        }
        keypadNumericMode() {
          return this._logService.debug("Switching back to normal keypad."), this._coreService.decPrivateModes.applicationKeypad = !1, this._onRequestSyncScrollBar.fire(), !0;
        }
        selectDefaultCharset() {
          return this._charsetService.setgLevel(0), this._charsetService.setgCharset(0, p.DEFAULT_CHARSET), !0;
        }
        selectCharset(x) {
          return x.length !== 2 ? (this.selectDefaultCharset(), !0) : (x[0] === "/" || this._charsetService.setgCharset(I[x[0]], p.CHARSETS[x[1]] || p.DEFAULT_CHARSET), !0);
        }
        index() {
          return this._restrictCursor(), this._activeBuffer.y++, this._activeBuffer.y === this._activeBuffer.scrollBottom + 1 ? (this._activeBuffer.y--, this._bufferService.scroll(this._eraseAttrData())) : this._activeBuffer.y >= this._bufferService.rows && (this._activeBuffer.y = this._bufferService.rows - 1), this._restrictCursor(), !0;
        }
        tabSet() {
          return this._activeBuffer.tabs[this._activeBuffer.x] = !0, !0;
        }
        reverseIndex() {
          if (this._restrictCursor(), this._activeBuffer.y === this._activeBuffer.scrollTop) {
            const x = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;
            this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, x, 1), this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData())), this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);
          } else
            this._activeBuffer.y--, this._restrictCursor();
          return !0;
        }
        fullReset() {
          return this._parser.reset(), this._onRequestReset.fire(), !0;
        }
        reset() {
          this._curAttrData = m.DEFAULT_ATTR_DATA.clone(), this._eraseAttrDataInternal = m.DEFAULT_ATTR_DATA.clone();
        }
        _eraseAttrData() {
          return this._eraseAttrDataInternal.bg &= -67108864, this._eraseAttrDataInternal.bg |= 67108863 & this._curAttrData.bg, this._eraseAttrDataInternal;
        }
        setgLevel(x) {
          return this._charsetService.setgLevel(x), !0;
        }
        screenAlignmentPattern() {
          const x = new f.CellData();
          x.content = 4194304 | "E".charCodeAt(0), x.fg = this._curAttrData.fg, x.bg = this._curAttrData.bg, this._setCursor(0, 0);
          for (let O = 0; O < this._bufferService.rows; ++O) {
            const T = this._activeBuffer.ybase + this._activeBuffer.y + O, R = this._activeBuffer.lines.get(T);
            R && (R.fill(x), R.isWrapped = !1);
          }
          return this._dirtyRowTracker.markAllDirty(), this._setCursor(0, 0), !0;
        }
        requestStatusString(x, O) {
          const T = this._bufferService.buffer, R = this._optionsService.rawOptions;
          return ((G) => (this._coreService.triggerDataEvent(`${u.C0.ESC}${G}${u.C0.ESC}\\`), !0))(x === '"q' ? `P1$r${this._curAttrData.isProtected() ? 1 : 0}"q` : x === '"p' ? 'P1$r61;1"p' : x === "r" ? `P1$r${T.scrollTop + 1};${T.scrollBottom + 1}r` : x === "m" ? "P1$r0m" : x === " q" ? `P1$r${{ block: 2, underline: 4, bar: 6 }[R.cursorStyle] - (R.cursorBlink ? 1 : 0)} q` : "P0$r");
        }
        markRangeDirty(x, O) {
          this._dirtyRowTracker.markRangeDirty(x, O);
        }
      }
      o.InputHandler = B;
      let F = class {
        constructor(H) {
          this._bufferService = H, this.clearRange();
        }
        clearRange() {
          this.start = this._bufferService.buffer.y, this.end = this._bufferService.buffer.y;
        }
        markDirty(H) {
          H < this.start ? this.start = H : H > this.end && (this.end = H);
        }
        markRangeDirty(H, x) {
          H > x && (N = H, H = x, x = N), H < this.start && (this.start = H), x > this.end && (this.end = x);
        }
        markAllDirty() {
          this.markRangeDirty(0, this._bufferService.rows - 1);
        }
      };
      function U(H) {
        return 0 <= H && H < 256;
      }
      F = d([h(0, y.IBufferService)], F);
    }, 844: (l, o) => {
      function s(d) {
        for (const h of d)
          h.dispose();
        d.length = 0;
      }
      Object.defineProperty(o, "__esModule", { value: !0 }), o.getDisposeArrayDisposable = o.disposeArray = o.toDisposable = o.MutableDisposable = o.Disposable = void 0, o.Disposable = class {
        constructor() {
          this._disposables = [], this._isDisposed = !1;
        }
        dispose() {
          this._isDisposed = !0;
          for (const d of this._disposables)
            d.dispose();
          this._disposables.length = 0;
        }
        register(d) {
          return this._disposables.push(d), d;
        }
        unregister(d) {
          const h = this._disposables.indexOf(d);
          h !== -1 && this._disposables.splice(h, 1);
        }
      }, o.MutableDisposable = class {
        constructor() {
          this._isDisposed = !1;
        }
        get value() {
          return this._isDisposed ? void 0 : this._value;
        }
        set value(d) {
          var h;
          this._isDisposed || d === this._value || ((h = this._value) === null || h === void 0 || h.dispose(), this._value = d);
        }
        clear() {
          this.value = void 0;
        }
        dispose() {
          var d;
          this._isDisposed = !0, (d = this._value) === null || d === void 0 || d.dispose(), this._value = void 0;
        }
      }, o.toDisposable = function(d) {
        return { dispose: d };
      }, o.disposeArray = s, o.getDisposeArrayDisposable = function(d) {
        return { dispose: () => s(d) };
      };
    }, 1505: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.FourKeyMap = o.TwoKeyMap = void 0;
      class s {
        constructor() {
          this._data = {};
        }
        set(h, u, p) {
          this._data[h] || (this._data[h] = {}), this._data[h][u] = p;
        }
        get(h, u) {
          return this._data[h] ? this._data[h][u] : void 0;
        }
        clear() {
          this._data = {};
        }
      }
      o.TwoKeyMap = s, o.FourKeyMap = class {
        constructor() {
          this._data = new s();
        }
        set(d, h, u, p, b) {
          this._data.get(d, h) || this._data.set(d, h, new s()), this._data.get(d, h).set(u, p, b);
        }
        get(d, h, u, p) {
          var b;
          return (b = this._data.get(d, h)) === null || b === void 0 ? void 0 : b.get(u, p);
        }
        clear() {
          this._data.clear();
        }
      };
    }, 6114: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.isChromeOS = o.isLinux = o.isWindows = o.isIphone = o.isIpad = o.isMac = o.getSafariVersion = o.isSafari = o.isLegacyEdge = o.isFirefox = o.isNode = void 0, o.isNode = typeof navigator > "u";
      const s = o.isNode ? "node" : navigator.userAgent, d = o.isNode ? "node" : navigator.platform;
      o.isFirefox = s.includes("Firefox"), o.isLegacyEdge = s.includes("Edge"), o.isSafari = /^((?!chrome|android).)*safari/i.test(s), o.getSafariVersion = function() {
        if (!o.isSafari)
          return 0;
        const h = s.match(/Version\/(\d+)/);
        return h === null || h.length < 2 ? 0 : parseInt(h[1]);
      }, o.isMac = ["Macintosh", "MacIntel", "MacPPC", "Mac68K"].includes(d), o.isIpad = d === "iPad", o.isIphone = d === "iPhone", o.isWindows = ["Windows", "Win16", "Win32", "WinCE"].includes(d), o.isLinux = d.indexOf("Linux") >= 0, o.isChromeOS = /\bCrOS\b/.test(s);
    }, 6106: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.SortedList = void 0;
      let s = 0;
      o.SortedList = class {
        constructor(d) {
          this._getKey = d, this._array = [];
        }
        clear() {
          this._array.length = 0;
        }
        insert(d) {
          this._array.length !== 0 ? (s = this._search(this._getKey(d)), this._array.splice(s, 0, d)) : this._array.push(d);
        }
        delete(d) {
          if (this._array.length === 0)
            return !1;
          const h = this._getKey(d);
          if (h === void 0 || (s = this._search(h), s === -1) || this._getKey(this._array[s]) !== h)
            return !1;
          do
            if (this._array[s] === d)
              return this._array.splice(s, 1), !0;
          while (++s < this._array.length && this._getKey(this._array[s]) === h);
          return !1;
        }
        *getKeyIterator(d) {
          if (this._array.length !== 0 && (s = this._search(d), !(s < 0 || s >= this._array.length) && this._getKey(this._array[s]) === d))
            do
              yield this._array[s];
            while (++s < this._array.length && this._getKey(this._array[s]) === d);
        }
        forEachByKey(d, h) {
          if (this._array.length !== 0 && (s = this._search(d), !(s < 0 || s >= this._array.length) && this._getKey(this._array[s]) === d))
            do
              h(this._array[s]);
            while (++s < this._array.length && this._getKey(this._array[s]) === d);
        }
        values() {
          return [...this._array].values();
        }
        _search(d) {
          let h = 0, u = this._array.length - 1;
          for (; u >= h; ) {
            let p = h + u >> 1;
            const b = this._getKey(this._array[p]);
            if (b > d)
              u = p - 1;
            else {
              if (!(b < d)) {
                for (; p > 0 && this._getKey(this._array[p - 1]) === d; )
                  p--;
                return p;
              }
              h = p + 1;
            }
          }
          return h;
        }
      };
    }, 7226: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.DebouncedIdleTask = o.IdleTaskQueue = o.PriorityTaskQueue = void 0;
      const d = s(6114);
      class h {
        constructor() {
          this._tasks = [], this._i = 0;
        }
        enqueue(b) {
          this._tasks.push(b), this._start();
        }
        flush() {
          for (; this._i < this._tasks.length; )
            this._tasks[this._i]() || this._i++;
          this.clear();
        }
        clear() {
          this._idleCallback && (this._cancelCallback(this._idleCallback), this._idleCallback = void 0), this._i = 0, this._tasks.length = 0;
        }
        _start() {
          this._idleCallback || (this._idleCallback = this._requestCallback(this._process.bind(this)));
        }
        _process(b) {
          this._idleCallback = void 0;
          let k = 0, g = 0, m = b.timeRemaining(), c = 0;
          for (; this._i < this._tasks.length; ) {
            if (k = Date.now(), this._tasks[this._i]() || this._i++, k = Math.max(1, Date.now() - k), g = Math.max(k, g), c = b.timeRemaining(), 1.5 * g > c)
              return m - k < -20 && console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(m - k))}ms`), void this._start();
            m = c;
          }
          this.clear();
        }
      }
      class u extends h {
        _requestCallback(b) {
          return setTimeout(() => b(this._createDeadline(16)));
        }
        _cancelCallback(b) {
          clearTimeout(b);
        }
        _createDeadline(b) {
          const k = Date.now() + b;
          return { timeRemaining: () => Math.max(0, k - Date.now()) };
        }
      }
      o.PriorityTaskQueue = u, o.IdleTaskQueue = !d.isNode && "requestIdleCallback" in window ? class extends h {
        _requestCallback(p) {
          return requestIdleCallback(p);
        }
        _cancelCallback(p) {
          cancelIdleCallback(p);
        }
      } : u, o.DebouncedIdleTask = class {
        constructor() {
          this._queue = new o.IdleTaskQueue();
        }
        set(p) {
          this._queue.clear(), this._queue.enqueue(p);
        }
        flush() {
          this._queue.flush();
        }
      };
    }, 9282: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.updateWindowsModeWrappedState = void 0;
      const d = s(643);
      o.updateWindowsModeWrappedState = function(h) {
        const u = h.buffer.lines.get(h.buffer.ybase + h.buffer.y - 1), p = u == null ? void 0 : u.get(h.cols - 1), b = h.buffer.lines.get(h.buffer.ybase + h.buffer.y);
        b && p && (b.isWrapped = p[d.CHAR_DATA_CODE_INDEX] !== d.NULL_CELL_CODE && p[d.CHAR_DATA_CODE_INDEX] !== d.WHITESPACE_CELL_CODE);
      };
    }, 3734: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.ExtendedAttrs = o.AttributeData = void 0;
      class s {
        constructor() {
          this.fg = 0, this.bg = 0, this.extended = new d();
        }
        static toColorRGB(u) {
          return [u >>> 16 & 255, u >>> 8 & 255, 255 & u];
        }
        static fromColorRGB(u) {
          return (255 & u[0]) << 16 | (255 & u[1]) << 8 | 255 & u[2];
        }
        clone() {
          const u = new s();
          return u.fg = this.fg, u.bg = this.bg, u.extended = this.extended.clone(), u;
        }
        isInverse() {
          return 67108864 & this.fg;
        }
        isBold() {
          return 134217728 & this.fg;
        }
        isUnderline() {
          return this.hasExtendedAttrs() && this.extended.underlineStyle !== 0 ? 1 : 268435456 & this.fg;
        }
        isBlink() {
          return 536870912 & this.fg;
        }
        isInvisible() {
          return 1073741824 & this.fg;
        }
        isItalic() {
          return 67108864 & this.bg;
        }
        isDim() {
          return 134217728 & this.bg;
        }
        isStrikethrough() {
          return 2147483648 & this.fg;
        }
        isProtected() {
          return 536870912 & this.bg;
        }
        isOverline() {
          return 1073741824 & this.bg;
        }
        getFgColorMode() {
          return 50331648 & this.fg;
        }
        getBgColorMode() {
          return 50331648 & this.bg;
        }
        isFgRGB() {
          return (50331648 & this.fg) == 50331648;
        }
        isBgRGB() {
          return (50331648 & this.bg) == 50331648;
        }
        isFgPalette() {
          return (50331648 & this.fg) == 16777216 || (50331648 & this.fg) == 33554432;
        }
        isBgPalette() {
          return (50331648 & this.bg) == 16777216 || (50331648 & this.bg) == 33554432;
        }
        isFgDefault() {
          return (50331648 & this.fg) == 0;
        }
        isBgDefault() {
          return (50331648 & this.bg) == 0;
        }
        isAttributeDefault() {
          return this.fg === 0 && this.bg === 0;
        }
        getFgColor() {
          switch (50331648 & this.fg) {
            case 16777216:
            case 33554432:
              return 255 & this.fg;
            case 50331648:
              return 16777215 & this.fg;
            default:
              return -1;
          }
        }
        getBgColor() {
          switch (50331648 & this.bg) {
            case 16777216:
            case 33554432:
              return 255 & this.bg;
            case 50331648:
              return 16777215 & this.bg;
            default:
              return -1;
          }
        }
        hasExtendedAttrs() {
          return 268435456 & this.bg;
        }
        updateExtended() {
          this.extended.isEmpty() ? this.bg &= -268435457 : this.bg |= 268435456;
        }
        getUnderlineColor() {
          if (268435456 & this.bg && ~this.extended.underlineColor)
            switch (50331648 & this.extended.underlineColor) {
              case 16777216:
              case 33554432:
                return 255 & this.extended.underlineColor;
              case 50331648:
                return 16777215 & this.extended.underlineColor;
              default:
                return this.getFgColor();
            }
          return this.getFgColor();
        }
        getUnderlineColorMode() {
          return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 & this.extended.underlineColor : this.getFgColorMode();
        }
        isUnderlineColorRGB() {
          return 268435456 & this.bg && ~this.extended.underlineColor ? (50331648 & this.extended.underlineColor) == 50331648 : this.isFgRGB();
        }
        isUnderlineColorPalette() {
          return 268435456 & this.bg && ~this.extended.underlineColor ? (50331648 & this.extended.underlineColor) == 16777216 || (50331648 & this.extended.underlineColor) == 33554432 : this.isFgPalette();
        }
        isUnderlineColorDefault() {
          return 268435456 & this.bg && ~this.extended.underlineColor ? (50331648 & this.extended.underlineColor) == 0 : this.isFgDefault();
        }
        getUnderlineStyle() {
          return 268435456 & this.fg ? 268435456 & this.bg ? this.extended.underlineStyle : 1 : 0;
        }
      }
      o.AttributeData = s;
      class d {
        get ext() {
          return this._urlId ? -469762049 & this._ext | this.underlineStyle << 26 : this._ext;
        }
        set ext(u) {
          this._ext = u;
        }
        get underlineStyle() {
          return this._urlId ? 5 : (469762048 & this._ext) >> 26;
        }
        set underlineStyle(u) {
          this._ext &= -469762049, this._ext |= u << 26 & 469762048;
        }
        get underlineColor() {
          return 67108863 & this._ext;
        }
        set underlineColor(u) {
          this._ext &= -67108864, this._ext |= 67108863 & u;
        }
        get urlId() {
          return this._urlId;
        }
        set urlId(u) {
          this._urlId = u;
        }
        constructor(u = 0, p = 0) {
          this._ext = 0, this._urlId = 0, this._ext = u, this._urlId = p;
        }
        clone() {
          return new d(this._ext, this._urlId);
        }
        isEmpty() {
          return this.underlineStyle === 0 && this._urlId === 0;
        }
      }
      o.ExtendedAttrs = d;
    }, 9092: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.Buffer = o.MAX_BUFFER_SIZE = void 0;
      const d = s(6349), h = s(7226), u = s(3734), p = s(8437), b = s(4634), k = s(511), g = s(643), m = s(4863), c = s(7116);
      o.MAX_BUFFER_SIZE = 4294967295, o.Buffer = class {
        constructor(_, f, v) {
          this._hasScrollback = _, this._optionsService = f, this._bufferService = v, this.ydisp = 0, this.ybase = 0, this.y = 0, this.x = 0, this.tabs = {}, this.savedY = 0, this.savedX = 0, this.savedCurAttrData = p.DEFAULT_ATTR_DATA.clone(), this.savedCharset = c.DEFAULT_CHARSET, this.markers = [], this._nullCell = k.CellData.fromCharData([0, g.NULL_CELL_CHAR, g.NULL_CELL_WIDTH, g.NULL_CELL_CODE]), this._whitespaceCell = k.CellData.fromCharData([0, g.WHITESPACE_CELL_CHAR, g.WHITESPACE_CELL_WIDTH, g.WHITESPACE_CELL_CODE]), this._isClearing = !1, this._memoryCleanupQueue = new h.IdleTaskQueue(), this._memoryCleanupPosition = 0, this._cols = this._bufferService.cols, this._rows = this._bufferService.rows, this.lines = new d.CircularList(this._getCorrectBufferLength(this._rows)), this.scrollTop = 0, this.scrollBottom = this._rows - 1, this.setupTabStops();
        }
        getNullCell(_) {
          return _ ? (this._nullCell.fg = _.fg, this._nullCell.bg = _.bg, this._nullCell.extended = _.extended) : (this._nullCell.fg = 0, this._nullCell.bg = 0, this._nullCell.extended = new u.ExtendedAttrs()), this._nullCell;
        }
        getWhitespaceCell(_) {
          return _ ? (this._whitespaceCell.fg = _.fg, this._whitespaceCell.bg = _.bg, this._whitespaceCell.extended = _.extended) : (this._whitespaceCell.fg = 0, this._whitespaceCell.bg = 0, this._whitespaceCell.extended = new u.ExtendedAttrs()), this._whitespaceCell;
        }
        getBlankLine(_, f) {
          return new p.BufferLine(this._bufferService.cols, this.getNullCell(_), f);
        }
        get hasScrollback() {
          return this._hasScrollback && this.lines.maxLength > this._rows;
        }
        get isCursorInViewport() {
          const _ = this.ybase + this.y - this.ydisp;
          return _ >= 0 && _ < this._rows;
        }
        _getCorrectBufferLength(_) {
          if (!this._hasScrollback)
            return _;
          const f = _ + this._optionsService.rawOptions.scrollback;
          return f > o.MAX_BUFFER_SIZE ? o.MAX_BUFFER_SIZE : f;
        }
        fillViewportRows(_) {
          if (this.lines.length === 0) {
            _ === void 0 && (_ = p.DEFAULT_ATTR_DATA);
            let f = this._rows;
            for (; f--; )
              this.lines.push(this.getBlankLine(_));
          }
        }
        clear() {
          this.ydisp = 0, this.ybase = 0, this.y = 0, this.x = 0, this.lines = new d.CircularList(this._getCorrectBufferLength(this._rows)), this.scrollTop = 0, this.scrollBottom = this._rows - 1, this.setupTabStops();
        }
        resize(_, f) {
          const v = this.getNullCell(p.DEFAULT_ATTR_DATA);
          let y = 0;
          const j = this._getCorrectBufferLength(f);
          if (j > this.lines.maxLength && (this.lines.maxLength = j), this.lines.length > 0) {
            if (this._cols < _)
              for (let C = 0; C < this.lines.length; C++)
                y += +this.lines.get(C).resize(_, v);
            let A = 0;
            if (this._rows < f)
              for (let C = this._rows; C < f; C++)
                this.lines.length < f + this.ybase && (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== void 0 || this._optionsService.rawOptions.windowsPty.buildNumber !== void 0 ? this.lines.push(new p.BufferLine(_, v)) : this.ybase > 0 && this.lines.length <= this.ybase + this.y + A + 1 ? (this.ybase--, A++, this.ydisp > 0 && this.ydisp--) : this.lines.push(new p.BufferLine(_, v)));
            else
              for (let C = this._rows; C > f; C--)
                this.lines.length > f + this.ybase && (this.lines.length > this.ybase + this.y + 1 ? this.lines.pop() : (this.ybase++, this.ydisp++));
            if (j < this.lines.maxLength) {
              const C = this.lines.length - j;
              C > 0 && (this.lines.trimStart(C), this.ybase = Math.max(this.ybase - C, 0), this.ydisp = Math.max(this.ydisp - C, 0), this.savedY = Math.max(this.savedY - C, 0)), this.lines.maxLength = j;
            }
            this.x = Math.min(this.x, _ - 1), this.y = Math.min(this.y, f - 1), A && (this.y += A), this.savedX = Math.min(this.savedX, _ - 1), this.scrollTop = 0;
          }
          if (this.scrollBottom = f - 1, this._isReflowEnabled && (this._reflow(_, f), this._cols > _))
            for (let A = 0; A < this.lines.length; A++)
              y += +this.lines.get(A).resize(_, v);
          this._cols = _, this._rows = f, this._memoryCleanupQueue.clear(), y > 0.1 * this.lines.length && (this._memoryCleanupPosition = 0, this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup()));
        }
        _batchedMemoryCleanup() {
          let _ = !0;
          this._memoryCleanupPosition >= this.lines.length && (this._memoryCleanupPosition = 0, _ = !1);
          let f = 0;
          for (; this._memoryCleanupPosition < this.lines.length; )
            if (f += this.lines.get(this._memoryCleanupPosition++).cleanupMemory(), f > 100)
              return !0;
          return _;
        }
        get _isReflowEnabled() {
          const _ = this._optionsService.rawOptions.windowsPty;
          return _ && _.buildNumber ? this._hasScrollback && _.backend === "conpty" && _.buildNumber >= 21376 : this._hasScrollback && !this._optionsService.rawOptions.windowsMode;
        }
        _reflow(_, f) {
          this._cols !== _ && (_ > this._cols ? this._reflowLarger(_, f) : this._reflowSmaller(_, f));
        }
        _reflowLarger(_, f) {
          const v = (0, b.reflowLargerGetLinesToRemove)(this.lines, this._cols, _, this.ybase + this.y, this.getNullCell(p.DEFAULT_ATTR_DATA));
          if (v.length > 0) {
            const y = (0, b.reflowLargerCreateNewLayout)(this.lines, v);
            (0, b.reflowLargerApplyNewLayout)(this.lines, y.layout), this._reflowLargerAdjustViewport(_, f, y.countRemoved);
          }
        }
        _reflowLargerAdjustViewport(_, f, v) {
          const y = this.getNullCell(p.DEFAULT_ATTR_DATA);
          let j = v;
          for (; j-- > 0; )
            this.ybase === 0 ? (this.y > 0 && this.y--, this.lines.length < f && this.lines.push(new p.BufferLine(_, y))) : (this.ydisp === this.ybase && this.ydisp--, this.ybase--);
          this.savedY = Math.max(this.savedY - v, 0);
        }
        _reflowSmaller(_, f) {
          const v = this.getNullCell(p.DEFAULT_ATTR_DATA), y = [];
          let j = 0;
          for (let A = this.lines.length - 1; A >= 0; A--) {
            let C = this.lines.get(A);
            if (!C || !C.isWrapped && C.getTrimmedLength() <= _)
              continue;
            const I = [C];
            for (; C.isWrapped && A > 0; )
              C = this.lines.get(--A), I.unshift(C);
            const z = this.ybase + this.y;
            if (z >= A && z < A + I.length)
              continue;
            const P = I[I.length - 1].getTrimmedLength(), L = (0, b.reflowSmallerGetNewLineLengths)(I, this._cols, _), N = L.length - I.length;
            let B;
            B = this.ybase === 0 && this.y !== this.lines.length - 1 ? Math.max(0, this.y - this.lines.maxLength + N) : Math.max(0, this.lines.length - this.lines.maxLength + N);
            const F = [];
            for (let R = 0; R < N; R++) {
              const G = this.getBlankLine(p.DEFAULT_ATTR_DATA, !0);
              F.push(G);
            }
            F.length > 0 && (y.push({ start: A + I.length + j, newLines: F }), j += F.length), I.push(...F);
            let U = L.length - 1, H = L[U];
            H === 0 && (U--, H = L[U]);
            let x = I.length - N - 1, O = P;
            for (; x >= 0; ) {
              const R = Math.min(O, H);
              if (I[U] === void 0)
                break;
              if (I[U].copyCellsFrom(I[x], O - R, H - R, R, !0), H -= R, H === 0 && (U--, H = L[U]), O -= R, O === 0) {
                x--;
                const G = Math.max(x, 0);
                O = (0, b.getWrappedLineTrimmedLength)(I, G, this._cols);
              }
            }
            for (let R = 0; R < I.length; R++)
              L[R] < _ && I[R].setCell(L[R], v);
            let T = N - B;
            for (; T-- > 0; )
              this.ybase === 0 ? this.y < f - 1 ? (this.y++, this.lines.pop()) : (this.ybase++, this.ydisp++) : this.ybase < Math.min(this.lines.maxLength, this.lines.length + j) - f && (this.ybase === this.ydisp && this.ydisp++, this.ybase++);
            this.savedY = Math.min(this.savedY + N, this.ybase + f - 1);
          }
          if (y.length > 0) {
            const A = [], C = [];
            for (let U = 0; U < this.lines.length; U++)
              C.push(this.lines.get(U));
            const I = this.lines.length;
            let z = I - 1, P = 0, L = y[P];
            this.lines.length = Math.min(this.lines.maxLength, this.lines.length + j);
            let N = 0;
            for (let U = Math.min(this.lines.maxLength - 1, I + j - 1); U >= 0; U--)
              if (L && L.start > z + N) {
                for (let H = L.newLines.length - 1; H >= 0; H--)
                  this.lines.set(U--, L.newLines[H]);
                U++, A.push({ index: z + 1, amount: L.newLines.length }), N += L.newLines.length, L = y[++P];
              } else
                this.lines.set(U, C[z--]);
            let B = 0;
            for (let U = A.length - 1; U >= 0; U--)
              A[U].index += B, this.lines.onInsertEmitter.fire(A[U]), B += A[U].amount;
            const F = Math.max(0, I + j - this.lines.maxLength);
            F > 0 && this.lines.onTrimEmitter.fire(F);
          }
        }
        translateBufferLineToString(_, f, v = 0, y) {
          const j = this.lines.get(_);
          return j ? j.translateToString(f, v, y) : "";
        }
        getWrappedRangeForLine(_) {
          let f = _, v = _;
          for (; f > 0 && this.lines.get(f).isWrapped; )
            f--;
          for (; v + 1 < this.lines.length && this.lines.get(v + 1).isWrapped; )
            v++;
          return { first: f, last: v };
        }
        setupTabStops(_) {
          for (_ != null ? this.tabs[_] || (_ = this.prevStop(_)) : (this.tabs = {}, _ = 0); _ < this._cols; _ += this._optionsService.rawOptions.tabStopWidth)
            this.tabs[_] = !0;
        }
        prevStop(_) {
          for (_ == null && (_ = this.x); !this.tabs[--_] && _ > 0; )
            ;
          return _ >= this._cols ? this._cols - 1 : _ < 0 ? 0 : _;
        }
        nextStop(_) {
          for (_ == null && (_ = this.x); !this.tabs[++_] && _ < this._cols; )
            ;
          return _ >= this._cols ? this._cols - 1 : _ < 0 ? 0 : _;
        }
        clearMarkers(_) {
          this._isClearing = !0;
          for (let f = 0; f < this.markers.length; f++)
            this.markers[f].line === _ && (this.markers[f].dispose(), this.markers.splice(f--, 1));
          this._isClearing = !1;
        }
        clearAllMarkers() {
          this._isClearing = !0;
          for (let _ = 0; _ < this.markers.length; _++)
            this.markers[_].dispose(), this.markers.splice(_--, 1);
          this._isClearing = !1;
        }
        addMarker(_) {
          const f = new m.Marker(_);
          return this.markers.push(f), f.register(this.lines.onTrim((v) => {
            f.line -= v, f.line < 0 && f.dispose();
          })), f.register(this.lines.onInsert((v) => {
            f.line >= v.index && (f.line += v.amount);
          })), f.register(this.lines.onDelete((v) => {
            f.line >= v.index && f.line < v.index + v.amount && f.dispose(), f.line > v.index && (f.line -= v.amount);
          })), f.register(f.onDispose(() => this._removeMarker(f))), f;
        }
        _removeMarker(_) {
          this._isClearing || this.markers.splice(this.markers.indexOf(_), 1);
        }
      };
    }, 8437: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.BufferLine = o.DEFAULT_ATTR_DATA = void 0;
      const d = s(3734), h = s(511), u = s(643), p = s(482);
      o.DEFAULT_ATTR_DATA = Object.freeze(new d.AttributeData());
      let b = 0;
      class k {
        constructor(m, c, _ = !1) {
          this.isWrapped = _, this._combined = {}, this._extendedAttrs = {}, this._data = new Uint32Array(3 * m);
          const f = c || h.CellData.fromCharData([0, u.NULL_CELL_CHAR, u.NULL_CELL_WIDTH, u.NULL_CELL_CODE]);
          for (let v = 0; v < m; ++v)
            this.setCell(v, f);
          this.length = m;
        }
        get(m) {
          const c = this._data[3 * m + 0], _ = 2097151 & c;
          return [this._data[3 * m + 1], 2097152 & c ? this._combined[m] : _ ? (0, p.stringFromCodePoint)(_) : "", c >> 22, 2097152 & c ? this._combined[m].charCodeAt(this._combined[m].length - 1) : _];
        }
        set(m, c) {
          this._data[3 * m + 1] = c[u.CHAR_DATA_ATTR_INDEX], c[u.CHAR_DATA_CHAR_INDEX].length > 1 ? (this._combined[m] = c[1], this._data[3 * m + 0] = 2097152 | m | c[u.CHAR_DATA_WIDTH_INDEX] << 22) : this._data[3 * m + 0] = c[u.CHAR_DATA_CHAR_INDEX].charCodeAt(0) | c[u.CHAR_DATA_WIDTH_INDEX] << 22;
        }
        getWidth(m) {
          return this._data[3 * m + 0] >> 22;
        }
        hasWidth(m) {
          return 12582912 & this._data[3 * m + 0];
        }
        getFg(m) {
          return this._data[3 * m + 1];
        }
        getBg(m) {
          return this._data[3 * m + 2];
        }
        hasContent(m) {
          return 4194303 & this._data[3 * m + 0];
        }
        getCodePoint(m) {
          const c = this._data[3 * m + 0];
          return 2097152 & c ? this._combined[m].charCodeAt(this._combined[m].length - 1) : 2097151 & c;
        }
        isCombined(m) {
          return 2097152 & this._data[3 * m + 0];
        }
        getString(m) {
          const c = this._data[3 * m + 0];
          return 2097152 & c ? this._combined[m] : 2097151 & c ? (0, p.stringFromCodePoint)(2097151 & c) : "";
        }
        isProtected(m) {
          return 536870912 & this._data[3 * m + 2];
        }
        loadCell(m, c) {
          return b = 3 * m, c.content = this._data[b + 0], c.fg = this._data[b + 1], c.bg = this._data[b + 2], 2097152 & c.content && (c.combinedData = this._combined[m]), 268435456 & c.bg && (c.extended = this._extendedAttrs[m]), c;
        }
        setCell(m, c) {
          2097152 & c.content && (this._combined[m] = c.combinedData), 268435456 & c.bg && (this._extendedAttrs[m] = c.extended), this._data[3 * m + 0] = c.content, this._data[3 * m + 1] = c.fg, this._data[3 * m + 2] = c.bg;
        }
        setCellFromCodePoint(m, c, _, f, v, y) {
          268435456 & v && (this._extendedAttrs[m] = y), this._data[3 * m + 0] = c | _ << 22, this._data[3 * m + 1] = f, this._data[3 * m + 2] = v;
        }
        addCodepointToCell(m, c) {
          let _ = this._data[3 * m + 0];
          2097152 & _ ? this._combined[m] += (0, p.stringFromCodePoint)(c) : (2097151 & _ ? (this._combined[m] = (0, p.stringFromCodePoint)(2097151 & _) + (0, p.stringFromCodePoint)(c), _ &= -2097152, _ |= 2097152) : _ = c | 4194304, this._data[3 * m + 0] = _);
        }
        insertCells(m, c, _, f) {
          if ((m %= this.length) && this.getWidth(m - 1) === 2 && this.setCellFromCodePoint(m - 1, 0, 1, (f == null ? void 0 : f.fg) || 0, (f == null ? void 0 : f.bg) || 0, (f == null ? void 0 : f.extended) || new d.ExtendedAttrs()), c < this.length - m) {
            const v = new h.CellData();
            for (let y = this.length - m - c - 1; y >= 0; --y)
              this.setCell(m + c + y, this.loadCell(m + y, v));
            for (let y = 0; y < c; ++y)
              this.setCell(m + y, _);
          } else
            for (let v = m; v < this.length; ++v)
              this.setCell(v, _);
          this.getWidth(this.length - 1) === 2 && this.setCellFromCodePoint(this.length - 1, 0, 1, (f == null ? void 0 : f.fg) || 0, (f == null ? void 0 : f.bg) || 0, (f == null ? void 0 : f.extended) || new d.ExtendedAttrs());
        }
        deleteCells(m, c, _, f) {
          if (m %= this.length, c < this.length - m) {
            const v = new h.CellData();
            for (let y = 0; y < this.length - m - c; ++y)
              this.setCell(m + y, this.loadCell(m + c + y, v));
            for (let y = this.length - c; y < this.length; ++y)
              this.setCell(y, _);
          } else
            for (let v = m; v < this.length; ++v)
              this.setCell(v, _);
          m && this.getWidth(m - 1) === 2 && this.setCellFromCodePoint(m - 1, 0, 1, (f == null ? void 0 : f.fg) || 0, (f == null ? void 0 : f.bg) || 0, (f == null ? void 0 : f.extended) || new d.ExtendedAttrs()), this.getWidth(m) !== 0 || this.hasContent(m) || this.setCellFromCodePoint(m, 0, 1, (f == null ? void 0 : f.fg) || 0, (f == null ? void 0 : f.bg) || 0, (f == null ? void 0 : f.extended) || new d.ExtendedAttrs());
        }
        replaceCells(m, c, _, f, v = !1) {
          if (v)
            for (m && this.getWidth(m - 1) === 2 && !this.isProtected(m - 1) && this.setCellFromCodePoint(m - 1, 0, 1, (f == null ? void 0 : f.fg) || 0, (f == null ? void 0 : f.bg) || 0, (f == null ? void 0 : f.extended) || new d.ExtendedAttrs()), c < this.length && this.getWidth(c - 1) === 2 && !this.isProtected(c) && this.setCellFromCodePoint(c, 0, 1, (f == null ? void 0 : f.fg) || 0, (f == null ? void 0 : f.bg) || 0, (f == null ? void 0 : f.extended) || new d.ExtendedAttrs()); m < c && m < this.length; )
              this.isProtected(m) || this.setCell(m, _), m++;
          else
            for (m && this.getWidth(m - 1) === 2 && this.setCellFromCodePoint(m - 1, 0, 1, (f == null ? void 0 : f.fg) || 0, (f == null ? void 0 : f.bg) || 0, (f == null ? void 0 : f.extended) || new d.ExtendedAttrs()), c < this.length && this.getWidth(c - 1) === 2 && this.setCellFromCodePoint(c, 0, 1, (f == null ? void 0 : f.fg) || 0, (f == null ? void 0 : f.bg) || 0, (f == null ? void 0 : f.extended) || new d.ExtendedAttrs()); m < c && m < this.length; )
              this.setCell(m++, _);
        }
        resize(m, c) {
          if (m === this.length)
            return 4 * this._data.length * 2 < this._data.buffer.byteLength;
          const _ = 3 * m;
          if (m > this.length) {
            if (this._data.buffer.byteLength >= 4 * _)
              this._data = new Uint32Array(this._data.buffer, 0, _);
            else {
              const f = new Uint32Array(_);
              f.set(this._data), this._data = f;
            }
            for (let f = this.length; f < m; ++f)
              this.setCell(f, c);
          } else {
            this._data = this._data.subarray(0, _);
            const f = Object.keys(this._combined);
            for (let y = 0; y < f.length; y++) {
              const j = parseInt(f[y], 10);
              j >= m && delete this._combined[j];
            }
            const v = Object.keys(this._extendedAttrs);
            for (let y = 0; y < v.length; y++) {
              const j = parseInt(v[y], 10);
              j >= m && delete this._extendedAttrs[j];
            }
          }
          return this.length = m, 4 * _ * 2 < this._data.buffer.byteLength;
        }
        cleanupMemory() {
          if (4 * this._data.length * 2 < this._data.buffer.byteLength) {
            const m = new Uint32Array(this._data.length);
            return m.set(this._data), this._data = m, 1;
          }
          return 0;
        }
        fill(m, c = !1) {
          if (c)
            for (let _ = 0; _ < this.length; ++_)
              this.isProtected(_) || this.setCell(_, m);
          else {
            this._combined = {}, this._extendedAttrs = {};
            for (let _ = 0; _ < this.length; ++_)
              this.setCell(_, m);
          }
        }
        copyFrom(m) {
          this.length !== m.length ? this._data = new Uint32Array(m._data) : this._data.set(m._data), this.length = m.length, this._combined = {};
          for (const c in m._combined)
            this._combined[c] = m._combined[c];
          this._extendedAttrs = {};
          for (const c in m._extendedAttrs)
            this._extendedAttrs[c] = m._extendedAttrs[c];
          this.isWrapped = m.isWrapped;
        }
        clone() {
          const m = new k(0);
          m._data = new Uint32Array(this._data), m.length = this.length;
          for (const c in this._combined)
            m._combined[c] = this._combined[c];
          for (const c in this._extendedAttrs)
            m._extendedAttrs[c] = this._extendedAttrs[c];
          return m.isWrapped = this.isWrapped, m;
        }
        getTrimmedLength() {
          for (let m = this.length - 1; m >= 0; --m)
            if (4194303 & this._data[3 * m + 0])
              return m + (this._data[3 * m + 0] >> 22);
          return 0;
        }
        getNoBgTrimmedLength() {
          for (let m = this.length - 1; m >= 0; --m)
            if (4194303 & this._data[3 * m + 0] || 50331648 & this._data[3 * m + 2])
              return m + (this._data[3 * m + 0] >> 22);
          return 0;
        }
        copyCellsFrom(m, c, _, f, v) {
          const y = m._data;
          if (v)
            for (let A = f - 1; A >= 0; A--) {
              for (let C = 0; C < 3; C++)
                this._data[3 * (_ + A) + C] = y[3 * (c + A) + C];
              268435456 & y[3 * (c + A) + 2] && (this._extendedAttrs[_ + A] = m._extendedAttrs[c + A]);
            }
          else
            for (let A = 0; A < f; A++) {
              for (let C = 0; C < 3; C++)
                this._data[3 * (_ + A) + C] = y[3 * (c + A) + C];
              268435456 & y[3 * (c + A) + 2] && (this._extendedAttrs[_ + A] = m._extendedAttrs[c + A]);
            }
          const j = Object.keys(m._combined);
          for (let A = 0; A < j.length; A++) {
            const C = parseInt(j[A], 10);
            C >= c && (this._combined[C - c + _] = m._combined[C]);
          }
        }
        translateToString(m = !1, c = 0, _ = this.length) {
          m && (_ = Math.min(_, this.getTrimmedLength()));
          let f = "";
          for (; c < _; ) {
            const v = this._data[3 * c + 0], y = 2097151 & v;
            f += 2097152 & v ? this._combined[c] : y ? (0, p.stringFromCodePoint)(y) : u.WHITESPACE_CELL_CHAR, c += v >> 22 || 1;
          }
          return f;
        }
      }
      o.BufferLine = k;
    }, 4841: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.getRangeLength = void 0, o.getRangeLength = function(s, d) {
        if (s.start.y > s.end.y)
          throw new Error(`Buffer range end (${s.end.x}, ${s.end.y}) cannot be before start (${s.start.x}, ${s.start.y})`);
        return d * (s.end.y - s.start.y) + (s.end.x - s.start.x + 1);
      };
    }, 4634: (l, o) => {
      function s(d, h, u) {
        if (h === d.length - 1)
          return d[h].getTrimmedLength();
        const p = !d[h].hasContent(u - 1) && d[h].getWidth(u - 1) === 1, b = d[h + 1].getWidth(0) === 2;
        return p && b ? u - 1 : u;
      }
      Object.defineProperty(o, "__esModule", { value: !0 }), o.getWrappedLineTrimmedLength = o.reflowSmallerGetNewLineLengths = o.reflowLargerApplyNewLayout = o.reflowLargerCreateNewLayout = o.reflowLargerGetLinesToRemove = void 0, o.reflowLargerGetLinesToRemove = function(d, h, u, p, b) {
        const k = [];
        for (let g = 0; g < d.length - 1; g++) {
          let m = g, c = d.get(++m);
          if (!c.isWrapped)
            continue;
          const _ = [d.get(g)];
          for (; m < d.length && c.isWrapped; )
            _.push(c), c = d.get(++m);
          if (p >= g && p < m) {
            g += _.length - 1;
            continue;
          }
          let f = 0, v = s(_, f, h), y = 1, j = 0;
          for (; y < _.length; ) {
            const C = s(_, y, h), I = C - j, z = u - v, P = Math.min(I, z);
            _[f].copyCellsFrom(_[y], j, v, P, !1), v += P, v === u && (f++, v = 0), j += P, j === C && (y++, j = 0), v === 0 && f !== 0 && _[f - 1].getWidth(u - 1) === 2 && (_[f].copyCellsFrom(_[f - 1], u - 1, v++, 1, !1), _[f - 1].setCell(u - 1, b));
          }
          _[f].replaceCells(v, u, b);
          let A = 0;
          for (let C = _.length - 1; C > 0 && (C > f || _[C].getTrimmedLength() === 0); C--)
            A++;
          A > 0 && (k.push(g + _.length - A), k.push(A)), g += _.length - 1;
        }
        return k;
      }, o.reflowLargerCreateNewLayout = function(d, h) {
        const u = [];
        let p = 0, b = h[p], k = 0;
        for (let g = 0; g < d.length; g++)
          if (b === g) {
            const m = h[++p];
            d.onDeleteEmitter.fire({ index: g - k, amount: m }), g += m - 1, k += m, b = h[++p];
          } else
            u.push(g);
        return { layout: u, countRemoved: k };
      }, o.reflowLargerApplyNewLayout = function(d, h) {
        const u = [];
        for (let p = 0; p < h.length; p++)
          u.push(d.get(h[p]));
        for (let p = 0; p < u.length; p++)
          d.set(p, u[p]);
        d.length = h.length;
      }, o.reflowSmallerGetNewLineLengths = function(d, h, u) {
        const p = [], b = d.map((c, _) => s(d, _, h)).reduce((c, _) => c + _);
        let k = 0, g = 0, m = 0;
        for (; m < b; ) {
          if (b - m < u) {
            p.push(b - m);
            break;
          }
          k += u;
          const c = s(d, g, h);
          k > c && (k -= c, g++);
          const _ = d[g].getWidth(k - 1) === 2;
          _ && k--;
          const f = _ ? u - 1 : u;
          p.push(f), m += f;
        }
        return p;
      }, o.getWrappedLineTrimmedLength = s;
    }, 5295: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.BufferSet = void 0;
      const d = s(8460), h = s(844), u = s(9092);
      class p extends h.Disposable {
        constructor(k, g) {
          super(), this._optionsService = k, this._bufferService = g, this._onBufferActivate = this.register(new d.EventEmitter()), this.onBufferActivate = this._onBufferActivate.event, this.reset(), this.register(this._optionsService.onSpecificOptionChange("scrollback", () => this.resize(this._bufferService.cols, this._bufferService.rows))), this.register(this._optionsService.onSpecificOptionChange("tabStopWidth", () => this.setupTabStops()));
        }
        reset() {
          this._normal = new u.Buffer(!0, this._optionsService, this._bufferService), this._normal.fillViewportRows(), this._alt = new u.Buffer(!1, this._optionsService, this._bufferService), this._activeBuffer = this._normal, this._onBufferActivate.fire({ activeBuffer: this._normal, inactiveBuffer: this._alt }), this.setupTabStops();
        }
        get alt() {
          return this._alt;
        }
        get active() {
          return this._activeBuffer;
        }
        get normal() {
          return this._normal;
        }
        activateNormalBuffer() {
          this._activeBuffer !== this._normal && (this._normal.x = this._alt.x, this._normal.y = this._alt.y, this._alt.clearAllMarkers(), this._alt.clear(), this._activeBuffer = this._normal, this._onBufferActivate.fire({ activeBuffer: this._normal, inactiveBuffer: this._alt }));
        }
        activateAltBuffer(k) {
          this._activeBuffer !== this._alt && (this._alt.fillViewportRows(k), this._alt.x = this._normal.x, this._alt.y = this._normal.y, this._activeBuffer = this._alt, this._onBufferActivate.fire({ activeBuffer: this._alt, inactiveBuffer: this._normal }));
        }
        resize(k, g) {
          this._normal.resize(k, g), this._alt.resize(k, g), this.setupTabStops(k);
        }
        setupTabStops(k) {
          this._normal.setupTabStops(k), this._alt.setupTabStops(k);
        }
      }
      o.BufferSet = p;
    }, 511: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CellData = void 0;
      const d = s(482), h = s(643), u = s(3734);
      class p extends u.AttributeData {
        constructor() {
          super(...arguments), this.content = 0, this.fg = 0, this.bg = 0, this.extended = new u.ExtendedAttrs(), this.combinedData = "";
        }
        static fromCharData(k) {
          const g = new p();
          return g.setFromCharData(k), g;
        }
        isCombined() {
          return 2097152 & this.content;
        }
        getWidth() {
          return this.content >> 22;
        }
        getChars() {
          return 2097152 & this.content ? this.combinedData : 2097151 & this.content ? (0, d.stringFromCodePoint)(2097151 & this.content) : "";
        }
        getCode() {
          return this.isCombined() ? this.combinedData.charCodeAt(this.combinedData.length - 1) : 2097151 & this.content;
        }
        setFromCharData(k) {
          this.fg = k[h.CHAR_DATA_ATTR_INDEX], this.bg = 0;
          let g = !1;
          if (k[h.CHAR_DATA_CHAR_INDEX].length > 2)
            g = !0;
          else if (k[h.CHAR_DATA_CHAR_INDEX].length === 2) {
            const m = k[h.CHAR_DATA_CHAR_INDEX].charCodeAt(0);
            if (55296 <= m && m <= 56319) {
              const c = k[h.CHAR_DATA_CHAR_INDEX].charCodeAt(1);
              56320 <= c && c <= 57343 ? this.content = 1024 * (m - 55296) + c - 56320 + 65536 | k[h.CHAR_DATA_WIDTH_INDEX] << 22 : g = !0;
            } else
              g = !0;
          } else
            this.content = k[h.CHAR_DATA_CHAR_INDEX].charCodeAt(0) | k[h.CHAR_DATA_WIDTH_INDEX] << 22;
          g && (this.combinedData = k[h.CHAR_DATA_CHAR_INDEX], this.content = 2097152 | k[h.CHAR_DATA_WIDTH_INDEX] << 22);
        }
        getAsCharData() {
          return [this.fg, this.getChars(), this.getWidth(), this.getCode()];
        }
      }
      o.CellData = p;
    }, 643: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.WHITESPACE_CELL_CODE = o.WHITESPACE_CELL_WIDTH = o.WHITESPACE_CELL_CHAR = o.NULL_CELL_CODE = o.NULL_CELL_WIDTH = o.NULL_CELL_CHAR = o.CHAR_DATA_CODE_INDEX = o.CHAR_DATA_WIDTH_INDEX = o.CHAR_DATA_CHAR_INDEX = o.CHAR_DATA_ATTR_INDEX = o.DEFAULT_EXT = o.DEFAULT_ATTR = o.DEFAULT_COLOR = void 0, o.DEFAULT_COLOR = 0, o.DEFAULT_ATTR = 256 | o.DEFAULT_COLOR << 9, o.DEFAULT_EXT = 0, o.CHAR_DATA_ATTR_INDEX = 0, o.CHAR_DATA_CHAR_INDEX = 1, o.CHAR_DATA_WIDTH_INDEX = 2, o.CHAR_DATA_CODE_INDEX = 3, o.NULL_CELL_CHAR = "", o.NULL_CELL_WIDTH = 1, o.NULL_CELL_CODE = 0, o.WHITESPACE_CELL_CHAR = " ", o.WHITESPACE_CELL_WIDTH = 1, o.WHITESPACE_CELL_CODE = 32;
    }, 4863: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.Marker = void 0;
      const d = s(8460), h = s(844);
      class u {
        get id() {
          return this._id;
        }
        constructor(b) {
          this.line = b, this.isDisposed = !1, this._disposables = [], this._id = u._nextId++, this._onDispose = this.register(new d.EventEmitter()), this.onDispose = this._onDispose.event;
        }
        dispose() {
          this.isDisposed || (this.isDisposed = !0, this.line = -1, this._onDispose.fire(), (0, h.disposeArray)(this._disposables), this._disposables.length = 0);
        }
        register(b) {
          return this._disposables.push(b), b;
        }
      }
      o.Marker = u, u._nextId = 1;
    }, 7116: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.DEFAULT_CHARSET = o.CHARSETS = void 0, o.CHARSETS = {}, o.DEFAULT_CHARSET = o.CHARSETS.B, o.CHARSETS[0] = { "`": "◆", a: "▒", b: "␉", c: "␌", d: "␍", e: "␊", f: "°", g: "±", h: "␤", i: "␋", j: "┘", k: "┐", l: "┌", m: "└", n: "┼", o: "⎺", p: "⎻", q: "─", r: "⎼", s: "⎽", t: "├", u: "┤", v: "┴", w: "┬", x: "│", y: "≤", z: "≥", "{": "π", "|": "≠", "}": "£", "~": "·" }, o.CHARSETS.A = { "#": "£" }, o.CHARSETS.B = void 0, o.CHARSETS[4] = { "#": "£", "@": "¾", "[": "ij", "\\": "½", "]": "|", "{": "¨", "|": "f", "}": "¼", "~": "´" }, o.CHARSETS.C = o.CHARSETS[5] = { "[": "Ä", "\\": "Ö", "]": "Å", "^": "Ü", "`": "é", "{": "ä", "|": "ö", "}": "å", "~": "ü" }, o.CHARSETS.R = { "#": "£", "@": "à", "[": "°", "\\": "ç", "]": "§", "{": "é", "|": "ù", "}": "è", "~": "¨" }, o.CHARSETS.Q = { "@": "à", "[": "â", "\\": "ç", "]": "ê", "^": "î", "`": "ô", "{": "é", "|": "ù", "}": "è", "~": "û" }, o.CHARSETS.K = { "@": "§", "[": "Ä", "\\": "Ö", "]": "Ü", "{": "ä", "|": "ö", "}": "ü", "~": "ß" }, o.CHARSETS.Y = { "#": "£", "@": "§", "[": "°", "\\": "ç", "]": "é", "`": "ù", "{": "à", "|": "ò", "}": "è", "~": "ì" }, o.CHARSETS.E = o.CHARSETS[6] = { "@": "Ä", "[": "Æ", "\\": "Ø", "]": "Å", "^": "Ü", "`": "ä", "{": "æ", "|": "ø", "}": "å", "~": "ü" }, o.CHARSETS.Z = { "#": "£", "@": "§", "[": "¡", "\\": "Ñ", "]": "¿", "{": "°", "|": "ñ", "}": "ç" }, o.CHARSETS.H = o.CHARSETS[7] = { "@": "É", "[": "Ä", "\\": "Ö", "]": "Å", "^": "Ü", "`": "é", "{": "ä", "|": "ö", "}": "å", "~": "ü" }, o.CHARSETS["="] = { "#": "ù", "@": "à", "[": "é", "\\": "ç", "]": "ê", "^": "î", _: "è", "`": "ô", "{": "ä", "|": "ö", "}": "ü", "~": "û" };
    }, 2584: (l, o) => {
      var s, d, h;
      Object.defineProperty(o, "__esModule", { value: !0 }), o.C1_ESCAPED = o.C1 = o.C0 = void 0, function(u) {
        u.NUL = "\0", u.SOH = "", u.STX = "", u.ETX = "", u.EOT = "", u.ENQ = "", u.ACK = "", u.BEL = "\x07", u.BS = "\b", u.HT = "	", u.LF = `
`, u.VT = "\v", u.FF = "\f", u.CR = "\r", u.SO = "", u.SI = "", u.DLE = "", u.DC1 = "", u.DC2 = "", u.DC3 = "", u.DC4 = "", u.NAK = "", u.SYN = "", u.ETB = "", u.CAN = "", u.EM = "", u.SUB = "", u.ESC = "\x1B", u.FS = "", u.GS = "", u.RS = "", u.US = "", u.SP = " ", u.DEL = "";
      }(s || (o.C0 = s = {})), function(u) {
        u.PAD = "", u.HOP = "", u.BPH = "", u.NBH = "", u.IND = "", u.NEL = "", u.SSA = "", u.ESA = "", u.HTS = "", u.HTJ = "", u.VTS = "", u.PLD = "", u.PLU = "", u.RI = "", u.SS2 = "", u.SS3 = "", u.DCS = "", u.PU1 = "", u.PU2 = "", u.STS = "", u.CCH = "", u.MW = "", u.SPA = "", u.EPA = "", u.SOS = "", u.SGCI = "", u.SCI = "", u.CSI = "", u.ST = "", u.OSC = "", u.PM = "", u.APC = "";
      }(d || (o.C1 = d = {})), function(u) {
        u.ST = `${s.ESC}\\`;
      }(h || (o.C1_ESCAPED = h = {}));
    }, 7399: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.evaluateKeyboardEvent = void 0;
      const d = s(2584), h = { 48: ["0", ")"], 49: ["1", "!"], 50: ["2", "@"], 51: ["3", "#"], 52: ["4", "$"], 53: ["5", "%"], 54: ["6", "^"], 55: ["7", "&"], 56: ["8", "*"], 57: ["9", "("], 186: [";", ":"], 187: ["=", "+"], 188: [",", "<"], 189: ["-", "_"], 190: [".", ">"], 191: ["/", "?"], 192: ["`", "~"], 219: ["[", "{"], 220: ["\\", "|"], 221: ["]", "}"], 222: ["'", '"'] };
      o.evaluateKeyboardEvent = function(u, p, b, k) {
        const g = { type: 0, cancel: !1, key: void 0 }, m = (u.shiftKey ? 1 : 0) | (u.altKey ? 2 : 0) | (u.ctrlKey ? 4 : 0) | (u.metaKey ? 8 : 0);
        switch (u.keyCode) {
          case 0:
            u.key === "UIKeyInputUpArrow" ? g.key = p ? d.C0.ESC + "OA" : d.C0.ESC + "[A" : u.key === "UIKeyInputLeftArrow" ? g.key = p ? d.C0.ESC + "OD" : d.C0.ESC + "[D" : u.key === "UIKeyInputRightArrow" ? g.key = p ? d.C0.ESC + "OC" : d.C0.ESC + "[C" : u.key === "UIKeyInputDownArrow" && (g.key = p ? d.C0.ESC + "OB" : d.C0.ESC + "[B");
            break;
          case 8:
            if (u.altKey) {
              g.key = d.C0.ESC + d.C0.DEL;
              break;
            }
            g.key = d.C0.DEL;
            break;
          case 9:
            if (u.shiftKey) {
              g.key = d.C0.ESC + "[Z";
              break;
            }
            g.key = d.C0.HT, g.cancel = !0;
            break;
          case 13:
            g.key = u.altKey ? d.C0.ESC + d.C0.CR : d.C0.CR, g.cancel = !0;
            break;
          case 27:
            g.key = d.C0.ESC, u.altKey && (g.key = d.C0.ESC + d.C0.ESC), g.cancel = !0;
            break;
          case 37:
            if (u.metaKey)
              break;
            m ? (g.key = d.C0.ESC + "[1;" + (m + 1) + "D", g.key === d.C0.ESC + "[1;3D" && (g.key = d.C0.ESC + (b ? "b" : "[1;5D"))) : g.key = p ? d.C0.ESC + "OD" : d.C0.ESC + "[D";
            break;
          case 39:
            if (u.metaKey)
              break;
            m ? (g.key = d.C0.ESC + "[1;" + (m + 1) + "C", g.key === d.C0.ESC + "[1;3C" && (g.key = d.C0.ESC + (b ? "f" : "[1;5C"))) : g.key = p ? d.C0.ESC + "OC" : d.C0.ESC + "[C";
            break;
          case 38:
            if (u.metaKey)
              break;
            m ? (g.key = d.C0.ESC + "[1;" + (m + 1) + "A", b || g.key !== d.C0.ESC + "[1;3A" || (g.key = d.C0.ESC + "[1;5A")) : g.key = p ? d.C0.ESC + "OA" : d.C0.ESC + "[A";
            break;
          case 40:
            if (u.metaKey)
              break;
            m ? (g.key = d.C0.ESC + "[1;" + (m + 1) + "B", b || g.key !== d.C0.ESC + "[1;3B" || (g.key = d.C0.ESC + "[1;5B")) : g.key = p ? d.C0.ESC + "OB" : d.C0.ESC + "[B";
            break;
          case 45:
            u.shiftKey || u.ctrlKey || (g.key = d.C0.ESC + "[2~");
            break;
          case 46:
            g.key = m ? d.C0.ESC + "[3;" + (m + 1) + "~" : d.C0.ESC + "[3~";
            break;
          case 36:
            g.key = m ? d.C0.ESC + "[1;" + (m + 1) + "H" : p ? d.C0.ESC + "OH" : d.C0.ESC + "[H";
            break;
          case 35:
            g.key = m ? d.C0.ESC + "[1;" + (m + 1) + "F" : p ? d.C0.ESC + "OF" : d.C0.ESC + "[F";
            break;
          case 33:
            u.shiftKey ? g.type = 2 : u.ctrlKey ? g.key = d.C0.ESC + "[5;" + (m + 1) + "~" : g.key = d.C0.ESC + "[5~";
            break;
          case 34:
            u.shiftKey ? g.type = 3 : u.ctrlKey ? g.key = d.C0.ESC + "[6;" + (m + 1) + "~" : g.key = d.C0.ESC + "[6~";
            break;
          case 112:
            g.key = m ? d.C0.ESC + "[1;" + (m + 1) + "P" : d.C0.ESC + "OP";
            break;
          case 113:
            g.key = m ? d.C0.ESC + "[1;" + (m + 1) + "Q" : d.C0.ESC + "OQ";
            break;
          case 114:
            g.key = m ? d.C0.ESC + "[1;" + (m + 1) + "R" : d.C0.ESC + "OR";
            break;
          case 115:
            g.key = m ? d.C0.ESC + "[1;" + (m + 1) + "S" : d.C0.ESC + "OS";
            break;
          case 116:
            g.key = m ? d.C0.ESC + "[15;" + (m + 1) + "~" : d.C0.ESC + "[15~";
            break;
          case 117:
            g.key = m ? d.C0.ESC + "[17;" + (m + 1) + "~" : d.C0.ESC + "[17~";
            break;
          case 118:
            g.key = m ? d.C0.ESC + "[18;" + (m + 1) + "~" : d.C0.ESC + "[18~";
            break;
          case 119:
            g.key = m ? d.C0.ESC + "[19;" + (m + 1) + "~" : d.C0.ESC + "[19~";
            break;
          case 120:
            g.key = m ? d.C0.ESC + "[20;" + (m + 1) + "~" : d.C0.ESC + "[20~";
            break;
          case 121:
            g.key = m ? d.C0.ESC + "[21;" + (m + 1) + "~" : d.C0.ESC + "[21~";
            break;
          case 122:
            g.key = m ? d.C0.ESC + "[23;" + (m + 1) + "~" : d.C0.ESC + "[23~";
            break;
          case 123:
            g.key = m ? d.C0.ESC + "[24;" + (m + 1) + "~" : d.C0.ESC + "[24~";
            break;
          default:
            if (!u.ctrlKey || u.shiftKey || u.altKey || u.metaKey)
              if (b && !k || !u.altKey || u.metaKey)
                !b || u.altKey || u.ctrlKey || u.shiftKey || !u.metaKey ? u.key && !u.ctrlKey && !u.altKey && !u.metaKey && u.keyCode >= 48 && u.key.length === 1 ? g.key = u.key : u.key && u.ctrlKey && (u.key === "_" && (g.key = d.C0.US), u.key === "@" && (g.key = d.C0.NUL)) : u.keyCode === 65 && (g.type = 1);
              else {
                const c = h[u.keyCode], _ = c == null ? void 0 : c[u.shiftKey ? 1 : 0];
                if (_)
                  g.key = d.C0.ESC + _;
                else if (u.keyCode >= 65 && u.keyCode <= 90) {
                  const f = u.ctrlKey ? u.keyCode - 64 : u.keyCode + 32;
                  let v = String.fromCharCode(f);
                  u.shiftKey && (v = v.toUpperCase()), g.key = d.C0.ESC + v;
                } else if (u.keyCode === 32)
                  g.key = d.C0.ESC + (u.ctrlKey ? d.C0.NUL : " ");
                else if (u.key === "Dead" && u.code.startsWith("Key")) {
                  let f = u.code.slice(3, 4);
                  u.shiftKey || (f = f.toLowerCase()), g.key = d.C0.ESC + f, g.cancel = !0;
                }
              }
            else
              u.keyCode >= 65 && u.keyCode <= 90 ? g.key = String.fromCharCode(u.keyCode - 64) : u.keyCode === 32 ? g.key = d.C0.NUL : u.keyCode >= 51 && u.keyCode <= 55 ? g.key = String.fromCharCode(u.keyCode - 51 + 27) : u.keyCode === 56 ? g.key = d.C0.DEL : u.keyCode === 219 ? g.key = d.C0.ESC : u.keyCode === 220 ? g.key = d.C0.FS : u.keyCode === 221 && (g.key = d.C0.GS);
        }
        return g;
      };
    }, 482: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.Utf8ToUtf32 = o.StringToUtf32 = o.utf32ToString = o.stringFromCodePoint = void 0, o.stringFromCodePoint = function(s) {
        return s > 65535 ? (s -= 65536, String.fromCharCode(55296 + (s >> 10)) + String.fromCharCode(s % 1024 + 56320)) : String.fromCharCode(s);
      }, o.utf32ToString = function(s, d = 0, h = s.length) {
        let u = "";
        for (let p = d; p < h; ++p) {
          let b = s[p];
          b > 65535 ? (b -= 65536, u += String.fromCharCode(55296 + (b >> 10)) + String.fromCharCode(b % 1024 + 56320)) : u += String.fromCharCode(b);
        }
        return u;
      }, o.StringToUtf32 = class {
        constructor() {
          this._interim = 0;
        }
        clear() {
          this._interim = 0;
        }
        decode(s, d) {
          const h = s.length;
          if (!h)
            return 0;
          let u = 0, p = 0;
          if (this._interim) {
            const b = s.charCodeAt(p++);
            56320 <= b && b <= 57343 ? d[u++] = 1024 * (this._interim - 55296) + b - 56320 + 65536 : (d[u++] = this._interim, d[u++] = b), this._interim = 0;
          }
          for (let b = p; b < h; ++b) {
            const k = s.charCodeAt(b);
            if (55296 <= k && k <= 56319) {
              if (++b >= h)
                return this._interim = k, u;
              const g = s.charCodeAt(b);
              56320 <= g && g <= 57343 ? d[u++] = 1024 * (k - 55296) + g - 56320 + 65536 : (d[u++] = k, d[u++] = g);
            } else
              k !== 65279 && (d[u++] = k);
          }
          return u;
        }
      }, o.Utf8ToUtf32 = class {
        constructor() {
          this.interim = new Uint8Array(3);
        }
        clear() {
          this.interim.fill(0);
        }
        decode(s, d) {
          const h = s.length;
          if (!h)
            return 0;
          let u, p, b, k, g = 0, m = 0, c = 0;
          if (this.interim[0]) {
            let v = !1, y = this.interim[0];
            y &= (224 & y) == 192 ? 31 : (240 & y) == 224 ? 15 : 7;
            let j, A = 0;
            for (; (j = 63 & this.interim[++A]) && A < 4; )
              y <<= 6, y |= j;
            const C = (224 & this.interim[0]) == 192 ? 2 : (240 & this.interim[0]) == 224 ? 3 : 4, I = C - A;
            for (; c < I; ) {
              if (c >= h)
                return 0;
              if (j = s[c++], (192 & j) != 128) {
                c--, v = !0;
                break;
              }
              this.interim[A++] = j, y <<= 6, y |= 63 & j;
            }
            v || (C === 2 ? y < 128 ? c-- : d[g++] = y : C === 3 ? y < 2048 || y >= 55296 && y <= 57343 || y === 65279 || (d[g++] = y) : y < 65536 || y > 1114111 || (d[g++] = y)), this.interim.fill(0);
          }
          const _ = h - 4;
          let f = c;
          for (; f < h; ) {
            for (; !(!(f < _) || 128 & (u = s[f]) || 128 & (p = s[f + 1]) || 128 & (b = s[f + 2]) || 128 & (k = s[f + 3])); )
              d[g++] = u, d[g++] = p, d[g++] = b, d[g++] = k, f += 4;
            if (u = s[f++], u < 128)
              d[g++] = u;
            else if ((224 & u) == 192) {
              if (f >= h)
                return this.interim[0] = u, g;
              if (p = s[f++], (192 & p) != 128) {
                f--;
                continue;
              }
              if (m = (31 & u) << 6 | 63 & p, m < 128) {
                f--;
                continue;
              }
              d[g++] = m;
            } else if ((240 & u) == 224) {
              if (f >= h)
                return this.interim[0] = u, g;
              if (p = s[f++], (192 & p) != 128) {
                f--;
                continue;
              }
              if (f >= h)
                return this.interim[0] = u, this.interim[1] = p, g;
              if (b = s[f++], (192 & b) != 128) {
                f--;
                continue;
              }
              if (m = (15 & u) << 12 | (63 & p) << 6 | 63 & b, m < 2048 || m >= 55296 && m <= 57343 || m === 65279)
                continue;
              d[g++] = m;
            } else if ((248 & u) == 240) {
              if (f >= h)
                return this.interim[0] = u, g;
              if (p = s[f++], (192 & p) != 128) {
                f--;
                continue;
              }
              if (f >= h)
                return this.interim[0] = u, this.interim[1] = p, g;
              if (b = s[f++], (192 & b) != 128) {
                f--;
                continue;
              }
              if (f >= h)
                return this.interim[0] = u, this.interim[1] = p, this.interim[2] = b, g;
              if (k = s[f++], (192 & k) != 128) {
                f--;
                continue;
              }
              if (m = (7 & u) << 18 | (63 & p) << 12 | (63 & b) << 6 | 63 & k, m < 65536 || m > 1114111)
                continue;
              d[g++] = m;
            }
          }
          return g;
        }
      };
    }, 225: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.UnicodeV6 = void 0;
      const s = [[768, 879], [1155, 1158], [1160, 1161], [1425, 1469], [1471, 1471], [1473, 1474], [1476, 1477], [1479, 1479], [1536, 1539], [1552, 1557], [1611, 1630], [1648, 1648], [1750, 1764], [1767, 1768], [1770, 1773], [1807, 1807], [1809, 1809], [1840, 1866], [1958, 1968], [2027, 2035], [2305, 2306], [2364, 2364], [2369, 2376], [2381, 2381], [2385, 2388], [2402, 2403], [2433, 2433], [2492, 2492], [2497, 2500], [2509, 2509], [2530, 2531], [2561, 2562], [2620, 2620], [2625, 2626], [2631, 2632], [2635, 2637], [2672, 2673], [2689, 2690], [2748, 2748], [2753, 2757], [2759, 2760], [2765, 2765], [2786, 2787], [2817, 2817], [2876, 2876], [2879, 2879], [2881, 2883], [2893, 2893], [2902, 2902], [2946, 2946], [3008, 3008], [3021, 3021], [3134, 3136], [3142, 3144], [3146, 3149], [3157, 3158], [3260, 3260], [3263, 3263], [3270, 3270], [3276, 3277], [3298, 3299], [3393, 3395], [3405, 3405], [3530, 3530], [3538, 3540], [3542, 3542], [3633, 3633], [3636, 3642], [3655, 3662], [3761, 3761], [3764, 3769], [3771, 3772], [3784, 3789], [3864, 3865], [3893, 3893], [3895, 3895], [3897, 3897], [3953, 3966], [3968, 3972], [3974, 3975], [3984, 3991], [3993, 4028], [4038, 4038], [4141, 4144], [4146, 4146], [4150, 4151], [4153, 4153], [4184, 4185], [4448, 4607], [4959, 4959], [5906, 5908], [5938, 5940], [5970, 5971], [6002, 6003], [6068, 6069], [6071, 6077], [6086, 6086], [6089, 6099], [6109, 6109], [6155, 6157], [6313, 6313], [6432, 6434], [6439, 6440], [6450, 6450], [6457, 6459], [6679, 6680], [6912, 6915], [6964, 6964], [6966, 6970], [6972, 6972], [6978, 6978], [7019, 7027], [7616, 7626], [7678, 7679], [8203, 8207], [8234, 8238], [8288, 8291], [8298, 8303], [8400, 8431], [12330, 12335], [12441, 12442], [43014, 43014], [43019, 43019], [43045, 43046], [64286, 64286], [65024, 65039], [65056, 65059], [65279, 65279], [65529, 65531]], d = [[68097, 68099], [68101, 68102], [68108, 68111], [68152, 68154], [68159, 68159], [119143, 119145], [119155, 119170], [119173, 119179], [119210, 119213], [119362, 119364], [917505, 917505], [917536, 917631], [917760, 917999]];
      let h;
      o.UnicodeV6 = class {
        constructor() {
          if (this.version = "6", !h) {
            h = new Uint8Array(65536), h.fill(1), h[0] = 0, h.fill(0, 1, 32), h.fill(0, 127, 160), h.fill(2, 4352, 4448), h[9001] = 2, h[9002] = 2, h.fill(2, 11904, 42192), h[12351] = 1, h.fill(2, 44032, 55204), h.fill(2, 63744, 64256), h.fill(2, 65040, 65050), h.fill(2, 65072, 65136), h.fill(2, 65280, 65377), h.fill(2, 65504, 65511);
            for (let u = 0; u < s.length; ++u)
              h.fill(0, s[u][0], s[u][1] + 1);
          }
        }
        wcwidth(u) {
          return u < 32 ? 0 : u < 127 ? 1 : u < 65536 ? h[u] : function(p, b) {
            let k, g = 0, m = b.length - 1;
            if (p < b[0][0] || p > b[m][1])
              return !1;
            for (; m >= g; )
              if (k = g + m >> 1, p > b[k][1])
                g = k + 1;
              else {
                if (!(p < b[k][0]))
                  return !0;
                m = k - 1;
              }
            return !1;
          }(u, d) ? 0 : u >= 131072 && u <= 196605 || u >= 196608 && u <= 262141 ? 2 : 1;
        }
      };
    }, 5981: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.WriteBuffer = void 0;
      const d = s(8460), h = s(844);
      class u extends h.Disposable {
        constructor(b) {
          super(), this._action = b, this._writeBuffer = [], this._callbacks = [], this._pendingData = 0, this._bufferOffset = 0, this._isSyncWriting = !1, this._syncCalls = 0, this._didUserInput = !1, this._onWriteParsed = this.register(new d.EventEmitter()), this.onWriteParsed = this._onWriteParsed.event;
        }
        handleUserInput() {
          this._didUserInput = !0;
        }
        writeSync(b, k) {
          if (k !== void 0 && this._syncCalls > k)
            return void (this._syncCalls = 0);
          if (this._pendingData += b.length, this._writeBuffer.push(b), this._callbacks.push(void 0), this._syncCalls++, this._isSyncWriting)
            return;
          let g;
          for (this._isSyncWriting = !0; g = this._writeBuffer.shift(); ) {
            this._action(g);
            const m = this._callbacks.shift();
            m && m();
          }
          this._pendingData = 0, this._bufferOffset = 2147483647, this._isSyncWriting = !1, this._syncCalls = 0;
        }
        write(b, k) {
          if (this._pendingData > 5e7)
            throw new Error("write data discarded, use flow control to avoid losing data");
          if (!this._writeBuffer.length) {
            if (this._bufferOffset = 0, this._didUserInput)
              return this._didUserInput = !1, this._pendingData += b.length, this._writeBuffer.push(b), this._callbacks.push(k), void this._innerWrite();
            setTimeout(() => this._innerWrite());
          }
          this._pendingData += b.length, this._writeBuffer.push(b), this._callbacks.push(k);
        }
        _innerWrite(b = 0, k = !0) {
          const g = b || Date.now();
          for (; this._writeBuffer.length > this._bufferOffset; ) {
            const m = this._writeBuffer[this._bufferOffset], c = this._action(m, k);
            if (c) {
              const f = (v) => Date.now() - g >= 12 ? setTimeout(() => this._innerWrite(0, v)) : this._innerWrite(g, v);
              return void c.catch((v) => (queueMicrotask(() => {
                throw v;
              }), Promise.resolve(!1))).then(f);
            }
            const _ = this._callbacks[this._bufferOffset];
            if (_ && _(), this._bufferOffset++, this._pendingData -= m.length, Date.now() - g >= 12)
              break;
          }
          this._writeBuffer.length > this._bufferOffset ? (this._bufferOffset > 50 && (this._writeBuffer = this._writeBuffer.slice(this._bufferOffset), this._callbacks = this._callbacks.slice(this._bufferOffset), this._bufferOffset = 0), setTimeout(() => this._innerWrite())) : (this._writeBuffer.length = 0, this._callbacks.length = 0, this._pendingData = 0, this._bufferOffset = 0), this._onWriteParsed.fire();
        }
      }
      o.WriteBuffer = u;
    }, 5941: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.toRgbString = o.parseColor = void 0;
      const s = /^([\da-f])\/([\da-f])\/([\da-f])$|^([\da-f]{2})\/([\da-f]{2})\/([\da-f]{2})$|^([\da-f]{3})\/([\da-f]{3})\/([\da-f]{3})$|^([\da-f]{4})\/([\da-f]{4})\/([\da-f]{4})$/, d = /^[\da-f]+$/;
      function h(u, p) {
        const b = u.toString(16), k = b.length < 2 ? "0" + b : b;
        switch (p) {
          case 4:
            return b[0];
          case 8:
            return k;
          case 12:
            return (k + k).slice(0, 3);
          default:
            return k + k;
        }
      }
      o.parseColor = function(u) {
        if (!u)
          return;
        let p = u.toLowerCase();
        if (p.indexOf("rgb:") === 0) {
          p = p.slice(4);
          const b = s.exec(p);
          if (b) {
            const k = b[1] ? 15 : b[4] ? 255 : b[7] ? 4095 : 65535;
            return [Math.round(parseInt(b[1] || b[4] || b[7] || b[10], 16) / k * 255), Math.round(parseInt(b[2] || b[5] || b[8] || b[11], 16) / k * 255), Math.round(parseInt(b[3] || b[6] || b[9] || b[12], 16) / k * 255)];
          }
        } else if (p.indexOf("#") === 0 && (p = p.slice(1), d.exec(p) && [3, 6, 9, 12].includes(p.length))) {
          const b = p.length / 3, k = [0, 0, 0];
          for (let g = 0; g < 3; ++g) {
            const m = parseInt(p.slice(b * g, b * g + b), 16);
            k[g] = b === 1 ? m << 4 : b === 2 ? m : b === 3 ? m >> 4 : m >> 8;
          }
          return k;
        }
      }, o.toRgbString = function(u, p = 16) {
        const [b, k, g] = u;
        return `rgb:${h(b, p)}/${h(k, p)}/${h(g, p)}`;
      };
    }, 5770: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.PAYLOAD_LIMIT = void 0, o.PAYLOAD_LIMIT = 1e7;
    }, 6351: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.DcsHandler = o.DcsParser = void 0;
      const d = s(482), h = s(8742), u = s(5770), p = [];
      o.DcsParser = class {
        constructor() {
          this._handlers = /* @__PURE__ */ Object.create(null), this._active = p, this._ident = 0, this._handlerFb = () => {
          }, this._stack = { paused: !1, loopPosition: 0, fallThrough: !1 };
        }
        dispose() {
          this._handlers = /* @__PURE__ */ Object.create(null), this._handlerFb = () => {
          }, this._active = p;
        }
        registerHandler(k, g) {
          this._handlers[k] === void 0 && (this._handlers[k] = []);
          const m = this._handlers[k];
          return m.push(g), { dispose: () => {
            const c = m.indexOf(g);
            c !== -1 && m.splice(c, 1);
          } };
        }
        clearHandler(k) {
          this._handlers[k] && delete this._handlers[k];
        }
        setHandlerFallback(k) {
          this._handlerFb = k;
        }
        reset() {
          if (this._active.length)
            for (let k = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; k >= 0; --k)
              this._active[k].unhook(!1);
          this._stack.paused = !1, this._active = p, this._ident = 0;
        }
        hook(k, g) {
          if (this.reset(), this._ident = k, this._active = this._handlers[k] || p, this._active.length)
            for (let m = this._active.length - 1; m >= 0; m--)
              this._active[m].hook(g);
          else
            this._handlerFb(this._ident, "HOOK", g);
        }
        put(k, g, m) {
          if (this._active.length)
            for (let c = this._active.length - 1; c >= 0; c--)
              this._active[c].put(k, g, m);
          else
            this._handlerFb(this._ident, "PUT", (0, d.utf32ToString)(k, g, m));
        }
        unhook(k, g = !0) {
          if (this._active.length) {
            let m = !1, c = this._active.length - 1, _ = !1;
            if (this._stack.paused && (c = this._stack.loopPosition - 1, m = g, _ = this._stack.fallThrough, this._stack.paused = !1), !_ && m === !1) {
              for (; c >= 0 && (m = this._active[c].unhook(k), m !== !0); c--)
                if (m instanceof Promise)
                  return this._stack.paused = !0, this._stack.loopPosition = c, this._stack.fallThrough = !1, m;
              c--;
            }
            for (; c >= 0; c--)
              if (m = this._active[c].unhook(!1), m instanceof Promise)
                return this._stack.paused = !0, this._stack.loopPosition = c, this._stack.fallThrough = !0, m;
          } else
            this._handlerFb(this._ident, "UNHOOK", k);
          this._active = p, this._ident = 0;
        }
      };
      const b = new h.Params();
      b.addParam(0), o.DcsHandler = class {
        constructor(k) {
          this._handler = k, this._data = "", this._params = b, this._hitLimit = !1;
        }
        hook(k) {
          this._params = k.length > 1 || k.params[0] ? k.clone() : b, this._data = "", this._hitLimit = !1;
        }
        put(k, g, m) {
          this._hitLimit || (this._data += (0, d.utf32ToString)(k, g, m), this._data.length > u.PAYLOAD_LIMIT && (this._data = "", this._hitLimit = !0));
        }
        unhook(k) {
          let g = !1;
          if (this._hitLimit)
            g = !1;
          else if (k && (g = this._handler(this._data, this._params), g instanceof Promise))
            return g.then((m) => (this._params = b, this._data = "", this._hitLimit = !1, m));
          return this._params = b, this._data = "", this._hitLimit = !1, g;
        }
      };
    }, 2015: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.EscapeSequenceParser = o.VT500_TRANSITION_TABLE = o.TransitionTable = void 0;
      const d = s(844), h = s(8742), u = s(6242), p = s(6351);
      class b {
        constructor(c) {
          this.table = new Uint8Array(c);
        }
        setDefault(c, _) {
          this.table.fill(c << 4 | _);
        }
        add(c, _, f, v) {
          this.table[_ << 8 | c] = f << 4 | v;
        }
        addMany(c, _, f, v) {
          for (let y = 0; y < c.length; y++)
            this.table[_ << 8 | c[y]] = f << 4 | v;
        }
      }
      o.TransitionTable = b;
      const k = 160;
      o.VT500_TRANSITION_TABLE = function() {
        const m = new b(4095), c = Array.apply(null, Array(256)).map((A, C) => C), _ = (A, C) => c.slice(A, C), f = _(32, 127), v = _(0, 24);
        v.push(25), v.push.apply(v, _(28, 32));
        const y = _(0, 14);
        let j;
        for (j in m.setDefault(1, 0), m.addMany(f, 0, 2, 0), y)
          m.addMany([24, 26, 153, 154], j, 3, 0), m.addMany(_(128, 144), j, 3, 0), m.addMany(_(144, 152), j, 3, 0), m.add(156, j, 0, 0), m.add(27, j, 11, 1), m.add(157, j, 4, 8), m.addMany([152, 158, 159], j, 0, 7), m.add(155, j, 11, 3), m.add(144, j, 11, 9);
        return m.addMany(v, 0, 3, 0), m.addMany(v, 1, 3, 1), m.add(127, 1, 0, 1), m.addMany(v, 8, 0, 8), m.addMany(v, 3, 3, 3), m.add(127, 3, 0, 3), m.addMany(v, 4, 3, 4), m.add(127, 4, 0, 4), m.addMany(v, 6, 3, 6), m.addMany(v, 5, 3, 5), m.add(127, 5, 0, 5), m.addMany(v, 2, 3, 2), m.add(127, 2, 0, 2), m.add(93, 1, 4, 8), m.addMany(f, 8, 5, 8), m.add(127, 8, 5, 8), m.addMany([156, 27, 24, 26, 7], 8, 6, 0), m.addMany(_(28, 32), 8, 0, 8), m.addMany([88, 94, 95], 1, 0, 7), m.addMany(f, 7, 0, 7), m.addMany(v, 7, 0, 7), m.add(156, 7, 0, 0), m.add(127, 7, 0, 7), m.add(91, 1, 11, 3), m.addMany(_(64, 127), 3, 7, 0), m.addMany(_(48, 60), 3, 8, 4), m.addMany([60, 61, 62, 63], 3, 9, 4), m.addMany(_(48, 60), 4, 8, 4), m.addMany(_(64, 127), 4, 7, 0), m.addMany([60, 61, 62, 63], 4, 0, 6), m.addMany(_(32, 64), 6, 0, 6), m.add(127, 6, 0, 6), m.addMany(_(64, 127), 6, 0, 0), m.addMany(_(32, 48), 3, 9, 5), m.addMany(_(32, 48), 5, 9, 5), m.addMany(_(48, 64), 5, 0, 6), m.addMany(_(64, 127), 5, 7, 0), m.addMany(_(32, 48), 4, 9, 5), m.addMany(_(32, 48), 1, 9, 2), m.addMany(_(32, 48), 2, 9, 2), m.addMany(_(48, 127), 2, 10, 0), m.addMany(_(48, 80), 1, 10, 0), m.addMany(_(81, 88), 1, 10, 0), m.addMany([89, 90, 92], 1, 10, 0), m.addMany(_(96, 127), 1, 10, 0), m.add(80, 1, 11, 9), m.addMany(v, 9, 0, 9), m.add(127, 9, 0, 9), m.addMany(_(28, 32), 9, 0, 9), m.addMany(_(32, 48), 9, 9, 12), m.addMany(_(48, 60), 9, 8, 10), m.addMany([60, 61, 62, 63], 9, 9, 10), m.addMany(v, 11, 0, 11), m.addMany(_(32, 128), 11, 0, 11), m.addMany(_(28, 32), 11, 0, 11), m.addMany(v, 10, 0, 10), m.add(127, 10, 0, 10), m.addMany(_(28, 32), 10, 0, 10), m.addMany(_(48, 60), 10, 8, 10), m.addMany([60, 61, 62, 63], 10, 0, 11), m.addMany(_(32, 48), 10, 9, 12), m.addMany(v, 12, 0, 12), m.add(127, 12, 0, 12), m.addMany(_(28, 32), 12, 0, 12), m.addMany(_(32, 48), 12, 9, 12), m.addMany(_(48, 64), 12, 0, 11), m.addMany(_(64, 127), 12, 12, 13), m.addMany(_(64, 127), 10, 12, 13), m.addMany(_(64, 127), 9, 12, 13), m.addMany(v, 13, 13, 13), m.addMany(f, 13, 13, 13), m.add(127, 13, 0, 13), m.addMany([27, 156, 24, 26], 13, 14, 0), m.add(k, 0, 2, 0), m.add(k, 8, 5, 8), m.add(k, 6, 0, 6), m.add(k, 11, 0, 11), m.add(k, 13, 13, 13), m;
      }();
      class g extends d.Disposable {
        constructor(c = o.VT500_TRANSITION_TABLE) {
          super(), this._transitions = c, this._parseStack = { state: 0, handlers: [], handlerPos: 0, transition: 0, chunkPos: 0 }, this.initialState = 0, this.currentState = this.initialState, this._params = new h.Params(), this._params.addParam(0), this._collect = 0, this.precedingCodepoint = 0, this._printHandlerFb = (_, f, v) => {
          }, this._executeHandlerFb = (_) => {
          }, this._csiHandlerFb = (_, f) => {
          }, this._escHandlerFb = (_) => {
          }, this._errorHandlerFb = (_) => _, this._printHandler = this._printHandlerFb, this._executeHandlers = /* @__PURE__ */ Object.create(null), this._csiHandlers = /* @__PURE__ */ Object.create(null), this._escHandlers = /* @__PURE__ */ Object.create(null), this.register((0, d.toDisposable)(() => {
            this._csiHandlers = /* @__PURE__ */ Object.create(null), this._executeHandlers = /* @__PURE__ */ Object.create(null), this._escHandlers = /* @__PURE__ */ Object.create(null);
          })), this._oscParser = this.register(new u.OscParser()), this._dcsParser = this.register(new p.DcsParser()), this._errorHandler = this._errorHandlerFb, this.registerEscHandler({ final: "\\" }, () => !0);
        }
        _identifier(c, _ = [64, 126]) {
          let f = 0;
          if (c.prefix) {
            if (c.prefix.length > 1)
              throw new Error("only one byte as prefix supported");
            if (f = c.prefix.charCodeAt(0), f && 60 > f || f > 63)
              throw new Error("prefix must be in range 0x3c .. 0x3f");
          }
          if (c.intermediates) {
            if (c.intermediates.length > 2)
              throw new Error("only two bytes as intermediates are supported");
            for (let y = 0; y < c.intermediates.length; ++y) {
              const j = c.intermediates.charCodeAt(y);
              if (32 > j || j > 47)
                throw new Error("intermediate must be in range 0x20 .. 0x2f");
              f <<= 8, f |= j;
            }
          }
          if (c.final.length !== 1)
            throw new Error("final must be a single byte");
          const v = c.final.charCodeAt(0);
          if (_[0] > v || v > _[1])
            throw new Error(`final must be in range ${_[0]} .. ${_[1]}`);
          return f <<= 8, f |= v, f;
        }
        identToString(c) {
          const _ = [];
          for (; c; )
            _.push(String.fromCharCode(255 & c)), c >>= 8;
          return _.reverse().join("");
        }
        setPrintHandler(c) {
          this._printHandler = c;
        }
        clearPrintHandler() {
          this._printHandler = this._printHandlerFb;
        }
        registerEscHandler(c, _) {
          const f = this._identifier(c, [48, 126]);
          this._escHandlers[f] === void 0 && (this._escHandlers[f] = []);
          const v = this._escHandlers[f];
          return v.push(_), { dispose: () => {
            const y = v.indexOf(_);
            y !== -1 && v.splice(y, 1);
          } };
        }
        clearEscHandler(c) {
          this._escHandlers[this._identifier(c, [48, 126])] && delete this._escHandlers[this._identifier(c, [48, 126])];
        }
        setEscHandlerFallback(c) {
          this._escHandlerFb = c;
        }
        setExecuteHandler(c, _) {
          this._executeHandlers[c.charCodeAt(0)] = _;
        }
        clearExecuteHandler(c) {
          this._executeHandlers[c.charCodeAt(0)] && delete this._executeHandlers[c.charCodeAt(0)];
        }
        setExecuteHandlerFallback(c) {
          this._executeHandlerFb = c;
        }
        registerCsiHandler(c, _) {
          const f = this._identifier(c);
          this._csiHandlers[f] === void 0 && (this._csiHandlers[f] = []);
          const v = this._csiHandlers[f];
          return v.push(_), { dispose: () => {
            const y = v.indexOf(_);
            y !== -1 && v.splice(y, 1);
          } };
        }
        clearCsiHandler(c) {
          this._csiHandlers[this._identifier(c)] && delete this._csiHandlers[this._identifier(c)];
        }
        setCsiHandlerFallback(c) {
          this._csiHandlerFb = c;
        }
        registerDcsHandler(c, _) {
          return this._dcsParser.registerHandler(this._identifier(c), _);
        }
        clearDcsHandler(c) {
          this._dcsParser.clearHandler(this._identifier(c));
        }
        setDcsHandlerFallback(c) {
          this._dcsParser.setHandlerFallback(c);
        }
        registerOscHandler(c, _) {
          return this._oscParser.registerHandler(c, _);
        }
        clearOscHandler(c) {
          this._oscParser.clearHandler(c);
        }
        setOscHandlerFallback(c) {
          this._oscParser.setHandlerFallback(c);
        }
        setErrorHandler(c) {
          this._errorHandler = c;
        }
        clearErrorHandler() {
          this._errorHandler = this._errorHandlerFb;
        }
        reset() {
          this.currentState = this.initialState, this._oscParser.reset(), this._dcsParser.reset(), this._params.reset(), this._params.addParam(0), this._collect = 0, this.precedingCodepoint = 0, this._parseStack.state !== 0 && (this._parseStack.state = 2, this._parseStack.handlers = []);
        }
        _preserveStack(c, _, f, v, y) {
          this._parseStack.state = c, this._parseStack.handlers = _, this._parseStack.handlerPos = f, this._parseStack.transition = v, this._parseStack.chunkPos = y;
        }
        parse(c, _, f) {
          let v, y = 0, j = 0, A = 0;
          if (this._parseStack.state)
            if (this._parseStack.state === 2)
              this._parseStack.state = 0, A = this._parseStack.chunkPos + 1;
            else {
              if (f === void 0 || this._parseStack.state === 1)
                throw this._parseStack.state = 1, new Error("improper continuation due to previous async handler, giving up parsing");
              const C = this._parseStack.handlers;
              let I = this._parseStack.handlerPos - 1;
              switch (this._parseStack.state) {
                case 3:
                  if (f === !1 && I > -1) {
                    for (; I >= 0 && (v = C[I](this._params), v !== !0); I--)
                      if (v instanceof Promise)
                        return this._parseStack.handlerPos = I, v;
                  }
                  this._parseStack.handlers = [];
                  break;
                case 4:
                  if (f === !1 && I > -1) {
                    for (; I >= 0 && (v = C[I](), v !== !0); I--)
                      if (v instanceof Promise)
                        return this._parseStack.handlerPos = I, v;
                  }
                  this._parseStack.handlers = [];
                  break;
                case 6:
                  if (y = c[this._parseStack.chunkPos], v = this._dcsParser.unhook(y !== 24 && y !== 26, f), v)
                    return v;
                  y === 27 && (this._parseStack.transition |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0;
                  break;
                case 5:
                  if (y = c[this._parseStack.chunkPos], v = this._oscParser.end(y !== 24 && y !== 26, f), v)
                    return v;
                  y === 27 && (this._parseStack.transition |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0;
              }
              this._parseStack.state = 0, A = this._parseStack.chunkPos + 1, this.precedingCodepoint = 0, this.currentState = 15 & this._parseStack.transition;
            }
          for (let C = A; C < _; ++C) {
            switch (y = c[C], j = this._transitions.table[this.currentState << 8 | (y < 160 ? y : k)], j >> 4) {
              case 2:
                for (let N = C + 1; ; ++N) {
                  if (N >= _ || (y = c[N]) < 32 || y > 126 && y < k) {
                    this._printHandler(c, C, N), C = N - 1;
                    break;
                  }
                  if (++N >= _ || (y = c[N]) < 32 || y > 126 && y < k) {
                    this._printHandler(c, C, N), C = N - 1;
                    break;
                  }
                  if (++N >= _ || (y = c[N]) < 32 || y > 126 && y < k) {
                    this._printHandler(c, C, N), C = N - 1;
                    break;
                  }
                  if (++N >= _ || (y = c[N]) < 32 || y > 126 && y < k) {
                    this._printHandler(c, C, N), C = N - 1;
                    break;
                  }
                }
                break;
              case 3:
                this._executeHandlers[y] ? this._executeHandlers[y]() : this._executeHandlerFb(y), this.precedingCodepoint = 0;
                break;
              case 0:
                break;
              case 1:
                if (this._errorHandler({ position: C, code: y, currentState: this.currentState, collect: this._collect, params: this._params, abort: !1 }).abort)
                  return;
                break;
              case 7:
                const I = this._csiHandlers[this._collect << 8 | y];
                let z = I ? I.length - 1 : -1;
                for (; z >= 0 && (v = I[z](this._params), v !== !0); z--)
                  if (v instanceof Promise)
                    return this._preserveStack(3, I, z, j, C), v;
                z < 0 && this._csiHandlerFb(this._collect << 8 | y, this._params), this.precedingCodepoint = 0;
                break;
              case 8:
                do
                  switch (y) {
                    case 59:
                      this._params.addParam(0);
                      break;
                    case 58:
                      this._params.addSubParam(-1);
                      break;
                    default:
                      this._params.addDigit(y - 48);
                  }
                while (++C < _ && (y = c[C]) > 47 && y < 60);
                C--;
                break;
              case 9:
                this._collect <<= 8, this._collect |= y;
                break;
              case 10:
                const P = this._escHandlers[this._collect << 8 | y];
                let L = P ? P.length - 1 : -1;
                for (; L >= 0 && (v = P[L](), v !== !0); L--)
                  if (v instanceof Promise)
                    return this._preserveStack(4, P, L, j, C), v;
                L < 0 && this._escHandlerFb(this._collect << 8 | y), this.precedingCodepoint = 0;
                break;
              case 11:
                this._params.reset(), this._params.addParam(0), this._collect = 0;
                break;
              case 12:
                this._dcsParser.hook(this._collect << 8 | y, this._params);
                break;
              case 13:
                for (let N = C + 1; ; ++N)
                  if (N >= _ || (y = c[N]) === 24 || y === 26 || y === 27 || y > 127 && y < k) {
                    this._dcsParser.put(c, C, N), C = N - 1;
                    break;
                  }
                break;
              case 14:
                if (v = this._dcsParser.unhook(y !== 24 && y !== 26), v)
                  return this._preserveStack(6, [], 0, j, C), v;
                y === 27 && (j |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0, this.precedingCodepoint = 0;
                break;
              case 4:
                this._oscParser.start();
                break;
              case 5:
                for (let N = C + 1; ; N++)
                  if (N >= _ || (y = c[N]) < 32 || y > 127 && y < k) {
                    this._oscParser.put(c, C, N), C = N - 1;
                    break;
                  }
                break;
              case 6:
                if (v = this._oscParser.end(y !== 24 && y !== 26), v)
                  return this._preserveStack(5, [], 0, j, C), v;
                y === 27 && (j |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0, this.precedingCodepoint = 0;
            }
            this.currentState = 15 & j;
          }
        }
      }
      o.EscapeSequenceParser = g;
    }, 6242: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.OscHandler = o.OscParser = void 0;
      const d = s(5770), h = s(482), u = [];
      o.OscParser = class {
        constructor() {
          this._state = 0, this._active = u, this._id = -1, this._handlers = /* @__PURE__ */ Object.create(null), this._handlerFb = () => {
          }, this._stack = { paused: !1, loopPosition: 0, fallThrough: !1 };
        }
        registerHandler(p, b) {
          this._handlers[p] === void 0 && (this._handlers[p] = []);
          const k = this._handlers[p];
          return k.push(b), { dispose: () => {
            const g = k.indexOf(b);
            g !== -1 && k.splice(g, 1);
          } };
        }
        clearHandler(p) {
          this._handlers[p] && delete this._handlers[p];
        }
        setHandlerFallback(p) {
          this._handlerFb = p;
        }
        dispose() {
          this._handlers = /* @__PURE__ */ Object.create(null), this._handlerFb = () => {
          }, this._active = u;
        }
        reset() {
          if (this._state === 2)
            for (let p = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; p >= 0; --p)
              this._active[p].end(!1);
          this._stack.paused = !1, this._active = u, this._id = -1, this._state = 0;
        }
        _start() {
          if (this._active = this._handlers[this._id] || u, this._active.length)
            for (let p = this._active.length - 1; p >= 0; p--)
              this._active[p].start();
          else
            this._handlerFb(this._id, "START");
        }
        _put(p, b, k) {
          if (this._active.length)
            for (let g = this._active.length - 1; g >= 0; g--)
              this._active[g].put(p, b, k);
          else
            this._handlerFb(this._id, "PUT", (0, h.utf32ToString)(p, b, k));
        }
        start() {
          this.reset(), this._state = 1;
        }
        put(p, b, k) {
          if (this._state !== 3) {
            if (this._state === 1)
              for (; b < k; ) {
                const g = p[b++];
                if (g === 59) {
                  this._state = 2, this._start();
                  break;
                }
                if (g < 48 || 57 < g)
                  return void (this._state = 3);
                this._id === -1 && (this._id = 0), this._id = 10 * this._id + g - 48;
              }
            this._state === 2 && k - b > 0 && this._put(p, b, k);
          }
        }
        end(p, b = !0) {
          if (this._state !== 0) {
            if (this._state !== 3)
              if (this._state === 1 && this._start(), this._active.length) {
                let k = !1, g = this._active.length - 1, m = !1;
                if (this._stack.paused && (g = this._stack.loopPosition - 1, k = b, m = this._stack.fallThrough, this._stack.paused = !1), !m && k === !1) {
                  for (; g >= 0 && (k = this._active[g].end(p), k !== !0); g--)
                    if (k instanceof Promise)
                      return this._stack.paused = !0, this._stack.loopPosition = g, this._stack.fallThrough = !1, k;
                  g--;
                }
                for (; g >= 0; g--)
                  if (k = this._active[g].end(!1), k instanceof Promise)
                    return this._stack.paused = !0, this._stack.loopPosition = g, this._stack.fallThrough = !0, k;
              } else
                this._handlerFb(this._id, "END", p);
            this._active = u, this._id = -1, this._state = 0;
          }
        }
      }, o.OscHandler = class {
        constructor(p) {
          this._handler = p, this._data = "", this._hitLimit = !1;
        }
        start() {
          this._data = "", this._hitLimit = !1;
        }
        put(p, b, k) {
          this._hitLimit || (this._data += (0, h.utf32ToString)(p, b, k), this._data.length > d.PAYLOAD_LIMIT && (this._data = "", this._hitLimit = !0));
        }
        end(p) {
          let b = !1;
          if (this._hitLimit)
            b = !1;
          else if (p && (b = this._handler(this._data), b instanceof Promise))
            return b.then((k) => (this._data = "", this._hitLimit = !1, k));
          return this._data = "", this._hitLimit = !1, b;
        }
      };
    }, 8742: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.Params = void 0;
      const s = 2147483647;
      class d {
        static fromArray(u) {
          const p = new d();
          if (!u.length)
            return p;
          for (let b = Array.isArray(u[0]) ? 1 : 0; b < u.length; ++b) {
            const k = u[b];
            if (Array.isArray(k))
              for (let g = 0; g < k.length; ++g)
                p.addSubParam(k[g]);
            else
              p.addParam(k);
          }
          return p;
        }
        constructor(u = 32, p = 32) {
          if (this.maxLength = u, this.maxSubParamsLength = p, p > 256)
            throw new Error("maxSubParamsLength must not be greater than 256");
          this.params = new Int32Array(u), this.length = 0, this._subParams = new Int32Array(p), this._subParamsLength = 0, this._subParamsIdx = new Uint16Array(u), this._rejectDigits = !1, this._rejectSubDigits = !1, this._digitIsSub = !1;
        }
        clone() {
          const u = new d(this.maxLength, this.maxSubParamsLength);
          return u.params.set(this.params), u.length = this.length, u._subParams.set(this._subParams), u._subParamsLength = this._subParamsLength, u._subParamsIdx.set(this._subParamsIdx), u._rejectDigits = this._rejectDigits, u._rejectSubDigits = this._rejectSubDigits, u._digitIsSub = this._digitIsSub, u;
        }
        toArray() {
          const u = [];
          for (let p = 0; p < this.length; ++p) {
            u.push(this.params[p]);
            const b = this._subParamsIdx[p] >> 8, k = 255 & this._subParamsIdx[p];
            k - b > 0 && u.push(Array.prototype.slice.call(this._subParams, b, k));
          }
          return u;
        }
        reset() {
          this.length = 0, this._subParamsLength = 0, this._rejectDigits = !1, this._rejectSubDigits = !1, this._digitIsSub = !1;
        }
        addParam(u) {
          if (this._digitIsSub = !1, this.length >= this.maxLength)
            this._rejectDigits = !0;
          else {
            if (u < -1)
              throw new Error("values lesser than -1 are not allowed");
            this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength, this.params[this.length++] = u > s ? s : u;
          }
        }
        addSubParam(u) {
          if (this._digitIsSub = !0, this.length)
            if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength)
              this._rejectSubDigits = !0;
            else {
              if (u < -1)
                throw new Error("values lesser than -1 are not allowed");
              this._subParams[this._subParamsLength++] = u > s ? s : u, this._subParamsIdx[this.length - 1]++;
            }
        }
        hasSubParams(u) {
          return (255 & this._subParamsIdx[u]) - (this._subParamsIdx[u] >> 8) > 0;
        }
        getSubParams(u) {
          const p = this._subParamsIdx[u] >> 8, b = 255 & this._subParamsIdx[u];
          return b - p > 0 ? this._subParams.subarray(p, b) : null;
        }
        getSubParamsAll() {
          const u = {};
          for (let p = 0; p < this.length; ++p) {
            const b = this._subParamsIdx[p] >> 8, k = 255 & this._subParamsIdx[p];
            k - b > 0 && (u[p] = this._subParams.slice(b, k));
          }
          return u;
        }
        addDigit(u) {
          let p;
          if (this._rejectDigits || !(p = this._digitIsSub ? this._subParamsLength : this.length) || this._digitIsSub && this._rejectSubDigits)
            return;
          const b = this._digitIsSub ? this._subParams : this.params, k = b[p - 1];
          b[p - 1] = ~k ? Math.min(10 * k + u, s) : u;
        }
      }
      o.Params = d;
    }, 5741: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.AddonManager = void 0, o.AddonManager = class {
        constructor() {
          this._addons = [];
        }
        dispose() {
          for (let s = this._addons.length - 1; s >= 0; s--)
            this._addons[s].instance.dispose();
        }
        loadAddon(s, d) {
          const h = { instance: d, dispose: d.dispose, isDisposed: !1 };
          this._addons.push(h), d.dispose = () => this._wrappedAddonDispose(h), d.activate(s);
        }
        _wrappedAddonDispose(s) {
          if (s.isDisposed)
            return;
          let d = -1;
          for (let h = 0; h < this._addons.length; h++)
            if (this._addons[h] === s) {
              d = h;
              break;
            }
          if (d === -1)
            throw new Error("Could not dispose an addon that has not been loaded");
          s.isDisposed = !0, s.dispose.apply(s.instance), this._addons.splice(d, 1);
        }
      };
    }, 8771: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.BufferApiView = void 0;
      const d = s(3785), h = s(511);
      o.BufferApiView = class {
        constructor(u, p) {
          this._buffer = u, this.type = p;
        }
        init(u) {
          return this._buffer = u, this;
        }
        get cursorY() {
          return this._buffer.y;
        }
        get cursorX() {
          return this._buffer.x;
        }
        get viewportY() {
          return this._buffer.ydisp;
        }
        get baseY() {
          return this._buffer.ybase;
        }
        get length() {
          return this._buffer.lines.length;
        }
        getLine(u) {
          const p = this._buffer.lines.get(u);
          if (p)
            return new d.BufferLineApiView(p);
        }
        getNullCell() {
          return new h.CellData();
        }
      };
    }, 3785: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.BufferLineApiView = void 0;
      const d = s(511);
      o.BufferLineApiView = class {
        constructor(h) {
          this._line = h;
        }
        get isWrapped() {
          return this._line.isWrapped;
        }
        get length() {
          return this._line.length;
        }
        getCell(h, u) {
          if (!(h < 0 || h >= this._line.length))
            return u ? (this._line.loadCell(h, u), u) : this._line.loadCell(h, new d.CellData());
        }
        translateToString(h, u, p) {
          return this._line.translateToString(h, u, p);
        }
      };
    }, 8285: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.BufferNamespaceApi = void 0;
      const d = s(8771), h = s(8460), u = s(844);
      class p extends u.Disposable {
        constructor(k) {
          super(), this._core = k, this._onBufferChange = this.register(new h.EventEmitter()), this.onBufferChange = this._onBufferChange.event, this._normal = new d.BufferApiView(this._core.buffers.normal, "normal"), this._alternate = new d.BufferApiView(this._core.buffers.alt, "alternate"), this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));
        }
        get active() {
          if (this._core.buffers.active === this._core.buffers.normal)
            return this.normal;
          if (this._core.buffers.active === this._core.buffers.alt)
            return this.alternate;
          throw new Error("Active buffer is neither normal nor alternate");
        }
        get normal() {
          return this._normal.init(this._core.buffers.normal);
        }
        get alternate() {
          return this._alternate.init(this._core.buffers.alt);
        }
      }
      o.BufferNamespaceApi = p;
    }, 7975: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.ParserApi = void 0, o.ParserApi = class {
        constructor(s) {
          this._core = s;
        }
        registerCsiHandler(s, d) {
          return this._core.registerCsiHandler(s, (h) => d(h.toArray()));
        }
        addCsiHandler(s, d) {
          return this.registerCsiHandler(s, d);
        }
        registerDcsHandler(s, d) {
          return this._core.registerDcsHandler(s, (h, u) => d(h, u.toArray()));
        }
        addDcsHandler(s, d) {
          return this.registerDcsHandler(s, d);
        }
        registerEscHandler(s, d) {
          return this._core.registerEscHandler(s, d);
        }
        addEscHandler(s, d) {
          return this.registerEscHandler(s, d);
        }
        registerOscHandler(s, d) {
          return this._core.registerOscHandler(s, d);
        }
        addOscHandler(s, d) {
          return this.registerOscHandler(s, d);
        }
      };
    }, 7090: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.UnicodeApi = void 0, o.UnicodeApi = class {
        constructor(s) {
          this._core = s;
        }
        register(s) {
          this._core.unicodeService.register(s);
        }
        get versions() {
          return this._core.unicodeService.versions;
        }
        get activeVersion() {
          return this._core.unicodeService.activeVersion;
        }
        set activeVersion(s) {
          this._core.unicodeService.activeVersion = s;
        }
      };
    }, 744: function(l, o, s) {
      var d = this && this.__decorate || function(m, c, _, f) {
        var v, y = arguments.length, j = y < 3 ? c : f === null ? f = Object.getOwnPropertyDescriptor(c, _) : f;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          j = Reflect.decorate(m, c, _, f);
        else
          for (var A = m.length - 1; A >= 0; A--)
            (v = m[A]) && (j = (y < 3 ? v(j) : y > 3 ? v(c, _, j) : v(c, _)) || j);
        return y > 3 && j && Object.defineProperty(c, _, j), j;
      }, h = this && this.__param || function(m, c) {
        return function(_, f) {
          c(_, f, m);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.BufferService = o.MINIMUM_ROWS = o.MINIMUM_COLS = void 0;
      const u = s(8460), p = s(844), b = s(5295), k = s(2585);
      o.MINIMUM_COLS = 2, o.MINIMUM_ROWS = 1;
      let g = o.BufferService = class extends p.Disposable {
        get buffer() {
          return this.buffers.active;
        }
        constructor(m) {
          super(), this.isUserScrolling = !1, this._onResize = this.register(new u.EventEmitter()), this.onResize = this._onResize.event, this._onScroll = this.register(new u.EventEmitter()), this.onScroll = this._onScroll.event, this.cols = Math.max(m.rawOptions.cols || 0, o.MINIMUM_COLS), this.rows = Math.max(m.rawOptions.rows || 0, o.MINIMUM_ROWS), this.buffers = this.register(new b.BufferSet(m, this));
        }
        resize(m, c) {
          this.cols = m, this.rows = c, this.buffers.resize(m, c), this._onResize.fire({ cols: m, rows: c });
        }
        reset() {
          this.buffers.reset(), this.isUserScrolling = !1;
        }
        scroll(m, c = !1) {
          const _ = this.buffer;
          let f;
          f = this._cachedBlankLine, f && f.length === this.cols && f.getFg(0) === m.fg && f.getBg(0) === m.bg || (f = _.getBlankLine(m, c), this._cachedBlankLine = f), f.isWrapped = c;
          const v = _.ybase + _.scrollTop, y = _.ybase + _.scrollBottom;
          if (_.scrollTop === 0) {
            const j = _.lines.isFull;
            y === _.lines.length - 1 ? j ? _.lines.recycle().copyFrom(f) : _.lines.push(f.clone()) : _.lines.splice(y + 1, 0, f.clone()), j ? this.isUserScrolling && (_.ydisp = Math.max(_.ydisp - 1, 0)) : (_.ybase++, this.isUserScrolling || _.ydisp++);
          } else {
            const j = y - v + 1;
            _.lines.shiftElements(v + 1, j - 1, -1), _.lines.set(y, f.clone());
          }
          this.isUserScrolling || (_.ydisp = _.ybase), this._onScroll.fire(_.ydisp);
        }
        scrollLines(m, c, _) {
          const f = this.buffer;
          if (m < 0) {
            if (f.ydisp === 0)
              return;
            this.isUserScrolling = !0;
          } else
            m + f.ydisp >= f.ybase && (this.isUserScrolling = !1);
          const v = f.ydisp;
          f.ydisp = Math.max(Math.min(f.ydisp + m, f.ybase), 0), v !== f.ydisp && (c || this._onScroll.fire(f.ydisp));
        }
      };
      o.BufferService = g = d([h(0, k.IOptionsService)], g);
    }, 7994: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CharsetService = void 0, o.CharsetService = class {
        constructor() {
          this.glevel = 0, this._charsets = [];
        }
        reset() {
          this.charset = void 0, this._charsets = [], this.glevel = 0;
        }
        setgLevel(s) {
          this.glevel = s, this.charset = this._charsets[s];
        }
        setgCharset(s, d) {
          this._charsets[s] = d, this.glevel === s && (this.charset = d);
        }
      };
    }, 1753: function(l, o, s) {
      var d = this && this.__decorate || function(f, v, y, j) {
        var A, C = arguments.length, I = C < 3 ? v : j === null ? j = Object.getOwnPropertyDescriptor(v, y) : j;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          I = Reflect.decorate(f, v, y, j);
        else
          for (var z = f.length - 1; z >= 0; z--)
            (A = f[z]) && (I = (C < 3 ? A(I) : C > 3 ? A(v, y, I) : A(v, y)) || I);
        return C > 3 && I && Object.defineProperty(v, y, I), I;
      }, h = this && this.__param || function(f, v) {
        return function(y, j) {
          v(y, j, f);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CoreMouseService = void 0;
      const u = s(2585), p = s(8460), b = s(844), k = { NONE: { events: 0, restrict: () => !1 }, X10: { events: 1, restrict: (f) => f.button !== 4 && f.action === 1 && (f.ctrl = !1, f.alt = !1, f.shift = !1, !0) }, VT200: { events: 19, restrict: (f) => f.action !== 32 }, DRAG: { events: 23, restrict: (f) => f.action !== 32 || f.button !== 3 }, ANY: { events: 31, restrict: (f) => !0 } };
      function g(f, v) {
        let y = (f.ctrl ? 16 : 0) | (f.shift ? 4 : 0) | (f.alt ? 8 : 0);
        return f.button === 4 ? (y |= 64, y |= f.action) : (y |= 3 & f.button, 4 & f.button && (y |= 64), 8 & f.button && (y |= 128), f.action === 32 ? y |= 32 : f.action !== 0 || v || (y |= 3)), y;
      }
      const m = String.fromCharCode, c = { DEFAULT: (f) => {
        const v = [g(f, !1) + 32, f.col + 32, f.row + 32];
        return v[0] > 255 || v[1] > 255 || v[2] > 255 ? "" : `\x1B[M${m(v[0])}${m(v[1])}${m(v[2])}`;
      }, SGR: (f) => {
        const v = f.action === 0 && f.button !== 4 ? "m" : "M";
        return `\x1B[<${g(f, !0)};${f.col};${f.row}${v}`;
      }, SGR_PIXELS: (f) => {
        const v = f.action === 0 && f.button !== 4 ? "m" : "M";
        return `\x1B[<${g(f, !0)};${f.x};${f.y}${v}`;
      } };
      let _ = o.CoreMouseService = class extends b.Disposable {
        constructor(f, v) {
          super(), this._bufferService = f, this._coreService = v, this._protocols = {}, this._encodings = {}, this._activeProtocol = "", this._activeEncoding = "", this._lastEvent = null, this._onProtocolChange = this.register(new p.EventEmitter()), this.onProtocolChange = this._onProtocolChange.event;
          for (const y of Object.keys(k))
            this.addProtocol(y, k[y]);
          for (const y of Object.keys(c))
            this.addEncoding(y, c[y]);
          this.reset();
        }
        addProtocol(f, v) {
          this._protocols[f] = v;
        }
        addEncoding(f, v) {
          this._encodings[f] = v;
        }
        get activeProtocol() {
          return this._activeProtocol;
        }
        get areMouseEventsActive() {
          return this._protocols[this._activeProtocol].events !== 0;
        }
        set activeProtocol(f) {
          if (!this._protocols[f])
            throw new Error(`unknown protocol "${f}"`);
          this._activeProtocol = f, this._onProtocolChange.fire(this._protocols[f].events);
        }
        get activeEncoding() {
          return this._activeEncoding;
        }
        set activeEncoding(f) {
          if (!this._encodings[f])
            throw new Error(`unknown encoding "${f}"`);
          this._activeEncoding = f;
        }
        reset() {
          this.activeProtocol = "NONE", this.activeEncoding = "DEFAULT", this._lastEvent = null;
        }
        triggerMouseEvent(f) {
          if (f.col < 0 || f.col >= this._bufferService.cols || f.row < 0 || f.row >= this._bufferService.rows || f.button === 4 && f.action === 32 || f.button === 3 && f.action !== 32 || f.button !== 4 && (f.action === 2 || f.action === 3) || (f.col++, f.row++, f.action === 32 && this._lastEvent && this._equalEvents(this._lastEvent, f, this._activeEncoding === "SGR_PIXELS")) || !this._protocols[this._activeProtocol].restrict(f))
            return !1;
          const v = this._encodings[this._activeEncoding](f);
          return v && (this._activeEncoding === "DEFAULT" ? this._coreService.triggerBinaryEvent(v) : this._coreService.triggerDataEvent(v, !0)), this._lastEvent = f, !0;
        }
        explainEvents(f) {
          return { down: !!(1 & f), up: !!(2 & f), drag: !!(4 & f), move: !!(8 & f), wheel: !!(16 & f) };
        }
        _equalEvents(f, v, y) {
          if (y) {
            if (f.x !== v.x || f.y !== v.y)
              return !1;
          } else if (f.col !== v.col || f.row !== v.row)
            return !1;
          return f.button === v.button && f.action === v.action && f.ctrl === v.ctrl && f.alt === v.alt && f.shift === v.shift;
        }
      };
      o.CoreMouseService = _ = d([h(0, u.IBufferService), h(1, u.ICoreService)], _);
    }, 6975: function(l, o, s) {
      var d = this && this.__decorate || function(_, f, v, y) {
        var j, A = arguments.length, C = A < 3 ? f : y === null ? y = Object.getOwnPropertyDescriptor(f, v) : y;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          C = Reflect.decorate(_, f, v, y);
        else
          for (var I = _.length - 1; I >= 0; I--)
            (j = _[I]) && (C = (A < 3 ? j(C) : A > 3 ? j(f, v, C) : j(f, v)) || C);
        return A > 3 && C && Object.defineProperty(f, v, C), C;
      }, h = this && this.__param || function(_, f) {
        return function(v, y) {
          f(v, y, _);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.CoreService = void 0;
      const u = s(1439), p = s(8460), b = s(844), k = s(2585), g = Object.freeze({ insertMode: !1 }), m = Object.freeze({ applicationCursorKeys: !1, applicationKeypad: !1, bracketedPasteMode: !1, origin: !1, reverseWraparound: !1, sendFocus: !1, wraparound: !0 });
      let c = o.CoreService = class extends b.Disposable {
        constructor(_, f, v) {
          super(), this._bufferService = _, this._logService = f, this._optionsService = v, this.isCursorInitialized = !1, this.isCursorHidden = !1, this._onData = this.register(new p.EventEmitter()), this.onData = this._onData.event, this._onUserInput = this.register(new p.EventEmitter()), this.onUserInput = this._onUserInput.event, this._onBinary = this.register(new p.EventEmitter()), this.onBinary = this._onBinary.event, this._onRequestScrollToBottom = this.register(new p.EventEmitter()), this.onRequestScrollToBottom = this._onRequestScrollToBottom.event, this.modes = (0, u.clone)(g), this.decPrivateModes = (0, u.clone)(m);
        }
        reset() {
          this.modes = (0, u.clone)(g), this.decPrivateModes = (0, u.clone)(m);
        }
        triggerDataEvent(_, f = !1) {
          if (this._optionsService.rawOptions.disableStdin)
            return;
          const v = this._bufferService.buffer;
          f && this._optionsService.rawOptions.scrollOnUserInput && v.ybase !== v.ydisp && this._onRequestScrollToBottom.fire(), f && this._onUserInput.fire(), this._logService.debug(`sending data "${_}"`, () => _.split("").map((y) => y.charCodeAt(0))), this._onData.fire(_);
        }
        triggerBinaryEvent(_) {
          this._optionsService.rawOptions.disableStdin || (this._logService.debug(`sending binary "${_}"`, () => _.split("").map((f) => f.charCodeAt(0))), this._onBinary.fire(_));
        }
      };
      o.CoreService = c = d([h(0, k.IBufferService), h(1, k.ILogService), h(2, k.IOptionsService)], c);
    }, 9074: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.DecorationService = void 0;
      const d = s(8055), h = s(8460), u = s(844), p = s(6106);
      let b = 0, k = 0;
      class g extends u.Disposable {
        get decorations() {
          return this._decorations.values();
        }
        constructor() {
          super(), this._decorations = new p.SortedList((_) => _ == null ? void 0 : _.marker.line), this._onDecorationRegistered = this.register(new h.EventEmitter()), this.onDecorationRegistered = this._onDecorationRegistered.event, this._onDecorationRemoved = this.register(new h.EventEmitter()), this.onDecorationRemoved = this._onDecorationRemoved.event, this.register((0, u.toDisposable)(() => this.reset()));
        }
        registerDecoration(_) {
          if (_.marker.isDisposed)
            return;
          const f = new m(_);
          if (f) {
            const v = f.marker.onDispose(() => f.dispose());
            f.onDispose(() => {
              f && (this._decorations.delete(f) && this._onDecorationRemoved.fire(f), v.dispose());
            }), this._decorations.insert(f), this._onDecorationRegistered.fire(f);
          }
          return f;
        }
        reset() {
          for (const _ of this._decorations.values())
            _.dispose();
          this._decorations.clear();
        }
        *getDecorationsAtCell(_, f, v) {
          var y, j, A;
          let C = 0, I = 0;
          for (const z of this._decorations.getKeyIterator(f))
            C = (y = z.options.x) !== null && y !== void 0 ? y : 0, I = C + ((j = z.options.width) !== null && j !== void 0 ? j : 1), _ >= C && _ < I && (!v || ((A = z.options.layer) !== null && A !== void 0 ? A : "bottom") === v) && (yield z);
        }
        forEachDecorationAtCell(_, f, v, y) {
          this._decorations.forEachByKey(f, (j) => {
            var A, C, I;
            b = (A = j.options.x) !== null && A !== void 0 ? A : 0, k = b + ((C = j.options.width) !== null && C !== void 0 ? C : 1), _ >= b && _ < k && (!v || ((I = j.options.layer) !== null && I !== void 0 ? I : "bottom") === v) && y(j);
          });
        }
      }
      o.DecorationService = g;
      class m extends u.Disposable {
        get isDisposed() {
          return this._isDisposed;
        }
        get backgroundColorRGB() {
          return this._cachedBg === null && (this.options.backgroundColor ? this._cachedBg = d.css.toColor(this.options.backgroundColor) : this._cachedBg = void 0), this._cachedBg;
        }
        get foregroundColorRGB() {
          return this._cachedFg === null && (this.options.foregroundColor ? this._cachedFg = d.css.toColor(this.options.foregroundColor) : this._cachedFg = void 0), this._cachedFg;
        }
        constructor(_) {
          super(), this.options = _, this.onRenderEmitter = this.register(new h.EventEmitter()), this.onRender = this.onRenderEmitter.event, this._onDispose = this.register(new h.EventEmitter()), this.onDispose = this._onDispose.event, this._cachedBg = null, this._cachedFg = null, this.marker = _.marker, this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position && (this.options.overviewRulerOptions.position = "full");
        }
        dispose() {
          this._onDispose.fire(), super.dispose();
        }
      }
    }, 4348: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.InstantiationService = o.ServiceCollection = void 0;
      const d = s(2585), h = s(8343);
      class u {
        constructor(...b) {
          this._entries = /* @__PURE__ */ new Map();
          for (const [k, g] of b)
            this.set(k, g);
        }
        set(b, k) {
          const g = this._entries.get(b);
          return this._entries.set(b, k), g;
        }
        forEach(b) {
          for (const [k, g] of this._entries.entries())
            b(k, g);
        }
        has(b) {
          return this._entries.has(b);
        }
        get(b) {
          return this._entries.get(b);
        }
      }
      o.ServiceCollection = u, o.InstantiationService = class {
        constructor() {
          this._services = new u(), this._services.set(d.IInstantiationService, this);
        }
        setService(p, b) {
          this._services.set(p, b);
        }
        getService(p) {
          return this._services.get(p);
        }
        createInstance(p, ...b) {
          const k = (0, h.getServiceDependencies)(p).sort((c, _) => c.index - _.index), g = [];
          for (const c of k) {
            const _ = this._services.get(c.id);
            if (!_)
              throw new Error(`[createInstance] ${p.name} depends on UNKNOWN service ${c.id}.`);
            g.push(_);
          }
          const m = k.length > 0 ? k[0].index : b.length;
          if (b.length !== m)
            throw new Error(`[createInstance] First service dependency of ${p.name} at position ${m + 1} conflicts with ${b.length} static arguments`);
          return new p(...b, ...g);
        }
      };
    }, 7866: function(l, o, s) {
      var d = this && this.__decorate || function(m, c, _, f) {
        var v, y = arguments.length, j = y < 3 ? c : f === null ? f = Object.getOwnPropertyDescriptor(c, _) : f;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          j = Reflect.decorate(m, c, _, f);
        else
          for (var A = m.length - 1; A >= 0; A--)
            (v = m[A]) && (j = (y < 3 ? v(j) : y > 3 ? v(c, _, j) : v(c, _)) || j);
        return y > 3 && j && Object.defineProperty(c, _, j), j;
      }, h = this && this.__param || function(m, c) {
        return function(_, f) {
          c(_, f, m);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.traceCall = o.setTraceLogger = o.LogService = void 0;
      const u = s(844), p = s(2585), b = { trace: p.LogLevelEnum.TRACE, debug: p.LogLevelEnum.DEBUG, info: p.LogLevelEnum.INFO, warn: p.LogLevelEnum.WARN, error: p.LogLevelEnum.ERROR, off: p.LogLevelEnum.OFF };
      let k, g = o.LogService = class extends u.Disposable {
        get logLevel() {
          return this._logLevel;
        }
        constructor(m) {
          super(), this._optionsService = m, this._logLevel = p.LogLevelEnum.OFF, this._updateLogLevel(), this.register(this._optionsService.onSpecificOptionChange("logLevel", () => this._updateLogLevel())), k = this;
        }
        _updateLogLevel() {
          this._logLevel = b[this._optionsService.rawOptions.logLevel];
        }
        _evalLazyOptionalParams(m) {
          for (let c = 0; c < m.length; c++)
            typeof m[c] == "function" && (m[c] = m[c]());
        }
        _log(m, c, _) {
          this._evalLazyOptionalParams(_), m.call(console, (this._optionsService.options.logger ? "" : "xterm.js: ") + c, ..._);
        }
        trace(m, ...c) {
          var _, f;
          this._logLevel <= p.LogLevelEnum.TRACE && this._log((f = (_ = this._optionsService.options.logger) === null || _ === void 0 ? void 0 : _.trace.bind(this._optionsService.options.logger)) !== null && f !== void 0 ? f : console.log, m, c);
        }
        debug(m, ...c) {
          var _, f;
          this._logLevel <= p.LogLevelEnum.DEBUG && this._log((f = (_ = this._optionsService.options.logger) === null || _ === void 0 ? void 0 : _.debug.bind(this._optionsService.options.logger)) !== null && f !== void 0 ? f : console.log, m, c);
        }
        info(m, ...c) {
          var _, f;
          this._logLevel <= p.LogLevelEnum.INFO && this._log((f = (_ = this._optionsService.options.logger) === null || _ === void 0 ? void 0 : _.info.bind(this._optionsService.options.logger)) !== null && f !== void 0 ? f : console.info, m, c);
        }
        warn(m, ...c) {
          var _, f;
          this._logLevel <= p.LogLevelEnum.WARN && this._log((f = (_ = this._optionsService.options.logger) === null || _ === void 0 ? void 0 : _.warn.bind(this._optionsService.options.logger)) !== null && f !== void 0 ? f : console.warn, m, c);
        }
        error(m, ...c) {
          var _, f;
          this._logLevel <= p.LogLevelEnum.ERROR && this._log((f = (_ = this._optionsService.options.logger) === null || _ === void 0 ? void 0 : _.error.bind(this._optionsService.options.logger)) !== null && f !== void 0 ? f : console.error, m, c);
        }
      };
      o.LogService = g = d([h(0, p.IOptionsService)], g), o.setTraceLogger = function(m) {
        k = m;
      }, o.traceCall = function(m, c, _) {
        if (typeof _.value != "function")
          throw new Error("not supported");
        const f = _.value;
        _.value = function(...v) {
          if (k.logLevel !== p.LogLevelEnum.TRACE)
            return f.apply(this, v);
          k.trace(`GlyphRenderer#${f.name}(${v.map((j) => JSON.stringify(j)).join(", ")})`);
          const y = f.apply(this, v);
          return k.trace(`GlyphRenderer#${f.name} return`, y), y;
        };
      };
    }, 7302: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.OptionsService = o.DEFAULT_OPTIONS = void 0;
      const d = s(8460), h = s(844), u = s(6114);
      o.DEFAULT_OPTIONS = { cols: 80, rows: 24, cursorBlink: !1, cursorStyle: "block", cursorWidth: 1, cursorInactiveStyle: "outline", customGlyphs: !0, drawBoldTextInBrightColors: !0, fastScrollModifier: "alt", fastScrollSensitivity: 5, fontFamily: "courier-new, courier, monospace", fontSize: 15, fontWeight: "normal", fontWeightBold: "bold", ignoreBracketedPasteMode: !1, lineHeight: 1, letterSpacing: 0, linkHandler: null, logLevel: "info", logger: null, scrollback: 1e3, scrollOnUserInput: !0, scrollSensitivity: 1, screenReaderMode: !1, smoothScrollDuration: 0, macOptionIsMeta: !1, macOptionClickForcesSelection: !1, minimumContrastRatio: 1, disableStdin: !1, allowProposedApi: !1, allowTransparency: !1, tabStopWidth: 8, theme: {}, rightClickSelectsWord: u.isMac, windowOptions: {}, windowsMode: !1, windowsPty: {}, wordSeparator: " ()[]{}',\"`", altClickMovesCursor: !0, convertEol: !1, termName: "xterm", cancelEvents: !1, overviewRulerWidth: 0 };
      const p = ["normal", "bold", "100", "200", "300", "400", "500", "600", "700", "800", "900"];
      class b extends h.Disposable {
        constructor(g) {
          super(), this._onOptionChange = this.register(new d.EventEmitter()), this.onOptionChange = this._onOptionChange.event;
          const m = Object.assign({}, o.DEFAULT_OPTIONS);
          for (const c in g)
            if (c in m)
              try {
                const _ = g[c];
                m[c] = this._sanitizeAndValidateOption(c, _);
              } catch (_) {
                console.error(_);
              }
          this.rawOptions = m, this.options = Object.assign({}, m), this._setupOptions();
        }
        onSpecificOptionChange(g, m) {
          return this.onOptionChange((c) => {
            c === g && m(this.rawOptions[g]);
          });
        }
        onMultipleOptionChange(g, m) {
          return this.onOptionChange((c) => {
            g.indexOf(c) !== -1 && m();
          });
        }
        _setupOptions() {
          const g = (c) => {
            if (!(c in o.DEFAULT_OPTIONS))
              throw new Error(`No option with key "${c}"`);
            return this.rawOptions[c];
          }, m = (c, _) => {
            if (!(c in o.DEFAULT_OPTIONS))
              throw new Error(`No option with key "${c}"`);
            _ = this._sanitizeAndValidateOption(c, _), this.rawOptions[c] !== _ && (this.rawOptions[c] = _, this._onOptionChange.fire(c));
          };
          for (const c in this.rawOptions) {
            const _ = { get: g.bind(this, c), set: m.bind(this, c) };
            Object.defineProperty(this.options, c, _);
          }
        }
        _sanitizeAndValidateOption(g, m) {
          switch (g) {
            case "cursorStyle":
              if (m || (m = o.DEFAULT_OPTIONS[g]), !function(c) {
                return c === "block" || c === "underline" || c === "bar";
              }(m))
                throw new Error(`"${m}" is not a valid value for ${g}`);
              break;
            case "wordSeparator":
              m || (m = o.DEFAULT_OPTIONS[g]);
              break;
            case "fontWeight":
            case "fontWeightBold":
              if (typeof m == "number" && 1 <= m && m <= 1e3)
                break;
              m = p.includes(m) ? m : o.DEFAULT_OPTIONS[g];
              break;
            case "cursorWidth":
              m = Math.floor(m);
            case "lineHeight":
            case "tabStopWidth":
              if (m < 1)
                throw new Error(`${g} cannot be less than 1, value: ${m}`);
              break;
            case "minimumContrastRatio":
              m = Math.max(1, Math.min(21, Math.round(10 * m) / 10));
              break;
            case "scrollback":
              if ((m = Math.min(m, 4294967295)) < 0)
                throw new Error(`${g} cannot be less than 0, value: ${m}`);
              break;
            case "fastScrollSensitivity":
            case "scrollSensitivity":
              if (m <= 0)
                throw new Error(`${g} cannot be less than or equal to 0, value: ${m}`);
              break;
            case "rows":
            case "cols":
              if (!m && m !== 0)
                throw new Error(`${g} must be numeric, value: ${m}`);
              break;
            case "windowsPty":
              m = m ?? {};
          }
          return m;
        }
      }
      o.OptionsService = b;
    }, 2660: function(l, o, s) {
      var d = this && this.__decorate || function(b, k, g, m) {
        var c, _ = arguments.length, f = _ < 3 ? k : m === null ? m = Object.getOwnPropertyDescriptor(k, g) : m;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          f = Reflect.decorate(b, k, g, m);
        else
          for (var v = b.length - 1; v >= 0; v--)
            (c = b[v]) && (f = (_ < 3 ? c(f) : _ > 3 ? c(k, g, f) : c(k, g)) || f);
        return _ > 3 && f && Object.defineProperty(k, g, f), f;
      }, h = this && this.__param || function(b, k) {
        return function(g, m) {
          k(g, m, b);
        };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.OscLinkService = void 0;
      const u = s(2585);
      let p = o.OscLinkService = class {
        constructor(b) {
          this._bufferService = b, this._nextId = 1, this._entriesWithId = /* @__PURE__ */ new Map(), this._dataByLinkId = /* @__PURE__ */ new Map();
        }
        registerLink(b) {
          const k = this._bufferService.buffer;
          if (b.id === void 0) {
            const v = k.addMarker(k.ybase + k.y), y = { data: b, id: this._nextId++, lines: [v] };
            return v.onDispose(() => this._removeMarkerFromLink(y, v)), this._dataByLinkId.set(y.id, y), y.id;
          }
          const g = b, m = this._getEntryIdKey(g), c = this._entriesWithId.get(m);
          if (c)
            return this.addLineToLink(c.id, k.ybase + k.y), c.id;
          const _ = k.addMarker(k.ybase + k.y), f = { id: this._nextId++, key: this._getEntryIdKey(g), data: g, lines: [_] };
          return _.onDispose(() => this._removeMarkerFromLink(f, _)), this._entriesWithId.set(f.key, f), this._dataByLinkId.set(f.id, f), f.id;
        }
        addLineToLink(b, k) {
          const g = this._dataByLinkId.get(b);
          if (g && g.lines.every((m) => m.line !== k)) {
            const m = this._bufferService.buffer.addMarker(k);
            g.lines.push(m), m.onDispose(() => this._removeMarkerFromLink(g, m));
          }
        }
        getLinkData(b) {
          var k;
          return (k = this._dataByLinkId.get(b)) === null || k === void 0 ? void 0 : k.data;
        }
        _getEntryIdKey(b) {
          return `${b.id};;${b.uri}`;
        }
        _removeMarkerFromLink(b, k) {
          const g = b.lines.indexOf(k);
          g !== -1 && (b.lines.splice(g, 1), b.lines.length === 0 && (b.data.id !== void 0 && this._entriesWithId.delete(b.key), this._dataByLinkId.delete(b.id)));
        }
      };
      o.OscLinkService = p = d([h(0, u.IBufferService)], p);
    }, 8343: (l, o) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.createDecorator = o.getServiceDependencies = o.serviceRegistry = void 0;
      const s = "di$target", d = "di$dependencies";
      o.serviceRegistry = /* @__PURE__ */ new Map(), o.getServiceDependencies = function(h) {
        return h[d] || [];
      }, o.createDecorator = function(h) {
        if (o.serviceRegistry.has(h))
          return o.serviceRegistry.get(h);
        const u = function(p, b, k) {
          if (arguments.length !== 3)
            throw new Error("@IServiceName-decorator can only be used to decorate a parameter");
          (function(g, m, c) {
            m[s] === m ? m[d].push({ id: g, index: c }) : (m[d] = [{ id: g, index: c }], m[s] = m);
          })(u, p, k);
        };
        return u.toString = () => h, o.serviceRegistry.set(h, u), u;
      };
    }, 2585: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.IDecorationService = o.IUnicodeService = o.IOscLinkService = o.IOptionsService = o.ILogService = o.LogLevelEnum = o.IInstantiationService = o.ICharsetService = o.ICoreService = o.ICoreMouseService = o.IBufferService = void 0;
      const d = s(8343);
      var h;
      o.IBufferService = (0, d.createDecorator)("BufferService"), o.ICoreMouseService = (0, d.createDecorator)("CoreMouseService"), o.ICoreService = (0, d.createDecorator)("CoreService"), o.ICharsetService = (0, d.createDecorator)("CharsetService"), o.IInstantiationService = (0, d.createDecorator)("InstantiationService"), function(u) {
        u[u.TRACE = 0] = "TRACE", u[u.DEBUG = 1] = "DEBUG", u[u.INFO = 2] = "INFO", u[u.WARN = 3] = "WARN", u[u.ERROR = 4] = "ERROR", u[u.OFF = 5] = "OFF";
      }(h || (o.LogLevelEnum = h = {})), o.ILogService = (0, d.createDecorator)("LogService"), o.IOptionsService = (0, d.createDecorator)("OptionsService"), o.IOscLinkService = (0, d.createDecorator)("OscLinkService"), o.IUnicodeService = (0, d.createDecorator)("UnicodeService"), o.IDecorationService = (0, d.createDecorator)("DecorationService");
    }, 1480: (l, o, s) => {
      Object.defineProperty(o, "__esModule", { value: !0 }), o.UnicodeService = void 0;
      const d = s(8460), h = s(225);
      o.UnicodeService = class {
        constructor() {
          this._providers = /* @__PURE__ */ Object.create(null), this._active = "", this._onChange = new d.EventEmitter(), this.onChange = this._onChange.event;
          const u = new h.UnicodeV6();
          this.register(u), this._active = u.version, this._activeProvider = u;
        }
        dispose() {
          this._onChange.dispose();
        }
        get versions() {
          return Object.keys(this._providers);
        }
        get activeVersion() {
          return this._active;
        }
        set activeVersion(u) {
          if (!this._providers[u])
            throw new Error(`unknown Unicode version "${u}"`);
          this._active = u, this._activeProvider = this._providers[u], this._onChange.fire(u);
        }
        register(u) {
          this._providers[u.version] = u;
        }
        wcwidth(u) {
          return this._activeProvider.wcwidth(u);
        }
        getStringCellWidth(u) {
          let p = 0;
          const b = u.length;
          for (let k = 0; k < b; ++k) {
            let g = u.charCodeAt(k);
            if (55296 <= g && g <= 56319) {
              if (++k >= b)
                return p + this.wcwidth(g);
              const m = u.charCodeAt(k);
              56320 <= m && m <= 57343 ? g = 1024 * (g - 55296) + m - 56320 + 65536 : p += this.wcwidth(m);
            }
            p += this.wcwidth(g);
          }
          return p;
        }
      };
    } }, i = {};
    function n(l) {
      var o = i[l];
      if (o !== void 0)
        return o.exports;
      var s = i[l] = { exports: {} };
      return t[l].call(s.exports, s, s.exports, n), s.exports;
    }
    var a = {};
    return (() => {
      var l = a;
      Object.defineProperty(l, "__esModule", { value: !0 }), l.Terminal = void 0;
      const o = n(9042), s = n(3236), d = n(844), h = n(5741), u = n(8285), p = n(7975), b = n(7090), k = ["cols", "rows"];
      class g extends d.Disposable {
        constructor(c) {
          super(), this._core = this.register(new s.Terminal(c)), this._addonManager = this.register(new h.AddonManager()), this._publicOptions = Object.assign({}, this._core.options);
          const _ = (v) => this._core.options[v], f = (v, y) => {
            this._checkReadonlyOptions(v), this._core.options[v] = y;
          };
          for (const v in this._core.options) {
            const y = { get: _.bind(this, v), set: f.bind(this, v) };
            Object.defineProperty(this._publicOptions, v, y);
          }
        }
        _checkReadonlyOptions(c) {
          if (k.includes(c))
            throw new Error(`Option "${c}" can only be set in the constructor`);
        }
        _checkProposedApi() {
          if (!this._core.optionsService.rawOptions.allowProposedApi)
            throw new Error("You must set the allowProposedApi option to true to use proposed API");
        }
        get onBell() {
          return this._core.onBell;
        }
        get onBinary() {
          return this._core.onBinary;
        }
        get onCursorMove() {
          return this._core.onCursorMove;
        }
        get onData() {
          return this._core.onData;
        }
        get onKey() {
          return this._core.onKey;
        }
        get onLineFeed() {
          return this._core.onLineFeed;
        }
        get onRender() {
          return this._core.onRender;
        }
        get onResize() {
          return this._core.onResize;
        }
        get onScroll() {
          return this._core.onScroll;
        }
        get onSelectionChange() {
          return this._core.onSelectionChange;
        }
        get onTitleChange() {
          return this._core.onTitleChange;
        }
        get onWriteParsed() {
          return this._core.onWriteParsed;
        }
        get element() {
          return this._core.element;
        }
        get parser() {
          return this._parser || (this._parser = new p.ParserApi(this._core)), this._parser;
        }
        get unicode() {
          return this._checkProposedApi(), new b.UnicodeApi(this._core);
        }
        get textarea() {
          return this._core.textarea;
        }
        get rows() {
          return this._core.rows;
        }
        get cols() {
          return this._core.cols;
        }
        get buffer() {
          return this._buffer || (this._buffer = this.register(new u.BufferNamespaceApi(this._core))), this._buffer;
        }
        get markers() {
          return this._checkProposedApi(), this._core.markers;
        }
        get modes() {
          const c = this._core.coreService.decPrivateModes;
          let _ = "none";
          switch (this._core.coreMouseService.activeProtocol) {
            case "X10":
              _ = "x10";
              break;
            case "VT200":
              _ = "vt200";
              break;
            case "DRAG":
              _ = "drag";
              break;
            case "ANY":
              _ = "any";
          }
          return { applicationCursorKeysMode: c.applicationCursorKeys, applicationKeypadMode: c.applicationKeypad, bracketedPasteMode: c.bracketedPasteMode, insertMode: this._core.coreService.modes.insertMode, mouseTrackingMode: _, originMode: c.origin, reverseWraparoundMode: c.reverseWraparound, sendFocusMode: c.sendFocus, wraparoundMode: c.wraparound };
        }
        get options() {
          return this._publicOptions;
        }
        set options(c) {
          for (const _ in c)
            this._publicOptions[_] = c[_];
        }
        blur() {
          this._core.blur();
        }
        focus() {
          this._core.focus();
        }
        resize(c, _) {
          this._verifyIntegers(c, _), this._core.resize(c, _);
        }
        open(c) {
          this._core.open(c);
        }
        attachCustomKeyEventHandler(c) {
          this._core.attachCustomKeyEventHandler(c);
        }
        registerLinkProvider(c) {
          return this._core.registerLinkProvider(c);
        }
        registerCharacterJoiner(c) {
          return this._checkProposedApi(), this._core.registerCharacterJoiner(c);
        }
        deregisterCharacterJoiner(c) {
          this._checkProposedApi(), this._core.deregisterCharacterJoiner(c);
        }
        registerMarker(c = 0) {
          return this._verifyIntegers(c), this._core.registerMarker(c);
        }
        registerDecoration(c) {
          var _, f, v;
          return this._checkProposedApi(), this._verifyPositiveIntegers((_ = c.x) !== null && _ !== void 0 ? _ : 0, (f = c.width) !== null && f !== void 0 ? f : 0, (v = c.height) !== null && v !== void 0 ? v : 0), this._core.registerDecoration(c);
        }
        hasSelection() {
          return this._core.hasSelection();
        }
        select(c, _, f) {
          this._verifyIntegers(c, _, f), this._core.select(c, _, f);
        }
        getSelection() {
          return this._core.getSelection();
        }
        getSelectionPosition() {
          return this._core.getSelectionPosition();
        }
        clearSelection() {
          this._core.clearSelection();
        }
        selectAll() {
          this._core.selectAll();
        }
        selectLines(c, _) {
          this._verifyIntegers(c, _), this._core.selectLines(c, _);
        }
        dispose() {
          super.dispose();
        }
        scrollLines(c) {
          this._verifyIntegers(c), this._core.scrollLines(c);
        }
        scrollPages(c) {
          this._verifyIntegers(c), this._core.scrollPages(c);
        }
        scrollToTop() {
          this._core.scrollToTop();
        }
        scrollToBottom() {
          this._core.scrollToBottom();
        }
        scrollToLine(c) {
          this._verifyIntegers(c), this._core.scrollToLine(c);
        }
        clear() {
          this._core.clear();
        }
        write(c, _) {
          this._core.write(c, _);
        }
        writeln(c, _) {
          this._core.write(c), this._core.write(`\r
`, _);
        }
        paste(c) {
          this._core.paste(c);
        }
        refresh(c, _) {
          this._verifyIntegers(c, _), this._core.refresh(c, _);
        }
        reset() {
          this._core.reset();
        }
        clearTextureAtlas() {
          this._core.clearTextureAtlas();
        }
        loadAddon(c) {
          this._addonManager.loadAddon(this, c);
        }
        static get strings() {
          return o;
        }
        _verifyIntegers(...c) {
          for (const _ of c)
            if (_ === 1 / 0 || isNaN(_) || _ % 1 != 0)
              throw new Error("This API only accepts integers");
        }
        _verifyPositiveIntegers(...c) {
          for (const _ of c)
            if (_ && (_ === 1 / 0 || isNaN(_) || _ % 1 != 0 || _ < 0))
              throw new Error("This API only accepts positive integers");
        }
      }
      l.Terminal = g;
    })(), a;
  })());
})(Qa);
var Jc = Qa.exports, es = { exports: {} };
(function(r, e) {
  (function(t, i) {
    r.exports = i();
  })(self, function() {
    return (() => {
      var t = {};
      return (() => {
        var i = t;
        Object.defineProperty(i, "__esModule", { value: !0 }), i.FitAddon = void 0, i.FitAddon = class {
          constructor() {
          }
          activate(n) {
            this._terminal = n;
          }
          dispose() {
          }
          fit() {
            const n = this.proposeDimensions();
            if (!n || !this._terminal || isNaN(n.cols) || isNaN(n.rows))
              return;
            const a = this._terminal._core;
            this._terminal.rows === n.rows && this._terminal.cols === n.cols || (a._renderService.clear(), this._terminal.resize(n.cols, n.rows));
          }
          proposeDimensions() {
            if (!this._terminal || !this._terminal.element || !this._terminal.element.parentElement)
              return;
            const n = this._terminal._core, a = n._renderService.dimensions;
            if (a.css.cell.width === 0 || a.css.cell.height === 0)
              return;
            const l = this._terminal.options.scrollback === 0 ? 0 : n.viewport.scrollBarWidth, o = window.getComputedStyle(this._terminal.element.parentElement), s = parseInt(o.getPropertyValue("height")), d = Math.max(0, parseInt(o.getPropertyValue("width"))), h = window.getComputedStyle(this._terminal.element), u = s - (parseInt(h.getPropertyValue("padding-top")) + parseInt(h.getPropertyValue("padding-bottom"))), p = d - (parseInt(h.getPropertyValue("padding-right")) + parseInt(h.getPropertyValue("padding-left"))) - l;
            return { cols: Math.max(2, Math.floor(p / a.css.cell.width)), rows: Math.max(1, Math.floor(u / a.css.cell.height)) };
          }
        };
      })(), t;
    })();
  });
})(es);
var Yc = es.exports;
const kt = wi("useShell");
function Qc() {
  const [r, e] = he(null), [t, i] = he(null), [n, a] = he(null), l = Ci(), o = l ? { background: "#181818" } : { background: "#f3f3f3", foreground: "#000", cursor: "#666" };
  se(() => {
    t && (t.options.theme = o, t.refresh(0, t.rows - 1));
  }, [l]);
  const s = me(async (d, h, u) => {
    var C;
    if (r)
      return;
    kt("Booting...");
    const p = await ni.boot({ workdirName: "vslite" });
    await p.fs.writeFile(".jshrc", gc), await p.spawn("mv", [".jshrc", "/home/.jshrc"]), p.mount(pc);
    const b = (C = globalThis.localStorage) == null ? void 0 : C.vslite_config, k = b ? JSON.parse(b) : {};
    k && k.env && await p.fs.writeFile(".env", k.env);
    const g = new Jc.Terminal({ convertEol: !0, theme: o }), m = new Yc.FitAddon(), { cols: c, rows: _ } = g;
    g.loadAddon(m);
    let f = !1;
    (await p.spawn("npx", ["-y", "chokidar-cli", ".", "-i", '"(**/(node_modules|.git|_tmp_)**)"'])).output.pipeTo(new WritableStream({
      async write(I) {
        var P;
        const z = I.split(":").at(0) || "";
        if (f)
          if (I.match(/\.env/)) {
            kt(".env changed", I);
            const L = (P = globalThis.localStorage) == null ? void 0 : P.vslite_config;
            let N = L ? JSON.parse(L) : {};
            try {
              const B = await p.fs.readFile(".env"), F = new TextDecoder().decode(B);
              kt("contents", F), N || (N = {}), N.env = F, globalThis.localStorage.vslite_config = JSON.stringify(N);
            } catch (B) {
              N && N.env && (delete N.env, globalThis.localStorage.vslite_config = JSON.stringify(N)), kt(".env file deleted", B);
            }
          } else
            kt("Change detected: ", I);
        else
          I.includes('Watching "."') ? (kt("File watcher ready."), f = !0) : kt("chokidar: ", I);
        switch (z) {
          case "change":
            break;
          case "add":
          case "unlink":
          case "addDir":
          case "unlinkDir":
          default:
            Wa.refresh(I);
        }
      }
    }));
    const y = await p.spawn("jsh", { env: {}, terminal: { cols: c, rows: _ } }), j = y.output.getReader(), A = y.input.getWriter();
    if (await j.read(), j.releaseLock(), g.onData((I) => {
      A.write(I);
    }), y.output.pipeTo(new WritableStream({ write(I) {
      g.write(I);
    } })), h.onDidDimensionsChange(() => m.fit()), p.on("server-ready", (I, z) => u && u(z, I)), e(p), i(g), a(y), location.pathname.startsWith("/~/")) {
      const I = location.pathname.replace("/~/", "");
      await A.write(`git clone '${I}' './' && ni
`);
    }
    g.clear(), g.open(d), m.fit(), kt("Done.");
  }, []);
  return { terminal: t, container: r, process: n, start: s };
}
function $c(r, e) {
  r.addPanel({
    id: "dock",
    component: "dock",
    params: { api: e }
  });
}
function e_(r, e) {
  r.addPanel({
    id: "panes",
    component: "panes",
    params: { api: e },
    maximumWidth: 800,
    size: 200,
    position: {
      direction: "left",
      referencePanel: "dock"
    }
  });
}
function t_(r, e, t) {
  e.addPanel({
    id: "terminal",
    component: "terminal",
    params: { dock: t, shell: r },
    minimumHeight: 100,
    size: 200,
    position: {
      direction: "below",
      referencePanel: "dock"
    }
  });
}
function r_(r, e, t, i) {
  const n = e.addPanel({
    id: "filetree",
    title: "Explorer",
    component: "filetree",
    params: { dock: t, fs: r, sync: i },
    isExpanded: !0
  });
  n.headerVisible = !1;
}
function i_(r, e, t) {
  const i = "./Untitled";
  e.addPanel({
    id: i,
    title: "Untitled",
    component: "editor",
    params: { fs: r, path: i, sync: t }
  });
}
async function o_(r, e, t, i) {
  const n = `./${r.name}`, a = await (await r.getFile()).text();
  await e.writeFile(n, a, "utf-8"), t.addPanel({
    id: n,
    title: r.name,
    component: "editor",
    params: { fs: e, path: n, sync: i }
  });
}
function n_(r) {
  return (e, t) => {
    const i = r.getPanel(t.toString()), n = `Port: ${t}`, a = `${e}?${Date.now()}`;
    i ? (i.api.updateParameters({ url: a }), i.api.setTitle(n)) : r.addPanel({
      id: t.toString(),
      title: `Port: ${t}`,
      component: "preview",
      params: { url: a },
      position: {
        direction: "right"
      }
    });
  };
}
function a_(r, e, t) {
  return async (i, n) => {
    const a = await e.readFile(i, "utf-8"), l = r.getPanel(i);
    l ? l.api.setActive() : r.addPanel({
      id: i,
      title: n,
      component: "editor",
      params: { fs: e, path: i, contents: a, sync: t }
    });
  };
}
function s_(r, e) {
  return async (t, i) => {
    const n = await e.readFile(t);
    await e.rm(t);
    const l = `${t.split("/").slice(0, -1).join("/")}/${i}`;
    await e.writeFile(l, n || new Uint8Array());
    const o = r.getPanel(t);
    o && (o.api.updateParameters({ path: l }), o.api.setTitle(i));
  };
}
function d_(r, e, t) {
  const i = Qc(), n = um(), a = wc(i), l = Sc(), o = oe(!1), s = oe(!1), d = oe(!1);
  se(() => {
    o.current || i && r.current && e.current && (o.current = !0, t_(i, r.current, e.current));
  }, [i]), se(() => {
    var h;
    d.current || (h = i.container) != null && h.fs && t.current && e.current && (d.current = !0, r_(i.container.fs, t.current, e.current, a));
  }, [i]), se(() => {
    var p;
    if (s.current)
      return;
    const h = (p = i == null ? void 0 : i.container) == null ? void 0 : p.fs, u = e.current;
    if (!(!h || !u || !n)) {
      if (l.files.length > 0)
        l.files.forEach((b) => o_(b, h, u, a));
      else if (l.action)
        switch (l.action) {
          case "open_folder": {
            hc();
            break;
          }
        }
      else
        location.pathname === "/" && i_(h, u, a);
      s.current = !0;
    }
  }, [n, l, i]);
}
function l_() {
  const r = oe(), e = oe(), t = oe(), i = Ci();
  return d_(r, e, t), /* @__PURE__ */ De(
    sa,
    {
      className: i ? "dockview-theme-dark" : "dockview-theme-light",
      components: u_,
      proportionalLayout: !1,
      onReady: (n) => {
        r.current = n.api, $c(n.api, e), e_(n.api, t);
      }
    }
  );
}
const m_ = {
  editor: (r) => /* @__PURE__ */ De(bu, { fs: r.params.fs, path: r.params.path, sync: r.params.sync }),
  preview: (r) => (
    // @ts-ignore
    /* @__PURE__ */ De("iframe", { src: r.params.url, allow: "cross-origin-isolated", credentialless: !0 })
  )
}, u_ = {
  dock: (r) => /* @__PURE__ */ De(
    aa,
    {
      watermarkComponent: yc,
      components: m_,
      onReady: (e) => {
        r.params.api.current = e.api;
      }
    }
  ),
  panes: (r) => /* @__PURE__ */ De(
    da,
    {
      components: c_,
      onReady: (e) => {
        r.params.api.current = e.api;
      }
    }
  ),
  terminal: (r) => /* @__PURE__ */ De(
    Cc,
    {
      shell: r.params.shell,
      panelApi: r.api,
      onServerReady: n_(r.params.dock)
    }
  )
}, c_ = {
  filetree: (r) => /* @__PURE__ */ De(
    kc,
    {
      fs: r.params.fs,
      onRenameItem: s_(r.params.dock, r.params.fs),
      onTriggerItem: a_(r.params.dock, r.params.fs, r.params.sync)
    }
  )
};
function Io() {
  return (Io = Object.assign || function(r) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (r[i] = t[i]);
    }
    return r;
  }).apply(this, arguments);
}
function __(r) {
  this.getChildContext = function() {
    return r.context;
  };
  var e = r.children, t = function(i, n) {
    if (i == null)
      return {};
    var a, l, o = {}, s = Object.keys(i);
    for (l = 0; l < s.length; l++)
      n.indexOf(a = s[l]) >= 0 || (o[a] = i[a]);
    return o;
  }(r, ["context", "children"]);
  return ao(e, t);
}
function f_() {
  var r = new CustomEvent("_preact", { detail: {}, bubbles: !0, cancelable: !0 });
  this.dispatchEvent(r), this._vdom = ne(__, Io({}, this._props, { context: r.detail.context }), function e(t, i) {
    if (t.nodeType === 3)
      return t.data;
    if (t.nodeType !== 1)
      return null;
    var n = [], a = {}, l = 0, o = t.attributes, s = t.childNodes;
    for (l = o.length; l--; )
      o[l].name !== "slot" && (a[o[l].name] = o[l].value, a[ts(o[l].name)] = o[l].value);
    for (l = s.length; l--; ) {
      var d = e(s[l], null), h = s[l].slot;
      h ? a[h] = ne(kn, { name: h }, d) : n[l] = d;
    }
    var u = i ? ne(kn, null, n) : n;
    return ne(i || t.nodeName.toLowerCase(), a, u);
  }(this, this._vdomComponent)), (this.hasAttribute("hydrate") ? no : jt)(this._vdom, this._root);
}
function ts(r) {
  return r.replace(/-(\w)/g, function(e, t) {
    return t ? t.toUpperCase() : "";
  });
}
function h_(r, e, t) {
  if (this._vdom) {
    var i = {};
    i[r] = t = t ?? void 0, i[ts(r)] = t, this._vdom = ao(this._vdom, i), jt(this._vdom, this._root);
  }
}
function p_() {
  jt(this._vdom = null, this._root);
}
function kn(r, e) {
  var t = this;
  return ne("slot", Io({}, r, { ref: function(i) {
    i ? (t.ref = i, t._listener || (t._listener = function(n) {
      n.stopPropagation(), n.detail.context = e;
    }, i.addEventListener("_preact", t._listener))) : t.ref.removeEventListener("_preact", t._listener);
  } }));
}
function g_(r, e, t, i) {
  function n() {
    var a = Reflect.construct(HTMLElement, [], n);
    return a._vdomComponent = r, a._root = i && i.shadow ? a.attachShadow({ mode: "open" }) : a, a;
  }
  return (n.prototype = Object.create(HTMLElement.prototype)).constructor = n, n.prototype.connectedCallback = f_, n.prototype.attributeChangedCallback = h_, n.prototype.disconnectedCallback = p_, t = t || r.observedAttributes || Object.keys(r.propTypes || {}), n.observedAttributes = t, t.forEach(function(a) {
    Object.defineProperty(n.prototype, a, { get: function() {
      return this._vdom.props[a];
    }, set: function(l) {
      this._vdom ? this.attributeChangedCallback(a, null, l) : (this._props || (this._props = {}), this._props[a] = l, this.connectedCallback());
      var o = typeof l;
      l != null && o !== "string" && o !== "boolean" && o !== "number" || this.setAttribute(a, l);
    } });
  }), customElements.define(e || r.tagName || r.displayName || r.name, n);
}
const b_ = () => /* @__PURE__ */ De(l_, {});
g_(b_, "vslite-dock", [], { shadow: !1 });
Ss();
export {
  y_ as _,
  Cm as b,
  ie as c,
  bm as g,
  Dm as p
};
